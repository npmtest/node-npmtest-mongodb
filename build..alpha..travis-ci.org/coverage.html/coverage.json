{"/home/travis/build/npmtest/node-npmtest-mongodb/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_mongodb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/lib.npmtest_mongodb.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/lib.npmtest_mongodb.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_mongodb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_mongodb = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_mongodb = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":53},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":65},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-mongodb && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_mongodb */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_mongodb","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught.stack);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_mongodb.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_mongodb.rollup.js'] =","            local.assetsDict['/assets.npmtest_mongodb.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_mongodb.__dirname +","                    '/lib.npmtest_mongodb.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":0,"38":0,"39":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":50,"loc":{"start":{"line":50,"column":21},"end":{"line":50,"column":49}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":33}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":49}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"9":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"11":{"start":{"line":19,"column":0},"end":{"line":19,"column":58}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":55}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}},"14":{"start":{"line":22,"column":0},"end":{"line":22,"column":29}},"15":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}},"16":{"start":{"line":24,"column":0},"end":{"line":24,"column":54}},"17":{"start":{"line":26,"column":0},"end":{"line":26,"column":52}},"18":{"start":{"line":27,"column":0},"end":{"line":27,"column":60}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"20":{"start":{"line":31,"column":0},"end":{"line":31,"column":30}},"21":{"start":{"line":32,"column":0},"end":{"line":32,"column":28}},"22":{"start":{"line":33,"column":0},"end":{"line":33,"column":32}},"23":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}},"24":{"start":{"line":35,"column":0},"end":{"line":35,"column":32}},"25":{"start":{"line":36,"column":0},"end":{"line":36,"column":30}},"26":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}},"27":{"start":{"line":38,"column":0},"end":{"line":38,"column":34}},"28":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}},"29":{"start":{"line":40,"column":0},"end":{"line":40,"column":38}},"30":{"start":{"line":41,"column":0},"end":{"line":41,"column":34}},"31":{"start":{"line":42,"column":0},"end":{"line":42,"column":40}},"32":{"start":{"line":43,"column":0},"end":{"line":43,"column":42}},"33":{"start":{"line":44,"column":0},"end":{"line":44,"column":42}},"34":{"start":{"line":47,"column":0},"end":{"line":47,"column":26}},"35":{"start":{"line":50,"column":0},"end":{"line":53,"column":1}},"36":{"start":{"line":51,"column":2},"end":{"line":51,"column":68}},"37":{"start":{"line":51,"column":35},"end":{"line":51,"column":68}},"38":{"start":{"line":52,"column":2},"end":{"line":52,"column":54}},"39":{"start":{"line":56,"column":0},"end":{"line":56,"column":25}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]}},"code":["// Core module","var core = require('mongodb-core'),","  Instrumentation = require('./lib/apm');","","// Set up the connect function","var connect = require('./lib/mongo_client').connect;","","// Expose error class","connect.MongoError = core.MongoError;","","// Actual driver classes exported","connect.Admin = require('./lib/admin');","connect.MongoClient = require('./lib/mongo_client');","connect.Db = require('./lib/db');","connect.Collection = require('./lib/collection');","connect.Server = require('./lib/server');","connect.ReplSet = require('./lib/replset');","connect.Mongos = require('./lib/mongos');","connect.ReadPreference = require('./lib/read_preference');","connect.GridStore = require('./lib/gridfs/grid_store');","connect.Chunk = require('./lib/gridfs/chunk');","connect.Logger = core.Logger;","connect.Cursor = require('./lib/cursor');","connect.GridFSBucket = require('./lib/gridfs-stream');","// Exported to be used in tests not to be used anywhere else","connect.CoreServer = require('mongodb-core').Server;","connect.CoreConnection = require('mongodb-core').Connection;","","// BSON types exported","connect.Binary = core.BSON.Binary;","connect.Code = core.BSON.Code;","connect.Map = core.BSON.Map;","connect.DBRef = core.BSON.DBRef;","connect.Double = core.BSON.Double;","connect.Int32 = core.BSON.Int32;","connect.Long = core.BSON.Long;","connect.MinKey = core.BSON.MinKey;","connect.MaxKey = core.BSON.MaxKey;","connect.ObjectID = core.BSON.ObjectID;","connect.ObjectId = core.BSON.ObjectID;","connect.Symbol = core.BSON.Symbol;","connect.Timestamp = core.BSON.Timestamp;","connect.BSONRegExp = core.BSON.BSONRegExp;","connect.Decimal128 = core.BSON.Decimal128;","","// Add connect method","connect.connect = connect;","","// Set up the instrumentation method","connect.instrument = function(options, callback) {","  if(typeof options == 'function') callback = options, options = {};","  return new Instrumentation(core, options, callback);","}","","// Set our exports to be the connect function","module.exports = connect;",""],"l":{"2":1,"6":1,"9":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"47":1,"50":1,"51":0,"52":0,"56":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/apm.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/apm.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":8},"end":{"line":17,"column":19}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":22}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":33}}},"4":{"name":"(anonymous_4)","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":56}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":28},"end":{"line":54,"column":47}}},"6":{"name":"(anonymous_6)","line":90,"loc":{"start":{"line":90,"column":18},"end":{"line":90,"column":30}}},"7":{"name":"(anonymous_7)","line":97,"loc":{"start":{"line":97,"column":15},"end":{"line":97,"column":26}}},"8":{"name":"(anonymous_8)","line":196,"loc":{"start":{"line":196,"column":16},"end":{"line":196,"column":33}}},"9":{"name":"(anonymous_9)","line":254,"loc":{"start":{"line":254,"column":21},"end":{"line":254,"column":37}}},"10":{"name":"(anonymous_10)","line":256,"loc":{"start":{"line":256,"column":20},"end":{"line":256,"column":32}}},"11":{"name":"(anonymous_11)","line":263,"loc":{"start":{"line":263,"column":17},"end":{"line":263,"column":28}}},"12":{"name":"(anonymous_12)","line":273,"loc":{"start":{"line":273,"column":20},"end":{"line":273,"column":37}}},"13":{"name":"(anonymous_13)","line":306,"loc":{"start":{"line":306,"column":21},"end":{"line":306,"column":37}}},"14":{"name":"(anonymous_14)","line":309,"loc":{"start":{"line":309,"column":20},"end":{"line":309,"column":32}}},"15":{"name":"(anonymous_15)","line":316,"loc":{"start":{"line":316,"column":17},"end":{"line":316,"column":28}}},"16":{"name":"(anonymous_16)","line":473,"loc":{"start":{"line":473,"column":20},"end":{"line":473,"column":37}}},"17":{"name":"(anonymous_17)","line":540,"loc":{"start":{"line":540,"column":45},"end":{"line":540,"column":71}}},"18":{"name":"(anonymous_18)","line":545,"loc":{"start":{"line":545,"column":25},"end":{"line":545,"column":36}}},"19":{"name":"(anonymous_19)","line":558,"loc":{"start":{"line":558,"column":21},"end":{"line":558,"column":35}}},"20":{"name":"(anonymous_20)","line":582,"loc":{"start":{"line":582,"column":41},"end":{"line":582,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":38}},"2":{"start":{"line":5,"column":0},"end":{"line":12,"column":23}},"3":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"5":{"start":{"line":22,"column":0},"end":{"line":30,"column":1}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":32}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":23}},"8":{"start":{"line":32,"column":0},"end":{"line":33,"column":77}},"9":{"start":{"line":35,"column":0},"end":{"line":578,"column":1}},"10":{"start":{"line":36,"column":2},"end":{"line":36,"column":26}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":87}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":81}},"13":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":22}},"15":{"start":{"line":54,"column":2},"end":{"line":70,"column":3}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":29}},"17":{"start":{"line":58,"column":4},"end":{"line":59,"column":64}},"18":{"start":{"line":62,"column":4},"end":{"line":66,"column":5}},"19":{"start":{"line":63,"column":6},"end":{"line":65,"column":7}},"20":{"start":{"line":64,"column":8},"end":{"line":64,"column":60}},"21":{"start":{"line":69,"column":4},"end":{"line":69,"column":37}},"22":{"start":{"line":73,"column":2},"end":{"line":75,"column":3}},"23":{"start":{"line":74,"column":4},"end":{"line":74,"column":34}},"24":{"start":{"line":84,"column":2},"end":{"line":84,"column":18}},"25":{"start":{"line":86,"column":2},"end":{"line":86,"column":58}},"26":{"start":{"line":88,"column":2},"end":{"line":88,"column":36}},"27":{"start":{"line":90,"column":2},"end":{"line":239,"column":5}},"28":{"start":{"line":91,"column":4},"end":{"line":91,"column":24}},"29":{"start":{"line":94,"column":4},"end":{"line":94,"column":59}},"30":{"start":{"line":97,"column":4},"end":{"line":238,"column":5}},"31":{"start":{"line":98,"column":6},"end":{"line":98,"column":49}},"32":{"start":{"line":100,"column":6},"end":{"line":100,"column":58}},"33":{"start":{"line":101,"column":6},"end":{"line":101,"column":23}},"34":{"start":{"line":102,"column":6},"end":{"line":102,"column":31}},"35":{"start":{"line":103,"column":6},"end":{"line":103,"column":34}},"36":{"start":{"line":104,"column":6},"end":{"line":104,"column":41}},"37":{"start":{"line":105,"column":6},"end":{"line":105,"column":32}},"38":{"start":{"line":106,"column":6},"end":{"line":106,"column":32}},"39":{"start":{"line":109,"column":6},"end":{"line":109,"column":30}},"40":{"start":{"line":110,"column":6},"end":{"line":110,"column":18}},"41":{"start":{"line":111,"column":6},"end":{"line":111,"column":26}},"42":{"start":{"line":114,"column":6},"end":{"line":153,"column":7}},"43":{"start":{"line":115,"column":8},"end":{"line":115,"column":31}},"44":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"45":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"46":{"start":{"line":123,"column":10},"end":{"line":123,"column":57}},"47":{"start":{"line":126,"column":8},"end":{"line":126,"column":83}},"48":{"start":{"line":127,"column":13},"end":{"line":153,"column":7}},"49":{"start":{"line":128,"column":8},"end":{"line":128,"column":31}},"50":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"51":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"52":{"start":{"line":136,"column":10},"end":{"line":136,"column":57}},"53":{"start":{"line":139,"column":8},"end":{"line":139,"column":83}},"54":{"start":{"line":140,"column":13},"end":{"line":153,"column":7}},"55":{"start":{"line":141,"column":8},"end":{"line":141,"column":31}},"56":{"start":{"line":144,"column":8},"end":{"line":146,"column":9}},"57":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"58":{"start":{"line":149,"column":10},"end":{"line":149,"column":57}},"59":{"start":{"line":152,"column":8},"end":{"line":152,"column":83}},"60":{"start":{"line":156,"column":6},"end":{"line":156,"column":32}},"61":{"start":{"line":159,"column":6},"end":{"line":159,"column":72}},"62":{"start":{"line":162,"column":6},"end":{"line":162,"column":40}},"63":{"start":{"line":165,"column":6},"end":{"line":181,"column":8}},"64":{"start":{"line":184,"column":6},"end":{"line":187,"column":7}},"65":{"start":{"line":185,"column":8},"end":{"line":185,"column":32}},"66":{"start":{"line":186,"column":8},"end":{"line":186,"column":47}},"67":{"start":{"line":190,"column":6},"end":{"line":190,"column":35}},"68":{"start":{"line":193,"column":6},"end":{"line":193,"column":51}},"69":{"start":{"line":196,"column":6},"end":{"line":234,"column":9}},"70":{"start":{"line":197,"column":8},"end":{"line":197,"column":51}},"71":{"start":{"line":198,"column":8},"end":{"line":204,"column":10}},"72":{"start":{"line":207,"column":8},"end":{"line":230,"column":9}},"73":{"start":{"line":208,"column":10},"end":{"line":208,"column":68}},"74":{"start":{"line":211,"column":10},"end":{"line":213,"column":11}},"75":{"start":{"line":212,"column":12},"end":{"line":212,"column":33}},"76":{"start":{"line":215,"column":10},"end":{"line":215,"column":39}},"77":{"start":{"line":216,"column":15},"end":{"line":230,"column":9}},"78":{"start":{"line":219,"column":10},"end":{"line":219,"column":33}},"79":{"start":{"line":220,"column":10},"end":{"line":220,"column":42}},"80":{"start":{"line":222,"column":10},"end":{"line":222,"column":55}},"81":{"start":{"line":225,"column":10},"end":{"line":227,"column":11}},"82":{"start":{"line":226,"column":12},"end":{"line":226,"column":31}},"83":{"start":{"line":229,"column":10},"end":{"line":229,"column":42}},"84":{"start":{"line":233,"column":8},"end":{"line":233,"column":25}},"85":{"start":{"line":237,"column":6},"end":{"line":237,"column":29}},"86":{"start":{"line":248,"column":2},"end":{"line":248,"column":24}},"87":{"start":{"line":249,"column":2},"end":{"line":252,"column":3}},"88":{"start":{"line":254,"column":2},"end":{"line":285,"column":5}},"89":{"start":{"line":256,"column":4},"end":{"line":284,"column":7}},"90":{"start":{"line":257,"column":6},"end":{"line":257,"column":26}},"91":{"start":{"line":260,"column":6},"end":{"line":260,"column":61}},"92":{"start":{"line":263,"column":6},"end":{"line":283,"column":7}},"93":{"start":{"line":265,"column":8},"end":{"line":265,"column":60}},"94":{"start":{"line":267,"column":8},"end":{"line":267,"column":55}},"95":{"start":{"line":270,"column":8},"end":{"line":270,"column":34}},"96":{"start":{"line":272,"column":8},"end":{"line":282,"column":9}},"97":{"start":{"line":273,"column":10},"end":{"line":276,"column":13}},"98":{"start":{"line":275,"column":12},"end":{"line":275,"column":29}},"99":{"start":{"line":279,"column":10},"end":{"line":279,"column":33}},"100":{"start":{"line":281,"column":10},"end":{"line":281,"column":40}},"101":{"start":{"line":294,"column":2},"end":{"line":294,"column":49}},"102":{"start":{"line":295,"column":2},"end":{"line":299,"column":3}},"103":{"start":{"line":302,"column":2},"end":{"line":304,"column":3}},"104":{"start":{"line":306,"column":2},"end":{"line":577,"column":5}},"105":{"start":{"line":309,"column":4},"end":{"line":576,"column":7}},"106":{"start":{"line":310,"column":6},"end":{"line":310,"column":26}},"107":{"start":{"line":313,"column":6},"end":{"line":313,"column":61}},"108":{"start":{"line":316,"column":6},"end":{"line":575,"column":7}},"109":{"start":{"line":317,"column":8},"end":{"line":317,"column":26}},"110":{"start":{"line":318,"column":8},"end":{"line":318,"column":51}},"111":{"start":{"line":319,"column":8},"end":{"line":319,"column":50}},"112":{"start":{"line":320,"column":8},"end":{"line":320,"column":39}},"113":{"start":{"line":321,"column":8},"end":{"line":321,"column":26}},"114":{"start":{"line":324,"column":8},"end":{"line":324,"column":22}},"115":{"start":{"line":325,"column":8},"end":{"line":325,"column":41}},"116":{"start":{"line":328,"column":8},"end":{"line":328,"column":33}},"117":{"start":{"line":329,"column":8},"end":{"line":329,"column":29}},"118":{"start":{"line":332,"column":8},"end":{"line":334,"column":9}},"119":{"start":{"line":333,"column":10},"end":{"line":333,"column":39}},"120":{"start":{"line":337,"column":8},"end":{"line":407,"column":9}},"121":{"start":{"line":338,"column":10},"end":{"line":342,"column":11}},"122":{"start":{"line":344,"column":10},"end":{"line":344,"column":62}},"123":{"start":{"line":344,"column":28},"end":{"line":344,"column":62}},"124":{"start":{"line":345,"column":15},"end":{"line":407,"column":9}},"125":{"start":{"line":346,"column":10},"end":{"line":349,"column":11}},"126":{"start":{"line":350,"column":15},"end":{"line":407,"column":9}},"127":{"start":{"line":351,"column":10},"end":{"line":353,"column":11}},"128":{"start":{"line":355,"column":10},"end":{"line":355,"column":47}},"129":{"start":{"line":355,"column":23},"end":{"line":355,"column":47}},"130":{"start":{"line":356,"column":10},"end":{"line":356,"column":57}},"131":{"start":{"line":356,"column":25},"end":{"line":356,"column":57}},"132":{"start":{"line":357,"column":10},"end":{"line":362,"column":11}},"133":{"start":{"line":358,"column":12},"end":{"line":358,"column":48}},"134":{"start":{"line":359,"column":12},"end":{"line":359,"column":39}},"135":{"start":{"line":360,"column":17},"end":{"line":362,"column":11}},"136":{"start":{"line":361,"column":12},"end":{"line":361,"column":48}},"137":{"start":{"line":365,"column":10},"end":{"line":365,"column":47}},"138":{"start":{"line":365,"column":23},"end":{"line":365,"column":47}},"139":{"start":{"line":366,"column":10},"end":{"line":366,"column":47}},"140":{"start":{"line":366,"column":23},"end":{"line":366,"column":47}},"141":{"start":{"line":367,"column":10},"end":{"line":367,"column":62}},"142":{"start":{"line":367,"column":28},"end":{"line":367,"column":62}},"143":{"start":{"line":368,"column":10},"end":{"line":368,"column":82}},"144":{"start":{"line":368,"column":48},"end":{"line":368,"column":82}},"145":{"start":{"line":369,"column":10},"end":{"line":369,"column":56}},"146":{"start":{"line":369,"column":26},"end":{"line":369,"column":56}},"147":{"start":{"line":370,"column":10},"end":{"line":370,"column":44}},"148":{"start":{"line":370,"column":22},"end":{"line":370,"column":44}},"149":{"start":{"line":371,"column":10},"end":{"line":371,"column":44}},"150":{"start":{"line":371,"column":22},"end":{"line":371,"column":44}},"151":{"start":{"line":372,"column":10},"end":{"line":372,"column":56}},"152":{"start":{"line":372,"column":26},"end":{"line":372,"column":56}},"153":{"start":{"line":373,"column":10},"end":{"line":373,"column":62}},"154":{"start":{"line":373,"column":28},"end":{"line":373,"column":62}},"155":{"start":{"line":376,"column":10},"end":{"line":376,"column":82}},"156":{"start":{"line":376,"column":48},"end":{"line":376,"column":82}},"157":{"start":{"line":377,"column":10},"end":{"line":377,"column":79}},"158":{"start":{"line":377,"column":47},"end":{"line":377,"column":79}},"159":{"start":{"line":378,"column":10},"end":{"line":378,"column":79}},"160":{"start":{"line":378,"column":47},"end":{"line":378,"column":79}},"161":{"start":{"line":379,"column":10},"end":{"line":379,"column":88}},"162":{"start":{"line":379,"column":50},"end":{"line":379,"column":88}},"163":{"start":{"line":380,"column":10},"end":{"line":380,"column":100}},"164":{"start":{"line":380,"column":54},"end":{"line":380,"column":100}},"165":{"start":{"line":381,"column":10},"end":{"line":381,"column":76}},"166":{"start":{"line":381,"column":46},"end":{"line":381,"column":76}},"167":{"start":{"line":382,"column":10},"end":{"line":382,"column":89}},"168":{"start":{"line":382,"column":50},"end":{"line":382,"column":89}},"169":{"start":{"line":385,"column":10},"end":{"line":385,"column":68}},"170":{"start":{"line":385,"column":30},"end":{"line":385,"column":68}},"171":{"start":{"line":388,"column":10},"end":{"line":388,"column":56}},"172":{"start":{"line":388,"column":26},"end":{"line":388,"column":56}},"173":{"start":{"line":389,"column":10},"end":{"line":389,"column":56}},"174":{"start":{"line":389,"column":26},"end":{"line":389,"column":56}},"175":{"start":{"line":392,"column":10},"end":{"line":404,"column":11}},"176":{"start":{"line":394,"column":12},"end":{"line":397,"column":13}},"177":{"start":{"line":400,"column":12},"end":{"line":400,"column":69}},"178":{"start":{"line":400,"column":32},"end":{"line":400,"column":69}},"179":{"start":{"line":403,"column":12},"end":{"line":403,"column":27}},"180":{"start":{"line":406,"column":10},"end":{"line":406,"column":24}},"181":{"start":{"line":410,"column":8},"end":{"line":410,"column":32}},"182":{"start":{"line":413,"column":8},"end":{"line":413,"column":59}},"183":{"start":{"line":413,"column":28},"end":{"line":413,"column":59}},"184":{"start":{"line":414,"column":8},"end":{"line":414,"column":113}},"185":{"start":{"line":414,"column":70},"end":{"line":414,"column":113}},"186":{"start":{"line":417,"column":8},"end":{"line":417,"column":89}},"187":{"start":{"line":420,"column":8},"end":{"line":436,"column":10}},"188":{"start":{"line":439,"column":8},"end":{"line":439,"column":60}},"189":{"start":{"line":442,"column":8},"end":{"line":442,"column":34}},"190":{"start":{"line":445,"column":8},"end":{"line":574,"column":9}},"191":{"start":{"line":446,"column":10},"end":{"line":446,"column":55}},"192":{"start":{"line":448,"column":10},"end":{"line":448,"column":39}},"193":{"start":{"line":451,"column":10},"end":{"line":470,"column":11}},"194":{"start":{"line":455,"column":12},"end":{"line":462,"column":14}},"195":{"start":{"line":465,"column":12},"end":{"line":465,"column":32}},"196":{"start":{"line":467,"column":12},"end":{"line":467,"column":35}},"197":{"start":{"line":469,"column":12},"end":{"line":469,"column":50}},"198":{"start":{"line":473,"column":10},"end":{"line":530,"column":13}},"199":{"start":{"line":474,"column":12},"end":{"line":523,"column":13}},"200":{"start":{"line":476,"column":14},"end":{"line":482,"column":31}},"201":{"start":{"line":485,"column":14},"end":{"line":485,"column":42}},"202":{"start":{"line":488,"column":14},"end":{"line":509,"column":15}},"203":{"start":{"line":489,"column":16},"end":{"line":495,"column":17}},"204":{"start":{"line":496,"column":21},"end":{"line":509,"column":15}},"205":{"start":{"line":497,"column":16},"end":{"line":503,"column":17}},"206":{"start":{"line":504,"column":21},"end":{"line":509,"column":15}},"207":{"start":{"line":505,"column":16},"end":{"line":508,"column":17}},"208":{"start":{"line":512,"column":14},"end":{"line":519,"column":16}},"209":{"start":{"line":522,"column":14},"end":{"line":522,"column":45}},"210":{"start":{"line":526,"column":12},"end":{"line":526,"column":33}},"211":{"start":{"line":526,"column":26},"end":{"line":526,"column":33}},"212":{"start":{"line":529,"column":12},"end":{"line":529,"column":29}},"213":{"start":{"line":533,"column":10},"end":{"line":533,"column":33}},"214":{"start":{"line":536,"column":10},"end":{"line":536,"column":30}},"215":{"start":{"line":538,"column":10},"end":{"line":538,"column":47}},"216":{"start":{"line":540,"column":10},"end":{"line":573,"column":13}},"217":{"start":{"line":541,"column":12},"end":{"line":541,"column":57}},"218":{"start":{"line":543,"column":12},"end":{"line":543,"column":41}},"219":{"start":{"line":545,"column":12},"end":{"line":572,"column":15}},"220":{"start":{"line":547,"column":14},"end":{"line":554,"column":16}},"221":{"start":{"line":557,"column":14},"end":{"line":557,"column":45}},"222":{"start":{"line":560,"column":14},"end":{"line":566,"column":31}},"223":{"start":{"line":569,"column":14},"end":{"line":569,"column":42}},"224":{"start":{"line":571,"column":14},"end":{"line":571,"column":26}},"225":{"start":{"line":580,"column":0},"end":{"line":580,"column":40}},"226":{"start":{"line":582,"column":0},"end":{"line":592,"column":1}},"227":{"start":{"line":583,"column":2},"end":{"line":586,"column":3}},"228":{"start":{"line":584,"column":4},"end":{"line":584,"column":32}},"229":{"start":{"line":585,"column":4},"end":{"line":585,"column":35}},"230":{"start":{"line":589,"column":2},"end":{"line":589,"column":37}},"231":{"start":{"line":590,"column":2},"end":{"line":590,"column":39}},"232":{"start":{"line":591,"column":2},"end":{"line":591,"column":36}},"233":{"start":{"line":594,"column":0},"end":{"line":594,"column":33}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":19}},{"start":{"line":36,"column":23},"end":{"line":36,"column":25}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":29},"end":{"line":39,"column":57}},{"start":{"line":39,"column":61},"end":{"line":39,"column":86}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":27},"end":{"line":41,"column":53}},{"start":{"line":41,"column":57},"end":{"line":41,"column":80}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"6":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":20},"end":{"line":103,"column":27}},{"start":{"line":103,"column":31},"end":{"line":103,"column":33}}]},"7":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"8":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":8}},{"start":{"line":122,"column":8},"end":{"line":122,"column":8}}]},"9":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":11},"end":{"line":122,"column":31}},{"start":{"line":122,"column":35},"end":{"line":122,"column":79}}]},"10":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":60},"end":{"line":126,"column":75}},{"start":{"line":126,"column":78},"end":{"line":126,"column":82}}]},"11":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":13},"end":{"line":127,"column":13}},{"start":{"line":127,"column":13},"end":{"line":127,"column":13}}]},"12":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"13":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":11},"end":{"line":135,"column":31}},{"start":{"line":135,"column":35},"end":{"line":135,"column":79}}]},"14":{"line":139,"type":"cond-expr","locations":[{"start":{"line":139,"column":60},"end":{"line":139,"column":75}},{"start":{"line":139,"column":78},"end":{"line":139,"column":82}}]},"15":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":13},"end":{"line":140,"column":13}},{"start":{"line":140,"column":13},"end":{"line":140,"column":13}}]},"16":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"17":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":11},"end":{"line":148,"column":31}},{"start":{"line":148,"column":35},"end":{"line":148,"column":79}}]},"18":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":60},"end":{"line":152,"column":75}},{"start":{"line":152,"column":78},"end":{"line":152,"column":82}}]},"19":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":20},"end":{"line":159,"column":40}},{"start":{"line":159,"column":44},"end":{"line":159,"column":71}}]},"20":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"21":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"22":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":11},"end":{"line":207,"column":14}},{"start":{"line":207,"column":19},"end":{"line":207,"column":20}},{"start":{"line":207,"column":24},"end":{"line":207,"column":32}},{"start":{"line":207,"column":36},"end":{"line":207,"column":52}}]},"23":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":28},"end":{"line":208,"column":31}},{"start":{"line":208,"column":35},"end":{"line":208,"column":55}},{"start":{"line":208,"column":59},"end":{"line":208,"column":67}}]},"24":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":10},"end":{"line":211,"column":10}},{"start":{"line":211,"column":10},"end":{"line":211,"column":10}}]},"25":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":15},"end":{"line":216,"column":15}},{"start":{"line":216,"column":15},"end":{"line":216,"column":15}}]},"26":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":18},"end":{"line":216,"column":28}},{"start":{"line":216,"column":32},"end":{"line":216,"column":55}},{"start":{"line":217,"column":13},"end":{"line":217,"column":43}}]},"27":{"line":222,"type":"cond-expr","locations":[{"start":{"line":222,"column":42},"end":{"line":222,"column":50}},{"start":{"line":222,"column":53},"end":{"line":222,"column":54}}]},"28":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":26},"end":{"line":222,"column":27}},{"start":{"line":222,"column":31},"end":{"line":222,"column":39}}]},"29":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":10},"end":{"line":225,"column":10}},{"start":{"line":225,"column":10},"end":{"line":225,"column":10}}]},"30":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"31":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":8},"end":{"line":332,"column":8}},{"start":{"line":332,"column":8},"end":{"line":332,"column":8}}]},"32":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":8},"end":{"line":337,"column":8}},{"start":{"line":337,"column":8},"end":{"line":337,"column":8}}]},"33":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":10},"end":{"line":344,"column":10}},{"start":{"line":344,"column":10},"end":{"line":344,"column":10}}]},"34":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":15},"end":{"line":345,"column":15}},{"start":{"line":345,"column":15},"end":{"line":345,"column":15}}]},"35":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":15},"end":{"line":350,"column":15}},{"start":{"line":350,"column":15},"end":{"line":350,"column":15}}]},"36":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":10},"end":{"line":355,"column":10}},{"start":{"line":355,"column":10},"end":{"line":355,"column":10}}]},"37":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":10},"end":{"line":356,"column":10}},{"start":{"line":356,"column":10},"end":{"line":356,"column":10}}]},"38":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":10},"end":{"line":357,"column":10}},{"start":{"line":357,"column":10},"end":{"line":357,"column":10}}]},"39":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":13},"end":{"line":357,"column":22}},{"start":{"line":357,"column":26},"end":{"line":357,"column":39}}]},"40":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":17},"end":{"line":360,"column":17}},{"start":{"line":360,"column":17},"end":{"line":360,"column":17}}]},"41":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":10},"end":{"line":365,"column":10}},{"start":{"line":365,"column":10},"end":{"line":365,"column":10}}]},"42":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":10},"end":{"line":366,"column":10}},{"start":{"line":366,"column":10},"end":{"line":366,"column":10}}]},"43":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":10},"end":{"line":367,"column":10}},{"start":{"line":367,"column":10},"end":{"line":367,"column":10}}]},"44":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":10},"end":{"line":368,"column":10}},{"start":{"line":368,"column":10},"end":{"line":368,"column":10}}]},"45":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":10},"end":{"line":369,"column":10}},{"start":{"line":369,"column":10},"end":{"line":369,"column":10}}]},"46":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":10},"end":{"line":370,"column":10}},{"start":{"line":370,"column":10},"end":{"line":370,"column":10}}]},"47":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":10},"end":{"line":371,"column":10}},{"start":{"line":371,"column":10},"end":{"line":371,"column":10}}]},"48":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":10},"end":{"line":372,"column":10}},{"start":{"line":372,"column":10},"end":{"line":372,"column":10}}]},"49":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":10},"end":{"line":373,"column":10}},{"start":{"line":373,"column":10},"end":{"line":373,"column":10}}]},"50":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":10},"end":{"line":376,"column":10}},{"start":{"line":376,"column":10},"end":{"line":376,"column":10}}]},"51":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":10},"end":{"line":377,"column":10}},{"start":{"line":377,"column":10},"end":{"line":377,"column":10}}]},"52":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":10},"end":{"line":378,"column":10}},{"start":{"line":378,"column":10},"end":{"line":378,"column":10}}]},"53":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":10},"end":{"line":379,"column":10}},{"start":{"line":379,"column":10},"end":{"line":379,"column":10}}]},"54":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":10},"end":{"line":380,"column":10}},{"start":{"line":380,"column":10},"end":{"line":380,"column":10}}]},"55":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":10},"end":{"line":381,"column":10}},{"start":{"line":381,"column":10},"end":{"line":381,"column":10}}]},"56":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":10},"end":{"line":382,"column":10}},{"start":{"line":382,"column":10},"end":{"line":382,"column":10}}]},"57":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":10},"end":{"line":385,"column":10}},{"start":{"line":385,"column":10},"end":{"line":385,"column":10}}]},"58":{"line":388,"type":"if","locations":[{"start":{"line":388,"column":10},"end":{"line":388,"column":10}},{"start":{"line":388,"column":10},"end":{"line":388,"column":10}}]},"59":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":10},"end":{"line":389,"column":10}},{"start":{"line":389,"column":10},"end":{"line":389,"column":10}}]},"60":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":10},"end":{"line":392,"column":10}},{"start":{"line":392,"column":10},"end":{"line":392,"column":10}}]},"61":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":12},"end":{"line":400,"column":12}},{"start":{"line":400,"column":12},"end":{"line":400,"column":12}}]},"62":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":8},"end":{"line":413,"column":8}},{"start":{"line":413,"column":8},"end":{"line":413,"column":8}}]},"63":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":8},"end":{"line":414,"column":8}},{"start":{"line":414,"column":8},"end":{"line":414,"column":8}}]},"64":{"line":414,"type":"binary-expr","locations":[{"start":{"line":414,"column":11},"end":{"line":414,"column":24}},{"start":{"line":414,"column":28},"end":{"line":414,"column":39}},{"start":{"line":414,"column":43},"end":{"line":414,"column":68}}]},"65":{"line":417,"type":"cond-expr","locations":[{"start":{"line":417,"column":41},"end":{"line":417,"column":64}},{"start":{"line":417,"column":67},"end":{"line":417,"column":88}}]},"66":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":8},"end":{"line":445,"column":8}},{"start":{"line":445,"column":8},"end":{"line":445,"column":8}}]},"67":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":11},"end":{"line":445,"column":40}},{"start":{"line":445,"column":44},"end":{"line":445,"column":80}}]},"68":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":10},"end":{"line":451,"column":10}},{"start":{"line":451,"column":10},"end":{"line":451,"column":10}}]},"69":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":13},"end":{"line":451,"column":49}},{"start":{"line":452,"column":15},"end":{"line":452,"column":41}},{"start":{"line":453,"column":15},"end":{"line":453,"column":60}}]},"70":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":12},"end":{"line":474,"column":12}},{"start":{"line":474,"column":12},"end":{"line":474,"column":12}}]},"71":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":14},"end":{"line":488,"column":14}},{"start":{"line":488,"column":14},"end":{"line":488,"column":14}}]},"72":{"line":488,"type":"binary-expr","locations":[{"start":{"line":488,"column":17},"end":{"line":488,"column":55}},{"start":{"line":488,"column":59},"end":{"line":488,"column":68}}]},"73":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":21},"end":{"line":496,"column":21}},{"start":{"line":496,"column":21},"end":{"line":496,"column":21}}]},"74":{"line":496,"type":"binary-expr","locations":[{"start":{"line":496,"column":24},"end":{"line":496,"column":59}},{"start":{"line":496,"column":63},"end":{"line":496,"column":72}}]},"75":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":21},"end":{"line":504,"column":21}},{"start":{"line":504,"column":21},"end":{"line":504,"column":21}}]},"76":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":24},"end":{"line":504,"column":66}},{"start":{"line":504,"column":70},"end":{"line":504,"column":79}}]},"77":{"line":518,"type":"cond-expr","locations":[{"start":{"line":518,"column":39},"end":{"line":518,"column":47}},{"start":{"line":518,"column":50},"end":{"line":518,"column":51}}]},"78":{"line":518,"type":"binary-expr","locations":[{"start":{"line":518,"column":23},"end":{"line":518,"column":24}},{"start":{"line":518,"column":28},"end":{"line":518,"column":36}}]},"79":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":12},"end":{"line":526,"column":12}},{"start":{"line":526,"column":12},"end":{"line":526,"column":12}}]}},"code":["var EventEmitter = require('events').EventEmitter,","  inherits = require('util').inherits;","","// Get prototypes","var AggregationCursor = require('./aggregation_cursor'),","  CommandCursor = require('./command_cursor'),","  OrderedBulkOperation = require('./bulk/ordered').OrderedBulkOperation,","  UnorderedBulkOperation = require('./bulk/unordered').UnorderedBulkOperation,","  GridStore = require('./gridfs/grid_store'),","  Cursor = require('./cursor'),","  Collection = require('./collection'),","  Db = require('./db');","","var basicOperationIdGenerator = {","  operationId: 1,","","  next: function() {","    return this.operationId++;","  }","}","","var basicTimestampGenerator = {","  current: function() {","    return new Date().getTime();","  },","","  duration: function(start, end) {","    return end - start;","  }","}","","var senstiveCommands = ['authenticate', 'saslStart', 'saslContinue', 'getnonce',","  'createUser', 'updateUser', 'copydbgetnonce', 'copydbsaslstart', 'copydb'];","","var Instrumentation = function(core, options, callback) {","  options = options || {};","","  // Optional id generators","  var operationIdGenerator = options.operationIdGenerator || basicOperationIdGenerator;","  // Optional timestamp generator","  var timestampGenerator = options.timestampGenerator || basicTimestampGenerator;","  // Extend with event emitter functionality","  EventEmitter.call(this);","","  // Contains all the instrumentation overloads","  this.overloads = [];","","  // ---------------------------------------------------------","  //","  // Instrument prototype","  //","  // ---------------------------------------------------------","","  var instrumentPrototype = function(callback) {","    var instrumentations = []","","    // Classes to support","    var classes = [GridStore, OrderedBulkOperation, UnorderedBulkOperation,","      CommandCursor, AggregationCursor, Cursor, Collection, Db];","","    // Add instrumentations to the available list","    for(var i = 0; i < classes.length; i++) {","      if(classes[i].define) {","        instrumentations.push(classes[i].define.generate());","      }","    }","","    // Return the list of instrumentation points","    callback(null, instrumentations);","  }","","  // Did the user want to instrument the prototype","  if(typeof callback == 'function') {","    instrumentPrototype(callback);","  }","","  // ---------------------------------------------------------","  //","  // Server","  //","  // ---------------------------------------------------------","","  // Reference","  var self = this;","  // Names of methods we need to wrap","  var methods = ['command', 'insert', 'update', 'remove'];","  // Prototype","  var proto = core.Server.prototype;","  // Core server method we are going to wrap","  methods.forEach(function(x) {","    var func = proto[x];","","    // Add to overloaded methods","    self.overloads.push({proto: proto, name:x, func:func});","","    // The actual prototype","    proto[x] = function() {","      var requestId = core.Query.nextRequestId();","      // Get the aruments","      var args = Array.prototype.slice.call(arguments, 0);","      var ns = args[0];","      var commandObj = args[1];","      var options = args[2] || {};","      var keys = Object.keys(commandObj);","      var commandName = keys[0];","      var db = ns.split('.')[0];","","      // Get the collection","      var col = ns.split('.');","      col.shift();","      col = col.join('.');","","      // Do we have a legacy insert/update/remove command","      if(x == 'insert') { //} && !this.lastIsMaster().maxWireVersion) {","        commandName = 'insert';","","        // Re-write the command","        commandObj = {","          insert: col, documents: commandObj","        }","","        if(options.writeConcern && Object.keys(options.writeConcern).length > 0)  {","          commandObj.writeConcern = options.writeConcern;","        }","","        commandObj.ordered = options.ordered != undefined ? options.ordered : true;","      } else if(x == 'update') { // && !this.lastIsMaster().maxWireVersion) {","        commandName = 'update';","","        // Re-write the command","        commandObj = {","          update: col, updates: commandObj","        }","","        if(options.writeConcern && Object.keys(options.writeConcern).length > 0) {","          commandObj.writeConcern = options.writeConcern;","        }","","        commandObj.ordered = options.ordered != undefined ? options.ordered : true;","      } else if(x == 'remove') { //&& !this.lastIsMaster().maxWireVersion) {","        commandName = 'delete';","","        // Re-write the command","        commandObj = {","          delete: col, deletes: commandObj","        }","","        if(options.writeConcern && Object.keys(options.writeConcern).length > 0) {","          commandObj.writeConcern = options.writeConcern;","        }","","        commandObj.ordered = options.ordered != undefined ? options.ordered : true;","      }","","      // Get the callback","      var callback = args.pop();","      // Set current callback operation id from the current context or create","      // a new one","      var ourOpId = callback.operationId || operationIdGenerator.next();","","      // Get a connection reference for this server instance","      var connection = this.s.pool.get()","","      // Emit the start event for the command","      var command = {","        // Returns the command.","        command: commandObj,","        // Returns the database name.","        databaseName: db,","        // Returns the command name.","        commandName: commandName,","        // Returns the driver generated request id.","        requestId: requestId,","        // Returns the driver generated operation id.","        // This is used to link events together such as bulk write operations. OPTIONAL.","        operationId: ourOpId,","        // Returns the connection id for the command. For languages that do not have this,","        // this MUST return the driver equivalent which MUST include the server address and port.","        // The name of this field is flexible to match the object that is returned from the driver.","        connectionId: connection","      };","","      // Filter out any sensitive commands","      if(senstiveCommands.indexOf(commandName.toLowerCase()) != -1) {","        command.commandObj = {};","        command.commandObj[commandName] = true;","      }","","      // Emit the started event","      self.emit('started', command)","","      // Start time","      var startTime = timestampGenerator.current();","","      // Push our handler callback","      args.push(function(err, r) {","        var endTime = timestampGenerator.current();","        var command = {","          duration: timestampGenerator.duration(startTime, endTime),","          commandName: commandName,","          requestId: requestId,","          operationId: ourOpId,","          connectionId: connection","        };","","        // If we have an error","        if(err || (r && r.result && r.result.ok == 0)) {","          command.failure = err || r.result.writeErrors || r.result;","","          // Filter out any sensitive commands","          if(senstiveCommands.indexOf(commandName.toLowerCase()) != -1) {","            command.failure = {};","          }","","          self.emit('failed', command);","        } else if(commandObj && commandObj.writeConcern","          && commandObj.writeConcern.w == 0) {","          // If we have write concern 0","          command.reply = {ok:1};","          self.emit('succeeded', command);","        } else {","          command.reply = r && r.result ? r.result : r;","","          // Filter out any sensitive commands","          if(senstiveCommands.indexOf(commandName.toLowerCase()) != -1) {","            command.reply = {};","          }","","          self.emit('succeeded', command);","        }","","        // Return to caller","        callback(err, r);","      });","","      // Apply the call","      func.apply(this, args);","    }","  });","","  // ---------------------------------------------------------","  //","  // Bulk Operations","  //","  // ---------------------------------------------------------","","  // Inject ourselves into the Bulk methods","  methods = ['execute'];","  var prototypes = [","    require('./bulk/ordered').Bulk.prototype,","    require('./bulk/unordered').Bulk.prototype","  ]","","  prototypes.forEach(function(proto) {","    // Core server method we are going to wrap","    methods.forEach(function(x) {","      var func = proto[x];","","      // Add to overloaded methods","      self.overloads.push({proto: proto, name:x, func:func});","","      // The actual prototype","      proto[x] = function() {","        // Get the aruments","        var args = Array.prototype.slice.call(arguments, 0);","        // Set an operation Id on the bulk object","        this.operationId = operationIdGenerator.next();","","        // Get the callback","        var callback = args.pop();","        // If we have a callback use this","        if(typeof callback == 'function') {","          args.push(function(err, r) {","            // Return to caller","            callback(err, r);","          });","","          // Apply the call","          func.apply(this, args);","        } else {","          return func.apply(this, args);","        }","      }","    });","  });","","  // ---------------------------------------------------------","  //","  // Cursor","  //","  // ---------------------------------------------------------","","  // Inject ourselves into the Cursor methods","  methods = ['_find', '_getmore', '_killcursor'];","  prototypes = [","    require('./cursor').prototype,","    require('./command_cursor').prototype,","    require('./aggregation_cursor').prototype","  ]","","  // Command name translation","  var commandTranslation = {","    '_find': 'find', '_getmore': 'getMore', '_killcursor': 'killCursors', '_explain': 'explain'","  }","","  prototypes.forEach(function(proto) {","","    // Core server method we are going to wrap","    methods.forEach(function(x) {","      var func = proto[x];","","      // Add to overloaded methods","      self.overloads.push({proto: proto, name:x, func:func});","","      // The actual prototype","      proto[x] = function() {","        var cursor = this;","        var requestId = core.Query.nextRequestId();","        var ourOpId = operationIdGenerator.next();","        var parts = this.ns.split('.');","        var db = parts[0];","","        // Get the collection","        parts.shift();","        var collection = parts.join('.');","","        // Set the command","        var command = this.query;","        var cmd = this.s.cmd;","","        // If we have a find method, set the operationId on the cursor","        if(x == '_find') {","          cursor.operationId = ourOpId;","        }","","        // Do we have a find command rewrite it","        if(x == '_getmore') {","          command = {","            getMore: this.cursorState.cursorId,","            collection: collection,","            batchSize: cmd.batchSize","          }","","          if(cmd.maxTimeMS) command.maxTimeMS = cmd.maxTimeMS;","        } else if(x == '_killcursor') {","          command = {","            killCursors: collection,","            cursors: [this.cursorState.cursorId]","          }","        } else if(cmd.find) {","          command = {","            find: collection, filter: cmd.query","          }","","          if(cmd.sort) command.sort = cmd.sort;","          if(cmd.fields) command.projection = cmd.fields;","          if(cmd.limit && cmd.limit < 0) {","            command.limit = Math.abs(cmd.limit);","            command.singleBatch = true;","          } else if(cmd.limit) {","            command.limit = Math.abs(cmd.limit);","          }","","          // Options","          if(cmd.skip) command.skip = cmd.skip;","          if(cmd.hint) command.hint = cmd.hint;","          if(cmd.batchSize) command.batchSize = cmd.batchSize;","          if(typeof cmd.returnKey == 'boolean') command.returnKey = cmd.returnKey;","          if(cmd.comment) command.comment = cmd.comment;","          if(cmd.min) command.min = cmd.min;","          if(cmd.max) command.max = cmd.max;","          if(cmd.maxScan) command.maxScan = cmd.maxScan;","          if(cmd.maxTimeMS) command.maxTimeMS = cmd.maxTimeMS;","","          // Flags","          if(typeof cmd.awaitData == 'boolean') command.awaitData = cmd.awaitData;","          if(typeof cmd.snapshot == 'boolean') command.snapshot = cmd.snapshot;","          if(typeof cmd.tailable == 'boolean') command.tailable = cmd.tailable;","          if(typeof cmd.oplogReplay == 'boolean') command.oplogReplay = cmd.oplogReplay;","          if(typeof cmd.noCursorTimeout == 'boolean') command.noCursorTimeout = cmd.noCursorTimeout;","          if(typeof cmd.partial == 'boolean') command.partial = cmd.partial;","          if(typeof cmd.showDiskLoc == 'boolean') command.showRecordId = cmd.showDiskLoc;","","          // Read Concern","          if(cmd.readConcern) command.readConcern = cmd.readConcern;","","          // Override method","          if(cmd.explain) command.explain = cmd.explain;","          if(cmd.exhaust) command.exhaust = cmd.exhaust;","","          // If we have a explain flag","          if(cmd.explain) {","            // Create fake explain command","            command = {","              explain: command,","              verbosity: 'allPlansExecution'","            }","","            // Set readConcern on the command if available","            if(cmd.readConcern) command.readConcern = cmd.readConcern","","            // Set up the _explain name for the command","            x = '_explain';","          }","        } else {","          command = cmd;","        }","","        // Set up the connection","        var connectionId = null;","","        // Set local connection","        if(this.connection) connectionId = this.connection;","        if(!connectionId && this.server && this.server.getConnection) connectionId = this.server.getConnection();","","        // Get the command Name","        var commandName = x == '_find' ? Object.keys(command)[0] : commandTranslation[x];","","        // Emit the start event for the command","        command = {","          // Returns the command.","          command: command,","          // Returns the database name.","          databaseName: db,","          // Returns the command name.","          commandName: commandName,","          // Returns the driver generated request id.","          requestId: requestId,","          // Returns the driver generated operation id.","          // This is used to link events together such as bulk write operations. OPTIONAL.","          operationId: this.operationId,","          // Returns the connection id for the command. For languages that do not have this,","          // this MUST return the driver equivalent which MUST include the server address and port.","          // The name of this field is flexible to match the object that is returned from the driver.","          connectionId: connectionId","        };","","        // Get the aruments","        var args = Array.prototype.slice.call(arguments, 0);","","        // Get the callback","        var callback = args.pop();","","        // We do not have a callback but a Promise","        if(typeof callback == 'function' || command.commandName == 'killCursors') {","          var startTime = timestampGenerator.current();","          // Emit the started event","          self.emit('started', command)","","          // Emit succeeded event with killcursor if we have a legacy protocol","          if(command.commandName == 'killCursors'","            && this.server.lastIsMaster()","            && this.server.lastIsMaster().maxWireVersion < 4) {","            // Emit the succeeded command","            command = {","              duration: timestampGenerator.duration(startTime, timestampGenerator.current()),","              commandName: commandName,","              requestId: requestId,","              operationId: cursor.operationId,","              connectionId: cursor.server.getConnection(),","              reply: [{ok:1}]","            };","","            // Apply callback to the list of args","            args.push(callback);","            // Apply the call","            func.apply(this, args);","            // Emit the command","            return self.emit('succeeded', command)","          }","","          // Add our callback handler","          args.push(function(err, r) {","            if(err) {","              // Command","              var command = {","                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),","                commandName: commandName,","                requestId: requestId,","                operationId: ourOpId,","                connectionId: cursor.server.getConnection(),","                failure: err };","","              // Emit the command","              self.emit('failed', command)","            } else {","              // Do we have a getMore","              if(commandName.toLowerCase() == 'getmore' && r == null) {","                r = {","                  cursor: {","                    id: cursor.cursorState.cursorId,","                    ns: cursor.ns,","                    nextBatch: cursor.cursorState.documents","                  }, ok:1","                }","              } else if(commandName.toLowerCase() == 'find' && r == null) {","                r = {","                  cursor: {","                    id: cursor.cursorState.cursorId,","                    ns: cursor.ns,","                    firstBatch: cursor.cursorState.documents","                  }, ok:1","                }","              } else if(commandName.toLowerCase() == 'killcursors' && r == null) {","                r = {","                  cursorsUnknown:[cursor.cursorState.lastCursorId],","                  ok:1","                }","              }","","              // cursor id is zero, we can issue success command","              command = {","                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),","                commandName: commandName,","                requestId: requestId,","                operationId: cursor.operationId,","                connectionId: cursor.server.getConnection(),","                reply: r && r.result ? r.result : r","              };","","              // Emit the command","              self.emit('succeeded', command)","            }","","            // Return","            if(!callback) return;","","            // Return to caller","            callback(err, r);","          });","","          // Apply the call","          func.apply(this, args);","        } else {","          // Assume promise, push back the missing value","          args.push(callback);","          // Get the promise","          var promise = func.apply(this, args);","          // Return a new promise","          return new cursor.s.promiseLibrary(function(resolve, reject) {","            var startTime = timestampGenerator.current();","            // Emit the started event","            self.emit('started', command)","            // Execute the function","            promise.then(function() {","              // cursor id is zero, we can issue success command","              var command = {","                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),","                commandName: commandName,","                requestId: requestId,","                operationId: cursor.operationId,","                connectionId: cursor.server.getConnection(),","                reply: cursor.cursorState.documents","              };","","              // Emit the command","              self.emit('succeeded', command)","            }).catch(function(err) {","              // Command","              var command = {","                duration: timestampGenerator.duration(startTime, timestampGenerator.current()),","                commandName: commandName,","                requestId: requestId,","                operationId: ourOpId,","                connectionId: cursor.server.getConnection(),","                failure: err };","","              // Emit the command","              self.emit('failed', command)","              // reject the promise","              reject(err);","            });","          });","        }","      }","    });","  });","}","","inherits(Instrumentation, EventEmitter);","","Instrumentation.prototype.uninstrument = function() {","  for(var i = 0; i < this.overloads.length; i++) {","    var obj = this.overloads[i];","    obj.proto[obj.name] = obj.func;","  }","","  // Remove all listeners","  this.removeAllListeners('started');","  this.removeAllListeners('succeeded');","  this.removeAllListeners('failed');","}","","module.exports = Instrumentation;",""],"l":{"1":1,"5":1,"14":1,"18":0,"22":1,"24":0,"28":0,"32":1,"35":1,"36":0,"39":0,"41":0,"43":0,"46":0,"54":0,"55":0,"58":0,"62":0,"63":0,"64":0,"69":0,"73":0,"74":0,"84":0,"86":0,"88":0,"90":0,"91":0,"94":0,"97":0,"98":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"109":0,"110":0,"111":0,"114":0,"115":0,"118":0,"122":0,"123":0,"126":0,"127":0,"128":0,"131":0,"135":0,"136":0,"139":0,"140":0,"141":0,"144":0,"148":0,"149":0,"152":0,"156":0,"159":0,"162":0,"165":0,"184":0,"185":0,"186":0,"190":0,"193":0,"196":0,"197":0,"198":0,"207":0,"208":0,"211":0,"212":0,"215":0,"216":0,"219":0,"220":0,"222":0,"225":0,"226":0,"229":0,"233":0,"237":0,"248":0,"249":0,"254":0,"256":0,"257":0,"260":0,"263":0,"265":0,"267":0,"270":0,"272":0,"273":0,"275":0,"279":0,"281":0,"294":0,"295":0,"302":0,"306":0,"309":0,"310":0,"313":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"324":0,"325":0,"328":0,"329":0,"332":0,"333":0,"337":0,"338":0,"344":0,"345":0,"346":0,"350":0,"351":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"385":0,"388":0,"389":0,"392":0,"394":0,"400":0,"403":0,"406":0,"410":0,"413":0,"414":0,"417":0,"420":0,"439":0,"442":0,"445":0,"446":0,"448":0,"451":0,"455":0,"465":0,"467":0,"469":0,"473":0,"474":0,"476":0,"485":0,"488":0,"489":0,"496":0,"497":0,"504":0,"505":0,"512":0,"522":0,"526":0,"529":0,"533":0,"536":0,"538":0,"540":0,"541":0,"543":0,"545":0,"547":0,"557":0,"560":0,"569":0,"571":0,"580":1,"582":1,"583":0,"584":0,"585":0,"589":0,"590":0,"591":0,"594":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/aggregation_cursor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/aggregation_cursor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":82,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":1,"34":1,"35":0,"36":0,"37":1,"38":1,"39":0,"40":0,"41":1,"42":1,"43":0,"44":0,"45":0,"46":1,"47":1,"48":0,"49":0,"50":1,"51":1,"52":0,"53":0,"54":1,"55":1,"56":0,"57":0,"58":1,"59":1,"60":0,"61":0,"62":1,"63":1,"64":0,"65":0,"66":1,"67":1,"68":0,"69":0,"70":1,"71":1,"72":0,"73":0,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":55,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":84}}},"2":{"name":"(anonymous_2)","line":145,"loc":{"start":{"line":145,"column":40},"end":{"line":145,"column":56}}},"3":{"name":"(anonymous_3)","line":161,"loc":{"start":{"line":161,"column":38},"end":{"line":161,"column":57}}},"4":{"name":"(anonymous_4)","line":174,"loc":{"start":{"line":174,"column":36},"end":{"line":174,"column":55}}},"5":{"name":"(anonymous_5)","line":187,"loc":{"start":{"line":187,"column":36},"end":{"line":187,"column":52}}},"6":{"name":"(anonymous_6)","line":200,"loc":{"start":{"line":200,"column":36},"end":{"line":200,"column":55}}},"7":{"name":"(anonymous_7)","line":213,"loc":{"start":{"line":213,"column":40},"end":{"line":213,"column":56}}},"8":{"name":"(anonymous_8)","line":228,"loc":{"start":{"line":228,"column":34},"end":{"line":228,"column":56}}},"9":{"name":"(anonymous_9)","line":241,"loc":{"start":{"line":241,"column":38},"end":{"line":241,"column":57}}},"10":{"name":"(anonymous_10)","line":254,"loc":{"start":{"line":254,"column":37},"end":{"line":254,"column":56}}},"11":{"name":"(anonymous_11)","line":267,"loc":{"start":{"line":267,"column":37},"end":{"line":267,"column":56}}},"12":{"name":"(anonymous_12)","line":280,"loc":{"start":{"line":280,"column":35},"end":{"line":280,"column":51}}},"13":{"name":"(anonymous_13)","line":293,"loc":{"start":{"line":293,"column":35},"end":{"line":293,"column":54}}},"14":{"name":"(anonymous_14)","line":306,"loc":{"start":{"line":306,"column":37},"end":{"line":306,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":37}},"2":{"start":{"line":55,"column":0},"end":{"line":98,"column":1}},"3":{"start":{"line":56,"column":2},"end":{"line":56,"column":67}},"4":{"start":{"line":57,"column":2},"end":{"line":57,"column":37}},"5":{"start":{"line":58,"column":2},"end":{"line":58,"column":25}},"6":{"start":{"line":61,"column":2},"end":{"line":61,"column":23}},"7":{"start":{"line":64,"column":2},"end":{"line":64,"column":46}},"8":{"start":{"line":67,"column":2},"end":{"line":70,"column":3}},"9":{"start":{"line":68,"column":4},"end":{"line":69,"column":54}},"10":{"start":{"line":73,"column":2},"end":{"line":73,"column":42}},"11":{"start":{"line":76,"column":2},"end":{"line":97,"column":3}},"12":{"start":{"line":129,"column":0},"end":{"line":129,"column":38}},"13":{"start":{"line":132,"column":0},"end":{"line":134,"column":1}},"14":{"start":{"line":133,"column":2},"end":{"line":133,"column":65}},"15":{"start":{"line":136,"column":0},"end":{"line":136,"column":97}},"16":{"start":{"line":145,"column":0},"end":{"line":151,"column":1}},"17":{"start":{"line":146,"column":2},"end":{"line":146,"column":133}},"18":{"start":{"line":146,"column":64},"end":{"line":146,"column":133}},"19":{"start":{"line":147,"column":2},"end":{"line":147,"column":113}},"20":{"start":{"line":147,"column":31},"end":{"line":147,"column":113}},"21":{"start":{"line":148,"column":2},"end":{"line":148,"column":60}},"22":{"start":{"line":148,"column":24},"end":{"line":148,"column":60}},"23":{"start":{"line":149,"column":2},"end":{"line":149,"column":33}},"24":{"start":{"line":150,"column":2},"end":{"line":150,"column":14}},"25":{"start":{"line":153,"column":0},"end":{"line":153,"column":96}},"26":{"start":{"line":161,"column":0},"end":{"line":164,"column":1}},"27":{"start":{"line":162,"column":2},"end":{"line":162,"column":49}},"28":{"start":{"line":163,"column":2},"end":{"line":163,"column":14}},"29":{"start":{"line":166,"column":0},"end":{"line":166,"column":94}},"30":{"start":{"line":174,"column":0},"end":{"line":177,"column":1}},"31":{"start":{"line":175,"column":2},"end":{"line":175,"column":47}},"32":{"start":{"line":176,"column":2},"end":{"line":176,"column":14}},"33":{"start":{"line":179,"column":0},"end":{"line":179,"column":92}},"34":{"start":{"line":187,"column":0},"end":{"line":190,"column":1}},"35":{"start":{"line":188,"column":2},"end":{"line":188,"column":44}},"36":{"start":{"line":189,"column":2},"end":{"line":189,"column":14}},"37":{"start":{"line":192,"column":0},"end":{"line":192,"column":92}},"38":{"start":{"line":200,"column":0},"end":{"line":203,"column":1}},"39":{"start":{"line":201,"column":2},"end":{"line":201,"column":47}},"40":{"start":{"line":202,"column":2},"end":{"line":202,"column":14}},"41":{"start":{"line":205,"column":0},"end":{"line":205,"column":92}},"42":{"start":{"line":213,"column":0},"end":{"line":218,"column":1}},"43":{"start":{"line":214,"column":2},"end":{"line":216,"column":3}},"44":{"start":{"line":215,"column":4},"end":{"line":215,"column":33}},"45":{"start":{"line":217,"column":2},"end":{"line":217,"column":14}},"46":{"start":{"line":220,"column":0},"end":{"line":220,"column":96}},"47":{"start":{"line":228,"column":0},"end":{"line":231,"column":1}},"48":{"start":{"line":229,"column":2},"end":{"line":229,"column":48}},"49":{"start":{"line":230,"column":2},"end":{"line":230,"column":14}},"50":{"start":{"line":233,"column":0},"end":{"line":233,"column":90}},"51":{"start":{"line":241,"column":0},"end":{"line":244,"column":1}},"52":{"start":{"line":242,"column":2},"end":{"line":242,"column":49}},"53":{"start":{"line":243,"column":2},"end":{"line":243,"column":14}},"54":{"start":{"line":246,"column":0},"end":{"line":246,"column":94}},"55":{"start":{"line":254,"column":0},"end":{"line":257,"column":1}},"56":{"start":{"line":255,"column":2},"end":{"line":255,"column":48}},"57":{"start":{"line":256,"column":2},"end":{"line":256,"column":14}},"58":{"start":{"line":259,"column":0},"end":{"line":259,"column":93}},"59":{"start":{"line":267,"column":0},"end":{"line":270,"column":1}},"60":{"start":{"line":268,"column":2},"end":{"line":268,"column":48}},"61":{"start":{"line":269,"column":2},"end":{"line":269,"column":14}},"62":{"start":{"line":272,"column":0},"end":{"line":272,"column":93}},"63":{"start":{"line":280,"column":0},"end":{"line":283,"column":1}},"64":{"start":{"line":281,"column":2},"end":{"line":281,"column":43}},"65":{"start":{"line":282,"column":2},"end":{"line":282,"column":14}},"66":{"start":{"line":285,"column":0},"end":{"line":285,"column":91}},"67":{"start":{"line":293,"column":0},"end":{"line":296,"column":1}},"68":{"start":{"line":294,"column":2},"end":{"line":294,"column":46}},"69":{"start":{"line":295,"column":2},"end":{"line":295,"column":14}},"70":{"start":{"line":298,"column":0},"end":{"line":298,"column":91}},"71":{"start":{"line":306,"column":0},"end":{"line":309,"column":1}},"72":{"start":{"line":307,"column":2},"end":{"line":307,"column":45}},"73":{"start":{"line":308,"column":2},"end":{"line":308,"column":14}},"74":{"start":{"line":311,"column":0},"end":{"line":311,"column":93}},"75":{"start":{"line":313,"column":0},"end":{"line":313,"column":70}},"76":{"start":{"line":316,"column":0},"end":{"line":316,"column":62}},"77":{"start":{"line":317,"column":0},"end":{"line":317,"column":60}},"78":{"start":{"line":318,"column":0},"end":{"line":318,"column":63}},"79":{"start":{"line":319,"column":0},"end":{"line":319,"column":59}},"80":{"start":{"line":320,"column":0},"end":{"line":320,"column":60}},"81":{"start":{"line":321,"column":0},"end":{"line":321,"column":85}},"82":{"start":{"line":322,"column":0},"end":{"line":322,"column":63}},"83":{"start":{"line":323,"column":0},"end":{"line":323,"column":89}},"84":{"start":{"line":324,"column":0},"end":{"line":324,"column":96}},"85":{"start":{"line":425,"column":0},"end":{"line":425,"column":27}},"86":{"start":{"line":426,"column":0},"end":{"line":426,"column":27}},"87":{"start":{"line":427,"column":0},"end":{"line":427,"column":29}},"88":{"start":{"line":429,"column":0},"end":{"line":429,"column":35}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":15},"end":{"line":5,"column":41}},{"start":{"line":5,"column":45},"end":{"line":5,"column":80}}]},"2":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"3":{"line":68,"type":"cond-expr","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":20}},{"start":{"line":69,"column":23},"end":{"line":69,"column":53}}]},"4":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"5":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":5},"end":{"line":146,"column":45}},{"start":{"line":146,"column":49},"end":{"line":146,"column":62}}]},"6":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"7":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"8":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":2},"end":{"line":214,"column":2}},{"start":{"line":214,"column":2},"end":{"line":214,"column":2}}]}},"code":["\"use strict\";","","var inherits = require('util').inherits","  , MongoError = require('mongodb-core').MongoError","  , Readable = require('stream').Readable || require('readable-stream').Readable","  , Define = require('./metadata')","  , CoreCursor = require('./cursor');","","/**"," * @fileOverview The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB"," * allowing for iteration over the results returned from the underlying query. It supports"," * one by one document iteration, conversion to an array or can be iterated as a Node 0.10.X"," * or higher stream"," *"," * **AGGREGATIONCURSOR Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('createIndexExample1');"," *   // Insert a bunch of documents"," *   col.insert([{a:1, b:1}"," *     , {a:2, b:2}, {a:3, b:3}"," *     , {a:4, b:4}], {w:1}, function(err, result) {"," *     test.equal(null, err);"," *     // Show that duplicate records got dropped"," *     col.aggregation({}, {cursor: {}}).toArray(function(err, items) {"," *       test.equal(null, err);"," *       test.equal(4, items.length);"," *       db.close();"," *     });"," *   });"," * });"," */","","/**"," * Namespace provided by the browser."," * @external Readable"," */","","/**"," * Creates a new Aggregation Cursor instance (INTERNAL TYPE, do not instantiate directly)"," * @class AggregationCursor"," * @extends external:Readable"," * @fires AggregationCursor#data"," * @fires AggregationCursor#end"," * @fires AggregationCursor#close"," * @fires AggregationCursor#readable"," * @return {AggregationCursor} an AggregationCursor instance."," */","var AggregationCursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));","  var state = AggregationCursor.INIT;","  var streamOptions = {};","","  // MaxTimeMS","  var maxTimeMS = null;","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Set up","  Readable.call(this, {objectMode: true});","","  // Internal state","  this.s = {","    // MaxTimeMS","      maxTimeMS: maxTimeMS","    // State","    , state: state","    // Stream options","    , streamOptions: streamOptions","    // BSON","    , bson: bson","    // Namespace","    , ns: ns","    // Command","    , cmd: cmd","    // Options","    , options: options","    // Topology","    , topology: topology","    // Topology Options","    , topologyOptions: topologyOptions","    // Promise library","    , promiseLibrary: promiseLibrary","  }","}","","/**"," * AggregationCursor stream data event, fired for each document in the cursor."," *"," * @event AggregationCursor#data"," * @type {object}"," */","","/**"," * AggregationCursor stream end event"," *"," * @event AggregationCursor#end"," * @type {null}"," */","","/**"," * AggregationCursor stream close event"," *"," * @event AggregationCursor#close"," * @type {null}"," */","","/**"," * AggregationCursor stream readable event"," *"," * @event AggregationCursor#readable"," * @type {null}"," */","","// Inherit from Readable","inherits(AggregationCursor, Readable);","","// Extend the Cursor","for(var name in CoreCursor.prototype) {","  AggregationCursor.prototype[name] = CoreCursor.prototype[name];","}","","var define = AggregationCursor.define = new Define('AggregationCursor', AggregationCursor, true);","","/**"," * Set the batch size for the cursor."," * @method"," * @param {number} value The batchSize for the cursor."," * @throws {MongoError}"," * @return {AggregationCursor}"," */","AggregationCursor.prototype.batchSize = function(value) {","  if(this.s.state == AggregationCursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true });","  if(typeof value != 'number') throw MongoError.create({message: \"batchSize requires an integer\", drvier:true });","  if(this.s.cmd.cursor) this.s.cmd.cursor.batchSize = value;","  this.setCursorBatchSize(value);","  return this;","}","","define.classMethod('batchSize', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a geoNear stage to the aggregation pipeline"," * @method"," * @param {object} document The geoNear stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.geoNear = function(document) {","  this.s.cmd.pipeline.push({$geoNear: document});","  return this;","}","","define.classMethod('geoNear', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a group stage to the aggregation pipeline"," * @method"," * @param {object} document The group stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.group = function(document) {","  this.s.cmd.pipeline.push({$group: document});","  return this;","}","","define.classMethod('group', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a limit stage to the aggregation pipeline"," * @method"," * @param {number} value The state limit value."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.limit = function(value) {","  this.s.cmd.pipeline.push({$limit: value});","  return this;","}","","define.classMethod('limit', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a match stage to the aggregation pipeline"," * @method"," * @param {object} document The match stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.match = function(document) {","  this.s.cmd.pipeline.push({$match: document});","  return this;","}","","define.classMethod('match', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a maxTimeMS stage to the aggregation pipeline"," * @method"," * @param {number} value The state maxTimeMS value."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.maxTimeMS = function(value) {","  if(this.s.topology.lastIsMaster().minWireVersion > 2) {","    this.s.cmd.maxTimeMS = value;","  }","  return this;","}","","define.classMethod('maxTimeMS', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a out stage to the aggregation pipeline"," * @method"," * @param {number} destination The destination name."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.out = function(destination) {","  this.s.cmd.pipeline.push({$out: destination});","  return this;","}","","define.classMethod('out', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a project stage to the aggregation pipeline"," * @method"," * @param {object} document The project stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.project = function(document) {","  this.s.cmd.pipeline.push({$project: document});","  return this;","}","","define.classMethod('project', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a lookup stage to the aggregation pipeline"," * @method"," * @param {object} document The lookup stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.lookup = function(document) {","  this.s.cmd.pipeline.push({$lookup: document});","  return this;","}","","define.classMethod('lookup', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a redact stage to the aggregation pipeline"," * @method"," * @param {object} document The redact stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.redact = function(document) {","  this.s.cmd.pipeline.push({$redact: document});","  return this;","}","","define.classMethod('redact', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a skip stage to the aggregation pipeline"," * @method"," * @param {number} value The state skip value."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.skip = function(value) {","  this.s.cmd.pipeline.push({$skip: value});","  return this;","}","","define.classMethod('skip', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a sort stage to the aggregation pipeline"," * @method"," * @param {object} document The sort stage document."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.sort = function(document) {","  this.s.cmd.pipeline.push({$sort: document});","  return this;","}","","define.classMethod('sort', {callback: false, promise:false, returns: [AggregationCursor]});","","/**"," * Add a unwind stage to the aggregation pipeline"," * @method"," * @param {number} field The unwind field name."," * @return {AggregationCursor}"," */","AggregationCursor.prototype.unwind = function(field) {","  this.s.cmd.pipeline.push({$unwind: field});","  return this;","}","","define.classMethod('unwind', {callback: false, promise:false, returns: [AggregationCursor]});","","AggregationCursor.prototype.get = AggregationCursor.prototype.toArray;","","// Inherited methods","define.classMethod('toArray', {callback: true, promise:true});","define.classMethod('each', {callback: true, promise:false});","define.classMethod('forEach', {callback: true, promise:false});","define.classMethod('next', {callback: true, promise:true});","define.classMethod('close', {callback: true, promise:true});","define.classMethod('isClosed', {callback: false, promise:false, returns: [Boolean]});","define.classMethod('rewind', {callback: false, promise:false});","define.classMethod('bufferedCount', {callback: false, promise:false, returns: [Number]});","define.classMethod('readBufferedDocuments', {callback: false, promise:false, returns: [Array]});","","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @function AggregationCursor.prototype.next"," * @param {AggregationCursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback AggregationCursor~toArrayResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object[]} documents All the documents the satisfy the cursor."," */","","/**"," * Returns an array of documents. The caller is responsible for making sure that there"," * is enough memory to store the results. Note that the array only contain partial"," * results when this cursor had been previouly accessed. In that case,"," * cursor.rewind() can be used to reset the cursor."," * @method AggregationCursor.prototype.toArray"," * @param {AggregationCursor~toArrayResultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback AggregationCursor~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {(object|null)} result The result object if the command was executed successfully."," */","","/**"," * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,"," * not all of the elements will be iterated if this cursor had been previouly accessed."," * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike"," * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements"," * at any given time if batch size is specified. Otherwise, the caller is responsible"," * for making sure that the entire result can fit the memory."," * @method AggregationCursor.prototype.each"," * @param {AggregationCursor~resultCallback} callback The result callback."," * @throws {MongoError}"," * @return {null}"," */","","/**"," * Close the cursor, sending a AggregationCursor command and emitting close."," * @method AggregationCursor.prototype.close"," * @param {AggregationCursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * Is the cursor closed"," * @method AggregationCursor.prototype.isClosed"," * @return {boolean}"," */","","/**"," * Execute the explain for the cursor"," * @method AggregationCursor.prototype.explain"," * @param {AggregationCursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * Clone the cursor"," * @function AggregationCursor.prototype.clone"," * @return {AggregationCursor}"," */","","/**"," * Resets the cursor"," * @function AggregationCursor.prototype.rewind"," * @return {AggregationCursor}"," */","","/**"," * The callback format for the forEach iterator method"," * @callback AggregationCursor~iteratorCallback"," * @param {Object} doc An emitted document for the iterator"," */","","/**"," * The callback error format for the forEach iterator method"," * @callback AggregationCursor~endCallback"," * @param {MongoError} error An error instance representing the error during the execution."," */","","/*"," * Iterates over all the documents for this cursor using the iterator, callback pattern."," * @method AggregationCursor.prototype.forEach"," * @param {AggregationCursor~iteratorCallback} iterator The iteration callback."," * @param {AggregationCursor~endCallback} callback The end callback."," * @throws {MongoError}"," * @return {null}"," */","","AggregationCursor.INIT = 0;","AggregationCursor.OPEN = 1;","AggregationCursor.CLOSED = 2;","","module.exports = AggregationCursor;",""],"l":{"3":1,"55":1,"56":0,"57":0,"58":0,"61":0,"64":0,"67":0,"68":0,"73":0,"76":0,"129":1,"132":1,"133":82,"136":1,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"153":1,"161":1,"162":0,"163":0,"166":1,"174":1,"175":0,"176":0,"179":1,"187":1,"188":0,"189":0,"192":1,"200":1,"201":0,"202":0,"205":1,"213":1,"214":0,"215":0,"217":0,"220":1,"228":1,"229":0,"230":0,"233":1,"241":1,"242":0,"243":0,"246":1,"254":1,"255":0,"256":0,"259":1,"267":1,"268":0,"269":0,"272":1,"280":1,"281":0,"282":0,"285":1,"293":1,"294":0,"295":0,"298":1,"306":1,"307":0,"308":0,"311":1,"313":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"425":1,"426":1,"427":1,"429":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/metadata.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/metadata.js","s":{"1":1,"2":1,"3":13,"4":13,"5":13,"6":13,"7":1,"8":207,"9":207,"10":207,"11":56,"12":207,"13":1,"14":213,"15":213,"16":503,"17":213,"18":1,"19":6,"20":6,"21":6,"22":6,"23":2,"24":6,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1},"b":{"1":[13,0],"2":[56,151],"3":[2,4]},"f":{"1":13,"2":207,"3":213,"4":6,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":13},"end":{"line":3,"column":44}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":31},"end":{"line":10,"column":55}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":18},"end":{"line":25,"column":42}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":56}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":19}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":23}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":60}},"6":{"start":{"line":7,"column":2},"end":{"line":7,"column":29}},"7":{"start":{"line":10,"column":0},"end":{"line":23,"column":1}},"8":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}},"9":{"start":{"line":12,"column":2},"end":{"line":12,"column":39}},"10":{"start":{"line":15,"column":2},"end":{"line":19,"column":3}},"11":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"12":{"start":{"line":22,"column":2},"end":{"line":22,"column":48}},"13":{"start":{"line":25,"column":0},"end":{"line":32,"column":1}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":17}},"15":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"16":{"start":{"line":28,"column":4},"end":{"line":28,"column":54}},"17":{"start":{"line":31,"column":2},"end":{"line":31,"column":22}},"18":{"start":{"line":34,"column":0},"end":{"line":48,"column":1}},"19":{"start":{"line":35,"column":2},"end":{"line":35,"column":24}},"20":{"start":{"line":36,"column":2},"end":{"line":36,"column":41}},"21":{"start":{"line":37,"column":2},"end":{"line":37,"column":39}},"22":{"start":{"line":40,"column":2},"end":{"line":44,"column":3}},"23":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"24":{"start":{"line":47,"column":2},"end":{"line":47,"column":48}},"25":{"start":{"line":50,"column":0},"end":{"line":62,"column":1}},"26":{"start":{"line":52,"column":2},"end":{"line":55,"column":3}},"27":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":62}},"29":{"start":{"line":61,"column":2},"end":{"line":61,"column":16}},"30":{"start":{"line":64,"column":0},"end":{"line":64,"column":24}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":6,"column":45},"end":{"line":6,"column":51}},{"start":{"line":6,"column":54},"end":{"line":6,"column":59}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]}},"code":["var f = require('util').format;","","var Define = function(name, object, stream) {","  this.name = name;","  this.object = object;","  this.stream = typeof stream == 'boolean' ? stream : false;","  this.instrumentations = {};","}","","Define.prototype.classMethod = function(name, options) {","  var keys = Object.keys(options).sort();","  var key = generateKey(keys, options);","","  // Add a list of instrumentations","  if(this.instrumentations[key] == null) {","    this.instrumentations[key] = {","      methods: [], options: options","    }","  }","","  // Push to list of method for this instrumentation","  this.instrumentations[key].methods.push(name);","}","","var generateKey = function(keys, options) {","  var parts = [];","  for(var i = 0; i < keys.length; i++) {","    parts.push(f('%s=%s', keys[i], options[keys[i]]));","  }","","  return parts.join();","}","","Define.prototype.staticMethod = function(name, options) {","  options.static = true;","  var keys = Object.keys(options).sort();","  var key = generateKey(keys, options);","","  // Add a list of instrumentations","  if(this.instrumentations[key] == null) {","    this.instrumentations[key] = {","      methods: [], options: options","    }","  }","","  // Push to list of method for this instrumentation","  this.instrumentations[key].methods.push(name);","}","","Define.prototype.generate = function() {","  // Generate the return object","  var object = {","    name: this.name, obj: this.object, stream: this.stream,","    instrumentations: []","  }","","  for(var name in this.instrumentations) {","    object.instrumentations.push(this.instrumentations[name]);","  }","","  return object;","}","","module.exports = Define;",""],"l":{"1":1,"3":1,"4":13,"5":13,"6":13,"7":13,"10":1,"11":207,"12":207,"15":207,"16":56,"22":207,"25":1,"26":213,"27":213,"28":503,"31":213,"34":1,"35":6,"36":6,"37":6,"40":6,"41":2,"47":6,"50":1,"52":0,"57":0,"58":0,"61":0,"64":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/cursor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/cursor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1,"26":19,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":1,"75":1,"76":0,"77":0,"78":0,"79":0,"80":1,"81":1,"82":0,"83":0,"84":0,"85":0,"86":1,"87":1,"88":0,"89":0,"90":0,"91":0,"92":1,"93":1,"94":0,"95":0,"96":0,"97":0,"98":1,"99":1,"100":0,"101":0,"102":0,"103":0,"104":1,"105":1,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1,"112":0,"113":0,"114":0,"115":0,"116":1,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":1,"149":0,"150":0,"151":0,"152":0,"153":1,"154":1,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":1,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":1,"171":1,"172":1,"173":0,"174":0,"175":0,"176":0,"177":1,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":1,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":1,"213":0,"214":0,"215":1,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":1,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":1,"238":1,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":1,"253":0,"254":0,"255":0,"256":0,"257":1,"258":1,"259":1,"260":0,"261":0,"262":0,"263":1,"264":1,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":1,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":1,"301":1,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":1,"312":1,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":1,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":1,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":1,"381":1,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":1,"390":1,"391":0,"392":0,"393":1,"394":1,"395":0,"396":1,"397":1,"398":0,"399":0,"400":0,"401":0,"402":1,"403":1,"404":0,"405":0,"406":1,"407":1,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":1,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":1,"438":1,"439":1,"440":0,"441":1,"442":1,"443":1,"444":0,"445":0,"446":0,"447":0,"448":0,"449":1,"450":1,"451":1,"452":1,"453":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0],"54":[0,0],"55":[0,0],"56":[0,0,0],"57":[0,0],"58":[0,0],"59":[0,0,0],"60":[0,0],"61":[0,0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0],"85":[0,0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0,0],"147":[1,0],"148":[1,1],"149":[1,0],"150":[1,1],"151":[0,0],"152":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":1},"fnMap":{"1":{"name":"(anonymous_1)","line":100,"loc":{"start":{"line":100,"column":13},"end":{"line":100,"column":73}}},"2":{"name":"(anonymous_2)","line":215,"loc":{"start":{"line":215,"column":27},"end":{"line":215,"column":46}}},"3":{"name":"(anonymous_3)","line":223,"loc":{"start":{"line":223,"column":30},"end":{"line":223,"column":49}}},"4":{"name":"(anonymous_4)","line":232,"loc":{"start":{"line":232,"column":35},"end":{"line":232,"column":61}}},"5":{"name":"(anonymous_5)","line":236,"loc":{"start":{"line":236,"column":23},"end":{"line":236,"column":42}}},"6":{"name":"(anonymous_6)","line":256,"loc":{"start":{"line":256,"column":24},"end":{"line":256,"column":43}}},"7":{"name":"(anonymous_7)","line":273,"loc":{"start":{"line":273,"column":35},"end":{"line":273,"column":61}}},"8":{"name":"(anonymous_8)","line":281,"loc":{"start":{"line":281,"column":21},"end":{"line":281,"column":38}}},"9":{"name":"(anonymous_9)","line":296,"loc":{"start":{"line":296,"column":26},"end":{"line":296,"column":43}}},"10":{"name":"(anonymous_10)","line":310,"loc":{"start":{"line":310,"column":27},"end":{"line":310,"column":45}}},"11":{"name":"(anonymous_11)","line":324,"loc":{"start":{"line":324,"column":24},"end":{"line":324,"column":39}}},"12":{"name":"(anonymous_12)","line":338,"loc":{"start":{"line":338,"column":23},"end":{"line":338,"column":37}}},"13":{"name":"(anonymous_13)","line":352,"loc":{"start":{"line":352,"column":23},"end":{"line":352,"column":37}}},"14":{"name":"(anonymous_14)","line":366,"loc":{"start":{"line":366,"column":29},"end":{"line":366,"column":45}}},"15":{"name":"(anonymous_15)","line":380,"loc":{"start":{"line":380,"column":32},"end":{"line":380,"column":48}}},"16":{"name":"(anonymous_16)","line":394,"loc":{"start":{"line":394,"column":28},"end":{"line":394,"column":44}}},"17":{"name":"(anonymous_17)","line":410,"loc":{"start":{"line":410,"column":35},"end":{"line":410,"column":58}}},"18":{"name":"(anonymous_18)","line":429,"loc":{"start":{"line":429,"column":33},"end":{"line":429,"column":55}}},"19":{"name":"(anonymous_19)","line":447,"loc":{"start":{"line":447,"column":36},"end":{"line":447,"column":58}}},"20":{"name":"(anonymous_20)","line":468,"loc":{"start":{"line":468,"column":27},"end":{"line":468,"column":43}}},"21":{"name":"(anonymous_21)","line":483,"loc":{"start":{"line":483,"column":34},"end":{"line":483,"column":50}}},"22":{"name":"(anonymous_22)","line":499,"loc":{"start":{"line":499,"column":29},"end":{"line":499,"column":45}}},"23":{"name":"(anonymous_23)","line":519,"loc":{"start":{"line":519,"column":27},"end":{"line":519,"column":43}}},"24":{"name":"(anonymous_24)","line":535,"loc":{"start":{"line":535,"column":24},"end":{"line":535,"column":55}}},"25":{"name":"(anonymous_25)","line":543,"loc":{"start":{"line":543,"column":30},"end":{"line":543,"column":42}}},"26":{"name":"(anonymous_26)","line":577,"loc":{"start":{"line":577,"column":29},"end":{"line":577,"column":45}}},"27":{"name":"(anonymous_27)","line":595,"loc":{"start":{"line":595,"column":29},"end":{"line":595,"column":45}}},"28":{"name":"(anonymous_28)","line":609,"loc":{"start":{"line":609,"column":25},"end":{"line":609,"column":41}}},"29":{"name":"(anonymous_29)","line":628,"loc":{"start":{"line":628,"column":24},"end":{"line":628,"column":40}}},"30":{"name":"(anonymous_30)","line":668,"loc":{"start":{"line":668,"column":17},"end":{"line":668,"column":42}}},"31":{"name":"(anonymous_31)","line":679,"loc":{"start":{"line":679,"column":13},"end":{"line":679,"column":32}}},"32":{"name":"(anonymous_32)","line":690,"loc":{"start":{"line":690,"column":11},"end":{"line":690,"column":36}}},"33":{"name":"(anonymous_33)","line":716,"loc":{"start":{"line":716,"column":24},"end":{"line":716,"column":43}}},"34":{"name":"(anonymous_34)","line":728,"loc":{"start":{"line":728,"column":12},"end":{"line":728,"column":37}}},"35":{"name":"(anonymous_35)","line":744,"loc":{"start":{"line":744,"column":14},"end":{"line":744,"column":34}}},"36":{"name":"(anonymous_36)","line":777,"loc":{"start":{"line":777,"column":27},"end":{"line":777,"column":56}}},"37":{"name":"(anonymous_37)","line":778,"loc":{"start":{"line":778,"column":12},"end":{"line":778,"column":30}}},"38":{"name":"(anonymous_38)","line":799,"loc":{"start":{"line":799,"column":37},"end":{"line":799,"column":49}}},"39":{"name":"(anonymous_39)","line":831,"loc":{"start":{"line":831,"column":27},"end":{"line":831,"column":46}}},"40":{"name":"(anonymous_40)","line":839,"loc":{"start":{"line":839,"column":35},"end":{"line":839,"column":61}}},"41":{"name":"(anonymous_41)","line":840,"loc":{"start":{"line":840,"column":18},"end":{"line":840,"column":35}}},"42":{"name":"(anonymous_42)","line":847,"loc":{"start":{"line":847,"column":14},"end":{"line":847,"column":39}}},"43":{"name":"(anonymous_43)","line":855,"loc":{"start":{"line":855,"column":18},"end":{"line":855,"column":29}}},"44":{"name":"(anonymous_44)","line":856,"loc":{"start":{"line":856,"column":15},"end":{"line":856,"column":34}}},"45":{"name":"(anonymous_45)","line":908,"loc":{"start":{"line":908,"column":25},"end":{"line":908,"column":66}}},"46":{"name":"(anonymous_46)","line":918,"loc":{"start":{"line":918,"column":35},"end":{"line":918,"column":61}}},"47":{"name":"(anonymous_47)","line":919,"loc":{"start":{"line":919,"column":38},"end":{"line":919,"column":55}}},"48":{"name":"(anonymous_48)","line":926,"loc":{"start":{"line":926,"column":12},"end":{"line":926,"column":59}}},"49":{"name":"(anonymous_49)","line":957,"loc":{"start":{"line":957,"column":15},"end":{"line":957,"column":37}}},"50":{"name":"(anonymous_50)","line":970,"loc":{"start":{"line":970,"column":25},"end":{"line":970,"column":44}}},"51":{"name":"(anonymous_51)","line":979,"loc":{"start":{"line":979,"column":35},"end":{"line":979,"column":53}}},"52":{"name":"(anonymous_52)","line":992,"loc":{"start":{"line":992,"column":23},"end":{"line":992,"column":43}}},"53":{"name":"(anonymous_53)","line":1004,"loc":{"start":{"line":1004,"column":28},"end":{"line":1004,"column":39}}},"54":{"name":"(anonymous_54)","line":1010,"loc":{"start":{"line":1010,"column":27},"end":{"line":1010,"column":41}}},"55":{"name":"(anonymous_55)","line":1025,"loc":{"start":{"line":1025,"column":26},"end":{"line":1025,"column":44}}},"56":{"name":"(anonymous_56)","line":1038,"loc":{"start":{"line":1038,"column":27},"end":{"line":1038,"column":46}}},"57":{"name":"(anonymous_57)","line":1051,"loc":{"start":{"line":1051,"column":35},"end":{"line":1051,"column":61}}},"58":{"name":"(anonymous_58)","line":1052,"loc":{"start":{"line":1052,"column":15},"end":{"line":1052,"column":32}}},"59":{"name":"(anonymous_59)","line":1061,"loc":{"start":{"line":1061,"column":25},"end":{"line":1061,"column":36}}},"60":{"name":"(anonymous_60)","line":1068,"loc":{"start":{"line":1068,"column":18},"end":{"line":1068,"column":40}}},"61":{"name":"(anonymous_61)","line":1097,"loc":{"start":{"line":1097,"column":7},"end":{"line":1097,"column":18}}},"62":{"name":"(anonymous_62)","line":1108,"loc":{"start":{"line":1108,"column":7},"end":{"line":1108,"column":18}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":13,"column":64}},"2":{"start":{"line":54,"column":0},"end":{"line":54,"column":94}},"3":{"start":{"line":55,"column":0},"end":{"line":55,"column":58}},"4":{"start":{"line":56,"column":0},"end":{"line":56,"column":32}},"5":{"start":{"line":100,"column":0},"end":{"line":166,"column":1}},"6":{"start":{"line":101,"column":2},"end":{"line":101,"column":67}},"7":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"8":{"start":{"line":103,"column":2},"end":{"line":103,"column":26}},"9":{"start":{"line":104,"column":2},"end":{"line":104,"column":25}},"10":{"start":{"line":107,"column":2},"end":{"line":107,"column":53}},"11":{"start":{"line":108,"column":2},"end":{"line":108,"column":67}},"12":{"start":{"line":109,"column":2},"end":{"line":109,"column":47}},"13":{"start":{"line":112,"column":2},"end":{"line":112,"column":46}},"14":{"start":{"line":115,"column":2},"end":{"line":118,"column":3}},"15":{"start":{"line":116,"column":4},"end":{"line":117,"column":54}},"16":{"start":{"line":121,"column":2},"end":{"line":121,"column":42}},"17":{"start":{"line":124,"column":2},"end":{"line":149,"column":3}},"18":{"start":{"line":152,"column":2},"end":{"line":154,"column":3}},"19":{"start":{"line":153,"column":4},"end":{"line":153,"column":48}},"20":{"start":{"line":157,"column":2},"end":{"line":157,"column":35}},"21":{"start":{"line":160,"column":2},"end":{"line":162,"column":85}},"22":{"start":{"line":165,"column":2},"end":{"line":165,"column":37}},"23":{"start":{"line":197,"column":0},"end":{"line":197,"column":27}},"24":{"start":{"line":200,"column":0},"end":{"line":200,"column":55}},"25":{"start":{"line":202,"column":0},"end":{"line":204,"column":1}},"26":{"start":{"line":203,"column":2},"end":{"line":203,"column":54}},"27":{"start":{"line":206,"column":0},"end":{"line":206,"column":64}},"28":{"start":{"line":215,"column":0},"end":{"line":245,"column":1}},"29":{"start":{"line":216,"column":2},"end":{"line":216,"column":18}},"30":{"start":{"line":219,"column":2},"end":{"line":229,"column":3}},"31":{"start":{"line":220,"column":4},"end":{"line":228,"column":5}},"32":{"start":{"line":221,"column":6},"end":{"line":221,"column":34}},"33":{"start":{"line":223,"column":6},"end":{"line":227,"column":9}},"34":{"start":{"line":224,"column":8},"end":{"line":224,"column":46}},"35":{"start":{"line":224,"column":17},"end":{"line":224,"column":46}},"36":{"start":{"line":225,"column":8},"end":{"line":225,"column":32}},"37":{"start":{"line":226,"column":8},"end":{"line":226,"column":29}},"38":{"start":{"line":232,"column":2},"end":{"line":244,"column":5}},"39":{"start":{"line":233,"column":4},"end":{"line":243,"column":5}},"40":{"start":{"line":234,"column":6},"end":{"line":234,"column":20}},"41":{"start":{"line":236,"column":6},"end":{"line":242,"column":9}},"42":{"start":{"line":237,"column":8},"end":{"line":237,"column":81}},"43":{"start":{"line":237,"column":59},"end":{"line":237,"column":81}},"44":{"start":{"line":238,"column":8},"end":{"line":238,"column":35}},"45":{"start":{"line":238,"column":16},"end":{"line":238,"column":35}},"46":{"start":{"line":239,"column":8},"end":{"line":239,"column":39}},"47":{"start":{"line":239,"column":17},"end":{"line":239,"column":39}},"48":{"start":{"line":240,"column":8},"end":{"line":240,"column":32}},"49":{"start":{"line":241,"column":8},"end":{"line":241,"column":22}},"50":{"start":{"line":247,"column":0},"end":{"line":247,"column":62}},"51":{"start":{"line":256,"column":0},"end":{"line":286,"column":1}},"52":{"start":{"line":257,"column":2},"end":{"line":257,"column":18}},"53":{"start":{"line":260,"column":2},"end":{"line":270,"column":3}},"54":{"start":{"line":262,"column":4},"end":{"line":266,"column":5}},"55":{"start":{"line":263,"column":6},"end":{"line":263,"column":34}},"56":{"start":{"line":264,"column":6},"end":{"line":264,"column":31}},"57":{"start":{"line":265,"column":6},"end":{"line":265,"column":33}},"58":{"start":{"line":269,"column":4},"end":{"line":269,"column":37}},"59":{"start":{"line":273,"column":2},"end":{"line":285,"column":5}},"60":{"start":{"line":275,"column":4},"end":{"line":279,"column":5}},"61":{"start":{"line":276,"column":6},"end":{"line":276,"column":34}},"62":{"start":{"line":277,"column":6},"end":{"line":277,"column":31}},"63":{"start":{"line":278,"column":6},"end":{"line":278,"column":26}},"64":{"start":{"line":281,"column":4},"end":{"line":284,"column":7}},"65":{"start":{"line":282,"column":6},"end":{"line":282,"column":33}},"66":{"start":{"line":282,"column":14},"end":{"line":282,"column":33}},"67":{"start":{"line":283,"column":6},"end":{"line":283,"column":17}},"68":{"start":{"line":288,"column":0},"end":{"line":288,"column":59}},"69":{"start":{"line":296,"column":0},"end":{"line":300,"column":1}},"70":{"start":{"line":297,"column":2},"end":{"line":297,"column":152}},"71":{"start":{"line":297,"column":84},"end":{"line":297,"column":152}},"72":{"start":{"line":298,"column":2},"end":{"line":298,"column":28}},"73":{"start":{"line":299,"column":2},"end":{"line":299,"column":14}},"74":{"start":{"line":302,"column":0},"end":{"line":302,"column":82}},"75":{"start":{"line":310,"column":0},"end":{"line":314,"column":1}},"76":{"start":{"line":311,"column":2},"end":{"line":311,"column":152}},"77":{"start":{"line":311,"column":84},"end":{"line":311,"column":152}},"78":{"start":{"line":312,"column":2},"end":{"line":312,"column":31}},"79":{"start":{"line":313,"column":2},"end":{"line":313,"column":14}},"80":{"start":{"line":316,"column":0},"end":{"line":316,"column":83}},"81":{"start":{"line":324,"column":0},"end":{"line":328,"column":1}},"82":{"start":{"line":325,"column":2},"end":{"line":325,"column":152}},"83":{"start":{"line":325,"column":84},"end":{"line":325,"column":152}},"84":{"start":{"line":326,"column":2},"end":{"line":326,"column":25}},"85":{"start":{"line":327,"column":2},"end":{"line":327,"column":14}},"86":{"start":{"line":330,"column":0},"end":{"line":330,"column":80}},"87":{"start":{"line":338,"column":0},"end":{"line":342,"column":1}},"88":{"start":{"line":339,"column":2},"end":{"line":339,"column":152}},"89":{"start":{"line":339,"column":84},"end":{"line":339,"column":152}},"90":{"start":{"line":340,"column":2},"end":{"line":340,"column":23}},"91":{"start":{"line":341,"column":2},"end":{"line":341,"column":14}},"92":{"start":{"line":344,"column":0},"end":{"line":344,"column":79}},"93":{"start":{"line":352,"column":0},"end":{"line":356,"column":1}},"94":{"start":{"line":353,"column":2},"end":{"line":353,"column":152}},"95":{"start":{"line":353,"column":84},"end":{"line":353,"column":152}},"96":{"start":{"line":354,"column":2},"end":{"line":354,"column":23}},"97":{"start":{"line":355,"column":2},"end":{"line":355,"column":14}},"98":{"start":{"line":358,"column":0},"end":{"line":358,"column":79}},"99":{"start":{"line":366,"column":0},"end":{"line":370,"column":1}},"100":{"start":{"line":367,"column":2},"end":{"line":367,"column":152}},"101":{"start":{"line":367,"column":84},"end":{"line":367,"column":152}},"102":{"start":{"line":368,"column":2},"end":{"line":368,"column":31}},"103":{"start":{"line":369,"column":2},"end":{"line":369,"column":14}},"104":{"start":{"line":372,"column":0},"end":{"line":372,"column":85}},"105":{"start":{"line":380,"column":0},"end":{"line":384,"column":1}},"106":{"start":{"line":381,"column":2},"end":{"line":381,"column":152}},"107":{"start":{"line":381,"column":84},"end":{"line":381,"column":152}},"108":{"start":{"line":382,"column":2},"end":{"line":382,"column":33}},"109":{"start":{"line":383,"column":2},"end":{"line":383,"column":14}},"110":{"start":{"line":386,"column":0},"end":{"line":386,"column":88}},"111":{"start":{"line":394,"column":0},"end":{"line":398,"column":1}},"112":{"start":{"line":395,"column":2},"end":{"line":395,"column":152}},"113":{"start":{"line":395,"column":84},"end":{"line":395,"column":152}},"114":{"start":{"line":396,"column":2},"end":{"line":396,"column":30}},"115":{"start":{"line":397,"column":2},"end":{"line":397,"column":14}},"116":{"start":{"line":400,"column":0},"end":{"line":400,"column":84}},"117":{"start":{"line":410,"column":0},"end":{"line":417,"column":1}},"118":{"start":{"line":411,"column":2},"end":{"line":411,"column":152}},"119":{"start":{"line":411,"column":84},"end":{"line":411,"column":152}},"120":{"start":{"line":412,"column":2},"end":{"line":412,"column":140}},"121":{"start":{"line":412,"column":34},"end":{"line":412,"column":140}},"122":{"start":{"line":413,"column":2},"end":{"line":413,"column":24}},"123":{"start":{"line":414,"column":2},"end":{"line":415,"column":42}},"124":{"start":{"line":415,"column":4},"end":{"line":415,"column":42}},"125":{"start":{"line":416,"column":2},"end":{"line":416,"column":14}},"126":{"start":{"line":419,"column":0},"end":{"line":419,"column":91}},"127":{"start":{"line":429,"column":0},"end":{"line":435,"column":1}},"128":{"start":{"line":430,"column":2},"end":{"line":430,"column":152}},"129":{"start":{"line":430,"column":84},"end":{"line":430,"column":152}},"130":{"start":{"line":431,"column":2},"end":{"line":431,"column":132}},"131":{"start":{"line":431,"column":32},"end":{"line":431,"column":132}},"132":{"start":{"line":432,"column":2},"end":{"line":432,"column":124}},"133":{"start":{"line":432,"column":32},"end":{"line":432,"column":124}},"134":{"start":{"line":433,"column":2},"end":{"line":433,"column":27}},"135":{"start":{"line":434,"column":2},"end":{"line":434,"column":14}},"136":{"start":{"line":437,"column":0},"end":{"line":437,"column":89}},"137":{"start":{"line":447,"column":0},"end":{"line":457,"column":1}},"138":{"start":{"line":448,"column":2},"end":{"line":448,"column":152}},"139":{"start":{"line":448,"column":84},"end":{"line":448,"column":152}},"140":{"start":{"line":449,"column":2},"end":{"line":449,"column":108}},"141":{"start":{"line":449,"column":21},"end":{"line":449,"column":108}},"142":{"start":{"line":451,"column":2},"end":{"line":451,"column":29}},"143":{"start":{"line":453,"column":2},"end":{"line":453,"column":28}},"144":{"start":{"line":455,"column":2},"end":{"line":455,"column":61}},"145":{"start":{"line":455,"column":25},"end":{"line":455,"column":61}},"146":{"start":{"line":456,"column":2},"end":{"line":456,"column":14}},"147":{"start":{"line":459,"column":0},"end":{"line":459,"column":92}},"148":{"start":{"line":468,"column":0},"end":{"line":472,"column":1}},"149":{"start":{"line":469,"column":2},"end":{"line":469,"column":152}},"150":{"start":{"line":469,"column":84},"end":{"line":469,"column":152}},"151":{"start":{"line":470,"column":2},"end":{"line":470,"column":29}},"152":{"start":{"line":471,"column":2},"end":{"line":471,"column":14}},"153":{"start":{"line":474,"column":0},"end":{"line":474,"column":83}},"154":{"start":{"line":483,"column":0},"end":{"line":488,"column":1}},"155":{"start":{"line":484,"column":2},"end":{"line":484,"column":114}},"156":{"start":{"line":484,"column":31},"end":{"line":484,"column":114}},"157":{"start":{"line":485,"column":2},"end":{"line":485,"column":152}},"158":{"start":{"line":485,"column":84},"end":{"line":485,"column":152}},"159":{"start":{"line":486,"column":2},"end":{"line":486,"column":36}},"160":{"start":{"line":487,"column":2},"end":{"line":487,"column":14}},"161":{"start":{"line":490,"column":0},"end":{"line":490,"column":90}},"162":{"start":{"line":499,"column":0},"end":{"line":504,"column":1}},"163":{"start":{"line":500,"column":2},"end":{"line":500,"column":109}},"164":{"start":{"line":500,"column":31},"end":{"line":500,"column":109}},"165":{"start":{"line":501,"column":2},"end":{"line":501,"column":152}},"166":{"start":{"line":501,"column":84},"end":{"line":501,"column":152}},"167":{"start":{"line":502,"column":2},"end":{"line":502,"column":31}},"168":{"start":{"line":503,"column":2},"end":{"line":503,"column":14}},"169":{"start":{"line":506,"column":0},"end":{"line":506,"column":85}},"170":{"start":{"line":508,"column":0},"end":{"line":508,"column":56}},"171":{"start":{"line":510,"column":0},"end":{"line":510,"column":85}},"172":{"start":{"line":519,"column":0},"end":{"line":523,"column":1}},"173":{"start":{"line":520,"column":2},"end":{"line":520,"column":152}},"174":{"start":{"line":520,"column":84},"end":{"line":520,"column":152}},"175":{"start":{"line":521,"column":2},"end":{"line":521,"column":28}},"176":{"start":{"line":522,"column":2},"end":{"line":522,"column":14}},"177":{"start":{"line":525,"column":0},"end":{"line":525,"column":83}},"178":{"start":{"line":535,"column":0},"end":{"line":566,"column":1}},"179":{"start":{"line":536,"column":2},"end":{"line":536,"column":121}},"180":{"start":{"line":536,"column":30},"end":{"line":536,"column":121}},"181":{"start":{"line":537,"column":2},"end":{"line":537,"column":152}},"182":{"start":{"line":537,"column":84},"end":{"line":537,"column":152}},"183":{"start":{"line":538,"column":2},"end":{"line":538,"column":24}},"184":{"start":{"line":542,"column":2},"end":{"line":557,"column":3}},"185":{"start":{"line":543,"column":4},"end":{"line":556,"column":8}},"186":{"start":{"line":544,"column":6},"end":{"line":544,"column":31}},"187":{"start":{"line":545,"column":6},"end":{"line":553,"column":7}},"188":{"start":{"line":546,"column":8},"end":{"line":546,"column":21}},"189":{"start":{"line":547,"column":13},"end":{"line":553,"column":7}},"190":{"start":{"line":548,"column":8},"end":{"line":548,"column":22}},"191":{"start":{"line":549,"column":13},"end":{"line":553,"column":7}},"192":{"start":{"line":550,"column":8},"end":{"line":550,"column":24}},"193":{"start":{"line":552,"column":8},"end":{"line":552,"column":150}},"194":{"start":{"line":555,"column":6},"end":{"line":555,"column":19}},"195":{"start":{"line":559,"column":2},"end":{"line":561,"column":3}},"196":{"start":{"line":560,"column":4},"end":{"line":560,"column":37}},"197":{"start":{"line":563,"column":2},"end":{"line":563,"column":26}},"198":{"start":{"line":564,"column":2},"end":{"line":564,"column":25}},"199":{"start":{"line":565,"column":2},"end":{"line":565,"column":14}},"200":{"start":{"line":568,"column":0},"end":{"line":568,"column":80}},"201":{"start":{"line":577,"column":0},"end":{"line":584,"column":1}},"202":{"start":{"line":578,"column":2},"end":{"line":578,"column":123}},"203":{"start":{"line":578,"column":30},"end":{"line":578,"column":123}},"204":{"start":{"line":579,"column":2},"end":{"line":579,"column":121}},"205":{"start":{"line":579,"column":53},"end":{"line":579,"column":121}},"206":{"start":{"line":580,"column":2},"end":{"line":580,"column":112}},"207":{"start":{"line":580,"column":31},"end":{"line":580,"column":112}},"208":{"start":{"line":581,"column":2},"end":{"line":581,"column":31}},"209":{"start":{"line":582,"column":2},"end":{"line":582,"column":33}},"210":{"start":{"line":583,"column":2},"end":{"line":583,"column":14}},"211":{"start":{"line":586,"column":0},"end":{"line":586,"column":85}},"212":{"start":{"line":595,"column":0},"end":{"line":598,"column":1}},"213":{"start":{"line":596,"column":2},"end":{"line":596,"column":31}},"214":{"start":{"line":597,"column":2},"end":{"line":597,"column":14}},"215":{"start":{"line":600,"column":0},"end":{"line":600,"column":85}},"216":{"start":{"line":609,"column":0},"end":{"line":617,"column":1}},"217":{"start":{"line":610,"column":2},"end":{"line":610,"column":119}},"218":{"start":{"line":610,"column":30},"end":{"line":610,"column":119}},"219":{"start":{"line":611,"column":2},"end":{"line":611,"column":152}},"220":{"start":{"line":611,"column":84},"end":{"line":611,"column":152}},"221":{"start":{"line":612,"column":2},"end":{"line":612,"column":108}},"222":{"start":{"line":612,"column":31},"end":{"line":612,"column":108}},"223":{"start":{"line":613,"column":2},"end":{"line":613,"column":27}},"224":{"start":{"line":615,"column":2},"end":{"line":615,"column":29}},"225":{"start":{"line":616,"column":2},"end":{"line":616,"column":14}},"226":{"start":{"line":619,"column":0},"end":{"line":619,"column":81}},"227":{"start":{"line":628,"column":0},"end":{"line":635,"column":1}},"228":{"start":{"line":629,"column":2},"end":{"line":629,"column":118}},"229":{"start":{"line":629,"column":30},"end":{"line":629,"column":118}},"230":{"start":{"line":630,"column":2},"end":{"line":630,"column":152}},"231":{"start":{"line":630,"column":84},"end":{"line":630,"column":152}},"232":{"start":{"line":631,"column":2},"end":{"line":631,"column":107}},"233":{"start":{"line":631,"column":31},"end":{"line":631,"column":107}},"234":{"start":{"line":632,"column":2},"end":{"line":632,"column":26}},"235":{"start":{"line":633,"column":2},"end":{"line":633,"column":28}},"236":{"start":{"line":634,"column":2},"end":{"line":634,"column":14}},"237":{"start":{"line":637,"column":0},"end":{"line":637,"column":80}},"238":{"start":{"line":666,"column":0},"end":{"line":666,"column":52}},"239":{"start":{"line":668,"column":0},"end":{"line":684,"column":1}},"240":{"start":{"line":669,"column":2},"end":{"line":669,"column":163}},"241":{"start":{"line":669,"column":68},"end":{"line":669,"column":163}},"242":{"start":{"line":670,"column":2},"end":{"line":676,"column":3}},"243":{"start":{"line":671,"column":4},"end":{"line":675,"column":5}},"244":{"start":{"line":672,"column":6},"end":{"line":672,"column":62}},"245":{"start":{"line":674,"column":6},"end":{"line":674,"column":43}},"246":{"start":{"line":679,"column":2},"end":{"line":683,"column":5}},"247":{"start":{"line":680,"column":4},"end":{"line":680,"column":31}},"248":{"start":{"line":681,"column":4},"end":{"line":681,"column":49}},"249":{"start":{"line":681,"column":12},"end":{"line":681,"column":49}},"250":{"start":{"line":682,"column":4},"end":{"line":682,"column":40}},"251":{"start":{"line":686,"column":0},"end":{"line":686,"column":65}},"252":{"start":{"line":690,"column":0},"end":{"line":697,"column":1}},"253":{"start":{"line":692,"column":2},"end":{"line":692,"column":39}},"254":{"start":{"line":692,"column":32},"end":{"line":692,"column":39}},"255":{"start":{"line":694,"column":2},"end":{"line":694,"column":23}},"256":{"start":{"line":696,"column":2},"end":{"line":696,"column":14}},"257":{"start":{"line":699,"column":0},"end":{"line":699,"column":52}},"258":{"start":{"line":701,"column":0},"end":{"line":701,"column":59}},"259":{"start":{"line":716,"column":0},"end":{"line":723,"column":2}},"260":{"start":{"line":718,"column":2},"end":{"line":718,"column":16}},"261":{"start":{"line":720,"column":2},"end":{"line":720,"column":29}},"262":{"start":{"line":722,"column":2},"end":{"line":722,"column":24}},"263":{"start":{"line":725,"column":0},"end":{"line":725,"column":60}},"264":{"start":{"line":728,"column":0},"end":{"line":755,"column":1}},"265":{"start":{"line":729,"column":2},"end":{"line":729,"column":89}},"266":{"start":{"line":729,"column":16},"end":{"line":729,"column":89}},"267":{"start":{"line":730,"column":2},"end":{"line":730,"column":31}},"268":{"start":{"line":730,"column":24},"end":{"line":730,"column":31}},"269":{"start":{"line":731,"column":2},"end":{"line":733,"column":3}},"270":{"start":{"line":732,"column":4},"end":{"line":732,"column":99}},"271":{"start":{"line":735,"column":2},"end":{"line":735,"column":61}},"272":{"start":{"line":735,"column":34},"end":{"line":735,"column":61}},"273":{"start":{"line":738,"column":2},"end":{"line":738,"column":16}},"274":{"start":{"line":740,"column":2},"end":{"line":754,"column":3}},"275":{"start":{"line":741,"column":4},"end":{"line":741,"column":56}},"276":{"start":{"line":741,"column":37},"end":{"line":741,"column":56}},"277":{"start":{"line":742,"column":4},"end":{"line":742,"column":26}},"278":{"start":{"line":744,"column":4},"end":{"line":753,"column":6}},"279":{"start":{"line":745,"column":6},"end":{"line":745,"column":51}},"280":{"start":{"line":745,"column":14},"end":{"line":745,"column":51}},"281":{"start":{"line":746,"column":6},"end":{"line":749,"column":7}},"282":{"start":{"line":747,"column":8},"end":{"line":747,"column":37}},"283":{"start":{"line":748,"column":8},"end":{"line":748,"column":52}},"284":{"start":{"line":751,"column":6},"end":{"line":751,"column":63}},"285":{"start":{"line":751,"column":56},"end":{"line":751,"column":63}},"286":{"start":{"line":752,"column":6},"end":{"line":752,"column":28}},"287":{"start":{"line":777,"column":0},"end":{"line":788,"column":1}},"288":{"start":{"line":778,"column":2},"end":{"line":787,"column":5}},"289":{"start":{"line":779,"column":4},"end":{"line":779,"column":44}},"290":{"start":{"line":779,"column":14},"end":{"line":779,"column":28}},"291":{"start":{"line":779,"column":29},"end":{"line":779,"column":42}},"292":{"start":{"line":780,"column":4},"end":{"line":780,"column":51}},"293":{"start":{"line":780,"column":22},"end":{"line":780,"column":36}},"294":{"start":{"line":780,"column":37},"end":{"line":780,"column":49}},"295":{"start":{"line":781,"column":4},"end":{"line":786,"column":5}},"296":{"start":{"line":782,"column":6},"end":{"line":782,"column":38}},"297":{"start":{"line":783,"column":6},"end":{"line":783,"column":22}},"298":{"start":{"line":784,"column":6},"end":{"line":784,"column":29}},"299":{"start":{"line":785,"column":6},"end":{"line":785,"column":19}},"300":{"start":{"line":790,"column":0},"end":{"line":790,"column":63}},"301":{"start":{"line":799,"column":0},"end":{"line":810,"column":1}},"302":{"start":{"line":800,"column":2},"end":{"line":800,"column":152}},"303":{"start":{"line":800,"column":34},"end":{"line":800,"column":152}},"304":{"start":{"line":801,"column":2},"end":{"line":807,"column":3}},"305":{"start":{"line":802,"column":4},"end":{"line":802,"column":121}},"306":{"start":{"line":803,"column":9},"end":{"line":807,"column":3}},"307":{"start":{"line":804,"column":4},"end":{"line":804,"column":62}},"308":{"start":{"line":805,"column":9},"end":{"line":807,"column":3}},"309":{"start":{"line":806,"column":4},"end":{"line":806,"column":38}},"310":{"start":{"line":809,"column":2},"end":{"line":809,"column":14}},"311":{"start":{"line":812,"column":0},"end":{"line":812,"column":93}},"312":{"start":{"line":831,"column":0},"end":{"line":845,"column":1}},"313":{"start":{"line":832,"column":2},"end":{"line":832,"column":18}},"314":{"start":{"line":833,"column":2},"end":{"line":833,"column":126}},"315":{"start":{"line":833,"column":30},"end":{"line":833,"column":126}},"316":{"start":{"line":836,"column":2},"end":{"line":836,"column":67}},"317":{"start":{"line":836,"column":36},"end":{"line":836,"column":67}},"318":{"start":{"line":839,"column":2},"end":{"line":844,"column":5}},"319":{"start":{"line":840,"column":4},"end":{"line":843,"column":7}},"320":{"start":{"line":841,"column":6},"end":{"line":841,"column":33}},"321":{"start":{"line":841,"column":14},"end":{"line":841,"column":33}},"322":{"start":{"line":842,"column":6},"end":{"line":842,"column":17}},"323":{"start":{"line":847,"column":0},"end":{"line":884,"column":1}},"324":{"start":{"line":848,"column":2},"end":{"line":848,"column":17}},"325":{"start":{"line":851,"column":2},"end":{"line":851,"column":16}},"326":{"start":{"line":852,"column":2},"end":{"line":852,"column":29}},"327":{"start":{"line":855,"column":2},"end":{"line":881,"column":3}},"328":{"start":{"line":856,"column":4},"end":{"line":880,"column":6}},"329":{"start":{"line":857,"column":6},"end":{"line":857,"column":51}},"330":{"start":{"line":857,"column":14},"end":{"line":857,"column":51}},"331":{"start":{"line":858,"column":6},"end":{"line":861,"column":7}},"332":{"start":{"line":859,"column":8},"end":{"line":859,"column":37}},"333":{"start":{"line":860,"column":8},"end":{"line":860,"column":53}},"334":{"start":{"line":864,"column":6},"end":{"line":864,"column":21}},"335":{"start":{"line":867,"column":6},"end":{"line":876,"column":7}},"336":{"start":{"line":868,"column":8},"end":{"line":868,"column":67}},"337":{"start":{"line":871,"column":8},"end":{"line":873,"column":9}},"338":{"start":{"line":872,"column":10},"end":{"line":872,"column":49}},"339":{"start":{"line":875,"column":8},"end":{"line":875,"column":32}},"340":{"start":{"line":879,"column":6},"end":{"line":879,"column":18}},"341":{"start":{"line":883,"column":2},"end":{"line":883,"column":14}},"342":{"start":{"line":886,"column":0},"end":{"line":886,"column":62}},"343":{"start":{"line":908,"column":0},"end":{"line":924,"column":2}},"344":{"start":{"line":909,"column":2},"end":{"line":909,"column":18}},"345":{"start":{"line":910,"column":2},"end":{"line":910,"column":123}},"346":{"start":{"line":910,"column":31},"end":{"line":910,"column":123}},"347":{"start":{"line":911,"column":2},"end":{"line":911,"column":59}},"348":{"start":{"line":911,"column":32},"end":{"line":911,"column":59}},"349":{"start":{"line":912,"column":2},"end":{"line":912,"column":20}},"350":{"start":{"line":915,"column":2},"end":{"line":915,"column":87}},"351":{"start":{"line":915,"column":36},"end":{"line":915,"column":87}},"352":{"start":{"line":918,"column":2},"end":{"line":923,"column":5}},"353":{"start":{"line":919,"column":4},"end":{"line":922,"column":7}},"354":{"start":{"line":920,"column":6},"end":{"line":920,"column":33}},"355":{"start":{"line":920,"column":14},"end":{"line":920,"column":33}},"356":{"start":{"line":921,"column":6},"end":{"line":921,"column":17}},"357":{"start":{"line":926,"column":0},"end":{"line":960,"column":1}},"358":{"start":{"line":927,"column":2},"end":{"line":930,"column":3}},"359":{"start":{"line":928,"column":4},"end":{"line":928,"column":30}},"360":{"start":{"line":929,"column":4},"end":{"line":929,"column":26}},"361":{"start":{"line":932,"column":2},"end":{"line":935,"column":3}},"362":{"start":{"line":933,"column":4},"end":{"line":933,"column":75}},"363":{"start":{"line":933,"column":45},"end":{"line":933,"column":75}},"364":{"start":{"line":934,"column":4},"end":{"line":934,"column":78}},"365":{"start":{"line":934,"column":46},"end":{"line":934,"column":78}},"366":{"start":{"line":938,"column":2},"end":{"line":938,"column":41}},"367":{"start":{"line":940,"column":2},"end":{"line":942,"column":3}},"368":{"start":{"line":944,"column":2},"end":{"line":948,"column":3}},"369":{"start":{"line":945,"column":4},"end":{"line":945,"column":39}},"370":{"start":{"line":946,"column":9},"end":{"line":948,"column":3}},"371":{"start":{"line":947,"column":4},"end":{"line":947,"column":45}},"372":{"start":{"line":951,"column":2},"end":{"line":951,"column":41}},"373":{"start":{"line":951,"column":16},"end":{"line":951,"column":41}},"374":{"start":{"line":952,"column":2},"end":{"line":952,"column":44}},"375":{"start":{"line":952,"column":17},"end":{"line":952,"column":44}},"376":{"start":{"line":953,"column":2},"end":{"line":953,"column":61}},"377":{"start":{"line":953,"column":26},"end":{"line":953,"column":61}},"378":{"start":{"line":956,"column":2},"end":{"line":959,"column":7}},"379":{"start":{"line":958,"column":6},"end":{"line":958,"column":52}},"380":{"start":{"line":962,"column":0},"end":{"line":962,"column":60}},"381":{"start":{"line":970,"column":0},"end":{"line":982,"column":1}},"382":{"start":{"line":971,"column":2},"end":{"line":971,"column":31}},"383":{"start":{"line":973,"column":2},"end":{"line":973,"column":14}},"384":{"start":{"line":975,"column":2},"end":{"line":975,"column":21}},"385":{"start":{"line":977,"column":2},"end":{"line":977,"column":80}},"386":{"start":{"line":977,"column":36},"end":{"line":977,"column":80}},"387":{"start":{"line":979,"column":2},"end":{"line":981,"column":5}},"388":{"start":{"line":980,"column":4},"end":{"line":980,"column":14}},"389":{"start":{"line":984,"column":0},"end":{"line":984,"column":60}},"390":{"start":{"line":992,"column":0},"end":{"line":995,"column":1}},"391":{"start":{"line":993,"column":2},"end":{"line":993,"column":51}},"392":{"start":{"line":994,"column":2},"end":{"line":994,"column":14}},"393":{"start":{"line":997,"column":0},"end":{"line":997,"column":79}},"394":{"start":{"line":1004,"column":0},"end":{"line":1006,"column":1}},"395":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":23}},"396":{"start":{"line":1008,"column":0},"end":{"line":1008,"column":85}},"397":{"start":{"line":1010,"column":0},"end":{"line":1014,"column":1}},"398":{"start":{"line":1011,"column":2},"end":{"line":1011,"column":34}},"399":{"start":{"line":1011,"column":10},"end":{"line":1011,"column":34}},"400":{"start":{"line":1012,"column":2},"end":{"line":1012,"column":15}},"401":{"start":{"line":1013,"column":2},"end":{"line":1013,"column":15}},"402":{"start":{"line":1016,"column":0},"end":{"line":1016,"column":64}},"403":{"start":{"line":1025,"column":0},"end":{"line":1028,"column":1}},"404":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":39}},"405":{"start":{"line":1027,"column":2},"end":{"line":1027,"column":14}},"406":{"start":{"line":1030,"column":0},"end":{"line":1030,"column":82}},"407":{"start":{"line":1038,"column":0},"end":{"line":1057,"column":1}},"408":{"start":{"line":1039,"column":2},"end":{"line":1039,"column":18}},"409":{"start":{"line":1040,"column":2},"end":{"line":1040,"column":28}},"410":{"start":{"line":1043,"column":2},"end":{"line":1045,"column":3}},"411":{"start":{"line":1044,"column":4},"end":{"line":1044,"column":37}},"412":{"start":{"line":1048,"column":2},"end":{"line":1048,"column":64}},"413":{"start":{"line":1048,"column":36},"end":{"line":1048,"column":64}},"414":{"start":{"line":1051,"column":2},"end":{"line":1056,"column":5}},"415":{"start":{"line":1052,"column":4},"end":{"line":1055,"column":7}},"416":{"start":{"line":1053,"column":6},"end":{"line":1053,"column":33}},"417":{"start":{"line":1053,"column":14},"end":{"line":1053,"column":33}},"418":{"start":{"line":1054,"column":6},"end":{"line":1054,"column":17}},"419":{"start":{"line":1059,"column":0},"end":{"line":1059,"column":62}},"420":{"start":{"line":1061,"column":0},"end":{"line":1093,"column":1}},"421":{"start":{"line":1062,"column":2},"end":{"line":1062,"column":18}},"422":{"start":{"line":1063,"column":2},"end":{"line":1065,"column":3}},"423":{"start":{"line":1064,"column":4},"end":{"line":1064,"column":27}},"424":{"start":{"line":1068,"column":2},"end":{"line":1092,"column":5}},"425":{"start":{"line":1069,"column":4},"end":{"line":1078,"column":5}},"426":{"start":{"line":1070,"column":6},"end":{"line":1072,"column":7}},"427":{"start":{"line":1071,"column":8},"end":{"line":1071,"column":32}},"428":{"start":{"line":1073,"column":6},"end":{"line":1073,"column":38}},"429":{"start":{"line":1073,"column":25},"end":{"line":1073,"column":38}},"430":{"start":{"line":1076,"column":6},"end":{"line":1076,"column":23}},"431":{"start":{"line":1077,"column":6},"end":{"line":1077,"column":33}},"432":{"start":{"line":1081,"column":4},"end":{"line":1083,"column":5}},"433":{"start":{"line":1082,"column":6},"end":{"line":1082,"column":63}},"434":{"start":{"line":1086,"column":4},"end":{"line":1088,"column":5}},"435":{"start":{"line":1087,"column":6},"end":{"line":1087,"column":64}},"436":{"start":{"line":1091,"column":4},"end":{"line":1091,"column":22}},"437":{"start":{"line":1095,"column":0},"end":{"line":1104,"column":3}},"438":{"start":{"line":1098,"column":4},"end":{"line":1100,"column":5}},"439":{"start":{"line":1099,"column":6},"end":{"line":1099,"column":18}},"440":{"start":{"line":1102,"column":4},"end":{"line":1102,"column":41}},"441":{"start":{"line":1106,"column":0},"end":{"line":1127,"column":3}},"442":{"start":{"line":1109,"column":4},"end":{"line":1111,"column":5}},"443":{"start":{"line":1110,"column":6},"end":{"line":1110,"column":18}},"444":{"start":{"line":1114,"column":4},"end":{"line":1114,"column":29}},"445":{"start":{"line":1115,"column":4},"end":{"line":1115,"column":35}},"446":{"start":{"line":1116,"column":4},"end":{"line":1121,"column":5}},"447":{"start":{"line":1117,"column":6},"end":{"line":1120,"column":8}},"448":{"start":{"line":1122,"column":4},"end":{"line":1125,"column":6}},"449":{"start":{"line":1184,"column":0},"end":{"line":1184,"column":16}},"450":{"start":{"line":1185,"column":0},"end":{"line":1185,"column":16}},"451":{"start":{"line":1186,"column":0},"end":{"line":1186,"column":18}},"452":{"start":{"line":1187,"column":0},"end":{"line":1187,"column":20}},"453":{"start":{"line":1189,"column":0},"end":{"line":1189,"column":24}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":15},"end":{"line":9,"column":41}},{"start":{"line":9,"column":45},"end":{"line":9,"column":80}}]},"2":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":24},"end":{"line":107,"column":47}},{"start":{"line":107,"column":51},"end":{"line":107,"column":52}}]},"3":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":30},"end":{"line":108,"column":59}},{"start":{"line":108,"column":63},"end":{"line":108,"column":66}}]},"4":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"5":{"line":116,"type":"cond-expr","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":20}},{"start":{"line":117,"column":23},"end":{"line":117,"column":53}}]},"6":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"7":{"line":160,"type":"cond-expr","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":40}},{"start":{"line":162,"column":7},"end":{"line":162,"column":83}}]},"8":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":18},"end":{"line":160,"column":28}},{"start":{"line":160,"column":32},"end":{"line":160,"column":52}}]},"9":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":16}},{"start":{"line":161,"column":20},"end":{"line":161,"column":40}}]},"10":{"line":162,"type":"cond-expr","locations":[{"start":{"line":162,"column":52},"end":{"line":162,"column":76}},{"start":{"line":162,"column":79},"end":{"line":162,"column":83}}]},"11":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":7},"end":{"line":162,"column":21}},{"start":{"line":162,"column":25},"end":{"line":162,"column":49}}]},"12":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"13":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"14":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":224,"column":8}},{"start":{"line":224,"column":8},"end":{"line":224,"column":8}}]},"15":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"16":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"17":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":11},"end":{"line":237,"column":40}},{"start":{"line":237,"column":44},"end":{"line":237,"column":57}}]},"18":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":8}},{"start":{"line":238,"column":8},"end":{"line":238,"column":8}}]},"19":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"20":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"21":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"22":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"23":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":6},"end":{"line":282,"column":6}},{"start":{"line":282,"column":6},"end":{"line":282,"column":6}}]},"24":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":2},"end":{"line":297,"column":2}},{"start":{"line":297,"column":2},"end":{"line":297,"column":2}}]},"25":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":5},"end":{"line":297,"column":34}},{"start":{"line":297,"column":38},"end":{"line":297,"column":65}},{"start":{"line":297,"column":69},"end":{"line":297,"column":82}}]},"26":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":2},"end":{"line":311,"column":2}},{"start":{"line":311,"column":2},"end":{"line":311,"column":2}}]},"27":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":5},"end":{"line":311,"column":34}},{"start":{"line":311,"column":38},"end":{"line":311,"column":65}},{"start":{"line":311,"column":69},"end":{"line":311,"column":82}}]},"28":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"29":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":5},"end":{"line":325,"column":34}},{"start":{"line":325,"column":38},"end":{"line":325,"column":65}},{"start":{"line":325,"column":69},"end":{"line":325,"column":82}}]},"30":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"31":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":5},"end":{"line":339,"column":34}},{"start":{"line":339,"column":38},"end":{"line":339,"column":65}},{"start":{"line":339,"column":69},"end":{"line":339,"column":82}}]},"32":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":2},"end":{"line":353,"column":2}},{"start":{"line":353,"column":2},"end":{"line":353,"column":2}}]},"33":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":5},"end":{"line":353,"column":34}},{"start":{"line":353,"column":38},"end":{"line":353,"column":65}},{"start":{"line":353,"column":69},"end":{"line":353,"column":82}}]},"34":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":367,"column":2}},{"start":{"line":367,"column":2},"end":{"line":367,"column":2}}]},"35":{"line":367,"type":"binary-expr","locations":[{"start":{"line":367,"column":5},"end":{"line":367,"column":34}},{"start":{"line":367,"column":38},"end":{"line":367,"column":65}},{"start":{"line":367,"column":69},"end":{"line":367,"column":82}}]},"36":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":2},"end":{"line":381,"column":2}},{"start":{"line":381,"column":2},"end":{"line":381,"column":2}}]},"37":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":5},"end":{"line":381,"column":34}},{"start":{"line":381,"column":38},"end":{"line":381,"column":65}},{"start":{"line":381,"column":69},"end":{"line":381,"column":82}}]},"38":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"39":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":5},"end":{"line":395,"column":34}},{"start":{"line":395,"column":38},"end":{"line":395,"column":65}},{"start":{"line":395,"column":69},"end":{"line":395,"column":82}}]},"40":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]},"41":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":5},"end":{"line":411,"column":34}},{"start":{"line":411,"column":38},"end":{"line":411,"column":65}},{"start":{"line":411,"column":69},"end":{"line":411,"column":82}}]},"42":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":2},"end":{"line":412,"column":2}},{"start":{"line":412,"column":2},"end":{"line":412,"column":2}}]},"43":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":2},"end":{"line":414,"column":2}},{"start":{"line":414,"column":2},"end":{"line":414,"column":2}}]},"44":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":2},"end":{"line":430,"column":2}},{"start":{"line":430,"column":2},"end":{"line":430,"column":2}}]},"45":{"line":430,"type":"binary-expr","locations":[{"start":{"line":430,"column":5},"end":{"line":430,"column":34}},{"start":{"line":430,"column":38},"end":{"line":430,"column":65}},{"start":{"line":430,"column":69},"end":{"line":430,"column":82}}]},"46":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":2},"end":{"line":431,"column":2}},{"start":{"line":431,"column":2},"end":{"line":431,"column":2}}]},"47":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":432,"column":2}},{"start":{"line":432,"column":2},"end":{"line":432,"column":2}}]},"48":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":448,"column":2}},{"start":{"line":448,"column":2},"end":{"line":448,"column":2}}]},"49":{"line":448,"type":"binary-expr","locations":[{"start":{"line":448,"column":5},"end":{"line":448,"column":34}},{"start":{"line":448,"column":38},"end":{"line":448,"column":65}},{"start":{"line":448,"column":69},"end":{"line":448,"column":82}}]},"50":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":2},"end":{"line":449,"column":2}},{"start":{"line":449,"column":2},"end":{"line":449,"column":2}}]},"51":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":2},"end":{"line":455,"column":2}},{"start":{"line":455,"column":2},"end":{"line":455,"column":2}}]},"52":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":2},"end":{"line":469,"column":2}},{"start":{"line":469,"column":2},"end":{"line":469,"column":2}}]},"53":{"line":469,"type":"binary-expr","locations":[{"start":{"line":469,"column":5},"end":{"line":469,"column":34}},{"start":{"line":469,"column":38},"end":{"line":469,"column":65}},{"start":{"line":469,"column":69},"end":{"line":469,"column":82}}]},"54":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":2},"end":{"line":484,"column":2}},{"start":{"line":484,"column":2},"end":{"line":484,"column":2}}]},"55":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":2},"end":{"line":485,"column":2}},{"start":{"line":485,"column":2},"end":{"line":485,"column":2}}]},"56":{"line":485,"type":"binary-expr","locations":[{"start":{"line":485,"column":5},"end":{"line":485,"column":34}},{"start":{"line":485,"column":38},"end":{"line":485,"column":65}},{"start":{"line":485,"column":69},"end":{"line":485,"column":82}}]},"57":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":2},"end":{"line":500,"column":2}},{"start":{"line":500,"column":2},"end":{"line":500,"column":2}}]},"58":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":501,"column":2}},{"start":{"line":501,"column":2},"end":{"line":501,"column":2}}]},"59":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":5},"end":{"line":501,"column":34}},{"start":{"line":501,"column":38},"end":{"line":501,"column":65}},{"start":{"line":501,"column":69},"end":{"line":501,"column":82}}]},"60":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":2},"end":{"line":520,"column":2}},{"start":{"line":520,"column":2},"end":{"line":520,"column":2}}]},"61":{"line":520,"type":"binary-expr","locations":[{"start":{"line":520,"column":5},"end":{"line":520,"column":34}},{"start":{"line":520,"column":38},"end":{"line":520,"column":65}},{"start":{"line":520,"column":69},"end":{"line":520,"column":82}}]},"62":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":2},"end":{"line":536,"column":2}},{"start":{"line":536,"column":2},"end":{"line":536,"column":2}}]},"63":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":2},"end":{"line":537,"column":2}},{"start":{"line":537,"column":2},"end":{"line":537,"column":2}}]},"64":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":5},"end":{"line":537,"column":34}},{"start":{"line":537,"column":38},"end":{"line":537,"column":65}},{"start":{"line":537,"column":69},"end":{"line":537,"column":82}}]},"65":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":2},"end":{"line":542,"column":2}},{"start":{"line":542,"column":2},"end":{"line":542,"column":2}}]},"66":{"line":542,"type":"binary-expr","locations":[{"start":{"line":542,"column":5},"end":{"line":542,"column":25}},{"start":{"line":542,"column":29},"end":{"line":542,"column":52}}]},"67":{"line":545,"type":"if","locations":[{"start":{"line":545,"column":6},"end":{"line":545,"column":6}},{"start":{"line":545,"column":6},"end":{"line":545,"column":6}}]},"68":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":13},"end":{"line":547,"column":13}},{"start":{"line":547,"column":13},"end":{"line":547,"column":13}}]},"69":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":13},"end":{"line":549,"column":13}},{"start":{"line":549,"column":13},"end":{"line":549,"column":13}}]},"70":{"line":549,"type":"binary-expr","locations":[{"start":{"line":549,"column":16},"end":{"line":549,"column":25}},{"start":{"line":549,"column":29},"end":{"line":549,"column":39}}]},"71":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":2},"end":{"line":559,"column":2}},{"start":{"line":559,"column":2},"end":{"line":559,"column":2}}]},"72":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":2},"end":{"line":578,"column":2}},{"start":{"line":578,"column":2},"end":{"line":578,"column":2}}]},"73":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":2},"end":{"line":579,"column":2}},{"start":{"line":579,"column":2},"end":{"line":579,"column":2}}]},"74":{"line":579,"type":"binary-expr","locations":[{"start":{"line":579,"column":5},"end":{"line":579,"column":34}},{"start":{"line":579,"column":38},"end":{"line":579,"column":51}}]},"75":{"line":580,"type":"if","locations":[{"start":{"line":580,"column":2},"end":{"line":580,"column":2}},{"start":{"line":580,"column":2},"end":{"line":580,"column":2}}]},"76":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":2},"end":{"line":610,"column":2}},{"start":{"line":610,"column":2},"end":{"line":610,"column":2}}]},"77":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":2},"end":{"line":611,"column":2}},{"start":{"line":611,"column":2},"end":{"line":611,"column":2}}]},"78":{"line":611,"type":"binary-expr","locations":[{"start":{"line":611,"column":5},"end":{"line":611,"column":32}},{"start":{"line":611,"column":36},"end":{"line":611,"column":65}},{"start":{"line":611,"column":69},"end":{"line":611,"column":82}}]},"79":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":2},"end":{"line":612,"column":2}},{"start":{"line":612,"column":2},"end":{"line":612,"column":2}}]},"80":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":2},"end":{"line":629,"column":2}},{"start":{"line":629,"column":2},"end":{"line":629,"column":2}}]},"81":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":2},"end":{"line":630,"column":2}},{"start":{"line":630,"column":2},"end":{"line":630,"column":2}}]},"82":{"line":630,"type":"binary-expr","locations":[{"start":{"line":630,"column":5},"end":{"line":630,"column":32}},{"start":{"line":630,"column":36},"end":{"line":630,"column":65}},{"start":{"line":630,"column":69},"end":{"line":630,"column":82}}]},"83":{"line":631,"type":"if","locations":[{"start":{"line":631,"column":2},"end":{"line":631,"column":2}},{"start":{"line":631,"column":2},"end":{"line":631,"column":2}}]},"84":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":2},"end":{"line":669,"column":2}},{"start":{"line":669,"column":2},"end":{"line":669,"column":2}}]},"85":{"line":669,"type":"binary-expr","locations":[{"start":{"line":669,"column":5},"end":{"line":669,"column":34}},{"start":{"line":669,"column":38},"end":{"line":669,"column":49}},{"start":{"line":669,"column":53},"end":{"line":669,"column":66}}]},"86":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":2},"end":{"line":670,"column":2}},{"start":{"line":670,"column":2},"end":{"line":670,"column":2}}]},"87":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":5},"end":{"line":670,"column":32}},{"start":{"line":670,"column":36},"end":{"line":670,"column":51}}]},"88":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":4},"end":{"line":681,"column":4}},{"start":{"line":681,"column":4},"end":{"line":681,"column":4}}]},"89":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":2},"end":{"line":692,"column":2}},{"start":{"line":692,"column":2},"end":{"line":692,"column":2}}]},"90":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":2},"end":{"line":729,"column":2}},{"start":{"line":729,"column":2},"end":{"line":729,"column":2}}]},"91":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":2},"end":{"line":730,"column":2}},{"start":{"line":730,"column":2},"end":{"line":730,"column":2}}]},"92":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":2},"end":{"line":731,"column":2}},{"start":{"line":731,"column":2},"end":{"line":731,"column":2}}]},"93":{"line":731,"type":"binary-expr","locations":[{"start":{"line":731,"column":5},"end":{"line":731,"column":34}},{"start":{"line":731,"column":38},"end":{"line":731,"column":51}}]},"94":{"line":735,"type":"if","locations":[{"start":{"line":735,"column":2},"end":{"line":735,"column":2}},{"start":{"line":735,"column":2},"end":{"line":735,"column":2}}]},"95":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":2},"end":{"line":740,"column":2}},{"start":{"line":740,"column":2},"end":{"line":740,"column":2}}]},"96":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":6},"end":{"line":745,"column":6}},{"start":{"line":745,"column":6},"end":{"line":745,"column":6}}]},"97":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":6},"end":{"line":746,"column":6}},{"start":{"line":746,"column":6},"end":{"line":746,"column":6}}]},"98":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":6},"end":{"line":751,"column":6}},{"start":{"line":751,"column":6},"end":{"line":751,"column":6}}]},"99":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":4},"end":{"line":779,"column":4}},{"start":{"line":779,"column":4},"end":{"line":779,"column":4}}]},"100":{"line":780,"type":"if","locations":[{"start":{"line":780,"column":4},"end":{"line":780,"column":4}},{"start":{"line":780,"column":4},"end":{"line":780,"column":4}}]},"101":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":4},"end":{"line":781,"column":4}},{"start":{"line":781,"column":4},"end":{"line":781,"column":4}}]},"102":{"line":781,"type":"binary-expr","locations":[{"start":{"line":781,"column":7},"end":{"line":781,"column":18}},{"start":{"line":781,"column":22},"end":{"line":781,"column":30}}]},"103":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":2},"end":{"line":800,"column":2}},{"start":{"line":800,"column":2},"end":{"line":800,"column":2}}]},"104":{"line":801,"type":"if","locations":[{"start":{"line":801,"column":2},"end":{"line":801,"column":2}},{"start":{"line":801,"column":2},"end":{"line":801,"column":2}}]},"105":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":9},"end":{"line":803,"column":9}},{"start":{"line":803,"column":9},"end":{"line":803,"column":9}}]},"106":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":9},"end":{"line":805,"column":9}},{"start":{"line":805,"column":9},"end":{"line":805,"column":9}}]},"107":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":2},"end":{"line":833,"column":2}},{"start":{"line":833,"column":2},"end":{"line":833,"column":2}}]},"108":{"line":836,"type":"if","locations":[{"start":{"line":836,"column":2},"end":{"line":836,"column":2}},{"start":{"line":836,"column":2},"end":{"line":836,"column":2}}]},"109":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":6},"end":{"line":841,"column":6}},{"start":{"line":841,"column":6},"end":{"line":841,"column":6}}]},"110":{"line":857,"type":"if","locations":[{"start":{"line":857,"column":6},"end":{"line":857,"column":6}},{"start":{"line":857,"column":6},"end":{"line":857,"column":6}}]},"111":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":6},"end":{"line":858,"column":6}},{"start":{"line":858,"column":6},"end":{"line":858,"column":6}}]},"112":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":6},"end":{"line":867,"column":6}},{"start":{"line":867,"column":6},"end":{"line":867,"column":6}}]},"113":{"line":871,"type":"if","locations":[{"start":{"line":871,"column":8},"end":{"line":871,"column":8}},{"start":{"line":871,"column":8},"end":{"line":871,"column":8}}]},"114":{"line":871,"type":"binary-expr","locations":[{"start":{"line":871,"column":11},"end":{"line":871,"column":28}},{"start":{"line":871,"column":32},"end":{"line":871,"column":74}}]},"115":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":2},"end":{"line":910,"column":2}},{"start":{"line":910,"column":2},"end":{"line":910,"column":2}}]},"116":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":2},"end":{"line":911,"column":2}},{"start":{"line":911,"column":2},"end":{"line":911,"column":2}}]},"117":{"line":912,"type":"binary-expr","locations":[{"start":{"line":912,"column":9},"end":{"line":912,"column":13}},{"start":{"line":912,"column":17},"end":{"line":912,"column":19}}]},"118":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":2},"end":{"line":915,"column":2}},{"start":{"line":915,"column":2},"end":{"line":915,"column":2}}]},"119":{"line":920,"type":"if","locations":[{"start":{"line":920,"column":6},"end":{"line":920,"column":6}},{"start":{"line":920,"column":6},"end":{"line":920,"column":6}}]},"120":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":2},"end":{"line":927,"column":2}},{"start":{"line":927,"column":2},"end":{"line":927,"column":2}}]},"121":{"line":932,"type":"if","locations":[{"start":{"line":932,"column":2},"end":{"line":932,"column":2}},{"start":{"line":932,"column":2},"end":{"line":932,"column":2}}]},"122":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":4},"end":{"line":933,"column":4}},{"start":{"line":933,"column":4},"end":{"line":933,"column":4}}]},"123":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":4},"end":{"line":934,"column":4}},{"start":{"line":934,"column":4},"end":{"line":934,"column":4}}]},"124":{"line":944,"type":"if","locations":[{"start":{"line":944,"column":2},"end":{"line":944,"column":2}},{"start":{"line":944,"column":2},"end":{"line":944,"column":2}}]},"125":{"line":946,"type":"if","locations":[{"start":{"line":946,"column":9},"end":{"line":946,"column":9}},{"start":{"line":946,"column":9},"end":{"line":946,"column":9}}]},"126":{"line":946,"type":"binary-expr","locations":[{"start":{"line":946,"column":12},"end":{"line":946,"column":22}},{"start":{"line":946,"column":26},"end":{"line":946,"column":65}}]},"127":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":2},"end":{"line":951,"column":2}},{"start":{"line":951,"column":2},"end":{"line":951,"column":2}}]},"128":{"line":952,"type":"if","locations":[{"start":{"line":952,"column":2},"end":{"line":952,"column":2}},{"start":{"line":952,"column":2},"end":{"line":952,"column":2}}]},"129":{"line":953,"type":"if","locations":[{"start":{"line":953,"column":2},"end":{"line":953,"column":2}},{"start":{"line":953,"column":2},"end":{"line":953,"column":2}}]},"130":{"line":958,"type":"cond-expr","locations":[{"start":{"line":958,"column":29},"end":{"line":958,"column":44}},{"start":{"line":958,"column":47},"end":{"line":958,"column":51}}]},"131":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":2},"end":{"line":977,"column":2}},{"start":{"line":977,"column":2},"end":{"line":977,"column":2}}]},"132":{"line":1011,"type":"if","locations":[{"start":{"line":1011,"column":2},"end":{"line":1011,"column":2}},{"start":{"line":1011,"column":2},"end":{"line":1011,"column":2}}]},"133":{"line":1026,"type":"binary-expr","locations":[{"start":{"line":1026,"column":25},"end":{"line":1026,"column":32}},{"start":{"line":1026,"column":36},"end":{"line":1026,"column":38}}]},"134":{"line":1043,"type":"if","locations":[{"start":{"line":1043,"column":2},"end":{"line":1043,"column":2}},{"start":{"line":1043,"column":2},"end":{"line":1043,"column":2}}]},"135":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":2},"end":{"line":1048,"column":2}},{"start":{"line":1048,"column":2},"end":{"line":1048,"column":2}}]},"136":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":6},"end":{"line":1053,"column":6}},{"start":{"line":1053,"column":6},"end":{"line":1053,"column":6}}]},"137":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":2},"end":{"line":1063,"column":2}},{"start":{"line":1063,"column":2},"end":{"line":1063,"column":2}}]},"138":{"line":1063,"type":"binary-expr","locations":[{"start":{"line":1063,"column":5},"end":{"line":1063,"column":34}},{"start":{"line":1063,"column":38},"end":{"line":1063,"column":51}}]},"139":{"line":1069,"type":"if","locations":[{"start":{"line":1069,"column":4},"end":{"line":1069,"column":4}},{"start":{"line":1069,"column":4},"end":{"line":1069,"column":4}}]},"140":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":6},"end":{"line":1070,"column":6}},{"start":{"line":1070,"column":6},"end":{"line":1070,"column":6}}]},"141":{"line":1070,"type":"binary-expr","locations":[{"start":{"line":1070,"column":9},"end":{"line":1070,"column":32}},{"start":{"line":1070,"column":36},"end":{"line":1070,"column":70}}]},"142":{"line":1073,"type":"if","locations":[{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}},{"start":{"line":1073,"column":6},"end":{"line":1073,"column":6}}]},"143":{"line":1081,"type":"if","locations":[{"start":{"line":1081,"column":4},"end":{"line":1081,"column":4}},{"start":{"line":1081,"column":4},"end":{"line":1081,"column":4}}]},"144":{"line":1081,"type":"binary-expr","locations":[{"start":{"line":1081,"column":7},"end":{"line":1081,"column":58}},{"start":{"line":1081,"column":62},"end":{"line":1081,"column":76}}]},"145":{"line":1086,"type":"if","locations":[{"start":{"line":1086,"column":4},"end":{"line":1086,"column":4}},{"start":{"line":1086,"column":4},"end":{"line":1086,"column":4}}]},"146":{"line":1086,"type":"binary-expr","locations":[{"start":{"line":1086,"column":7},"end":{"line":1086,"column":34}},{"start":{"line":1086,"column":38},"end":{"line":1086,"column":90}},{"start":{"line":1086,"column":94},"end":{"line":1086,"column":108}}]},"147":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}},{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}}]},"148":{"line":1098,"type":"binary-expr","locations":[{"start":{"line":1098,"column":8},"end":{"line":1098,"column":13}},{"start":{"line":1098,"column":17},"end":{"line":1098,"column":24}}]},"149":{"line":1109,"type":"if","locations":[{"start":{"line":1109,"column":4},"end":{"line":1109,"column":4}},{"start":{"line":1109,"column":4},"end":{"line":1109,"column":4}}]},"150":{"line":1109,"type":"binary-expr","locations":[{"start":{"line":1109,"column":8},"end":{"line":1109,"column":13}},{"start":{"line":1109,"column":17},"end":{"line":1109,"column":24}}]},"151":{"line":1114,"type":"binary-expr","locations":[{"start":{"line":1114,"column":13},"end":{"line":1114,"column":22}},{"start":{"line":1114,"column":26},"end":{"line":1114,"column":28}}]},"152":{"line":1116,"type":"if","locations":[{"start":{"line":1116,"column":4},"end":{"line":1116,"column":4}},{"start":{"line":1116,"column":4},"end":{"line":1116,"column":4}}]}},"code":["\"use strict\";","","var inherits = require('util').inherits","  , f = require('util').format","  , formattedOrderClause = require('./utils').formattedOrderClause","  , handleCallback = require('./utils').handleCallback","  , ReadPreference = require('./read_preference')","  , MongoError = require('mongodb-core').MongoError","  , Readable = require('stream').Readable || require('readable-stream').Readable","  , Define = require('./metadata')","  , CoreCursor = require('mongodb-core').Cursor","  , Map = require('mongodb-core').BSON.Map","  , CoreReadPreference = require('mongodb-core').ReadPreference;","","/**"," * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB"," * allowing for iteration over the results returned from the underlying query. It supports"," * one by one document iteration, conversion to an array or can be iterated as a Node 0.10.X"," * or higher stream"," *"," * **CURSORS Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('createIndexExample1');"," *   // Insert a bunch of documents"," *   col.insert([{a:1, b:1}"," *     , {a:2, b:2}, {a:3, b:3}"," *     , {a:4, b:4}], {w:1}, function(err, result) {"," *     test.equal(null, err);"," *"," *     // Show that duplicate records got dropped"," *     col.find({}).toArray(function(err, items) {"," *       test.equal(null, err);"," *       test.equal(4, items.length);"," *       db.close();"," *     });"," *   });"," * });"," */","","/**"," * Namespace provided by the mongodb-core and node.js"," * @external CoreCursor"," * @external Readable"," */","","// Flags allowed for cursor","var flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];","var fields = ['numberOfRetries', 'tailableRetryInterval'];","var push = Array.prototype.push;","","/**"," * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)"," * @class Cursor"," * @extends external:CoreCursor"," * @extends external:Readable"," * @property {string} sortValue Cursor query sort setting."," * @property {boolean} timeout Is Cursor able to time out."," * @property {ReadPreference} readPreference Get cursor ReadPreference."," * @fires Cursor#data"," * @fires Cursor#end"," * @fires Cursor#close"," * @fires Cursor#readable"," * @return {Cursor} a Cursor instance."," * @example"," * Cursor cursor options."," *"," * collection.find({}).project({a:1})                             // Create a projection of field a"," * collection.find({}).skip(1).limit(10)                          // Skip 1 and limit 10"," * collection.find({}).batchSize(5)                               // Set batchSize on cursor to 5"," * collection.find({}).filter({a:1})                              // Set query on the cursor"," * collection.find({}).comment('add a comment')                   // Add a comment to the query, allowing to correlate queries"," * collection.find({}).addCursorFlag('tailable', true)            // Set cursor as tailable"," * collection.find({}).addCursorFlag('oplogReplay', true)         // Set cursor as oplogReplay"," * collection.find({}).addCursorFlag('noCursorTimeout', true)     // Set cursor as noCursorTimeout"," * collection.find({}).addCursorFlag('awaitData', true)           // Set cursor as awaitData"," * collection.find({}).addCursorFlag('partial', true)             // Set cursor as partial"," * collection.find({}).addQueryModifier('$orderby', {a:1})        // Set $orderby {a:1}"," * collection.find({}).max(10)                                    // Set the cursor maxScan"," * collection.find({}).maxScan(10)                                // Set the cursor maxScan"," * collection.find({}).maxTimeMS(1000)                            // Set the cursor maxTimeMS"," * collection.find({}).min(100)                                   // Set the cursor min"," * collection.find({}).returnKey(10)                              // Set the cursor returnKey"," * collection.find({}).setReadPreference(ReadPreference.PRIMARY)  // Set the cursor readPreference"," * collection.find({}).showRecordId(true)                         // Set the cursor showRecordId"," * collection.find({}).snapshot(true)                             // Set the cursor snapshot"," * collection.find({}).sort([['a', 1]])                           // Sets the sort order of the cursor query"," * collection.find({}).hint('a_1')                                // Set the cursor hint"," *"," * All options are chainable, so one can do the following."," *"," * collection.find({}).maxTimeMS(1000).maxScan(100).skip(1).toArray(..)"," */","var Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));","  var self = this;","  var state = Cursor.INIT;","  var streamOptions = {};","","  // Tailable cursor options","  var numberOfRetries = options.numberOfRetries || 5;","  var tailableRetryInterval = options.tailableRetryInterval || 500;","  var currentNumberOfRetries = numberOfRetries;","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Set up","  Readable.call(this, {objectMode: true});","","  // Internal cursor state","  this.s = {","    // Tailable cursor options","      numberOfRetries: numberOfRetries","    , tailableRetryInterval: tailableRetryInterval","    , currentNumberOfRetries: currentNumberOfRetries","    // State","    , state: state","    // Stream options","    , streamOptions: streamOptions","    // BSON","    , bson: bson","    // Namespace","    , ns: ns","    // Command","    , cmd: cmd","    // Options","    , options: options","    // Topology","    , topology: topology","    // Topology options","    , topologyOptions: topologyOptions","    // Promise library","    , promiseLibrary: promiseLibrary","    // Current doc","    , currentDoc: null","  }","","  // Translate correctly","  if(self.s.options.noCursorTimeout == true) {","    self.addCursorFlag('noCursorTimeout', true);","  }","","  // Set the sort value","  this.sortValue = self.s.cmd.sort;","","  // Get the batchSize","  var batchSize = cmd.cursor && cmd.cursor.batchSize","    ? cmd.cursor && cmd.cursor.batchSize","    : (options.cursor && options.cursor.batchSize ? options.cursor.batchSize : 1000);","","  // Set the batchSize","  this.setCursorBatchSize(batchSize);","}","","/**"," * Cursor stream data event, fired for each document in the cursor."," *"," * @event Cursor#data"," * @type {object}"," */","","/**"," * Cursor stream end event"," *"," * @event Cursor#end"," * @type {null}"," */","","/**"," * Cursor stream close event"," *"," * @event Cursor#close"," * @type {null}"," */","","/**"," * Cursor stream readable event"," *"," * @event Cursor#readable"," * @type {null}"," */","","// Inherit from Readable","inherits(Cursor, Readable);","","// Map core cursor _next method so we can apply mapping","CoreCursor.prototype._next = CoreCursor.prototype.next;","","for(var name in CoreCursor.prototype) {","  Cursor.prototype[name] = CoreCursor.prototype[name];","}","","var define = Cursor.define = new Define('Cursor', Cursor, true);","","/**"," * Check if there is any document still available in the cursor"," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.hasNext = function(callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') {","    if(self.s.currentDoc){","      return callback(null, true);","    } else {","      return nextObject(self, function(err, doc) {","        if(!doc) return callback(null, false);","        self.s.currentDoc = doc;","        callback(null, true);","      });","    }","  }","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    if(self.s.currentDoc){","      resolve(true);","    } else {","      nextObject(self, function(err, doc) {","        if(self.s.state == Cursor.CLOSED || self.isDead()) return resolve(false);","        if(err) return reject(err);","        if(!doc) return resolve(false);","        self.s.currentDoc = doc;","        resolve(true);","      });","    }","  });","}","","define.classMethod('hasNext', {callback: true, promise:true});","","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.next = function(callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') {","    // Return the currentDoc if someone called hasNext first","    if(self.s.currentDoc) {","      var doc = self.s.currentDoc;","      self.s.currentDoc = null;","      return callback(null, doc);","    }","","    // Return the next object","    return nextObject(self, callback)","  }","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    // Return the currentDoc if someone called hasNext first","    if(self.s.currentDoc) {","      var doc = self.s.currentDoc;","      self.s.currentDoc = null;","      return resolve(doc);","    }","","    nextObject(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('next', {callback: true, promise:true});","","/**"," * Set the cursor query"," * @method"," * @param {object} filter The filter object used for the cursor."," * @return {Cursor}"," */","Cursor.prototype.filter = function(filter) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.query = filter;","  return this;","}","","define.classMethod('filter', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the cursor maxScan"," * @method"," * @param {object} maxScan Constrains the query to only scan the specified number of documents when fulfilling the query"," * @return {Cursor}"," */","Cursor.prototype.maxScan = function(maxScan) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.maxScan = maxScan;","  return this;","}","","define.classMethod('maxScan', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the cursor hint"," * @method"," * @param {object} hint If specified, then the query system will only consider plans using the hinted index."," * @return {Cursor}"," */","Cursor.prototype.hint = function(hint) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.hint = hint;","  return this;","}","","define.classMethod('hint', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the cursor min"," * @method"," * @param {object} min Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order."," * @return {Cursor}"," */","Cursor.prototype.min = function(min) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.min = min;","  return this;","}","","define.classMethod('min', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the cursor max"," * @method"," * @param {object} max Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order."," * @return {Cursor}"," */","Cursor.prototype.max = function(max) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.max = max;","  return this;","}","","define.classMethod('max', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the cursor returnKey"," * @method"," * @param {object} returnKey Only return the index field or fields for the results of the query. If $returnKey is set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields. Use one of the following forms:"," * @return {Cursor}"," */","Cursor.prototype.returnKey = function(value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.returnKey = value;","  return this;","}","","define.classMethod('returnKey', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the cursor showRecordId"," * @method"," * @param {object} showRecordId The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find."," * @return {Cursor}"," */","Cursor.prototype.showRecordId = function(value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.showDiskLoc = value;","  return this;","}","","define.classMethod('showRecordId', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the cursor snapshot"," * @method"," * @param {object} snapshot The $snapshot operator prevents the cursor from returning a document more than once because an intervening write operation results in a move of the document."," * @return {Cursor}"," */","Cursor.prototype.snapshot = function(value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.snapshot = value;","  return this;","}","","define.classMethod('snapshot', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set a node.js specific cursor option"," * @method"," * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval']."," * @param {object} value The field value."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.setCursorOption = function(field, value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(fields.indexOf(field) == -1) throw MongoError.create({message: f(\"option %s not a supported option %s\", field, fields), driver:true });","  this.s[field] = value;","  if(field == 'numberOfRetries')","    this.s.currentNumberOfRetries = value;","  return this;","}","","define.classMethod('setCursorOption', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Add a cursor flag to the cursor"," * @method"," * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial']."," * @param {boolean} value The flag boolean value."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.addCursorFlag = function(flag, value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(flags.indexOf(flag) == -1) throw MongoError.create({message: f(\"flag %s not a supported flag %s\", flag, flags), driver:true });","  if(typeof value != 'boolean') throw MongoError.create({message: f(\"flag %s must be a boolean value\", flag), driver:true});","  this.s.cmd[flag] = value;","  return this;","}","","define.classMethod('addCursorFlag', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Add a query modifier to the cursor query"," * @method"," * @param {string} name The query modifier (must start with $, such as $orderby etc)"," * @param {boolean} value The flag boolean value."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.addQueryModifier = function(name, value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(name[0] != '$') throw MongoError.create({message: f(\"%s is not a valid query modifier\"), driver:true});","  // Strip of the $","  var field = name.substr(1);","  // Set on the command","  this.s.cmd[field] = value;","  // Deal with the special case for sort","  if(field == 'orderby') this.s.cmd.sort = this.s.cmd[field];","  return this;","}","","define.classMethod('addQueryModifier', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Add a comment to the cursor query allowing for tracking the comment in the log."," * @method"," * @param {string} value The comment attached to this query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.comment = function(value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.comment = value;","  return this;","}","","define.classMethod('comment', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)"," * @method"," * @param {number} value Number of milliseconds to wait before aborting the tailed query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.maxAwaitTimeMS = function(value) {","  if(typeof value != 'number') throw MongoError.create({message: \"maxAwaitTimeMS must be a number\", driver:true});","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.maxAwaitTimeMS = value;","  return this;","}","","define.classMethod('maxAwaitTimeMS', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)"," * @method"," * @param {number} value Number of milliseconds to wait before aborting the query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.maxTimeMS = function(value) {","  if(typeof value != 'number') throw MongoError.create({message: \"maxTimeMS must be a number\", driver:true});","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.maxTimeMS = value;","  return this;","}","","define.classMethod('maxTimeMS', {callback: false, promise:false, returns: [Cursor]});","","Cursor.prototype.maxTimeMs = Cursor.prototype.maxTimeMS;","","define.classMethod('maxTimeMs', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Sets a field projection for the query."," * @method"," * @param {object} value The field projection object."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.project = function(value) {","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  this.s.cmd.fields = value;","  return this;","}","","define.classMethod('project', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Sets the sort order of the cursor query."," * @method"," * @param {(string|array|object)} keyOrList The key or keys set for the sort."," * @param {number} [direction] The direction of the sorting (1 or -1)."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.sort = function(keyOrList, direction) {","  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support sorting\", driver:true});","  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  var order = keyOrList;","","  // We have an array of arrays, we need to preserve the order of the sort","  // so we will us a Map","  if(Array.isArray(order) && Array.isArray(order[0])) {","    order = new Map(order.map(function(x) {","      var value = [x[0], null];","      if(x[1] == 'asc') {","        value[1] = 1;","      } else if(x[1] == 'desc') {","        value[1] = -1;","      } else if(x[1] == 1 || x[1] == -1) {","        value[1] = x[1];","      } else {","        throw new MongoError(\"Illegal sort clause, must be of the form [['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\");","      }","","      return value;","    }));","  }","","  if(direction != null) {","    order = [[keyOrList, direction]];","  }","","  this.s.cmd.sort = order;","  this.sortValue = order;","  return this;","}","","define.classMethod('sort', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the batch size for the cursor."," * @method"," * @param {number} value The batchSize for the cursor."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.batchSize = function(value) {","  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support batchSize\", driver:true});","  if(this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(typeof value != 'number') throw MongoError.create({message: \"batchSize requires an integer\", driver:true});","  this.s.cmd.batchSize = value;","  this.setCursorBatchSize(value);","  return this;","}","","define.classMethod('batchSize', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the collation options for the cursor."," * @method"," * @param {object} value The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields)."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.collation = function(value) {","  this.s.cmd.collation = value;","  return this;","}","","define.classMethod('collation', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the limit for the cursor."," * @method"," * @param {number} value The limit for the cursor query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.limit = function(value) {","  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support limit\", driver:true});","  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(typeof value != 'number') throw MongoError.create({message: \"limit requires an integer\", driver:true});","  this.s.cmd.limit = value;","  // this.cursorLimit = value;","  this.setCursorLimit(value);","  return this;","}","","define.classMethod('limit', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Set the skip for the cursor."," * @method"," * @param {number} value The skip for the cursor query."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.skip = function(value) {","  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support skip\", driver:true});","  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(typeof value != 'number') throw MongoError.create({message: \"skip requires an integer\", driver:true});","  this.s.cmd.skip = value;","  this.setCursorSkip(value);","  return this;","}","","define.classMethod('skip', {callback: false, promise:false, returns: [Cursor]});","","/**"," * The callback format for results"," * @callback Cursor~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {(object|null|boolean)} result The result object if the command was executed successfully."," */","","/**"," * Clone the cursor"," * @function external:CoreCursor#clone"," * @return {Cursor}"," */","","/**"," * Resets the cursor"," * @function external:CoreCursor#rewind"," * @return {null}"," */","","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @deprecated"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.nextObject = Cursor.prototype.next;","","var nextObject = function(self, callback) {","  if(self.s.state == Cursor.CLOSED || self.isDead && self.isDead()) return handleCallback(callback, MongoError.create({message: \"Cursor is closed\", driver:true}));","  if(self.s.state == Cursor.INIT && self.s.cmd.sort) {","    try {","      self.s.cmd.sort = formattedOrderClause(self.s.cmd.sort);","    } catch(err) {","      return handleCallback(callback, err);","    }","  }","","  // Get the next object","  self._next(function(err, doc) {","    self.s.state = Cursor.OPEN;","    if(err) return handleCallback(callback, err);","    handleCallback(callback, null, doc);","  });","}","","define.classMethod('nextObject', {callback: true, promise:true});","","// Trampoline emptying the number of retrieved items","// without incurring a nextTick operation","var loop = function(self, callback) {","  // No more items we are done","  if(self.bufferedCount() == 0) return;","  // Get the next document","  self._next(callback);","  // Loop","  return loop;","}","","Cursor.prototype.next = Cursor.prototype.nextObject;","","define.classMethod('next', {callback: true, promise:true});","","/**"," * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,"," * not all of the elements will be iterated if this cursor had been previouly accessed."," * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike"," * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements"," * at any given time if batch size is specified. Otherwise, the caller is responsible"," * for making sure that the entire result can fit the memory."," * @method"," * @deprecated"," * @param {Cursor~resultCallback} callback The result callback."," * @throws {MongoError}"," * @return {null}"," */","Cursor.prototype.each = function(callback) {","  // Rewind cursor state","  this.rewind();","  // Set current cursor to INIT","  this.s.state = Cursor.INIT;","  // Run the query","  _each(this, callback);","};","","define.classMethod('each', {callback: true, promise:false});","","// Run the each loop","var _each = function(self, callback) {","  if(!callback) throw MongoError.create({message: 'callback is mandatory', driver:true});","  if(self.isNotified()) return;","  if(self.s.state == Cursor.CLOSED || self.isDead()) {","    return handleCallback(callback, MongoError.create({message: \"Cursor is closed\", driver:true}));","  }","","  if(self.s.state == Cursor.INIT) self.s.state = Cursor.OPEN;","","  // Define function to avoid global scope escape","  var fn = null;","  // Trampoline all the entries","  if(self.bufferedCount() > 0) {","    while(fn = loop(self, callback)) fn(self, callback);","    _each(self, callback);","  } else {","    self.next(function(err, item) {","      if(err) return handleCallback(callback, err);","      if(item == null) {","        self.s.state = Cursor.CLOSED;","        return handleCallback(callback, null, null);","      }","","      if(handleCallback(callback, null, item) == false) return;","      _each(self, callback);","    })","  }","}","","/**"," * The callback format for the forEach iterator method"," * @callback Cursor~iteratorCallback"," * @param {Object} doc An emitted document for the iterator"," */","","/**"," * The callback error format for the forEach iterator method"," * @callback Cursor~endCallback"," * @param {MongoError} error An error instance representing the error during the execution."," */","","/**"," * Iterates over all the documents for this cursor using the iterator, callback pattern."," * @method"," * @param {Cursor~iteratorCallback} iterator The iteration callback."," * @param {Cursor~endCallback} callback The end callback."," * @throws {MongoError}"," * @return {null}"," */","Cursor.prototype.forEach = function(iterator, callback) {","  this.each(function(err, doc){","    if(err) { callback(err); return false; }","    if(doc != null) { iterator(doc); return true; }","    if(doc == null && callback) {","      var internalCallback = callback;","      callback = null;","      internalCallback(null);","      return false;","    }","  });","}","","define.classMethod('forEach', {callback: true, promise:false});","","/**"," * Set the ReadPreference for the cursor."," * @method"," * @param {(string|ReadPreference)} readPreference The new read preference for the cursor."," * @throws {MongoError}"," * @return {Cursor}"," */","Cursor.prototype.setReadPreference = function(r) {","  if(this.s.state != Cursor.INIT) throw MongoError.create({message: 'cannot change cursor readPreference after cursor has been accessed', driver:true});","  if(r instanceof ReadPreference) {","    this.s.options.readPreference = new CoreReadPreference(r.mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});","  } else if(typeof r == 'string'){","    this.s.options.readPreference = new CoreReadPreference(r);","  } else if(r instanceof CoreReadPreference) {","    this.s.options.readPreference = r;","  }","","  return this;","}","","define.classMethod('setReadPreference', {callback: false, promise:false, returns: [Cursor]});","","/**"," * The callback format for results"," * @callback Cursor~toArrayResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object[]} documents All the documents the satisfy the cursor."," */","","/**"," * Returns an array of documents. The caller is responsible for making sure that there"," * is enough memory to store the results. Note that the array only contain partial"," * results when this cursor had been previouly accessed. In that case,"," * cursor.rewind() can be used to reset the cursor."," * @method"," * @param {Cursor~toArrayResultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.toArray = function(callback) {","  var self = this;","  if(self.s.options.tailable) throw MongoError.create({message: 'Tailable cursor cannot be converted to array', driver:true});","","  // Execute using callback","  if(typeof callback == 'function') return toArray(self, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    toArray(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var toArray = function(self, callback) {","  var items = [];","","  // Reset cursor","  self.rewind();","  self.s.state = Cursor.INIT;","","  // Fetch all the documents","  var fetchDocs = function() {","    self._next(function(err, doc) {","      if(err) return handleCallback(callback, err);","      if(doc == null) {","        self.s.state = Cursor.CLOSED;","        return handleCallback(callback, null, items);","      }","","      // Add doc to items","      items.push(doc)","","      // Get all buffered objects","      if(self.bufferedCount() > 0) {","        var docs = self.readBufferedDocuments(self.bufferedCount())","","        // Transform the doc if transform method added","        if(self.s.transforms && typeof self.s.transforms.doc == 'function') {","          docs = docs.map(self.s.transforms.doc);","        }","","        push.apply(items, docs);","      }","","      // Attempt a fetch","      fetchDocs();","    })","  }","","  fetchDocs();","}","","define.classMethod('toArray', {callback: true, promise:true});","","/**"," * The callback format for results"," * @callback Cursor~countResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {number} count The count of documents."," */","","/**"," * Get the count of documents for this cursor"," * @method"," * @param {boolean} [applySkipLimit=true] Should the count command apply limit and skip settings on the cursor or in the passed in options."," * @param {object} [options=null] Optional settings."," * @param {number} [options.skip=null] The number of documents to skip."," * @param {number} [options.limit=null] The maximum amounts to count before aborting."," * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query."," * @param {string} [options.hint=null] An index name hint for the query."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Cursor~countResultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.count = function(applySkipLimit, opts, callback) {","  var self = this;","  if(self.s.cmd.query == null) throw MongoError.create({message: \"count can only be used with find command\", driver:true});","  if(typeof opts == 'function') callback = opts, opts = {};","  opts = opts || {};","","  // Execute using callback","  if(typeof callback == 'function') return count(self, applySkipLimit, opts, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    count(self, applySkipLimit, opts, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var count = function(self, applySkipLimit, opts, callback) {","  if(typeof applySkipLimit == 'function') {","    callback = applySkipLimit;","    applySkipLimit = true;","  }","","  if(applySkipLimit) {","    if(typeof self.cursorSkip() == 'number') opts.skip = self.cursorSkip();","    if(typeof self.cursorLimit() == 'number') opts.limit = self.cursorLimit();","  }","","  // Command","  var delimiter = self.s.ns.indexOf('.');","","  var command = {","    'count': self.s.ns.substr(delimiter+1), 'query': self.s.cmd.query","  }","","  if(typeof opts.maxTimeMS == 'number') {","    command.maxTimeMS = opts.maxTimeMS;","  } else if(self.s.cmd && typeof self.s.cmd.maxTimeMS == 'number') {","    command.maxTimeMS = self.s.cmd.maxTimeMS;","  }","","  // Merge in any options","  if(opts.skip) command.skip = opts.skip;","  if(opts.limit) command.limit = opts.limit;","  if(self.s.options.hint) command.hint = self.s.options.hint;","","  // Execute the command","  self.topology.command(f(\"%s.$cmd\", self.s.ns.substr(0, delimiter))","    , command, function(err, result) {","      callback(err, result ? result.result.n : null)","    });","}","","define.classMethod('count', {callback: true, promise:true});","","/**"," * Close the cursor, sending a KillCursor command and emitting close."," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.close = function(callback) {","  this.s.state = Cursor.CLOSED;","  // Kill the cursor","  this.kill();","  // Emit the close event for the cursor","  this.emit('close');","  // Callback if provided","  if(typeof callback == 'function') return handleCallback(callback, null, this);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve) {","    resolve();","  });","}","","define.classMethod('close', {callback: true, promise:true});","","/**"," * Map all documents using the provided function"," * @method"," * @param {function} [transform] The mapping transformation method."," * @return {Cursor}"," */","Cursor.prototype.map = function(transform) {","  this.cursorState.transforms = { doc: transform };","  return this;","}","","define.classMethod('map', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Is the cursor closed"," * @method"," * @return {boolean}"," */","Cursor.prototype.isClosed = function() {","  return this.isDead();","}","","define.classMethod('isClosed', {callback: false, promise:false, returns: [Boolean]});","","Cursor.prototype.destroy = function(err) {","  if(err) this.emit('error', err);","  this.pause();","  this.close();","}","","define.classMethod('destroy', {callback: false, promise:false});","","/**"," * Return a modified Readable stream including a possible transform method."," * @method"," * @param {object} [options=null] Optional settings."," * @param {function} [options.transform=null] A transformation method applied to each document emitted by the stream."," * @return {Cursor}"," */","Cursor.prototype.stream = function(options) {","  this.s.streamOptions = options || {};","  return this;","}","","define.classMethod('stream', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Execute the explain for the cursor"," * @method"," * @param {Cursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","Cursor.prototype.explain = function(callback) {","  var self = this;","  this.s.cmd.explain = true;","","  // Do we have a readConcern","  if(this.s.cmd.readConcern) {","    delete this.s.cmd['readConcern'];","  }","","  // Execute using callback","  if(typeof callback == 'function') return this._next(callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self._next(function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('explain', {callback: true, promise:true});","","Cursor.prototype._read = function() {","  var self = this;","  if(self.s.state == Cursor.CLOSED || self.isDead()) {","    return self.push(null);","  }","","  // Get the next item","  self.nextObject(function(err, result) {","    if(err) {","      if(self.listeners('error') && self.listeners('error').length > 0) {","        self.emit('error', err);","      }","      if(!self.isDead()) self.close();","","      // Emit end event","      self.emit('end');","      return self.emit('finish');","    }","","    // If we provided a transformation method","    if(typeof self.s.streamOptions.transform == 'function' && result != null) {","      return self.push(self.s.streamOptions.transform(result));","    }","","    // If we provided a map function","    if(self.cursorState.transforms && typeof self.cursorState.transforms.doc == 'function' && result != null) {","      return self.push(self.cursorState.transforms.doc(result));","    }","","    // Return the result","    self.push(result);","  });","}","","Object.defineProperty(Cursor.prototype, 'readPreference', {","  enumerable:true,","  get: function() {","    if (!this || !this.s) {","      return null;","    }","","    return this.s.options.readPreference;","  }","});","","Object.defineProperty(Cursor.prototype, 'namespace', {","  enumerable: true,","  get: function() {","    if (!this || !this.s) {","      return null;","    }","","    // TODO: refactor this logic into core","    var ns = this.s.ns || '';","    var firstDot = ns.indexOf('.');","    if (firstDot < 0) {","      return {","        database: this.s.ns,","        collection: ''","      };","    }","    return {","      database: ns.substr(0, firstDot),","      collection: ns.substr(firstDot + 1)","    };","  }","});","","/**"," * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null."," * @function external:Readable#read"," * @param {number} size Optional argument to specify how much data to read."," * @return {(String | Buffer | null)}"," */","","/**"," * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects."," * @function external:Readable#setEncoding"," * @param {string} encoding The encoding to use."," * @return {null}"," */","","/**"," * This method will cause the readable stream to resume emitting data events."," * @function external:Readable#resume"," * @return {null}"," */","","/**"," * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer."," * @function external:Readable#pause"," * @return {null}"," */","","/**"," * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream."," * @function external:Readable#pipe"," * @param {Writable} destination The destination for writing data"," * @param {object} [options] Pipe options"," * @return {null}"," */","","/**"," * This method will remove the hooks set up for a previous pipe() call."," * @function external:Readable#unpipe"," * @param {Writable} [destination] The destination for writing data"," * @return {null}"," */","","/**"," * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party."," * @function external:Readable#unshift"," * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue."," * @return {null}"," */","","/**"," * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)"," * @function external:Readable#wrap"," * @param {Stream} stream An \"old style\" readable stream."," * @return {null}"," */","","Cursor.INIT = 0;","Cursor.OPEN = 1;","Cursor.CLOSED = 2;","Cursor.GET_MORE = 3;","","module.exports = Cursor;",""],"l":{"3":1,"54":1,"55":1,"56":1,"100":1,"101":0,"102":0,"103":0,"104":0,"107":0,"108":0,"109":0,"112":0,"115":0,"116":0,"121":0,"124":0,"152":0,"153":0,"157":0,"160":0,"165":0,"197":1,"200":1,"202":1,"203":19,"206":1,"215":1,"216":0,"219":0,"220":0,"221":0,"223":0,"224":0,"225":0,"226":0,"232":0,"233":0,"234":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"247":1,"256":1,"257":0,"260":0,"262":0,"263":0,"264":0,"265":0,"269":0,"273":0,"275":0,"276":0,"277":0,"278":0,"281":0,"282":0,"283":0,"288":1,"296":1,"297":0,"298":0,"299":0,"302":1,"310":1,"311":0,"312":0,"313":0,"316":1,"324":1,"325":0,"326":0,"327":0,"330":1,"338":1,"339":0,"340":0,"341":0,"344":1,"352":1,"353":0,"354":0,"355":0,"358":1,"366":1,"367":0,"368":0,"369":0,"372":1,"380":1,"381":0,"382":0,"383":0,"386":1,"394":1,"395":0,"396":0,"397":0,"400":1,"410":1,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"419":1,"429":1,"430":0,"431":0,"432":0,"433":0,"434":0,"437":1,"447":1,"448":0,"449":0,"451":0,"453":0,"455":0,"456":0,"459":1,"468":1,"469":0,"470":0,"471":0,"474":1,"483":1,"484":0,"485":0,"486":0,"487":0,"490":1,"499":1,"500":0,"501":0,"502":0,"503":0,"506":1,"508":1,"510":1,"519":1,"520":0,"521":0,"522":0,"525":1,"535":1,"536":0,"537":0,"538":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"552":0,"555":0,"559":0,"560":0,"563":0,"564":0,"565":0,"568":1,"577":1,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"586":1,"595":1,"596":0,"597":0,"600":1,"609":1,"610":0,"611":0,"612":0,"613":0,"615":0,"616":0,"619":1,"628":1,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"637":1,"666":1,"668":1,"669":0,"670":0,"671":0,"672":0,"674":0,"679":0,"680":0,"681":0,"682":0,"686":1,"690":1,"692":0,"694":0,"696":0,"699":1,"701":1,"716":1,"718":0,"720":0,"722":0,"725":1,"728":1,"729":0,"730":0,"731":0,"732":0,"735":0,"738":0,"740":0,"741":0,"742":0,"744":0,"745":0,"746":0,"747":0,"748":0,"751":0,"752":0,"777":1,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"790":1,"799":1,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"809":0,"812":1,"831":1,"832":0,"833":0,"836":0,"839":0,"840":0,"841":0,"842":0,"847":1,"848":0,"851":0,"852":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"864":0,"867":0,"868":0,"871":0,"872":0,"875":0,"879":0,"883":0,"886":1,"908":1,"909":0,"910":0,"911":0,"912":0,"915":0,"918":0,"919":0,"920":0,"921":0,"926":1,"927":0,"928":0,"929":0,"932":0,"933":0,"934":0,"938":0,"940":0,"944":0,"945":0,"946":0,"947":0,"951":0,"952":0,"953":0,"956":0,"958":0,"962":1,"970":1,"971":0,"973":0,"975":0,"977":0,"979":0,"980":0,"984":1,"992":1,"993":0,"994":0,"997":1,"1004":1,"1005":0,"1008":1,"1010":1,"1011":0,"1012":0,"1013":0,"1016":1,"1025":1,"1026":0,"1027":0,"1030":1,"1038":1,"1039":0,"1040":0,"1043":0,"1044":0,"1048":0,"1051":0,"1052":0,"1053":0,"1054":0,"1059":1,"1061":1,"1062":0,"1063":0,"1064":0,"1068":0,"1069":0,"1070":0,"1071":0,"1073":0,"1076":0,"1077":0,"1081":0,"1082":0,"1086":0,"1087":0,"1091":0,"1095":1,"1098":1,"1099":1,"1102":0,"1106":1,"1109":1,"1110":1,"1114":0,"1115":0,"1116":0,"1117":0,"1122":0,"1184":1,"1185":1,"1186":1,"1187":1,"1189":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[1,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":33}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":24},"end":{"line":14,"column":42}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":51}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":9},"end":{"line":40,"column":20}}},"5":{"name":"(anonymous_5)","line":46,"loc":{"start":{"line":46,"column":48},"end":{"line":46,"column":72}}},"6":{"name":"(anonymous_6)","line":65,"loc":{"start":{"line":65,"column":58},"end":{"line":65,"column":78}}},"7":{"name":"checkCollectionName","line":92,"loc":{"start":{"line":92,"column":26},"end":{"line":92,"column":72}}},"8":{"name":"(anonymous_8)","line":116,"loc":{"start":{"line":116,"column":21},"end":{"line":116,"column":61}}},"9":{"name":"(anonymous_9)","line":123,"loc":{"start":{"line":123,"column":21},"end":{"line":123,"column":32}}},"10":{"name":"(anonymous_10)","line":135,"loc":{"start":{"line":135,"column":14},"end":{"line":135,"column":30}}},"11":{"name":"normalizeHintField","line":160,"loc":{"start":{"line":160,"column":25},"end":{"line":160,"column":59}}},"12":{"name":"(anonymous_12)","line":168,"loc":{"start":{"line":168,"column":17},"end":{"line":168,"column":33}}},"13":{"name":"(anonymous_13)","line":187,"loc":{"start":{"line":187,"column":24},"end":{"line":187,"column":46}}},"14":{"name":"(anonymous_14)","line":198,"loc":{"start":{"line":198,"column":24},"end":{"line":198,"column":36}}},"15":{"name":"(anonymous_15)","line":210,"loc":{"start":{"line":210,"column":21},"end":{"line":210,"column":33}}},"16":{"name":"(anonymous_16)","line":221,"loc":{"start":{"line":221,"column":17},"end":{"line":221,"column":31}}},"17":{"name":"(anonymous_17)","line":232,"loc":{"start":{"line":232,"column":34},"end":{"line":232,"column":49}}},"18":{"name":"(anonymous_18)","line":236,"loc":{"start":{"line":236,"column":19},"end":{"line":236,"column":50}}},"19":{"name":"(anonymous_19)","line":238,"loc":{"start":{"line":238,"column":22},"end":{"line":238,"column":34}}},"20":{"name":"(anonymous_20)","line":245,"loc":{"start":{"line":245,"column":22},"end":{"line":245,"column":58}}},"21":{"name":"(anonymous_21)","line":253,"loc":{"start":{"line":253,"column":19},"end":{"line":253,"column":44}}},"22":{"name":"(anonymous_22)","line":262,"loc":{"start":{"line":262,"column":23},"end":{"line":262,"column":48}}},"23":{"name":"(anonymous_23)","line":287,"loc":{"start":{"line":287,"column":20},"end":{"line":287,"column":45}}},"24":{"name":"assign","line":299,"loc":{"start":{"line":299,"column":45},"end":{"line":299,"column":69}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":62}},"2":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":16}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":46}},"5":{"start":{"line":9,"column":23},"end":{"line":9,"column":46}},"6":{"start":{"line":10,"column":2},"end":{"line":10,"column":14}},"7":{"start":{"line":14,"column":0},"end":{"line":34,"column":1}},"8":{"start":{"line":15,"column":2},"end":{"line":15,"column":14}},"9":{"start":{"line":16,"column":2},"end":{"line":20,"column":3}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":30}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":19}},"12":{"start":{"line":22,"column":2},"end":{"line":31,"column":3}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":114}},"14":{"start":{"line":24,"column":9},"end":{"line":31,"column":3}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":55}},"16":{"start":{"line":26,"column":9},"end":{"line":31,"column":3}},"17":{"start":{"line":27,"column":4},"end":{"line":27,"column":38}},"18":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"19":{"start":{"line":29,"column":6},"end":{"line":29,"column":114}},"20":{"start":{"line":33,"column":2},"end":{"line":33,"column":17}},"21":{"start":{"line":37,"column":0},"end":{"line":44,"column":1}},"22":{"start":{"line":38,"column":2},"end":{"line":43,"column":5}},"23":{"start":{"line":41,"column":6},"end":{"line":41,"column":18}},"24":{"start":{"line":46,"column":0},"end":{"line":63,"column":2}},"25":{"start":{"line":47,"column":2},"end":{"line":47,"column":49}},"26":{"start":{"line":49,"column":2},"end":{"line":62,"column":3}},"27":{"start":{"line":53,"column":6},"end":{"line":53,"column":15}},"28":{"start":{"line":57,"column":6},"end":{"line":57,"column":16}},"29":{"start":{"line":59,"column":6},"end":{"line":61,"column":63}},"30":{"start":{"line":65,"column":0},"end":{"line":90,"column":2}},"31":{"start":{"line":66,"column":2},"end":{"line":66,"column":19}},"32":{"start":{"line":67,"column":2},"end":{"line":67,"column":36}},"33":{"start":{"line":67,"column":24},"end":{"line":67,"column":36}},"34":{"start":{"line":68,"column":2},"end":{"line":87,"column":3}},"35":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"36":{"start":{"line":70,"column":6},"end":{"line":70,"column":18}},"37":{"start":{"line":73,"column":4},"end":{"line":79,"column":5}},"38":{"start":{"line":74,"column":6},"end":{"line":78,"column":7}},"39":{"start":{"line":75,"column":8},"end":{"line":75,"column":34}},"40":{"start":{"line":77,"column":8},"end":{"line":77,"column":68}},"41":{"start":{"line":80,"column":9},"end":{"line":87,"column":3}},"42":{"start":{"line":81,"column":4},"end":{"line":81,"column":24}},"43":{"start":{"line":82,"column":9},"end":{"line":87,"column":3}},"44":{"start":{"line":83,"column":4},"end":{"line":83,"column":27}},"45":{"start":{"line":85,"column":4},"end":{"line":86,"column":86}},"46":{"start":{"line":89,"column":2},"end":{"line":89,"column":17}},"47":{"start":{"line":92,"column":0},"end":{"line":114,"column":2}},"48":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"49":{"start":{"line":94,"column":4},"end":{"line":94,"column":52}},"50":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"51":{"start":{"line":98,"column":4},"end":{"line":98,"column":52}},"52":{"start":{"line":101,"column":2},"end":{"line":104,"column":3}},"53":{"start":{"line":103,"column":4},"end":{"line":103,"column":57}},"54":{"start":{"line":106,"column":2},"end":{"line":108,"column":3}},"55":{"start":{"line":107,"column":4},"end":{"line":107,"column":67}},"56":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"57":{"start":{"line":112,"column":4},"end":{"line":112,"column":72}},"58":{"start":{"line":116,"column":0},"end":{"line":128,"column":1}},"59":{"start":{"line":117,"column":2},"end":{"line":125,"column":3}},"60":{"start":{"line":118,"column":4},"end":{"line":118,"column":32}},"61":{"start":{"line":118,"column":25},"end":{"line":118,"column":32}},"62":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"63":{"start":{"line":120,"column":6},"end":{"line":120,"column":77}},"64":{"start":{"line":123,"column":4},"end":{"line":123,"column":48}},"65":{"start":{"line":123,"column":34},"end":{"line":123,"column":44}},"66":{"start":{"line":124,"column":4},"end":{"line":124,"column":17}},"67":{"start":{"line":127,"column":2},"end":{"line":127,"column":14}},"68":{"start":{"line":135,"column":0},"end":{"line":155,"column":1}},"69":{"start":{"line":136,"column":2},"end":{"line":136,"column":43}},"70":{"start":{"line":136,"column":30},"end":{"line":136,"column":43}},"71":{"start":{"line":138,"column":2},"end":{"line":138,"column":67}},"72":{"start":{"line":139,"column":2},"end":{"line":139,"column":57}},"73":{"start":{"line":142,"column":2},"end":{"line":144,"column":9}},"74":{"start":{"line":146,"column":2},"end":{"line":152,"column":3}},"75":{"start":{"line":147,"column":4},"end":{"line":151,"column":5}},"76":{"start":{"line":148,"column":6},"end":{"line":148,"column":34}},"77":{"start":{"line":154,"column":2},"end":{"line":154,"column":11}},"78":{"start":{"line":160,"column":0},"end":{"line":179,"column":2}},"79":{"start":{"line":161,"column":2},"end":{"line":161,"column":23}},"80":{"start":{"line":163,"column":2},"end":{"line":176,"column":3}},"81":{"start":{"line":164,"column":4},"end":{"line":164,"column":21}},"82":{"start":{"line":165,"column":9},"end":{"line":176,"column":3}},"83":{"start":{"line":166,"column":4},"end":{"line":166,"column":19}},"84":{"start":{"line":168,"column":4},"end":{"line":170,"column":7}},"85":{"start":{"line":169,"column":6},"end":{"line":169,"column":27}},"86":{"start":{"line":171,"column":9},"end":{"line":176,"column":3}},"87":{"start":{"line":172,"column":4},"end":{"line":172,"column":19}},"88":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"89":{"start":{"line":174,"column":6},"end":{"line":174,"column":35}},"90":{"start":{"line":178,"column":2},"end":{"line":178,"column":19}},"91":{"start":{"line":187,"column":0},"end":{"line":230,"column":1}},"92":{"start":{"line":188,"column":2},"end":{"line":188,"column":21}},"93":{"start":{"line":189,"column":2},"end":{"line":189,"column":19}},"94":{"start":{"line":190,"column":2},"end":{"line":190,"column":11}},"95":{"start":{"line":193,"column":2},"end":{"line":225,"column":3}},"96":{"start":{"line":195,"column":4},"end":{"line":195,"column":40}},"97":{"start":{"line":196,"column":4},"end":{"line":196,"column":31}},"98":{"start":{"line":197,"column":9},"end":{"line":225,"column":3}},"99":{"start":{"line":198,"column":4},"end":{"line":217,"column":7}},"100":{"start":{"line":199,"column":6},"end":{"line":216,"column":7}},"101":{"start":{"line":201,"column":8},"end":{"line":201,"column":34}},"102":{"start":{"line":202,"column":8},"end":{"line":202,"column":25}},"103":{"start":{"line":203,"column":13},"end":{"line":216,"column":7}},"104":{"start":{"line":205,"column":8},"end":{"line":205,"column":47}},"105":{"start":{"line":206,"column":8},"end":{"line":206,"column":36}},"106":{"start":{"line":207,"column":13},"end":{"line":216,"column":7}},"107":{"start":{"line":209,"column":8},"end":{"line":209,"column":30}},"108":{"start":{"line":210,"column":8},"end":{"line":213,"column":11}},"109":{"start":{"line":211,"column":10},"end":{"line":211,"column":39}},"110":{"start":{"line":212,"column":10},"end":{"line":212,"column":30}},"111":{"start":{"line":218,"column":9},"end":{"line":225,"column":3}},"112":{"start":{"line":220,"column":4},"end":{"line":220,"column":36}},"113":{"start":{"line":221,"column":4},"end":{"line":224,"column":7}},"114":{"start":{"line":222,"column":6},"end":{"line":222,"column":49}},"115":{"start":{"line":223,"column":6},"end":{"line":223,"column":40}},"116":{"start":{"line":227,"column":2},"end":{"line":229,"column":3}},"117":{"start":{"line":232,"column":0},"end":{"line":234,"column":1}},"118":{"start":{"line":233,"column":2},"end":{"line":233,"column":65}},"119":{"start":{"line":236,"column":0},"end":{"line":243,"column":1}},"120":{"start":{"line":237,"column":2},"end":{"line":237,"column":24}},"121":{"start":{"line":238,"column":2},"end":{"line":240,"column":5}},"122":{"start":{"line":239,"column":4},"end":{"line":239,"column":33}},"123":{"start":{"line":242,"column":2},"end":{"line":242,"column":22}},"124":{"start":{"line":245,"column":0},"end":{"line":251,"column":1}},"125":{"start":{"line":246,"column":2},"end":{"line":248,"column":3}},"126":{"start":{"line":247,"column":4},"end":{"line":247,"column":60}},"127":{"start":{"line":247,"column":30},"end":{"line":247,"column":60}},"128":{"start":{"line":250,"column":2},"end":{"line":250,"column":17}},"129":{"start":{"line":253,"column":0},"end":{"line":259,"column":1}},"130":{"start":{"line":254,"column":2},"end":{"line":256,"column":3}},"131":{"start":{"line":255,"column":4},"end":{"line":255,"column":32}},"132":{"start":{"line":258,"column":2},"end":{"line":258,"column":16}},"133":{"start":{"line":262,"column":0},"end":{"line":285,"column":1}},"134":{"start":{"line":263,"column":2},"end":{"line":274,"column":3}},"135":{"start":{"line":276,"column":2},"end":{"line":282,"column":3}},"136":{"start":{"line":277,"column":4},"end":{"line":281,"column":5}},"137":{"start":{"line":278,"column":6},"end":{"line":278,"column":48}},"138":{"start":{"line":280,"column":6},"end":{"line":280,"column":34}},"139":{"start":{"line":284,"column":2},"end":{"line":284,"column":16}},"140":{"start":{"line":287,"column":0},"end":{"line":296,"column":1}},"141":{"start":{"line":288,"column":2},"end":{"line":288,"column":26}},"142":{"start":{"line":290,"column":2},"end":{"line":292,"column":3}},"143":{"start":{"line":291,"column":4},"end":{"line":291,"column":70}},"144":{"start":{"line":291,"column":34},"end":{"line":291,"column":70}},"145":{"start":{"line":295,"column":2},"end":{"line":295,"column":23}},"146":{"start":{"line":299,"column":0},"end":{"line":321,"column":1}},"147":{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},"148":{"start":{"line":301,"column":4},"end":{"line":301,"column":67}},"149":{"start":{"line":304,"column":2},"end":{"line":304,"column":26}},"150":{"start":{"line":305,"column":2},"end":{"line":319,"column":3}},"151":{"start":{"line":306,"column":4},"end":{"line":306,"column":34}},"152":{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},"153":{"start":{"line":308,"column":6},"end":{"line":308,"column":15}},"154":{"start":{"line":311,"column":4},"end":{"line":311,"column":52}},"155":{"start":{"line":312,"column":4},"end":{"line":318,"column":5}},"156":{"start":{"line":313,"column":6},"end":{"line":313,"column":41}},"157":{"start":{"line":314,"column":6},"end":{"line":314,"column":70}},"158":{"start":{"line":315,"column":6},"end":{"line":317,"column":7}},"159":{"start":{"line":316,"column":8},"end":{"line":316,"column":42}},"160":{"start":{"line":320,"column":2},"end":{"line":320,"column":12}},"161":{"start":{"line":323,"column":0},"end":{"line":323,"column":38}},"162":{"start":{"line":324,"column":0},"end":{"line":324,"column":36}},"163":{"start":{"line":325,"column":0},"end":{"line":325,"column":44}},"164":{"start":{"line":326,"column":0},"end":{"line":326,"column":36}},"165":{"start":{"line":327,"column":0},"end":{"line":327,"column":46}},"166":{"start":{"line":328,"column":0},"end":{"line":328,"column":50}},"167":{"start":{"line":329,"column":0},"end":{"line":329,"column":26}},"168":{"start":{"line":330,"column":0},"end":{"line":330,"column":52}},"169":{"start":{"line":331,"column":0},"end":{"line":331,"column":46}},"170":{"start":{"line":332,"column":0},"end":{"line":332,"column":48}},"171":{"start":{"line":333,"column":0},"end":{"line":333,"column":40}},"172":{"start":{"line":334,"column":0},"end":{"line":334,"column":42}},"173":{"start":{"line":335,"column":0},"end":{"line":335,"column":28}},"174":{"start":{"line":336,"column":0},"end":{"line":336,"column":36}},"175":{"start":{"line":337,"column":0},"end":{"line":337,"column":38}},"176":{"start":{"line":338,"column":0},"end":{"line":338,"column":24}},"177":{"start":{"line":339,"column":0},"end":{"line":339,"column":46}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":9},"end":{"line":24,"column":9}},{"start":{"line":24,"column":9},"end":{"line":24,"column":9}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":9}},{"start":{"line":26,"column":9},"end":{"line":26,"column":9}}]},"5":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":13}},{"start":{"line":26,"column":17},"end":{"line":26,"column":47}},{"start":{"line":26,"column":51},"end":{"line":26,"column":71}}]},"6":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":15},"end":{"line":27,"column":21}},{"start":{"line":27,"column":25},"end":{"line":27,"column":37}}]},"7":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"8":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":12}},{"start":{"line":28,"column":16},"end":{"line":28,"column":39}}]},"9":{"line":49,"type":"switch","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":21}},{"start":{"line":51,"column":4},"end":{"line":51,"column":15}},{"start":{"line":52,"column":4},"end":{"line":53,"column":15}},{"start":{"line":54,"column":4},"end":{"line":54,"column":22}},{"start":{"line":55,"column":4},"end":{"line":55,"column":16}},{"start":{"line":56,"column":4},"end":{"line":57,"column":16}},{"start":{"line":58,"column":4},"end":{"line":61,"column":63}}]},"10":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"12":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"13":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"14":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":9},"end":{"line":80,"column":9}},{"start":{"line":80,"column":9},"end":{"line":80,"column":9}}]},"15":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":12},"end":{"line":80,"column":29}},{"start":{"line":80,"column":33},"end":{"line":80,"column":61}}]},"16":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":9},"end":{"line":82,"column":9}},{"start":{"line":82,"column":9},"end":{"line":82,"column":9}}]},"17":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"18":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"19":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":5},"end":{"line":97,"column":20}},{"start":{"line":97,"column":24},"end":{"line":97,"column":58}}]},"20":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"21":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":5},"end":{"line":101,"column":38}},{"start":{"line":102,"column":6},"end":{"line":102,"column":64}}]},"22":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"23":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"24":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"25":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"26":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":22},"end":{"line":120,"column":51}},{"start":{"line":120,"column":55},"end":{"line":120,"column":76}}]},"27":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":2},"end":{"line":136,"column":2}},{"start":{"line":136,"column":2},"end":{"line":136,"column":2}}]},"28":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":21}},{"start":{"line":138,"column":25},"end":{"line":138,"column":37}},{"start":{"line":138,"column":41},"end":{"line":138,"column":57}},{"start":{"line":138,"column":61},"end":{"line":138,"column":66}}]},"29":{"line":142,"type":"cond-expr","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":24}},{"start":{"line":144,"column":6},"end":{"line":144,"column":8}}]},"30":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"31":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":9},"end":{"line":165,"column":9}},{"start":{"line":165,"column":9},"end":{"line":165,"column":9}}]},"32":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":9},"end":{"line":171,"column":9}},{"start":{"line":171,"column":9},"end":{"line":171,"column":9}}]},"33":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":12},"end":{"line":171,"column":24}},{"start":{"line":171,"column":28},"end":{"line":171,"column":51}}]},"34":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"35":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":9},"end":{"line":197,"column":9}},{"start":{"line":197,"column":9},"end":{"line":197,"column":9}}]},"36":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"37":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":13},"end":{"line":203,"column":13}},{"start":{"line":203,"column":13},"end":{"line":203,"column":13}}]},"38":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":35},"end":{"line":205,"column":39}},{"start":{"line":205,"column":43},"end":{"line":205,"column":44}}]},"39":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":26},"end":{"line":206,"column":30}},{"start":{"line":206,"column":34},"end":{"line":206,"column":35}}]},"40":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":13},"end":{"line":207,"column":13}},{"start":{"line":207,"column":13},"end":{"line":207,"column":13}}]},"41":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":9},"end":{"line":218,"column":9}},{"start":{"line":218,"column":9},"end":{"line":218,"column":9}}]},"42":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":247,"column":4}},{"start":{"line":247,"column":4},"end":{"line":247,"column":4}}]},"43":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"44":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"45":{"line":299,"type":"cond-expr","locations":[{"start":{"line":299,"column":29},"end":{"line":299,"column":42}},{"start":{"line":299,"column":45},"end":{"line":321,"column":1}}]},"46":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":2},"end":{"line":300,"column":2}},{"start":{"line":300,"column":2},"end":{"line":300,"column":2}}]},"47":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":26}},{"start":{"line":300,"column":30},"end":{"line":300,"column":45}}]},"48":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"49":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":8},"end":{"line":307,"column":32}},{"start":{"line":307,"column":36},"end":{"line":307,"column":55}}]},"50":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":6},"end":{"line":315,"column":6}},{"start":{"line":315,"column":6},"end":{"line":315,"column":6}}]},"51":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":10},"end":{"line":315,"column":28}},{"start":{"line":315,"column":32},"end":{"line":315,"column":47}}]}},"code":["\"use strict\";","","var MongoError = require('mongodb-core').MongoError,","  ReadPreference = require('./read_preference'),","  CoreReadPreference = require('mongodb-core').ReadPreference;","","var shallowClone = function(obj) {","  var copy = {};","  for(var name in obj) copy[name] = obj[name];","  return copy;","}","","// Figure out the read preference","var getReadPreference = function(options) {","  var r = null","  if(options.readPreference) {","    r = options.readPreference","  } else {","    return options;","  }","","  if(r instanceof ReadPreference) {","    options.readPreference = new CoreReadPreference(r.mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});","  } else if(typeof r == 'string') {","    options.readPreference = new CoreReadPreference(r);","  } else if(r && !(r instanceof ReadPreference) && typeof r == 'object') {","    var mode = r.mode || r.preference;","    if (mode && typeof mode == 'string') {","      options.readPreference = new CoreReadPreference(mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});","    }","  }","","  return options;","}","","// Set simple property","var getSingleProperty = function(obj, name, value) {","  Object.defineProperty(obj, name, {","    enumerable:true,","    get: function() {","      return value","    }","  });","}","","var formatSortValue = exports.formatSortValue = function(sortDirection) {","  var value = (\"\" + sortDirection).toLowerCase();","","  switch (value) {","    case 'ascending':","    case 'asc':","    case '1':","      return 1;","    case 'descending':","    case 'desc':","    case '-1':","      return -1;","    default:","      throw new Error(\"Illegal sort clause, must be of the form \"","                    + \"[['field1', '(ascending|descending)'], \"","                    + \"['field2', '(ascending|descending)']]\");","  }","};","","var formattedOrderClause = exports.formattedOrderClause = function(sortValue) {","  var orderBy = {};","  if(sortValue == null) return null;","  if (Array.isArray(sortValue)) {","    if(sortValue.length === 0) {","      return null;","    }","","    for(var i = 0; i < sortValue.length; i++) {","      if(sortValue[i].constructor == String) {","        orderBy[sortValue[i]] = 1;","      } else {","        orderBy[sortValue[i][0]] = formatSortValue(sortValue[i][1]);","      }","    }","  } else if(sortValue != null && typeof sortValue == 'object') {","    orderBy = sortValue;","  } else if (typeof sortValue == 'string') {","    orderBy[sortValue] = 1;","  } else {","    throw new Error(\"Illegal sort clause, must be of the form \" +","      \"[['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\");","  }","","  return orderBy;","};","","var checkCollectionName = function checkCollectionName (collectionName) {","  if('string' !== typeof collectionName) {","    throw Error(\"collection name must be a String\");","  }","","  if(!collectionName || collectionName.indexOf('..') != -1) {","    throw Error(\"collection names cannot be empty\");","  }","","  if(collectionName.indexOf('$') != -1 &&","      collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null) {","    throw Error(\"collection names must not contain '$'\");","  }","","  if(collectionName.match(/^\\.|\\.$/) != null) {","    throw Error(\"collection names must not start or end with '.'\");","  }","","  // Validate that we are not passing 0x00 in the colletion name","  if(!!~collectionName.indexOf(\"\\x00\")) {","    throw new Error(\"collection names cannot contain a null character\");","  }","};","","var handleCallback = function(callback, err, value1, value2) {","  try {","    if(callback == null) return;","    if(callback) {","      return value2 ? callback(err, value1, value2) :  callback(err, value1);","    }","  } catch(err) {","    process.nextTick(function() { throw err; });","    return false;","  }","","  return true;","}","","/**"," * Wrap a Mongo error document in an Error instance"," * @ignore"," * @api private"," */","var toError = function(error) {","  if (error instanceof Error) return error;","","  var msg = error.err || error.errmsg || error.errMessage || error;","  var e = MongoError.create({message: msg, driver:true});","","  // Get all object keys","  var keys = typeof error == 'object'","    ? Object.keys(error)","    : [];","","  for(var i = 0; i < keys.length; i++) {","    try {","      e[keys[i]] = error[keys[i]];","    } catch(err) {","      // continue","    }","  }","","  return e;","}","","/**"," * @ignore"," */","var normalizeHintField = function normalizeHintField(hint) {","  var finalHint = null;","","  if(typeof hint == 'string') {","    finalHint = hint;","  } else if(Array.isArray(hint)) {","    finalHint = {};","","    hint.forEach(function(param) {","      finalHint[param] = 1;","    });","  } else if(hint != null && typeof hint == 'object') {","    finalHint = {};","    for (var name in hint) {","      finalHint[name] = hint[name];","    }","  }","","  return finalHint;","};","","/**"," * Create index name based on field spec"," *"," * @ignore"," * @api private"," */","var parseIndexOptions = function(fieldOrSpec) {","  var fieldHash = {};","  var indexes = [];","  var keys;","","  // Get all the fields accordingly","  if('string' == typeof fieldOrSpec) {","    // 'type'","    indexes.push(fieldOrSpec + '_' + 1);","    fieldHash[fieldOrSpec] = 1;","  } else if(Array.isArray(fieldOrSpec)) {","    fieldOrSpec.forEach(function(f) {","      if('string' == typeof f) {","        // [{location:'2d'}, 'type']","        indexes.push(f + '_' + 1);","        fieldHash[f] = 1;","      } else if(Array.isArray(f)) {","        // [['location', '2d'],['type', 1]]","        indexes.push(f[0] + '_' + (f[1] || 1));","        fieldHash[f[0]] = f[1] || 1;","      } else if(isObject(f)) {","        // [{location:'2d'}, {type:1}]","        keys = Object.keys(f);","        keys.forEach(function(k) {","          indexes.push(k + '_' + f[k]);","          fieldHash[k] = f[k];","        });","      } else {","        // undefined (ignore)","      }","    });","  } else if(isObject(fieldOrSpec)) {","    // {location:'2d', type:1}","    keys = Object.keys(fieldOrSpec);","    keys.forEach(function(key) {","      indexes.push(key + '_' + fieldOrSpec[key]);","      fieldHash[key] = fieldOrSpec[key];","    });","  }","","  return {","    name: indexes.join(\"_\"), keys: keys, fieldHash: fieldHash","  }","}","","var isObject = exports.isObject = function (arg) {","  return '[object Object]' == Object.prototype.toString.call(arg)","}","","var debugOptions = function(debugFields, options) {","  var finaloptions = {};","  debugFields.forEach(function(n) {","    finaloptions[n] = options[n];","  });","","  return finaloptions;","}","","var decorateCommand = function(command, options, exclude) {","  for(var name in options) {","    if(exclude[name] == null) command[name] = options[name];","  }","","  return command;","}","","var mergeOptions = function(target, source) {","  for(var name in source) {","    target[name] = source[name];","  }","","  return target;","}","","// Merge options with translation","var translateOptions = function(target, source) {","  var translations = {","    // SSL translation options","    'sslCA': 'ca', 'sslCRL': 'crl', 'sslValidate': 'rejectUnauthorized', 'sslKey': 'key', ","    'sslCert': 'cert', 'sslPass': 'passphrase',","    // SocketTimeout translation options","    'socketTimeoutMS': 'socketTimeout', 'connectTimeoutMS': 'connectionTimeout',","    // Replicaset options","    'replicaSet': 'setName', 'rs_name': 'setName', 'secondaryAcceptableLatencyMS': 'acceptableLatency',","    'connectWithNoPrimary': 'secondaryOnlyConnectionAllowed',","    // Mongos options","    'acceptableLatencyMS': 'localThresholdMS'","  }","","  for(var name in source) {","    if(translations[name]) {","      target[translations[name]] = source[name];","    } else {","      target[name] = source[name];","    }","  }","","  return target;","}","","var filterOptions = function(options, names) {","  var filterOptions =  {};","","  for(var name in options) {","    if(names.indexOf(name) != -1) filterOptions[name] = options[name];","  }","","  // Filtered options","  return filterOptions;","}","","// Object.assign method or polyfille","var assign = Object.assign ? Object.assign : function assign(target) {","  if (target === undefined || target === null) {","    throw new TypeError('Cannot convert first argument to object');","  }","","  var to = Object(target);","  for (var i = 1; i < arguments.length; i++) {","    var nextSource = arguments[i];","    if (nextSource === undefined || nextSource === null) {","      continue;","    }","","    var keysArray = Object.keys(Object(nextSource));","    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {","      var nextKey = keysArray[nextIndex];","      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);","      if (desc !== undefined && desc.enumerable) {","        to[nextKey] = nextSource[nextKey];","      }","    }","  }","  return to;","}","","exports.filterOptions = filterOptions;","exports.mergeOptions = mergeOptions;","exports.translateOptions = translateOptions;","exports.shallowClone = shallowClone;","exports.getSingleProperty = getSingleProperty;","exports.checkCollectionName = checkCollectionName;","exports.toError = toError;","exports.formattedOrderClause = formattedOrderClause;","exports.parseIndexOptions = parseIndexOptions;","exports.normalizeHintField = normalizeHintField;","exports.handleCallback = handleCallback;","exports.decorateCommand = decorateCommand;","exports.isObject = isObject;","exports.debugOptions = debugOptions;","exports.MAX_JS_INT = 0x20000000000000;","exports.assign = assign;","exports.getReadPreference = getReadPreference;",""],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"14":1,"15":0,"16":0,"17":0,"19":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"33":0,"37":1,"38":0,"41":0,"46":1,"47":0,"49":0,"53":0,"57":0,"59":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"73":0,"74":0,"75":0,"77":0,"80":0,"81":0,"82":0,"83":0,"85":0,"89":0,"92":1,"93":0,"94":0,"97":0,"98":0,"101":0,"103":0,"106":0,"107":0,"111":0,"112":0,"116":1,"117":0,"118":0,"119":0,"120":0,"123":0,"124":0,"127":0,"135":1,"136":0,"138":0,"139":0,"142":0,"146":0,"147":0,"148":0,"154":0,"160":1,"161":0,"163":0,"164":0,"165":0,"166":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"178":0,"187":1,"188":0,"189":0,"190":0,"193":0,"195":0,"196":0,"197":0,"198":0,"199":0,"201":0,"202":0,"203":0,"205":0,"206":0,"207":0,"209":0,"210":0,"211":0,"212":0,"218":0,"220":0,"221":0,"222":0,"223":0,"227":0,"232":1,"233":0,"236":1,"237":0,"238":0,"239":0,"242":0,"245":1,"246":0,"247":0,"250":0,"253":1,"254":0,"255":0,"258":0,"262":1,"263":0,"276":0,"277":0,"278":0,"280":0,"284":0,"287":1,"288":0,"290":0,"291":0,"295":0,"299":1,"300":0,"301":0,"304":0,"305":0,"306":0,"307":0,"308":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"320":0,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/read_preference.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/read_preference.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0,0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":45,"loc":{"start":{"line":45,"column":21},"end":{"line":45,"column":51}}},"2":{"name":"(anonymous_2)","line":76,"loc":{"start":{"line":76,"column":25},"end":{"line":76,"column":41}}},"3":{"name":"(anonymous_3)","line":90,"loc":{"start":{"line":90,"column":35},"end":{"line":90,"column":50}}},"4":{"name":"(anonymous_4)","line":98,"loc":{"start":{"line":98,"column":36},"end":{"line":98,"column":47}}},"5":{"name":"(anonymous_5)","line":115,"loc":{"start":{"line":115,"column":34},"end":{"line":115,"column":45}}}},"statementMap":{"1":{"start":{"line":45,"column":0},"end":{"line":67,"column":1}},"2":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"3":{"start":{"line":47,"column":4},"end":{"line":47,"column":51}},"4":{"start":{"line":50,"column":2},"end":{"line":50,"column":32}},"5":{"start":{"line":51,"column":2},"end":{"line":51,"column":19}},"6":{"start":{"line":52,"column":2},"end":{"line":52,"column":19}},"7":{"start":{"line":53,"column":2},"end":{"line":53,"column":26}},"8":{"start":{"line":56,"column":2},"end":{"line":61,"column":3}},"9":{"start":{"line":57,"column":4},"end":{"line":60,"column":5}},"10":{"start":{"line":58,"column":6},"end":{"line":58,"column":26}},"11":{"start":{"line":59,"column":6},"end":{"line":59,"column":23}},"12":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"13":{"start":{"line":65,"column":4},"end":{"line":65,"column":64}},"14":{"start":{"line":76,"column":0},"end":{"line":81,"column":1}},"15":{"start":{"line":77,"column":2},"end":{"line":80,"column":57}},"16":{"start":{"line":90,"column":0},"end":{"line":93,"column":1}},"17":{"start":{"line":91,"column":2},"end":{"line":91,"column":57}},"18":{"start":{"line":92,"column":2},"end":{"line":92,"column":39}},"19":{"start":{"line":98,"column":0},"end":{"line":110,"column":1}},"20":{"start":{"line":99,"column":2},"end":{"line":99,"column":32}},"21":{"start":{"line":101,"column":2},"end":{"line":103,"column":3}},"22":{"start":{"line":102,"column":4},"end":{"line":102,"column":31}},"23":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"24":{"start":{"line":106,"column":4},"end":{"line":106,"column":61}},"25":{"start":{"line":109,"column":2},"end":{"line":109,"column":16}},"26":{"start":{"line":115,"column":0},"end":{"line":117,"column":1}},"27":{"start":{"line":116,"column":2},"end":{"line":116,"column":25}},"28":{"start":{"line":122,"column":0},"end":{"line":122,"column":35}},"29":{"start":{"line":123,"column":0},"end":{"line":123,"column":54}},"30":{"start":{"line":124,"column":0},"end":{"line":124,"column":39}},"31":{"start":{"line":125,"column":0},"end":{"line":125,"column":58}},"32":{"start":{"line":126,"column":0},"end":{"line":126,"column":34}},"33":{"start":{"line":131,"column":0},"end":{"line":131,"column":32}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":5},"end":{"line":56,"column":9}},{"start":{"line":56,"column":13},"end":{"line":56,"column":36}},{"start":{"line":56,"column":40},"end":{"line":56,"column":60}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"5":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"6":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":5},"end":{"line":64,"column":17}},{"start":{"line":64,"column":21},"end":{"line":64,"column":53}}]},"7":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":10},"end":{"line":77,"column":41}},{"start":{"line":77,"column":45},"end":{"line":77,"column":86}},{"start":{"line":78,"column":7},"end":{"line":78,"column":40}},{"start":{"line":78,"column":44},"end":{"line":78,"column":87}},{"start":{"line":79,"column":7},"end":{"line":79,"column":38}},{"start":{"line":80,"column":7},"end":{"line":80,"column":20}},{"start":{"line":80,"column":24},"end":{"line":80,"column":38}},{"start":{"line":80,"column":42},"end":{"line":80,"column":55}}]},"8":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":40},"end":{"line":91,"column":44}},{"start":{"line":91,"column":47},"end":{"line":91,"column":56}}]},"9":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"10":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]}},"code":["\"use strict\";","","/**"," * @fileOverview The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is"," * used to construct connections."," *"," * @example"," * var Db = require('mongodb').Db,"," *   ReplSet = require('mongodb').ReplSet,"," *   Server = require('mongodb').Server,"," *   ReadPreference = require('mongodb').ReadPreference,"," *   test = require('assert');"," * // Connect using ReplSet"," * var server = new Server('localhost', 27017);"," * var db = new Db('test', new ReplSet([server]));"," * db.open(function(err, db) {"," *   test.equal(null, err);"," *   // Perform a read"," *   var cursor = db.collection('t').find({});"," *   cursor.setReadPreference(ReadPreference.PRIMARY);"," *   cursor.toArray(function(err, docs) {"," *     test.equal(null, err);"," *     db.close();"," *   });"," * });"," */","","/**"," * Creates a new ReadPreference instance"," *"," * Read Preferences"," *  - **ReadPreference.PRIMARY**, Read from primary only. All operations produce an error (throw an exception where applicable) if primary is unavailable. Cannot be combined with tags (This is the default.)."," *  - **ReadPreference.PRIMARY_PREFERRED**, Read from primary if available, otherwise a secondary."," *  - **ReadPreference.SECONDARY**, Read from secondary if available, otherwise error."," *  - **ReadPreference.SECONDARY_PREFERRED**, Read from a secondary if available, otherwise read from the primary."," *  - **ReadPreference.NEAREST**, All modes read from among the nearest candidates, but unlike other modes, NEAREST will include both the primary and all secondaries in the random selection."," *"," * @class"," * @param {string} mode The ReadPreference mode as listed above."," * @param {array|object} tags An object representing read preference tags."," * @param {object} [options] Additional read preference options"," * @param {number} [options.maxStalenessSeconds] Max Secondary Read Stalleness in Seconds"," * @return {ReadPreference} a ReadPreference instance."," */","var ReadPreference = function(mode, tags, options) {","  if(!(this instanceof ReadPreference)) {","    return new ReadPreference(mode, tags, options);","  }","","  this._type = 'ReadPreference';","  this.mode = mode;","  this.tags = tags;","  this.options =  options;","","  // If no tags were passed in","  if(tags && typeof tags == 'object' && !Array.isArray(tags)) {","    if(tags.maxStalenessSeconds) {","      this.options = tags;","      this.tags = null;","    }","  }","","  // Add the maxStalenessSeconds value to the read Preference","  if(this.options && this.options.maxStalenessSeconds) {","    this.maxStalenessSeconds = this.options.maxStalenessSeconds;","  }","}","","/**"," * Validate if a mode is legal"," *"," * @method"," * @param {string} mode The string representing the read preference mode."," * @return {boolean}"," */","ReadPreference.isValid = function(_mode) {","  return (_mode == ReadPreference.PRIMARY || _mode == ReadPreference.PRIMARY_PREFERRED","    || _mode == ReadPreference.SECONDARY || _mode == ReadPreference.SECONDARY_PREFERRED","    || _mode == ReadPreference.NEAREST","    || _mode == true || _mode == false || _mode == null);","}","","/**"," * Validate if a mode is legal"," *"," * @method"," * @param {string} mode The string representing the read preference mode."," * @return {boolean}"," */","ReadPreference.prototype.isValid = function(mode) {","  var _mode = typeof mode == 'string' ? mode : this.mode;","  return ReadPreference.isValid(_mode);","}","","/**"," * @ignore"," */","ReadPreference.prototype.toObject = function() {","  var object = {mode:this.mode};","","  if(this.tags != null) {","    object['tags'] = this.tags;","  }","","  if(this.maxStalenessSeconds) {","    object['maxStalenessSeconds'] = this.maxStalenessSeconds;","  }","","  return object;","}","","/**"," * @ignore"," */","ReadPreference.prototype.toJSON = function() {","  return this.toObject();","}","","/**"," * @ignore"," */","ReadPreference.PRIMARY = 'primary';","ReadPreference.PRIMARY_PREFERRED = 'primaryPreferred';","ReadPreference.SECONDARY = 'secondary';","ReadPreference.SECONDARY_PREFERRED = 'secondaryPreferred';","ReadPreference.NEAREST = 'nearest'","","/**"," * @ignore"," */","module.exports = ReadPreference;",""],"l":{"45":1,"46":0,"47":0,"50":0,"51":0,"52":0,"53":0,"56":0,"57":0,"58":0,"59":0,"64":0,"65":0,"76":1,"77":0,"90":1,"91":0,"92":0,"98":1,"99":0,"101":0,"102":0,"105":0,"106":0,"109":0,"115":1,"116":0,"122":1,"123":1,"124":1,"125":1,"126":1,"131":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/command_cursor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/command_cursor.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":19,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":57,"loc":{"start":{"line":57,"column":20},"end":{"line":57,"column":80}}},"2":{"name":"(anonymous_2)","line":152,"loc":{"start":{"line":152,"column":44},"end":{"line":152,"column":56}}},"3":{"name":"(anonymous_3)","line":176,"loc":{"start":{"line":176,"column":36},"end":{"line":176,"column":52}}},"4":{"name":"(anonymous_4)","line":192,"loc":{"start":{"line":192,"column":36},"end":{"line":192,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":9,"column":64}},"2":{"start":{"line":57,"column":0},"end":{"line":100,"column":1}},"3":{"start":{"line":58,"column":2},"end":{"line":58,"column":67}},"4":{"start":{"line":59,"column":2},"end":{"line":59,"column":33}},"5":{"start":{"line":60,"column":2},"end":{"line":60,"column":25}},"6":{"start":{"line":63,"column":2},"end":{"line":63,"column":23}},"7":{"start":{"line":66,"column":2},"end":{"line":66,"column":46}},"8":{"start":{"line":69,"column":2},"end":{"line":72,"column":3}},"9":{"start":{"line":70,"column":4},"end":{"line":71,"column":54}},"10":{"start":{"line":75,"column":2},"end":{"line":75,"column":42}},"11":{"start":{"line":78,"column":2},"end":{"line":99,"column":3}},"12":{"start":{"line":131,"column":0},"end":{"line":131,"column":34}},"13":{"start":{"line":134,"column":0},"end":{"line":136,"column":87}},"14":{"start":{"line":139,"column":0},"end":{"line":141,"column":1}},"15":{"start":{"line":140,"column":2},"end":{"line":140,"column":91}},"16":{"start":{"line":143,"column":0},"end":{"line":143,"column":85}},"17":{"start":{"line":152,"column":0},"end":{"line":165,"column":1}},"18":{"start":{"line":153,"column":2},"end":{"line":153,"column":128}},"19":{"start":{"line":153,"column":60},"end":{"line":153,"column":128}},"20":{"start":{"line":154,"column":2},"end":{"line":154,"column":159}},"21":{"start":{"line":154,"column":41},"end":{"line":154,"column":159}},"22":{"start":{"line":156,"column":2},"end":{"line":162,"column":3}},"23":{"start":{"line":157,"column":4},"end":{"line":157,"column":121}},"24":{"start":{"line":158,"column":9},"end":{"line":162,"column":3}},"25":{"start":{"line":159,"column":4},"end":{"line":159,"column":62}},"26":{"start":{"line":160,"column":9},"end":{"line":162,"column":3}},"27":{"start":{"line":161,"column":4},"end":{"line":161,"column":38}},"28":{"start":{"line":164,"column":2},"end":{"line":164,"column":14}},"29":{"start":{"line":167,"column":0},"end":{"line":167,"column":100}},"30":{"start":{"line":176,"column":0},"end":{"line":182,"column":1}},"31":{"start":{"line":177,"column":2},"end":{"line":177,"column":128}},"32":{"start":{"line":177,"column":60},"end":{"line":177,"column":128}},"33":{"start":{"line":178,"column":2},"end":{"line":178,"column":112}},"34":{"start":{"line":178,"column":31},"end":{"line":178,"column":112}},"35":{"start":{"line":179,"column":2},"end":{"line":179,"column":60}},"36":{"start":{"line":179,"column":24},"end":{"line":179,"column":60}},"37":{"start":{"line":180,"column":2},"end":{"line":180,"column":33}},"38":{"start":{"line":181,"column":2},"end":{"line":181,"column":14}},"39":{"start":{"line":184,"column":0},"end":{"line":184,"column":92}},"40":{"start":{"line":192,"column":0},"end":{"line":197,"column":1}},"41":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"42":{"start":{"line":194,"column":4},"end":{"line":194,"column":33}},"43":{"start":{"line":196,"column":2},"end":{"line":196,"column":14}},"44":{"start":{"line":199,"column":0},"end":{"line":199,"column":92}},"45":{"start":{"line":201,"column":0},"end":{"line":201,"column":62}},"46":{"start":{"line":203,"column":0},"end":{"line":203,"column":59}},"47":{"start":{"line":206,"column":0},"end":{"line":206,"column":62}},"48":{"start":{"line":207,"column":0},"end":{"line":207,"column":60}},"49":{"start":{"line":208,"column":0},"end":{"line":208,"column":63}},"50":{"start":{"line":209,"column":0},"end":{"line":209,"column":59}},"51":{"start":{"line":210,"column":0},"end":{"line":210,"column":60}},"52":{"start":{"line":211,"column":0},"end":{"line":211,"column":85}},"53":{"start":{"line":212,"column":0},"end":{"line":212,"column":63}},"54":{"start":{"line":213,"column":0},"end":{"line":213,"column":89}},"55":{"start":{"line":214,"column":0},"end":{"line":214,"column":96}},"56":{"start":{"line":307,"column":0},"end":{"line":307,"column":23}},"57":{"start":{"line":308,"column":0},"end":{"line":308,"column":23}},"58":{"start":{"line":309,"column":0},"end":{"line":309,"column":25}},"59":{"start":{"line":311,"column":0},"end":{"line":311,"column":31}}},"branchMap":{"1":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":15},"end":{"line":6,"column":41}},{"start":{"line":6,"column":45},"end":{"line":6,"column":80}}]},"2":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"3":{"line":70,"type":"cond-expr","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":20}},{"start":{"line":71,"column":23},"end":{"line":71,"column":53}}]},"4":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"5":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":5},"end":{"line":153,"column":41}},{"start":{"line":153,"column":45},"end":{"line":153,"column":58}}]},"6":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"8":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":9},"end":{"line":158,"column":9}},{"start":{"line":158,"column":9},"end":{"line":158,"column":9}}]},"9":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":9},"end":{"line":160,"column":9}},{"start":{"line":160,"column":9},"end":{"line":160,"column":9}}]},"10":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"11":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":5},"end":{"line":177,"column":41}},{"start":{"line":177,"column":45},"end":{"line":177,"column":58}}]},"12":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"13":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"14":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]}},"code":["\"use strict\";","","var inherits = require('util').inherits","  , ReadPreference = require('./read_preference')","  , MongoError = require('mongodb-core').MongoError","  , Readable = require('stream').Readable || require('readable-stream').Readable","  , Define = require('./metadata')","  , CoreCursor = require('./cursor')","  , CoreReadPreference = require('mongodb-core').ReadPreference;","","/**"," * @fileOverview The **CommandCursor** class is an internal class that embodies a"," * generalized cursor based on a MongoDB command allowing for iteration over the"," * results returned. It supports one by one document iteration, conversion to an"," * array or can be iterated as a Node 0.10.X or higher stream"," *"," * **CommandCursor Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('listCollectionsExample1');"," *   // Insert a bunch of documents"," *   col.insert([{a:1, b:1}"," *     , {a:2, b:2}, {a:3, b:3}"," *     , {a:4, b:4}], {w:1}, function(err, result) {"," *     test.equal(null, err);"," *"," *     // List the database collections available"," *     db.listCollections().toArray(function(err, items) {"," *       test.equal(null, err);"," *       db.close();"," *     });"," *   });"," * });"," */","","/**"," * Namespace provided by the browser."," * @external Readable"," */","","/**"," * Creates a new Command Cursor instance (INTERNAL TYPE, do not instantiate directly)"," * @class CommandCursor"," * @extends external:Readable"," * @fires CommandCursor#data"," * @fires CommandCursor#end"," * @fires CommandCursor#close"," * @fires CommandCursor#readable"," * @return {CommandCursor} an CommandCursor instance."," */","var CommandCursor = function(bson, ns, cmd, options, topology, topologyOptions) {","  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));","  var state = CommandCursor.INIT;","  var streamOptions = {};","","  // MaxTimeMS","  var maxTimeMS = null;","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Set up","  Readable.call(this, {objectMode: true});","","  // Internal state","  this.s = {","    // MaxTimeMS","      maxTimeMS: maxTimeMS","    // State","    , state: state","    // Stream options","    , streamOptions: streamOptions","    // BSON","    , bson: bson","    // Namespace","    , ns: ns","    // Command","    , cmd: cmd","    // Options","    , options: options","    // Topology","    , topology: topology","    // Topology Options","    , topologyOptions: topologyOptions","    // Promise library","    , promiseLibrary: promiseLibrary","  }","}","","/**"," * CommandCursor stream data event, fired for each document in the cursor."," *"," * @event CommandCursor#data"," * @type {object}"," */","","/**"," * CommandCursor stream end event"," *"," * @event CommandCursor#end"," * @type {null}"," */","","/**"," * CommandCursor stream close event"," *"," * @event CommandCursor#close"," * @type {null}"," */","","/**"," * CommandCursor stream readable event"," *"," * @event CommandCursor#readable"," * @type {null}"," */","","// Inherit from Readable","inherits(CommandCursor, Readable);","","// Set the methods to inherit from prototype","var methodsToInherit = ['_next', 'next', 'each', 'forEach', 'toArray'","  , 'rewind', 'bufferedCount', 'readBufferedDocuments', 'close', 'isClosed', 'kill', 'setCursorBatchSize'","  , '_find', '_getmore', '_killcursor', 'isDead', 'explain', 'isNotified', 'isKilled'];","","// Only inherit the types we need","for(var i = 0; i < methodsToInherit.length; i++) {","  CommandCursor.prototype[methodsToInherit[i]] = CoreCursor.prototype[methodsToInherit[i]];","}","","var define = CommandCursor.define = new Define('CommandCursor', CommandCursor, true);","","/**"," * Set the ReadPreference for the cursor."," * @method"," * @param {(string|ReadPreference)} readPreference The new read preference for the cursor."," * @throws {MongoError}"," * @return {Cursor}"," */","CommandCursor.prototype.setReadPreference = function(r) {","  if(this.s.state == CommandCursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(this.s.state != CommandCursor.INIT) throw MongoError.create({message: 'cannot change cursor readPreference after cursor has been accessed', driver:true});","","  if(r instanceof ReadPreference) {","    this.s.options.readPreference = new CoreReadPreference(r.mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});","  } else if(typeof r == 'string') {","    this.s.options.readPreference = new CoreReadPreference(r);","  } else if(r instanceof CoreReadPreference) {","    this.s.options.readPreference = r;","  }","","  return this;","}","","define.classMethod('setReadPreference', {callback: false, promise:false, returns: [CommandCursor]});","","/**"," * Set the batch size for the cursor."," * @method"," * @param {number} value The batchSize for the cursor."," * @throws {MongoError}"," * @return {CommandCursor}"," */","CommandCursor.prototype.batchSize = function(value) {","  if(this.s.state == CommandCursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});","  if(typeof value != 'number') throw MongoError.create({message: \"batchSize requires an integer\", driver:true});","  if(this.s.cmd.cursor) this.s.cmd.cursor.batchSize = value;","  this.setCursorBatchSize(value);","  return this;","}","","define.classMethod('batchSize', {callback: false, promise:false, returns: [CommandCursor]});","","/**"," * Add a maxTimeMS stage to the aggregation pipeline"," * @method"," * @param {number} value The state maxTimeMS value."," * @return {CommandCursor}"," */","CommandCursor.prototype.maxTimeMS = function(value) {","  if(this.s.topology.lastIsMaster().minWireVersion > 2) {","    this.s.cmd.maxTimeMS = value;","  }","  return this;","}","","define.classMethod('maxTimeMS', {callback: false, promise:false, returns: [CommandCursor]});","","CommandCursor.prototype.get = CommandCursor.prototype.toArray;","","define.classMethod('get', {callback: true, promise:false});","","// Inherited methods","define.classMethod('toArray', {callback: true, promise:true});","define.classMethod('each', {callback: true, promise:false});","define.classMethod('forEach', {callback: true, promise:false});","define.classMethod('next', {callback: true, promise:true});","define.classMethod('close', {callback: true, promise:true});","define.classMethod('isClosed', {callback: false, promise:false, returns: [Boolean]});","define.classMethod('rewind', {callback: false, promise:false});","define.classMethod('bufferedCount', {callback: false, promise:false, returns: [Number]});","define.classMethod('readBufferedDocuments', {callback: false, promise:false, returns: [Array]});","","/**"," * Get the next available document from the cursor, returns null if no more documents are available."," * @function CommandCursor.prototype.next"," * @param {CommandCursor~resultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback CommandCursor~toArrayResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object[]} documents All the documents the satisfy the cursor."," */","","/**"," * Returns an array of documents. The caller is responsible for making sure that there"," * is enough memory to store the results. Note that the array only contain partial"," * results when this cursor had been previouly accessed."," * @method CommandCursor.prototype.toArray"," * @param {CommandCursor~toArrayResultCallback} [callback] The result callback."," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * The callback format for results"," * @callback CommandCursor~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {(object|null)} result The result object if the command was executed successfully."," */","","/**"," * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,"," * not all of the elements will be iterated if this cursor had been previouly accessed."," * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike"," * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements"," * at any given time if batch size is specified. Otherwise, the caller is responsible"," * for making sure that the entire result can fit the memory."," * @method CommandCursor.prototype.each"," * @param {CommandCursor~resultCallback} callback The result callback."," * @throws {MongoError}"," * @return {null}"," */","","/**"," * Close the cursor, sending a KillCursor command and emitting close."," * @method CommandCursor.prototype.close"," * @param {CommandCursor~resultCallback} [callback] The result callback."," * @return {Promise} returns Promise if no callback passed"," */","","/**"," * Is the cursor closed"," * @method CommandCursor.prototype.isClosed"," * @return {boolean}"," */","","/**"," * Clone the cursor"," * @function CommandCursor.prototype.clone"," * @return {CommandCursor}"," */","","/**"," * Resets the cursor"," * @function CommandCursor.prototype.rewind"," * @return {CommandCursor}"," */","","/**"," * The callback format for the forEach iterator method"," * @callback CommandCursor~iteratorCallback"," * @param {Object} doc An emitted document for the iterator"," */","","/**"," * The callback error format for the forEach iterator method"," * @callback CommandCursor~endCallback"," * @param {MongoError} error An error instance representing the error during the execution."," */","","/*"," * Iterates over all the documents for this cursor using the iterator, callback pattern."," * @method CommandCursor.prototype.forEach"," * @param {CommandCursor~iteratorCallback} iterator The iteration callback."," * @param {CommandCursor~endCallback} callback The end callback."," * @throws {MongoError}"," * @return {null}"," */","","CommandCursor.INIT = 0;","CommandCursor.OPEN = 1;","CommandCursor.CLOSED = 2;","","module.exports = CommandCursor;",""],"l":{"3":1,"57":1,"58":0,"59":0,"60":0,"63":0,"66":0,"69":0,"70":0,"75":0,"78":0,"131":1,"134":1,"139":1,"140":19,"143":1,"152":1,"153":0,"154":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"164":0,"167":1,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"184":1,"192":1,"193":0,"194":0,"196":0,"199":1,"201":1,"203":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"307":1,"308":1,"309":1,"311":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/bulk/ordered.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/bulk/ordered.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":1,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":1,"171":0,"172":1,"173":1,"174":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":27},"end":{"line":24,"column":42}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":40},"end":{"line":36,"column":65}}},"3":{"name":"(anonymous_3)","line":62,"loc":{"start":{"line":62,"column":43},"end":{"line":62,"column":68}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":44},"end":{"line":88,"column":69}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":40},"end":{"line":99,"column":51}}},"6":{"name":"(anonymous_6)","line":111,"loc":{"start":{"line":111,"column":43},"end":{"line":111,"column":54}}},"7":{"name":"(anonymous_7)","line":134,"loc":{"start":{"line":134,"column":40},"end":{"line":134,"column":51}}},"8":{"name":"(anonymous_8)","line":151,"loc":{"start":{"line":151,"column":26},"end":{"line":151,"column":61}}},"9":{"name":"OrderedBulkOperation","line":208,"loc":{"start":{"line":208,"column":0},"end":{"line":208,"column":61}}},"10":{"name":"(anonymous_10)","line":294,"loc":{"start":{"line":294,"column":37},"end":{"line":294,"column":50}}},"11":{"name":"(anonymous_11)","line":361,"loc":{"start":{"line":361,"column":40},"end":{"line":361,"column":59}}},"12":{"name":"(anonymous_12)","line":374,"loc":{"start":{"line":374,"column":38},"end":{"line":374,"column":57}}},"13":{"name":"(anonymous_13)","line":389,"loc":{"start":{"line":389,"column":7},"end":{"line":389,"column":18}}},"14":{"name":"(anonymous_14)","line":396,"loc":{"start":{"line":396,"column":22},"end":{"line":396,"column":47}}},"15":{"name":"(anonymous_15)","line":404,"loc":{"start":{"line":404,"column":22},"end":{"line":404,"column":44}}},"16":{"name":"(anonymous_16)","line":489,"loc":{"start":{"line":489,"column":41},"end":{"line":489,"column":75}}},"17":{"name":"(anonymous_17)","line":512,"loc":{"start":{"line":512,"column":35},"end":{"line":512,"column":61}}},"18":{"name":"(anonymous_18)","line":513,"loc":{"start":{"line":513,"column":26},"end":{"line":513,"column":43}}},"19":{"name":"(anonymous_19)","line":526,"loc":{"start":{"line":526,"column":30},"end":{"line":526,"column":70}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":13,"column":49}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":63}},"3":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":18}},"5":{"start":{"line":36,"column":0},"end":{"line":52,"column":1}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":93}},"7":{"start":{"line":41,"column":2},"end":{"line":46,"column":3}},"8":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"9":{"start":{"line":51,"column":2},"end":{"line":51,"column":60}},"10":{"start":{"line":62,"column":0},"end":{"line":78,"column":1}},"11":{"start":{"line":64,"column":2},"end":{"line":64,"column":93}},"12":{"start":{"line":67,"column":2},"end":{"line":72,"column":3}},"13":{"start":{"line":75,"column":2},"end":{"line":75,"column":26}},"14":{"start":{"line":77,"column":2},"end":{"line":77,"column":60}},"15":{"start":{"line":88,"column":0},"end":{"line":90,"column":1}},"16":{"start":{"line":89,"column":2},"end":{"line":89,"column":33}},"17":{"start":{"line":99,"column":0},"end":{"line":102,"column":1}},"18":{"start":{"line":100,"column":2},"end":{"line":100,"column":33}},"19":{"start":{"line":101,"column":2},"end":{"line":101,"column":14}},"20":{"start":{"line":111,"column":0},"end":{"line":122,"column":1}},"21":{"start":{"line":113,"column":2},"end":{"line":116,"column":3}},"22":{"start":{"line":119,"column":2},"end":{"line":119,"column":26}},"23":{"start":{"line":121,"column":2},"end":{"line":121,"column":60}},"24":{"start":{"line":125,"column":0},"end":{"line":125,"column":84}},"25":{"start":{"line":134,"column":0},"end":{"line":145,"column":1}},"26":{"start":{"line":136,"column":2},"end":{"line":139,"column":3}},"27":{"start":{"line":142,"column":2},"end":{"line":142,"column":26}},"28":{"start":{"line":144,"column":2},"end":{"line":144,"column":60}},"29":{"start":{"line":148,"column":0},"end":{"line":148,"column":78}},"30":{"start":{"line":151,"column":0},"end":{"line":200,"column":1}},"31":{"start":{"line":153,"column":2},"end":{"line":155,"column":4}},"32":{"start":{"line":158,"column":2},"end":{"line":160,"column":2}},"33":{"start":{"line":159,"column":2},"end":{"line":159,"column":89}},"34":{"start":{"line":163,"column":2},"end":{"line":163,"column":99}},"35":{"start":{"line":163,"column":35},"end":{"line":163,"column":99}},"36":{"start":{"line":166,"column":2},"end":{"line":182,"column":3}},"37":{"start":{"line":170,"column":4},"end":{"line":170,"column":47}},"38":{"start":{"line":173,"column":4},"end":{"line":173,"column":68}},"39":{"start":{"line":176,"column":4},"end":{"line":176,"column":33}},"40":{"start":{"line":177,"column":4},"end":{"line":177,"column":38}},"41":{"start":{"line":180,"column":4},"end":{"line":180,"column":60}},"42":{"start":{"line":181,"column":4},"end":{"line":181,"column":77}},"43":{"start":{"line":184,"column":2},"end":{"line":186,"column":3}},"44":{"start":{"line":185,"column":4},"end":{"line":185,"column":90}},"45":{"start":{"line":189,"column":2},"end":{"line":196,"column":3}},"46":{"start":{"line":190,"column":4},"end":{"line":190,"column":60}},"47":{"start":{"line":192,"column":4},"end":{"line":192,"column":68}},"48":{"start":{"line":193,"column":4},"end":{"line":193,"column":50}},"49":{"start":{"line":194,"column":2},"end":{"line":194,"column":75}},"50":{"start":{"line":195,"column":4},"end":{"line":195,"column":52}},"51":{"start":{"line":199,"column":2},"end":{"line":199,"column":15}},"52":{"start":{"line":208,"column":0},"end":{"line":290,"column":1}},"53":{"start":{"line":209,"column":1},"end":{"line":209,"column":42}},"54":{"start":{"line":211,"column":1},"end":{"line":211,"column":22}},"55":{"start":{"line":214,"column":1},"end":{"line":214,"column":22}},"56":{"start":{"line":217,"column":1},"end":{"line":217,"column":26}},"57":{"start":{"line":220,"column":2},"end":{"line":220,"column":44}},"58":{"start":{"line":223,"column":1},"end":{"line":224,"column":62}},"59":{"start":{"line":225,"column":1},"end":{"line":226,"column":52}},"60":{"start":{"line":229,"column":2},"end":{"line":229,"column":85}},"61":{"start":{"line":232,"column":2},"end":{"line":232,"column":46}},"62":{"start":{"line":235,"column":2},"end":{"line":238,"column":3}},"63":{"start":{"line":236,"column":4},"end":{"line":237,"column":54}},"64":{"start":{"line":241,"column":2},"end":{"line":252,"column":4}},"65":{"start":{"line":255,"column":2},"end":{"line":289,"column":3}},"66":{"start":{"line":292,"column":0},"end":{"line":292,"column":107}},"67":{"start":{"line":294,"column":0},"end":{"line":352,"column":1}},"68":{"start":{"line":295,"column":2},"end":{"line":295,"column":31}},"69":{"start":{"line":298,"column":2},"end":{"line":299,"column":94}},"70":{"start":{"line":302,"column":2},"end":{"line":307,"column":3}},"71":{"start":{"line":305,"column":4},"end":{"line":305,"column":65}},"72":{"start":{"line":306,"column":4},"end":{"line":306,"column":61}},"73":{"start":{"line":310,"column":2},"end":{"line":316,"column":3}},"74":{"start":{"line":311,"column":4},"end":{"line":311,"column":61}},"75":{"start":{"line":312,"column":4},"end":{"line":312,"column":95}},"76":{"start":{"line":313,"column":4},"end":{"line":313,"column":52}},"77":{"start":{"line":314,"column":2},"end":{"line":314,"column":54}},"78":{"start":{"line":314,"column":19},"end":{"line":314,"column":54}},"79":{"start":{"line":315,"column":4},"end":{"line":315,"column":63}},"80":{"start":{"line":319,"column":2},"end":{"line":322,"column":3}},"81":{"start":{"line":320,"column":4},"end":{"line":320,"column":41}},"82":{"start":{"line":321,"column":4},"end":{"line":321,"column":61}},"83":{"start":{"line":325,"column":2},"end":{"line":330,"column":3}},"84":{"start":{"line":326,"column":4},"end":{"line":326,"column":37}},"85":{"start":{"line":327,"column":4},"end":{"line":327,"column":49}},"86":{"start":{"line":328,"column":2},"end":{"line":328,"column":54}},"87":{"start":{"line":328,"column":19},"end":{"line":328,"column":54}},"88":{"start":{"line":329,"column":4},"end":{"line":329,"column":63}},"89":{"start":{"line":333,"column":2},"end":{"line":339,"column":3}},"90":{"start":{"line":334,"column":4},"end":{"line":334,"column":99}},"91":{"start":{"line":334,"column":65},"end":{"line":334,"column":99}},"92":{"start":{"line":335,"column":4},"end":{"line":335,"column":66}},"93":{"start":{"line":336,"column":9},"end":{"line":339,"column":3}},"94":{"start":{"line":337,"column":4},"end":{"line":337,"column":117}},"95":{"start":{"line":337,"column":74},"end":{"line":337,"column":117}},"96":{"start":{"line":338,"column":4},"end":{"line":338,"column":75}},"97":{"start":{"line":341,"column":2},"end":{"line":348,"column":3}},"98":{"start":{"line":342,"column":4},"end":{"line":345,"column":5}},"99":{"start":{"line":343,"column":6},"end":{"line":343,"column":109}},"100":{"start":{"line":343,"column":71},"end":{"line":343,"column":109}},"101":{"start":{"line":344,"column":6},"end":{"line":344,"column":65}},"102":{"start":{"line":347,"column":4},"end":{"line":347,"column":11}},"103":{"start":{"line":351,"column":2},"end":{"line":351,"column":134}},"104":{"start":{"line":361,"column":0},"end":{"line":364,"column":1}},"105":{"start":{"line":362,"column":2},"end":{"line":362,"column":120}},"106":{"start":{"line":362,"column":90},"end":{"line":362,"column":120}},"107":{"start":{"line":363,"column":2},"end":{"line":363,"column":60}},"108":{"start":{"line":374,"column":0},"end":{"line":385,"column":1}},"109":{"start":{"line":375,"column":2},"end":{"line":377,"column":3}},"110":{"start":{"line":376,"column":4},"end":{"line":376,"column":65}},"111":{"start":{"line":380,"column":2},"end":{"line":382,"column":3}},"112":{"start":{"line":384,"column":2},"end":{"line":384,"column":40}},"113":{"start":{"line":387,"column":0},"end":{"line":392,"column":3}},"114":{"start":{"line":390,"column":4},"end":{"line":390,"column":31}},"115":{"start":{"line":396,"column":0},"end":{"line":467,"column":1}},"116":{"start":{"line":397,"column":2},"end":{"line":399,"column":3}},"117":{"start":{"line":398,"column":4},"end":{"line":398,"column":82}},"118":{"start":{"line":402,"column":2},"end":{"line":402,"column":37}},"119":{"start":{"line":404,"column":2},"end":{"line":426,"column":3}},"120":{"start":{"line":406,"column":2},"end":{"line":408,"column":3}},"121":{"start":{"line":407,"column":3},"end":{"line":407,"column":40}},"122":{"start":{"line":411,"column":4},"end":{"line":411,"column":23}},"123":{"start":{"line":411,"column":12},"end":{"line":411,"column":23}},"124":{"start":{"line":413,"column":4},"end":{"line":413,"column":85}},"125":{"start":{"line":414,"column":4},"end":{"line":416,"column":5}},"126":{"start":{"line":415,"column":6},"end":{"line":415,"column":84}},"127":{"start":{"line":420,"column":4},"end":{"line":422,"column":5}},"128":{"start":{"line":421,"column":6},"end":{"line":421,"column":121}},"129":{"start":{"line":425,"column":4},"end":{"line":425,"column":36}},"130":{"start":{"line":428,"column":2},"end":{"line":428,"column":36}},"131":{"start":{"line":429,"column":2},"end":{"line":431,"column":3}},"132":{"start":{"line":430,"column":4},"end":{"line":430,"column":52}},"133":{"start":{"line":434,"column":1},"end":{"line":436,"column":2}},"134":{"start":{"line":435,"column":2},"end":{"line":435,"column":47}},"135":{"start":{"line":439,"column":1},"end":{"line":441,"column":2}},"136":{"start":{"line":440,"column":2},"end":{"line":440,"column":40}},"137":{"start":{"line":444,"column":2},"end":{"line":446,"column":3}},"138":{"start":{"line":445,"column":4},"end":{"line":445,"column":39}},"139":{"start":{"line":449,"column":2},"end":{"line":451,"column":3}},"140":{"start":{"line":450,"column":4},"end":{"line":450,"column":49}},"141":{"start":{"line":453,"column":2},"end":{"line":466,"column":3}},"142":{"start":{"line":454,"column":4},"end":{"line":460,"column":5}},"143":{"start":{"line":455,"column":6},"end":{"line":455,"column":105}},"144":{"start":{"line":456,"column":11},"end":{"line":460,"column":5}},"145":{"start":{"line":457,"column":6},"end":{"line":457,"column":105}},"146":{"start":{"line":458,"column":11},"end":{"line":460,"column":5}},"147":{"start":{"line":459,"column":6},"end":{"line":459,"column":105}},"148":{"start":{"line":463,"column":4},"end":{"line":463,"column":15}},"149":{"start":{"line":465,"column":4},"end":{"line":465,"column":98}},"150":{"start":{"line":489,"column":0},"end":{"line":518,"column":1}},"151":{"start":{"line":490,"column":2},"end":{"line":490,"column":18}},"152":{"start":{"line":491,"column":2},"end":{"line":491,"column":71}},"153":{"start":{"line":491,"column":22},"end":{"line":491,"column":71}},"154":{"start":{"line":492,"column":2},"end":{"line":496,"column":3}},"155":{"start":{"line":493,"column":4},"end":{"line":493,"column":29}},"156":{"start":{"line":494,"column":8},"end":{"line":496,"column":3}},"157":{"start":{"line":495,"column":4},"end":{"line":495,"column":40}},"158":{"start":{"line":499,"column":2},"end":{"line":499,"column":66}},"159":{"start":{"line":499,"column":26},"end":{"line":499,"column":66}},"160":{"start":{"line":502,"column":2},"end":{"line":504,"column":3}},"161":{"start":{"line":503,"column":4},"end":{"line":503,"column":62}},"162":{"start":{"line":507,"column":2},"end":{"line":509,"column":2}},"163":{"start":{"line":508,"column":2},"end":{"line":508,"column":41}},"164":{"start":{"line":512,"column":2},"end":{"line":517,"column":5}},"165":{"start":{"line":513,"column":4},"end":{"line":516,"column":7}},"166":{"start":{"line":514,"column":6},"end":{"line":514,"column":33}},"167":{"start":{"line":514,"column":14},"end":{"line":514,"column":33}},"168":{"start":{"line":515,"column":6},"end":{"line":515,"column":17}},"169":{"start":{"line":520,"column":0},"end":{"line":520,"column":63}},"170":{"start":{"line":526,"column":0},"end":{"line":528,"column":1}},"171":{"start":{"line":527,"column":1},"end":{"line":527,"column":64}},"172":{"start":{"line":530,"column":0},"end":{"line":530,"column":68}},"173":{"start":{"line":531,"column":0},"end":{"line":531,"column":41}},"174":{"start":{"line":532,"column":0},"end":{"line":532,"column":43}}},"branchMap":{"1":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":61},"end":{"line":38,"column":84}},{"start":{"line":38,"column":87},"end":{"line":38,"column":92}}]},"2":{"line":64,"type":"cond-expr","locations":[{"start":{"line":64,"column":61},"end":{"line":64,"column":84}},{"start":{"line":64,"column":87},"end":{"line":64,"column":92}}]},"3":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"4":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"5":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"6":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":65}},{"start":{"line":167,"column":8},"end":{"line":167,"column":101}},{"start":{"line":168,"column":8},"end":{"line":168,"column":49}}]},"7":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"8":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"9":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":29},"end":{"line":209,"column":31}},{"start":{"line":209,"column":34},"end":{"line":209,"column":41}}]},"10":{"line":223,"type":"cond-expr","locations":[{"start":{"line":224,"column":6},"end":{"line":224,"column":44}},{"start":{"line":224,"column":48},"end":{"line":224,"column":60}}]},"11":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":25},"end":{"line":223,"column":45}},{"start":{"line":223,"column":49},"end":{"line":223,"column":87}}]},"12":{"line":225,"type":"cond-expr","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":44}},{"start":{"line":226,"column":47},"end":{"line":226,"column":51}}]},"13":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":25},"end":{"line":225,"column":45}},{"start":{"line":225,"column":49},"end":{"line":225,"column":87}}]},"14":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"15":{"line":236,"type":"cond-expr","locations":[{"start":{"line":237,"column":6},"end":{"line":237,"column":20}},{"start":{"line":237,"column":23},"end":{"line":237,"column":53}}]},"16":{"line":288,"type":"cond-expr","locations":[{"start":{"line":288,"column":87},"end":{"line":288,"column":119}},{"start":{"line":288,"column":122},"end":{"line":288,"column":127}}]},"17":{"line":298,"type":"cond-expr","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":40}},{"start":{"line":299,"column":43},"end":{"line":299,"column":93}}]},"18":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"19":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":18}},{"start":{"line":302,"column":22},"end":{"line":302,"column":36}},{"start":{"line":303,"column":8},"end":{"line":303,"column":21}},{"start":{"line":303,"column":25},"end":{"line":303,"column":40}},{"start":{"line":304,"column":8},"end":{"line":304,"column":21}},{"start":{"line":304,"column":25},"end":{"line":304,"column":40}}]},"20":{"line":305,"type":"cond-expr","locations":[{"start":{"line":305,"column":52},"end":{"line":305,"column":57}},{"start":{"line":305,"column":60},"end":{"line":305,"column":64}}]},"21":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":20},"end":{"line":305,"column":32}},{"start":{"line":305,"column":36},"end":{"line":305,"column":49}}]},"22":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":2},"end":{"line":310,"column":2}},{"start":{"line":310,"column":2},"end":{"line":310,"column":2}}]},"23":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":5},"end":{"line":310,"column":17}},{"start":{"line":310,"column":21},"end":{"line":310,"column":34}},{"start":{"line":310,"column":38},"end":{"line":310,"column":51}}]},"24":{"line":311,"type":"cond-expr","locations":[{"start":{"line":311,"column":48},"end":{"line":311,"column":53}},{"start":{"line":311,"column":56},"end":{"line":311,"column":60}}]},"25":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":16},"end":{"line":311,"column":28}},{"start":{"line":311,"column":32},"end":{"line":311,"column":45}}]},"26":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":43},"end":{"line":312,"column":57}},{"start":{"line":312,"column":61},"end":{"line":312,"column":80}}]},"27":{"line":313,"type":"cond-expr","locations":[{"start":{"line":313,"column":40},"end":{"line":313,"column":44}},{"start":{"line":313,"column":46},"end":{"line":313,"column":51}}]},"28":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":2},"end":{"line":314,"column":2}},{"start":{"line":314,"column":2},"end":{"line":314,"column":2}}]},"29":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":2},"end":{"line":319,"column":2}},{"start":{"line":319,"column":2},"end":{"line":319,"column":2}}]},"30":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":5},"end":{"line":319,"column":17}},{"start":{"line":319,"column":21},"end":{"line":319,"column":34}},{"start":{"line":319,"column":39},"end":{"line":319,"column":51}},{"start":{"line":319,"column":55},"end":{"line":319,"column":69}},{"start":{"line":319,"column":74},"end":{"line":319,"column":87}},{"start":{"line":319,"column":91},"end":{"line":319,"column":106}}]},"31":{"line":320,"type":"cond-expr","locations":[{"start":{"line":320,"column":35},"end":{"line":320,"column":36}},{"start":{"line":320,"column":39},"end":{"line":320,"column":40}}]},"32":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"33":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":5},"end":{"line":325,"column":17}},{"start":{"line":325,"column":21},"end":{"line":325,"column":34}}]},"34":{"line":326,"type":"cond-expr","locations":[{"start":{"line":326,"column":31},"end":{"line":326,"column":32}},{"start":{"line":326,"column":35},"end":{"line":326,"column":36}}]},"35":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"36":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":2},"end":{"line":333,"column":2}},{"start":{"line":333,"column":2},"end":{"line":333,"column":2}}]},"37":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":5},"end":{"line":333,"column":17}},{"start":{"line":333,"column":21},"end":{"line":333,"column":50}}]},"38":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":4},"end":{"line":334,"column":4}},{"start":{"line":334,"column":4},"end":{"line":334,"column":4}}]},"39":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":7},"end":{"line":334,"column":35}},{"start":{"line":334,"column":39},"end":{"line":334,"column":63}}]},"40":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":9},"end":{"line":336,"column":9}},{"start":{"line":336,"column":9},"end":{"line":336,"column":9}}]},"41":{"line":336,"type":"binary-expr","locations":[{"start":{"line":336,"column":12},"end":{"line":336,"column":24}},{"start":{"line":336,"column":28},"end":{"line":336,"column":49}}]},"42":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":4},"end":{"line":337,"column":4}},{"start":{"line":337,"column":4},"end":{"line":337,"column":4}}]},"43":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":7},"end":{"line":337,"column":35}},{"start":{"line":337,"column":39},"end":{"line":337,"column":72}}]},"44":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"45":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":6},"end":{"line":343,"column":6}},{"start":{"line":343,"column":6},"end":{"line":343,"column":6}}]},"46":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":9},"end":{"line":343,"column":37}},{"start":{"line":343,"column":41},"end":{"line":343,"column":69}}]},"47":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"48":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":5},"end":{"line":362,"column":64}},{"start":{"line":362,"column":68},"end":{"line":362,"column":88}}]},"49":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":2},"end":{"line":375,"column":2}},{"start":{"line":375,"column":2},"end":{"line":375,"column":2}}]},"50":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":2},"end":{"line":397,"column":2}},{"start":{"line":397,"column":2},"end":{"line":397,"column":2}}]},"51":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":2},"end":{"line":406,"column":2}},{"start":{"line":406,"column":2},"end":{"line":406,"column":2}}]},"52":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":5},"end":{"line":406,"column":8}},{"start":{"line":406,"column":12},"end":{"line":406,"column":22}},{"start":{"line":406,"column":26},"end":{"line":406,"column":29}},{"start":{"line":406,"column":33},"end":{"line":406,"column":44}}]},"53":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"54":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":4},"end":{"line":414,"column":4}},{"start":{"line":414,"column":4},"end":{"line":414,"column":4}}]},"55":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"56":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":2},"end":{"line":429,"column":2}},{"start":{"line":429,"column":2},"end":{"line":429,"column":2}}]},"57":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":1},"end":{"line":434,"column":1}},{"start":{"line":434,"column":1},"end":{"line":434,"column":1}}]},"58":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":1},"end":{"line":439,"column":1}},{"start":{"line":439,"column":1},"end":{"line":439,"column":1}}]},"59":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":2},"end":{"line":444,"column":2}},{"start":{"line":444,"column":2},"end":{"line":444,"column":2}}]},"60":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":2},"end":{"line":449,"column":2}},{"start":{"line":449,"column":2},"end":{"line":449,"column":2}}]},"61":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":4},"end":{"line":454,"column":4}},{"start":{"line":454,"column":4},"end":{"line":454,"column":4}}]},"62":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":11},"end":{"line":456,"column":11}},{"start":{"line":456,"column":11},"end":{"line":456,"column":11}}]},"63":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":11},"end":{"line":458,"column":11}},{"start":{"line":458,"column":11},"end":{"line":458,"column":11}}]},"64":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":2},"end":{"line":491,"column":2}},{"start":{"line":491,"column":2},"end":{"line":491,"column":2}}]},"65":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":2},"end":{"line":492,"column":2}},{"start":{"line":492,"column":2},"end":{"line":492,"column":2}}]},"66":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":8},"end":{"line":494,"column":8}},{"start":{"line":494,"column":8},"end":{"line":494,"column":8}}]},"67":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":11},"end":{"line":494,"column":24}},{"start":{"line":494,"column":28},"end":{"line":494,"column":60}}]},"68":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":2},"end":{"line":499,"column":2}},{"start":{"line":499,"column":2},"end":{"line":499,"column":2}}]},"69":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":2},"end":{"line":502,"column":2}},{"start":{"line":502,"column":2},"end":{"line":502,"column":2}}]},"70":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":2},"end":{"line":507,"column":2}},{"start":{"line":507,"column":2},"end":{"line":507,"column":2}}]},"71":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":6},"end":{"line":514,"column":6}},{"start":{"line":514,"column":6},"end":{"line":514,"column":6}}]}},"code":["\"use strict\";","","var common = require('./common')","\t, utils = require('../utils')","  , toError = require('../utils').toError","\t, handleCallback = require('../utils').handleCallback","\t, shallowClone = utils.shallowClone","  , BulkWriteResult = common.BulkWriteResult","  , ObjectID = require('mongodb-core').BSON.ObjectID","  , Define = require('../metadata')","\t, BSON = require('mongodb-core').BSON","  , Batch = common.Batch","  , mergeBatchResults = common.mergeBatchResults;","","var bson = new BSON([BSON.Binary, BSON.Code, BSON.DBRef, BSON.Decimal128,","\tBSON.Double, BSON.Int32, BSON.Long, BSON.Map, BSON.MaxKey, BSON.MinKey,","\tBSON.ObjectId, BSON.BSONRegExp, BSON.Symbol, BSON.Timestamp]);","","/**"," * Create a FindOperatorsOrdered instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @return {FindOperatorsOrdered} a FindOperatorsOrdered instance."," */","var FindOperatorsOrdered = function(self) {","  this.s = self.s;","}","","/**"," * Add a single update document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.update = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , u: updateDocument","    , multi: true","    , upsert: upsert","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","}","","/**"," * Add a single update one document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.updateOne = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , u: updateDocument","    , multi: false","    , upsert: upsert","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","}","","/**"," * Add a replace one operation to the bulk operation"," *"," * @method"," * @param {object} doc the new document to replace the existing one with"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.replaceOne = function(updateDocument) {","  this.updateOne(updateDocument);","}","","/**"," * Upsert modifier for update bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {FindOperatorsOrdered}"," */","FindOperatorsOrdered.prototype.upsert = function() {","  this.s.currentOp.upsert = true;","  return this;","}","","/**"," * Add a remove one operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.deleteOne = function() {","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , limit: 1","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","}","","// Backward compatibility","FindOperatorsOrdered.prototype.removeOne = FindOperatorsOrdered.prototype.deleteOne;","","/**"," * Add a remove operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","FindOperatorsOrdered.prototype.delete = function() {","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , limit: 0","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","}","","// Backward compatibility","FindOperatorsOrdered.prototype.remove = FindOperatorsOrdered.prototype.delete;","","// Add to internal list of documents","var addToOperationsList = function(_self, docType, document) {","  // Get the bsonSize","  var bsonSize = bson.calculateObjectSize(document, {","\t\tcheckKeys: false,","\t});","","  // Throw error if the doc is bigger than the max BSON size","  if(bsonSize >= _self.s.maxBatchSizeBytes) {","\t\tthrow toError(\"document is larger than the maximum size \" + _self.s.maxBatchSizeBytes);","\t}","","  // Create a new batch object if we don't have a current one","  if(_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","","  // Check if we need to create a new batch","  if(((_self.s.currentBatchSize + 1) >= _self.s.maxWriteBatchSize)","    || ((_self.s.currentBatchSizeBytes +  _self.s.currentBatchSizeBytes) >= _self.s.maxBatchSizeBytes)","    || (_self.s.currentBatch.batchType != docType)) {","    // Save the batch to the execution stack","    _self.s.batches.push(_self.s.currentBatch);","","    // Create a new batch","    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","","    // Reset the current size trackers","    _self.s.currentBatchSize = 0;","    _self.s.currentBatchSizeBytes = 0;","  } else {","    // Update current batch size","    _self.s.currentBatchSize = _self.s.currentBatchSize + 1;","    _self.s.currentBatchSizeBytes = _self.s.currentBatchSizeBytes + bsonSize;","  }","","  if(docType == common.INSERT) {","    _self.s.bulkResult.insertedIds.push({index: _self.s.currentIndex, _id: document._id});","  }","","  // We have an array of documents","  if(Array.isArray(document)) {","    throw toError(\"operation passed in cannot be an Array\");","  } else {","    _self.s.currentBatch.originalIndexes.push(_self.s.currentIndex);","    _self.s.currentBatch.operations.push(document)","\t\t_self.s.currentBatchSizeBytes = _self.s.currentBatchSizeBytes + bsonSize;","    _self.s.currentIndex = _self.s.currentIndex + 1;","  }","","  // Return self","  return _self;","}","","/**"," * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @property {number} length Get the number of operations in the bulk."," * @return {OrderedBulkOperation} a OrderedBulkOperation instance."," */","function OrderedBulkOperation(topology, collection, options) {","\toptions = options == null ? {} : options;","\t// TODO Bring from driver information in isMaster","\tvar executed = false;","","\t// Current item","\tvar currentOp = null;","","\t// Handle to the bson serializer, used to calculate running sizes","\tvar bson = topology.bson;","","\t// Namespace for the operation","  var namespace = collection.collectionName;","","  // Set max byte size","\tvar maxBatchSizeBytes = topology.isMasterDoc && topology.isMasterDoc.maxBsonObjectSize","    ? topology.isMasterDoc.maxBsonObjectSize : (1024*1025*16);","\tvar maxWriteBatchSize = topology.isMasterDoc && topology.isMasterDoc.maxWriteBatchSize","    ? topology.isMasterDoc.maxWriteBatchSize : 1000;","","  // Get the write concern","  var writeConcern = common.writeConcern(shallowClone(options), collection, options);","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Final results","  var bulkResult = {","      ok: 1","    , writeErrors: []","    , writeConcernErrors: []","    , insertedIds: []","    , nInserted: 0","    , nUpserted: 0","    , nMatched: 0","    , nModified: 0","    , nRemoved: 0","    , upserted: []","  };","","  // Internal state","  this.s = {","    // Final result","      bulkResult: bulkResult","    // Current batch state","    , currentBatch: null","    , currentIndex: 0","    , currentBatchSize: 0","    , currentBatchSizeBytes: 0","    , batches: []","    // Write concern","    , writeConcern: writeConcern","    // Max batch size options","    , maxBatchSizeBytes: maxBatchSizeBytes","    , maxWriteBatchSize: maxWriteBatchSize","    // Namespace","    , namespace: namespace","    // BSON","    , bson: bson","    // Topology","    , topology: topology","    // Options","    , options: options","    // Current operation","    , currentOp: currentOp","    // Executed","    , executed: executed","    // Collection","    , collection: collection","    // Promise Library","    , promiseLibrary: promiseLibrary","\t\t// Fundamental error","\t\t, err: null","    // Bypass validation","    , bypassDocumentValidation: typeof options.bypassDocumentValidation == 'boolean' ? options.bypassDocumentValidation : false","  }","}","","var define = OrderedBulkOperation.define = new Define('OrderedBulkOperation', OrderedBulkOperation, false);","","OrderedBulkOperation.prototype.raw = function(op) {","  var key = Object.keys(op)[0];","","  // Set up the force server object id","  var forceServerObjectId = typeof this.s.options.forceServerObjectId == 'boolean'","    ? this.s.options.forceServerObjectId : this.s.collection.s.db.options.forceServerObjectId;","","  // Update operations","  if((op.updateOne && op.updateOne.q)","    || (op.updateMany && op.updateMany.q)","    || (op.replaceOne && op.replaceOne.q)) {","    op[key].multi = op.updateOne || op.replaceOne ? false : true;","    return addToOperationsList(this, common.UPDATE, op[key]);","  }","","  // Crud spec update format","  if(op.updateOne || op.updateMany || op.replaceOne) {","    var multi = op.updateOne || op.replaceOne ? false : true;","    var operation = {q: op[key].filter, u: op[key].update || op[key].replacement, multi: multi}","    operation.upsert = op[key].upsert ? true: false;","\t\tif(op.collation) operation.collation = op.collation;","    return addToOperationsList(this, common.UPDATE, operation);","  }","","  // Remove operations","  if(op.removeOne || op.removeMany || (op.deleteOne && op.deleteOne.q) || op.deleteMany && op.deleteMany.q) {","    op[key].limit = op.removeOne ? 1 : 0;","    return addToOperationsList(this, common.REMOVE, op[key]);","  }","","  // Crud spec delete operations, less efficient","  if(op.deleteOne || op.deleteMany) {","    var limit = op.deleteOne ? 1 : 0;","    operation = {q: op[key].filter, limit: limit}","\t\tif(op.collation) operation.collation = op.collation;","    return addToOperationsList(this, common.REMOVE, operation);","  }","","  // Insert operations","  if(op.insertOne && op.insertOne.document == null) {","    if(forceServerObjectId !== true && op.insertOne._id == null) op.insertOne._id = new ObjectID();","    return addToOperationsList(this, common.INSERT, op.insertOne);","  } else if(op.insertOne && op.insertOne.document) {","    if(forceServerObjectId !== true && op.insertOne.document._id == null) op.insertOne.document._id = new ObjectID();","    return addToOperationsList(this, common.INSERT, op.insertOne.document);","  }","","  if(op.insertMany) {","    for(var i = 0; i < op.insertMany.length; i++) {","      if(forceServerObjectId !== true && op.insertMany[i]._id == null) op.insertMany[i]._id = new ObjectID();","      addToOperationsList(this, common.INSERT, op.insertMany[i]);","    }","","    return;","  }","","  // No valid type of operation","  throw toError(\"bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany\");","}","","/**"," * Add a single insert document to the bulk operation"," *"," * @param {object} doc the document to insert"," * @throws {MongoError}"," * @return {OrderedBulkOperation}"," */","OrderedBulkOperation.prototype.insert = function(document) {","  if(this.s.collection.s.db.options.forceServerObjectId !== true && document._id == null) document._id = new ObjectID();","  return addToOperationsList(this, common.INSERT, document);","}","","/**"," * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne"," *"," * @method"," * @param {object} selector The selector for the bulk operation."," * @throws {MongoError}"," * @return {FindOperatorsOrdered}"," */","OrderedBulkOperation.prototype.find = function(selector) {","  if (!selector) {","    throw toError(\"Bulk find operation must specify a selector\");","  }","","  // Save a current selector","  this.s.currentOp = {","    selector: selector","  }","","  return new FindOperatorsOrdered(this);","}","","Object.defineProperty(OrderedBulkOperation.prototype, 'length', {","  enumerable: true,","  get: function() {","    return this.s.currentIndex;","  }","});","","//","// Execute next write command in a chain","var executeCommands = function(self, callback) {","  if(self.s.batches.length == 0) {","    return handleCallback(callback, null, new BulkWriteResult(self.s.bulkResult));","  }","","  // Ordered execution of the command","  var batch = self.s.batches.shift();","","  var resultHandler = function(err, result) {","\t\t// Error is a driver related error not a bulk op error, terminate","\t\tif(err && err.driver || err && err.message) {","\t\t\treturn handleCallback(callback, err);","\t\t}","","    // If we have and error","    if(err) err.ok = 0;","    // Merge the results together","    var mergeResult = mergeBatchResults(true, batch, self.s.bulkResult, err, result);","    if(mergeResult != null) {","      return handleCallback(callback, null, new BulkWriteResult(self.s.bulkResult));","    }","","    // If we are ordered and have errors and they are","    // not all replication errors terminate the operation","    if(self.s.bulkResult.writeErrors.length > 0) {","      return handleCallback(callback, toError(self.s.bulkResult.writeErrors[0]), new BulkWriteResult(self.s.bulkResult));","    }","","    // Execute the next command in line","    executeCommands(self, callback);","  }","","  var finalOptions = {ordered: true}","  if(self.s.writeConcern != null) {","    finalOptions.writeConcern = self.s.writeConcern;","  }","","\t// Set an operationIf if provided","\tif(self.operationId) {","\t\tresultHandler.operationId = self.operationId;","\t}","","\t// Serialize functions","\tif(self.s.options.serializeFunctions) {","\t\tfinalOptions.serializeFunctions = true","\t}","","  // Serialize functions","  if(self.s.options.ignoreUndefined) {","    finalOptions.ignoreUndefined = true","  }","","  // Is the bypassDocumentValidation options specific","  if(self.s.bypassDocumentValidation == true) {","    finalOptions.bypassDocumentValidation = true;","  }","","  try {","    if(batch.batchType == common.INSERT) {","      self.s.topology.insert(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);","    } else if(batch.batchType == common.UPDATE) {","      self.s.topology.update(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);","    } else if(batch.batchType == common.REMOVE) {","      self.s.topology.remove(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);","    }","  } catch(err) {","    // Force top level error","    err.ok = 0;","    // Merge top level error and return","    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));","  }","}","","/**"," * The callback format for results"," * @callback OrderedBulkOperation~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {BulkWriteResult} result The bulk write result."," */","","/**"," * Execute the ordered bulk operation"," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {OrderedBulkOperation~resultCallback} [callback] The result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","OrderedBulkOperation.prototype.execute = function(_writeConcern, callback) {","  var self = this;","  if(this.s.executed) throw new toError(\"batch cannot be re-executed\");","  if(typeof _writeConcern == 'function') {","    callback = _writeConcern;","\t} else if(_writeConcern && typeof _writeConcern == 'object') {","    this.s.writeConcern = _writeConcern;","  }","","  // If we have current batch","  if(this.s.currentBatch) this.s.batches.push(this.s.currentBatch)","","  // If we have no operations in the bulk raise an error","  if(this.s.batches.length == 0) {","    throw toError(\"Invalid Operation, No operations in bulk\");","  }","","  // Execute using callback","  if(typeof callback == 'function') {","\t\treturn executeCommands(this, callback);","\t}","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    executeCommands(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('execute', {callback: true, promise:false});","","/**"," * Returns an unordered batch object"," * @ignore"," */","var initializeOrderedBulkOp = function(topology, collection, options) {","\treturn new OrderedBulkOperation(topology, collection, options);","}","","initializeOrderedBulkOp.OrderedBulkOperation = OrderedBulkOperation;","module.exports = initializeOrderedBulkOp;","module.exports.Bulk = OrderedBulkOperation;",""],"l":{"3":1,"15":1,"24":1,"25":0,"36":1,"38":0,"41":0,"49":0,"51":0,"62":1,"64":0,"67":0,"75":0,"77":0,"88":1,"89":0,"99":1,"100":0,"101":0,"111":1,"113":0,"119":0,"121":0,"125":1,"134":1,"136":0,"142":0,"144":0,"148":1,"151":1,"153":0,"158":0,"159":0,"163":0,"166":0,"170":0,"173":0,"176":0,"177":0,"180":0,"181":0,"184":0,"185":0,"189":0,"190":0,"192":0,"193":0,"194":0,"195":0,"199":0,"208":1,"209":0,"211":0,"214":0,"217":0,"220":0,"223":0,"225":0,"229":0,"232":0,"235":0,"236":0,"241":0,"255":0,"292":1,"294":1,"295":0,"298":0,"302":0,"305":0,"306":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"319":0,"320":0,"321":0,"325":0,"326":0,"327":0,"328":0,"329":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"341":0,"342":0,"343":0,"344":0,"347":0,"351":0,"361":1,"362":0,"363":0,"374":1,"375":0,"376":0,"380":0,"384":0,"387":1,"390":0,"396":1,"397":0,"398":0,"402":0,"404":0,"406":0,"407":0,"411":0,"413":0,"414":0,"415":0,"420":0,"421":0,"425":0,"428":0,"429":0,"430":0,"434":0,"435":0,"439":0,"440":0,"444":0,"445":0,"449":0,"450":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"463":0,"465":0,"489":1,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"499":0,"502":0,"503":0,"507":0,"508":0,"512":0,"513":0,"514":0,"515":0,"520":1,"526":1,"527":0,"530":1,"531":1,"532":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/bulk/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/bulk/common.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":19},"end":{"line":19,"column":50}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":29},"end":{"line":42,"column":57}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":11},"end":{"line":45,"column":22}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":12},"end":{"line":56,"column":51}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":15},"end":{"line":70,"column":53}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":22},"end":{"line":88,"column":43}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":24},"end":{"line":101,"column":35}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":24},"end":{"line":110,"column":35}}},"9":{"name":"(anonymous_9)","line":120,"loc":{"start":{"line":120,"column":25},"end":{"line":120,"column":41}}},"10":{"name":"(anonymous_10)","line":129,"loc":{"start":{"line":129,"column":24},"end":{"line":129,"column":35}}},"11":{"name":"(anonymous_11)","line":138,"loc":{"start":{"line":138,"column":24},"end":{"line":138,"column":35}}},"12":{"name":"(anonymous_12)","line":147,"loc":{"start":{"line":147,"column":28},"end":{"line":147,"column":39}}},"13":{"name":"(anonymous_13)","line":156,"loc":{"start":{"line":156,"column":25},"end":{"line":156,"column":41}}},"14":{"name":"(anonymous_14)","line":168,"loc":{"start":{"line":168,"column":24},"end":{"line":168,"column":35}}},"15":{"name":"(anonymous_15)","line":177,"loc":{"start":{"line":177,"column":19},"end":{"line":177,"column":30}}},"16":{"name":"(anonymous_16)","line":186,"loc":{"start":{"line":186,"column":30},"end":{"line":186,"column":41}}},"17":{"name":"(anonymous_17)","line":208,"loc":{"start":{"line":208,"column":16},"end":{"line":208,"column":27}}},"18":{"name":"(anonymous_18)","line":212,"loc":{"start":{"line":212,"column":18},"end":{"line":212,"column":29}}},"19":{"name":"(anonymous_19)","line":216,"loc":{"start":{"line":216,"column":14},"end":{"line":216,"column":25}}},"20":{"name":"(anonymous_20)","line":229,"loc":{"start":{"line":229,"column":24},"end":{"line":229,"column":38}}},"21":{"name":"(anonymous_21)","line":236,"loc":{"start":{"line":236,"column":16},"end":{"line":236,"column":27}}},"22":{"name":"(anonymous_22)","line":240,"loc":{"start":{"line":240,"column":18},"end":{"line":240,"column":29}}},"23":{"name":"(anonymous_23)","line":254,"loc":{"start":{"line":254,"column":17},"end":{"line":254,"column":31}}},"24":{"name":"(anonymous_24)","line":264,"loc":{"start":{"line":264,"column":22},"end":{"line":264,"column":33}}},"25":{"name":"(anonymous_25)","line":268,"loc":{"start":{"line":268,"column":16},"end":{"line":268,"column":27}}},"26":{"name":"(anonymous_26)","line":272,"loc":{"start":{"line":272,"column":18},"end":{"line":272,"column":29}}},"27":{"name":"(anonymous_27)","line":281,"loc":{"start":{"line":281,"column":24},"end":{"line":281,"column":74}}},"28":{"name":"(anonymous_28)","line":415,"loc":{"start":{"line":415,"column":19},"end":{"line":415,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":53}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":22}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":15}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":15}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":14}},"9":{"start":{"line":19,"column":0},"end":{"line":36,"column":1}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":24}},"11":{"start":{"line":23,"column":2},"end":{"line":23,"column":89}},"12":{"start":{"line":23,"column":53},"end":{"line":23,"column":89}},"13":{"start":{"line":24,"column":2},"end":{"line":24,"column":89}},"14":{"start":{"line":24,"column":53},"end":{"line":24,"column":89}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":101}},"16":{"start":{"line":25,"column":57},"end":{"line":25,"column":101}},"17":{"start":{"line":26,"column":2},"end":{"line":26,"column":110}},"18":{"start":{"line":26,"column":60},"end":{"line":26,"column":110}},"19":{"start":{"line":29,"column":2},"end":{"line":29,"column":62}},"20":{"start":{"line":29,"column":35},"end":{"line":29,"column":62}},"21":{"start":{"line":30,"column":2},"end":{"line":30,"column":83}},"22":{"start":{"line":30,"column":42},"end":{"line":30,"column":83}},"23":{"start":{"line":31,"column":2},"end":{"line":31,"column":62}},"24":{"start":{"line":31,"column":35},"end":{"line":31,"column":62}},"25":{"start":{"line":32,"column":2},"end":{"line":32,"column":74}},"26":{"start":{"line":32,"column":39},"end":{"line":32,"column":74}},"27":{"start":{"line":35,"column":2},"end":{"line":35,"column":22}},"28":{"start":{"line":42,"column":0},"end":{"line":49,"column":1}},"29":{"start":{"line":43,"column":2},"end":{"line":48,"column":5}},"30":{"start":{"line":46,"column":6},"end":{"line":46,"column":19}},"31":{"start":{"line":56,"column":0},"end":{"line":64,"column":1}},"32":{"start":{"line":57,"column":2},"end":{"line":57,"column":45}},"33":{"start":{"line":58,"column":2},"end":{"line":58,"column":24}},"34":{"start":{"line":59,"column":2},"end":{"line":59,"column":28}},"35":{"start":{"line":60,"column":2},"end":{"line":60,"column":29}},"36":{"start":{"line":61,"column":2},"end":{"line":61,"column":23}},"37":{"start":{"line":62,"column":2},"end":{"line":62,"column":16}},"38":{"start":{"line":63,"column":2},"end":{"line":63,"column":21}},"39":{"start":{"line":70,"column":0},"end":{"line":74,"column":1}},"40":{"start":{"line":71,"column":2},"end":{"line":71,"column":29}},"41":{"start":{"line":72,"column":2},"end":{"line":72,"column":21}},"42":{"start":{"line":73,"column":2},"end":{"line":73,"column":29}},"43":{"start":{"line":88,"column":0},"end":{"line":219,"column":1}},"44":{"start":{"line":89,"column":2},"end":{"line":89,"column":52}},"45":{"start":{"line":90,"column":2},"end":{"line":90,"column":66}},"46":{"start":{"line":91,"column":2},"end":{"line":91,"column":66}},"47":{"start":{"line":92,"column":2},"end":{"line":92,"column":64}},"48":{"start":{"line":93,"column":2},"end":{"line":93,"column":66}},"49":{"start":{"line":94,"column":2},"end":{"line":94,"column":64}},"50":{"start":{"line":101,"column":2},"end":{"line":103,"column":3}},"51":{"start":{"line":102,"column":4},"end":{"line":102,"column":34}},"52":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"53":{"start":{"line":111,"column":4},"end":{"line":111,"column":31}},"54":{"start":{"line":120,"column":2},"end":{"line":122,"column":3}},"55":{"start":{"line":121,"column":4},"end":{"line":121,"column":38}},"56":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"57":{"start":{"line":130,"column":4},"end":{"line":130,"column":22}},"58":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"59":{"start":{"line":139,"column":4},"end":{"line":139,"column":45}},"60":{"start":{"line":147,"column":2},"end":{"line":149,"column":3}},"61":{"start":{"line":148,"column":4},"end":{"line":148,"column":41}},"62":{"start":{"line":156,"column":2},"end":{"line":161,"column":3}},"63":{"start":{"line":157,"column":4},"end":{"line":159,"column":5}},"64":{"start":{"line":158,"column":6},"end":{"line":158,"column":43}},"65":{"start":{"line":160,"column":4},"end":{"line":160,"column":16}},"66":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"67":{"start":{"line":169,"column":4},"end":{"line":169,"column":34}},"68":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"69":{"start":{"line":178,"column":4},"end":{"line":178,"column":29}},"70":{"start":{"line":186,"column":2},"end":{"line":206,"column":3}},"71":{"start":{"line":187,"column":4},"end":{"line":205,"column":5}},"72":{"start":{"line":188,"column":6},"end":{"line":188,"column":18}},"73":{"start":{"line":189,"column":11},"end":{"line":205,"column":5}},"74":{"start":{"line":191,"column":6},"end":{"line":191,"column":46}},"75":{"start":{"line":195,"column":6},"end":{"line":195,"column":22}},"76":{"start":{"line":196,"column":6},"end":{"line":202,"column":7}},"77":{"start":{"line":197,"column":8},"end":{"line":197,"column":51}},"78":{"start":{"line":198,"column":8},"end":{"line":198,"column":37}},"79":{"start":{"line":201,"column":8},"end":{"line":201,"column":45}},"80":{"start":{"line":201,"column":19},"end":{"line":201,"column":45}},"81":{"start":{"line":204,"column":6},"end":{"line":204,"column":84}},"82":{"start":{"line":208,"column":2},"end":{"line":210,"column":3}},"83":{"start":{"line":209,"column":4},"end":{"line":209,"column":22}},"84":{"start":{"line":212,"column":2},"end":{"line":214,"column":3}},"85":{"start":{"line":213,"column":4},"end":{"line":213,"column":62}},"86":{"start":{"line":216,"column":2},"end":{"line":218,"column":3}},"87":{"start":{"line":217,"column":4},"end":{"line":217,"column":30}},"88":{"start":{"line":229,"column":0},"end":{"line":243,"column":1}},"89":{"start":{"line":230,"column":2},"end":{"line":230,"column":77}},"90":{"start":{"line":230,"column":43},"end":{"line":230,"column":77}},"91":{"start":{"line":233,"column":2},"end":{"line":233,"column":49}},"92":{"start":{"line":234,"column":2},"end":{"line":234,"column":53}},"93":{"start":{"line":236,"column":2},"end":{"line":238,"column":3}},"94":{"start":{"line":237,"column":4},"end":{"line":237,"column":48}},"95":{"start":{"line":240,"column":2},"end":{"line":242,"column":3}},"96":{"start":{"line":241,"column":4},"end":{"line":241,"column":51}},"97":{"start":{"line":254,"column":0},"end":{"line":275,"column":1}},"98":{"start":{"line":255,"column":2},"end":{"line":255,"column":63}},"99":{"start":{"line":255,"column":36},"end":{"line":255,"column":63}},"100":{"start":{"line":258,"column":2},"end":{"line":258,"column":49}},"101":{"start":{"line":259,"column":2},"end":{"line":259,"column":51}},"102":{"start":{"line":260,"column":2},"end":{"line":260,"column":53}},"103":{"start":{"line":264,"column":2},"end":{"line":266,"column":3}},"104":{"start":{"line":265,"column":4},"end":{"line":265,"column":18}},"105":{"start":{"line":268,"column":2},"end":{"line":270,"column":3}},"106":{"start":{"line":269,"column":4},"end":{"line":269,"column":78}},"107":{"start":{"line":272,"column":2},"end":{"line":274,"column":3}},"108":{"start":{"line":273,"column":4},"end":{"line":273,"column":63}},"109":{"start":{"line":281,"column":0},"end":{"line":411,"column":1}},"110":{"start":{"line":283,"column":2},"end":{"line":289,"column":3}},"111":{"start":{"line":284,"column":4},"end":{"line":284,"column":17}},"112":{"start":{"line":285,"column":9},"end":{"line":289,"column":3}},"113":{"start":{"line":286,"column":4},"end":{"line":286,"column":27}},"114":{"start":{"line":287,"column":9},"end":{"line":289,"column":3}},"115":{"start":{"line":288,"column":4},"end":{"line":288,"column":11}},"116":{"start":{"line":292,"column":2},"end":{"line":306,"column":3}},"117":{"start":{"line":293,"column":4},"end":{"line":293,"column":22}},"118":{"start":{"line":295,"column":4},"end":{"line":300,"column":6}},"119":{"start":{"line":302,"column":4},"end":{"line":302,"column":60}},"120":{"start":{"line":303,"column":4},"end":{"line":303,"column":11}},"121":{"start":{"line":304,"column":9},"end":{"line":306,"column":3}},"122":{"start":{"line":305,"column":4},"end":{"line":305,"column":11}},"123":{"start":{"line":309,"column":2},"end":{"line":347,"column":3}},"124":{"start":{"line":310,"column":4},"end":{"line":310,"column":48}},"125":{"start":{"line":311,"column":4},"end":{"line":311,"column":24}},"126":{"start":{"line":312,"column":4},"end":{"line":312,"column":23}},"127":{"start":{"line":315,"column":4},"end":{"line":346,"column":5}},"128":{"start":{"line":316,"column":6},"end":{"line":320,"column":7}},"129":{"start":{"line":317,"column":8},"end":{"line":317,"column":35}},"130":{"start":{"line":318,"column":13},"end":{"line":320,"column":7}},"131":{"start":{"line":319,"column":8},"end":{"line":319,"column":35}},"132":{"start":{"line":323,"column":6},"end":{"line":328,"column":7}},"133":{"start":{"line":324,"column":8},"end":{"line":325,"column":73}},"134":{"start":{"line":326,"column":8},"end":{"line":327,"column":71}},"135":{"start":{"line":331,"column":6},"end":{"line":332,"column":49}},"136":{"start":{"line":333,"column":6},"end":{"line":334,"column":47}},"137":{"start":{"line":337,"column":6},"end":{"line":345,"column":7}},"138":{"start":{"line":338,"column":8},"end":{"line":338,"column":35}},"139":{"start":{"line":339,"column":13},"end":{"line":345,"column":7}},"140":{"start":{"line":340,"column":8},"end":{"line":340,"column":35}},"141":{"start":{"line":341,"column":13},"end":{"line":345,"column":7}},"142":{"start":{"line":342,"column":8},"end":{"line":344,"column":9}},"143":{"start":{"line":343,"column":10},"end":{"line":343,"column":37}},"144":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"145":{"start":{"line":351,"column":4},"end":{"line":351,"column":59}},"146":{"start":{"line":355,"column":2},"end":{"line":357,"column":3}},"147":{"start":{"line":356,"column":4},"end":{"line":356,"column":57}},"148":{"start":{"line":359,"column":2},"end":{"line":359,"column":20}},"149":{"start":{"line":362,"column":2},"end":{"line":379,"column":3}},"150":{"start":{"line":363,"column":4},"end":{"line":363,"column":39}},"151":{"start":{"line":365,"column":4},"end":{"line":370,"column":5}},"152":{"start":{"line":366,"column":6},"end":{"line":369,"column":9}},"153":{"start":{"line":371,"column":9},"end":{"line":379,"column":3}},"154":{"start":{"line":373,"column":4},"end":{"line":373,"column":18}},"155":{"start":{"line":375,"column":4},"end":{"line":378,"column":7}},"156":{"start":{"line":382,"column":2},"end":{"line":392,"column":3}},"157":{"start":{"line":383,"column":4},"end":{"line":383,"column":37}},"158":{"start":{"line":384,"column":4},"end":{"line":384,"column":60}},"159":{"start":{"line":385,"column":4},"end":{"line":385,"column":71}},"160":{"start":{"line":387,"column":4},"end":{"line":391,"column":5}},"161":{"start":{"line":388,"column":6},"end":{"line":388,"column":62}},"162":{"start":{"line":390,"column":6},"end":{"line":390,"column":34}},"163":{"start":{"line":394,"column":2},"end":{"line":406,"column":3}},"164":{"start":{"line":395,"column":4},"end":{"line":405,"column":5}},"165":{"start":{"line":397,"column":6},"end":{"line":402,"column":8}},"166":{"start":{"line":404,"column":6},"end":{"line":404,"column":62}},"167":{"start":{"line":408,"column":2},"end":{"line":410,"column":3}},"168":{"start":{"line":409,"column":4},"end":{"line":409,"column":88}},"169":{"start":{"line":415,"column":0},"end":{"line":423,"column":1}},"170":{"start":{"line":416,"column":2},"end":{"line":416,"column":17}},"171":{"start":{"line":417,"column":2},"end":{"line":417,"column":34}},"172":{"start":{"line":418,"column":2},"end":{"line":420,"column":3}},"173":{"start":{"line":419,"column":4},"end":{"line":419,"column":38}},"174":{"start":{"line":422,"column":2},"end":{"line":422,"column":15}},"175":{"start":{"line":426,"column":0},"end":{"line":426,"column":42}},"176":{"start":{"line":427,"column":0},"end":{"line":427,"column":32}},"177":{"start":{"line":428,"column":0},"end":{"line":428,"column":22}},"178":{"start":{"line":429,"column":0},"end":{"line":429,"column":28}},"179":{"start":{"line":430,"column":0},"end":{"line":430,"column":46}},"180":{"start":{"line":431,"column":0},"end":{"line":431,"column":36}},"181":{"start":{"line":432,"column":0},"end":{"line":432,"column":36}},"182":{"start":{"line":433,"column":0},"end":{"line":433,"column":48}},"183":{"start":{"line":434,"column":0},"end":{"line":434,"column":50}},"184":{"start":{"line":435,"column":0},"end":{"line":435,"column":40}},"185":{"start":{"line":436,"column":0},"end":{"line":436,"column":38}},"186":{"start":{"line":437,"column":0},"end":{"line":437,"column":24}},"187":{"start":{"line":438,"column":0},"end":{"line":438,"column":24}},"188":{"start":{"line":439,"column":0},"end":{"line":439,"column":24}}},"branchMap":{"1":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"2":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":5},"end":{"line":23,"column":21}},{"start":{"line":23,"column":25},"end":{"line":23,"column":51}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":5},"end":{"line":24,"column":21}},{"start":{"line":24,"column":25},"end":{"line":24,"column":51}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"6":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":5},"end":{"line":25,"column":21}},{"start":{"line":25,"column":25},"end":{"line":25,"column":55}}]},"7":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"8":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":5},"end":{"line":26,"column":21}},{"start":{"line":26,"column":25},"end":{"line":26,"column":58}}]},"9":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"10":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":5},"end":{"line":29,"column":12}},{"start":{"line":29,"column":16},"end":{"line":29,"column":33}}]},"11":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"12":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":5},"end":{"line":30,"column":12}},{"start":{"line":30,"column":16},"end":{"line":30,"column":40}}]},"13":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"14":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":5},"end":{"line":31,"column":12}},{"start":{"line":31,"column":16},"end":{"line":31,"column":33}}]},"15":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"16":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":5},"end":{"line":32,"column":12}},{"start":{"line":32,"column":16},"end":{"line":32,"column":37}}]},"17":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"18":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"19":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":11},"end":{"line":189,"column":11}},{"start":{"line":189,"column":11},"end":{"line":189,"column":11}}]},"20":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":8}},{"start":{"line":201,"column":8},"end":{"line":201,"column":8}}]},"21":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"22":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"23":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"24":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":9},"end":{"line":285,"column":9}},{"start":{"line":285,"column":9},"end":{"line":285,"column":9}}]},"25":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":12},"end":{"line":285,"column":18}},{"start":{"line":285,"column":22},"end":{"line":285,"column":35}}]},"26":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":9},"end":{"line":287,"column":9}},{"start":{"line":287,"column":9},"end":{"line":287,"column":9}}]},"27":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":2},"end":{"line":292,"column":2}},{"start":{"line":292,"column":2},"end":{"line":292,"column":2}}]},"28":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":5},"end":{"line":292,"column":19}},{"start":{"line":292,"column":23},"end":{"line":292,"column":41}}]},"29":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":14},"end":{"line":297,"column":25}},{"start":{"line":297,"column":29},"end":{"line":297,"column":30}}]},"30":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":9},"end":{"line":304,"column":9}},{"start":{"line":304,"column":9},"end":{"line":304,"column":9}}]},"31":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":12},"end":{"line":304,"column":26}},{"start":{"line":304,"column":30},"end":{"line":304,"column":48}}]},"32":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":2},"end":{"line":309,"column":2}},{"start":{"line":309,"column":2},"end":{"line":309,"column":2}}]},"33":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":5},"end":{"line":309,"column":18}},{"start":{"line":309,"column":22},"end":{"line":309,"column":35}}]},"34":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":17},"end":{"line":310,"column":30}},{"start":{"line":310,"column":34},"end":{"line":310,"column":47}}]},"35":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":4},"end":{"line":315,"column":4}},{"start":{"line":315,"column":4},"end":{"line":315,"column":4}}]},"36":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":7},"end":{"line":315,"column":13}},{"start":{"line":315,"column":17},"end":{"line":315,"column":48}}]},"37":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":6},"end":{"line":316,"column":6}},{"start":{"line":316,"column":6},"end":{"line":316,"column":6}}]},"38":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":13},"end":{"line":318,"column":13}},{"start":{"line":318,"column":13},"end":{"line":318,"column":13}}]},"39":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":6},"end":{"line":323,"column":6}},{"start":{"line":323,"column":6},"end":{"line":323,"column":6}}]},"40":{"line":324,"type":"cond-expr","locations":[{"start":{"line":325,"column":12},"end":{"line":325,"column":49}},{"start":{"line":325,"column":52},"end":{"line":325,"column":72}}]},"41":{"line":326,"type":"cond-expr","locations":[{"start":{"line":327,"column":12},"end":{"line":327,"column":48}},{"start":{"line":327,"column":51},"end":{"line":327,"column":70}}]},"42":{"line":331,"type":"cond-expr","locations":[{"start":{"line":332,"column":10},"end":{"line":332,"column":36}},{"start":{"line":332,"column":39},"end":{"line":332,"column":48}}]},"43":{"line":333,"type":"cond-expr","locations":[{"start":{"line":334,"column":10},"end":{"line":334,"column":35}},{"start":{"line":334,"column":38},"end":{"line":334,"column":46}}]},"44":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":6},"end":{"line":337,"column":6}},{"start":{"line":337,"column":6},"end":{"line":337,"column":6}}]},"45":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":13},"end":{"line":339,"column":13}},{"start":{"line":339,"column":13},"end":{"line":339,"column":13}}]},"46":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":13},"end":{"line":341,"column":13}},{"start":{"line":341,"column":13},"end":{"line":341,"column":13}}]},"47":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":8},"end":{"line":342,"column":8}},{"start":{"line":342,"column":8},"end":{"line":342,"column":8}}]},"48":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"49":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":5},"end":{"line":350,"column":30}},{"start":{"line":350,"column":34},"end":{"line":350,"column":42}}]},"50":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"51":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":5},"end":{"line":355,"column":30}},{"start":{"line":355,"column":34},"end":{"line":355,"column":42}}]},"52":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"53":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":9},"end":{"line":371,"column":9}},{"start":{"line":371,"column":9},"end":{"line":371,"column":9}}]},"54":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":2},"end":{"line":382,"column":2}},{"start":{"line":382,"column":2},"end":{"line":382,"column":2}}]},"55":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":5},"end":{"line":382,"column":30}},{"start":{"line":382,"column":34},"end":{"line":382,"column":42}}]},"56":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":4},"end":{"line":387,"column":4}},{"start":{"line":387,"column":4},"end":{"line":387,"column":4}}]},"57":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":2},"end":{"line":394,"column":2}},{"start":{"line":394,"column":2},"end":{"line":394,"column":2}}]},"58":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":2},"end":{"line":408,"column":2}},{"start":{"line":408,"column":2},"end":{"line":408,"column":2}}]}},"code":["\"use strict\";","","var Long = require('mongodb-core').BSON.Long,","  Timestamp = require('mongodb-core').BSON.Timestamp;","","// Error codes","var UNKNOWN_ERROR = 8;","var INVALID_BSON_ERROR = 22;","var WRITE_CONCERN_ERROR = 64;","var MULTIPLE_ERROR = 65;","","// Insert types","var INSERT = 1;","var UPDATE = 2;","var REMOVE = 3","","","// Get write concern","var writeConcern = function(target, col, options) {","  var writeConcern = {};","","  // Collection level write concern","  if(col.writeConcern && col.writeConcern.w != null) writeConcern.w = col.writeConcern.w;","  if(col.writeConcern && col.writeConcern.j != null) writeConcern.j = col.writeConcern.j;","  if(col.writeConcern && col.writeConcern.fsync != null) writeConcern.fsync = col.writeConcern.fsync;","  if(col.writeConcern && col.writeConcern.wtimeout != null) writeConcern.wtimeout = col.writeConcern.wtimeout;","","  // Options level write concern","  if(options && options.w != null) writeConcern.w = options.w;","  if(options && options.wtimeout != null) writeConcern.wtimeout = options.wtimeout;","  if(options && options.j != null) writeConcern.j = options.j;","  if(options && options.fsync != null) writeConcern.fsync = options.fsync;","","  // Return write concern","  return writeConcern;","}","","/**"," * Helper function to define properties"," * @ignore"," */","var defineReadOnlyProperty = function(self, name, value) {","  Object.defineProperty(self, name, {","      enumerable: true","    , get: function() {","      return value;","    }","  });","}","","/**"," * Keeps the state of a unordered batch so we can rewrite the results"," * correctly after command execution"," * @ignore"," */","var Batch = function(batchType, originalZeroIndex) {","  this.originalZeroIndex = originalZeroIndex;","  this.currentIndex = 0;","  this.originalIndexes = [];","  this.batchType = batchType;","  this.operations = [];","  this.size = 0;","  this.sizeBytes = 0;","}","","/**"," * Wraps a legacy operation so we can correctly rewrite it's error"," * @ignore"," */","var LegacyOp = function(batchType, operation, index) {","  this.batchType = batchType;","  this.index = index;","  this.operation = operation;","}","","/**"," * Create a new BulkWriteResult instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @property {boolean} ok Did bulk operation correctly execute"," * @property {number} nInserted number of inserted documents"," * @property {number} nUpdated number of documents updated logically"," * @property {number} nUpserted Number of upserted documents"," * @property {number} nModified Number of documents updated physically on disk"," * @property {number} nRemoved Number of removed documents"," * @return {BulkWriteResult} a BulkWriteResult instance"," */","var BulkWriteResult = function(bulkResult) {","  defineReadOnlyProperty(this, \"ok\", bulkResult.ok);","  defineReadOnlyProperty(this, \"nInserted\", bulkResult.nInserted);","  defineReadOnlyProperty(this, \"nUpserted\", bulkResult.nUpserted);","  defineReadOnlyProperty(this, \"nMatched\", bulkResult.nMatched);","  defineReadOnlyProperty(this, \"nModified\", bulkResult.nModified);","  defineReadOnlyProperty(this, \"nRemoved\", bulkResult.nRemoved);","","  /**","   * Return an array of inserted ids","   *","   * @return {object[]}","   */","  this.getInsertedIds = function() {","    return bulkResult.insertedIds;","  }","","  /**","   * Return an array of upserted ids","   *","   * @return {object[]}","   */","  this.getUpsertedIds = function() {","    return bulkResult.upserted;","  }","","  /**","   * Return the upserted id at position x","   *","   * @param {number} index the number of the upserted id to return, returns undefined if no result for passed in index","   * @return {object}","   */","  this.getUpsertedIdAt = function(index) {","    return bulkResult.upserted[index];","  }","","  /**","   * Return raw internal result","   *","   * @return {object}","   */","  this.getRawResponse = function() {","    return bulkResult;","  }","","  /**","   * Returns true if the bulk operation contains a write error","   *","   * @return {boolean}","   */","  this.hasWriteErrors = function() {","    return bulkResult.writeErrors.length > 0;","  }","","  /**","   * Returns the number of write errors off the bulk operation","   *","   * @return {number}","   */","  this.getWriteErrorCount = function() {","    return bulkResult.writeErrors.length;","  }","","  /**","   * Returns a specific write error object","   *","   * @return {WriteError}","   */","  this.getWriteErrorAt = function(index) {","    if(index < bulkResult.writeErrors.length) {","      return bulkResult.writeErrors[index];","    }","    return null;","  }","","  /**","   * Retrieve all write errors","   *","   * @return {object[]}","   */","  this.getWriteErrors = function() {","    return bulkResult.writeErrors;","  }","","  /**","   * Retrieve lastOp if available","   *","   * @return {object}","   */","  this.getLastOp = function() {","    return bulkResult.lastOp;","  }","","  /**","   * Retrieve the write concern error if any","   *","   * @return {WriteConcernError}","   */","  this.getWriteConcernError = function() {","    if(bulkResult.writeConcernErrors.length == 0) {","      return null;","    } else if(bulkResult.writeConcernErrors.length == 1) {","      // Return the error","      return bulkResult.writeConcernErrors[0];","    } else {","","      // Combine the errors","      var errmsg = \"\";","      for(var i = 0; i < bulkResult.writeConcernErrors.length; i++) {","        var err = bulkResult.writeConcernErrors[i];","        errmsg = errmsg + err.errmsg;","","        // TODO: Something better","        if(i == 0) errmsg = errmsg + \" and \";","      }","","      return new WriteConcernError({ errmsg : errmsg, code : WRITE_CONCERN_ERROR });","    }","  }","","  this.toJSON = function() {","    return bulkResult;","  }","","  this.toString = function() {","    return \"BulkWriteResult(\" + this.toJSON(bulkResult) + \")\";","  }","","  this.isOk = function() {","    return bulkResult.ok == 1;","  }","}","","/**"," * Create a new WriteConcernError instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @property {number} code Write concern error code."," * @property {string} errmsg Write concern error message."," * @return {WriteConcernError} a WriteConcernError instance"," */","var WriteConcernError = function(err) {","  if(!(this instanceof WriteConcernError)) return new WriteConcernError(err);","","  // Define properties","  defineReadOnlyProperty(this, \"code\", err.code);","  defineReadOnlyProperty(this, \"errmsg\", err.errmsg);","","  this.toJSON = function() {","    return {code: err.code, errmsg: err.errmsg};","  }","","  this.toString = function() {","    return \"WriteConcernError(\" + err.errmsg + \")\";","  }","}","","/**"," * Create a new WriteError instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @property {number} code Write concern error code."," * @property {number} index Write concern error original bulk operation index."," * @property {string} errmsg Write concern error message."," * @return {WriteConcernError} a WriteConcernError instance"," */","var WriteError = function(err) {","  if(!(this instanceof WriteError)) return new WriteError(err);","","  // Define properties","  defineReadOnlyProperty(this, \"code\", err.code);","  defineReadOnlyProperty(this, \"index\", err.index);","  defineReadOnlyProperty(this, \"errmsg\", err.errmsg);","","  //","  // Define access methods","  this.getOperation = function() {","    return err.op;","  }","","  this.toJSON = function() {","    return {code: err.code, index: err.index, errmsg: err.errmsg, op: err.op};","  }","","  this.toString = function() {","    return \"WriteError(\" + JSON.stringify(this.toJSON()) + \")\";","  }","}","","/**"," * Merges results into shared data structure"," * @ignore"," */","var mergeBatchResults = function(ordered, batch, bulkResult, err, result) {","  // If we have an error set the result to be the err object","  if(err) {","    result = err;","  } else if(result && result.result) {","    result = result.result;","  } else if(result == null) {","    return;","  }","","  // Do we have a top level error stop processing and return","  if(result.ok == 0 && bulkResult.ok == 1) {","    bulkResult.ok = 0;","","    var writeError = {","        index: 0","      , code: result.code || 0","      , errmsg: result.message","      , op: batch.operations[0]","    };","","    bulkResult.writeErrors.push(new WriteError(writeError));","    return;","  } else if(result.ok == 0 && bulkResult.ok == 0) {","    return;","  }","","  // Deal with opTime if available","  if(result.opTime || result.lastOp) {","    var opTime = result.lastOp || result.opTime;","    var lastOpTS = null;","    var lastOpT = null;","","    // We have a time stamp","    if(opTime && opTime._bsontype == 'Timestamp') {","      if(bulkResult.lastOp == null) {","        bulkResult.lastOp = opTime;","      } else if(opTime.greaterThan(bulkResult.lastOp)) {","        bulkResult.lastOp = opTime;","      }","    } else {","      // Existing TS","      if(bulkResult.lastOp) {","        lastOpTS = typeof bulkResult.lastOp.ts == 'number'","          ? Long.fromNumber(bulkResult.lastOp.ts) : bulkResult.lastOp.ts;","        lastOpT = typeof bulkResult.lastOp.t == 'number'","          ? Long.fromNumber(bulkResult.lastOp.t) : bulkResult.lastOp.t;","      }","","      // Current OpTime TS","      var opTimeTS = typeof opTime.ts == 'number'","        ? Long.fromNumber(opTime.ts) : opTime.ts;","      var opTimeT = typeof opTime.t == 'number'","        ? Long.fromNumber(opTime.t) : opTime.t;","","      // Compare the opTime's","      if(bulkResult.lastOp == null) {","        bulkResult.lastOp = opTime;","      } else if(opTimeTS.greaterThan(lastOpTS)) {","        bulkResult.lastOp = opTime;","      } else if(opTimeTS.equals(lastOpTS)) {","        if(opTimeT.greaterThan(lastOpT)) {","          bulkResult.lastOp = opTime;","        }","      }","    }","  }","","  // If we have an insert Batch type","  if(batch.batchType == INSERT && result.n) {","    bulkResult.nInserted = bulkResult.nInserted + result.n;","  }","","  // If we have an insert Batch type","  if(batch.batchType == REMOVE && result.n) {","    bulkResult.nRemoved = bulkResult.nRemoved + result.n;","  }","","  var nUpserted = 0;","","  // We have an array of upserted values, we need to rewrite the indexes","  if(Array.isArray(result.upserted)) {","    nUpserted = result.upserted.length;","","    for(var i = 0; i < result.upserted.length; i++) {","      bulkResult.upserted.push({","          index: result.upserted[i].index + batch.originalZeroIndex","        , _id: result.upserted[i]._id","      });","    }","  } else if(result.upserted) {","","    nUpserted = 1;","","    bulkResult.upserted.push({","        index: batch.originalZeroIndex","      , _id: result.upserted","    });","  }","","  // If we have an update Batch type","  if(batch.batchType == UPDATE && result.n) {","    var nModified = result.nModified;","    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;","    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);","","    if(typeof nModified == 'number') {","      bulkResult.nModified = bulkResult.nModified + nModified;","    } else {","      bulkResult.nModified = null;","    }","  }","","  if(Array.isArray(result.writeErrors)) {","    for(i = 0; i < result.writeErrors.length; i++) {","","      writeError = {","          index: batch.originalZeroIndex + result.writeErrors[i].index","        , code: result.writeErrors[i].code","        , errmsg: result.writeErrors[i].errmsg","        , op: batch.operations[result.writeErrors[i].index]","      };","","      bulkResult.writeErrors.push(new WriteError(writeError));","    }","  }","","  if(result.writeConcernError) {","    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));","  }","}","","//","// Clone the options","var cloneOptions = function(options) {","  var clone = {};","  var keys = Object.keys(options);","  for(var i = 0; i < keys.length; i++) {","    clone[keys[i]] = options[keys[i]];","  }","","  return clone;","}","","// Exports symbols","exports.BulkWriteResult = BulkWriteResult;","exports.WriteError = WriteError;","exports.Batch = Batch;","exports.LegacyOp = LegacyOp;","exports.mergeBatchResults = mergeBatchResults;","exports.cloneOptions = cloneOptions;","exports.writeConcern = writeConcern;","exports.INVALID_BSON_ERROR = INVALID_BSON_ERROR;","exports.WRITE_CONCERN_ERROR = WRITE_CONCERN_ERROR;","exports.MULTIPLE_ERROR = MULTIPLE_ERROR;","exports.UNKNOWN_ERROR = UNKNOWN_ERROR;","exports.INSERT = INSERT;","exports.UPDATE = UPDATE;","exports.REMOVE = REMOVE;",""],"l":{"3":1,"7":1,"8":1,"9":1,"10":1,"13":1,"14":1,"15":1,"19":1,"20":0,"23":0,"24":0,"25":0,"26":0,"29":0,"30":0,"31":0,"32":0,"35":0,"42":1,"43":0,"46":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"70":1,"71":0,"72":0,"73":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"101":0,"102":0,"110":0,"111":0,"120":0,"121":0,"129":0,"130":0,"138":0,"139":0,"147":0,"148":0,"156":0,"157":0,"158":0,"160":0,"168":0,"169":0,"177":0,"178":0,"186":0,"187":0,"188":0,"189":0,"191":0,"195":0,"196":0,"197":0,"198":0,"201":0,"204":0,"208":0,"209":0,"212":0,"213":0,"216":0,"217":0,"229":1,"230":0,"233":0,"234":0,"236":0,"237":0,"240":0,"241":0,"254":1,"255":0,"258":0,"259":0,"260":0,"264":0,"265":0,"268":0,"269":0,"272":0,"273":0,"281":1,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"292":0,"293":0,"295":0,"302":0,"303":0,"304":0,"305":0,"309":0,"310":0,"311":0,"312":0,"315":0,"316":0,"317":0,"318":0,"319":0,"323":0,"324":0,"326":0,"331":0,"333":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"350":0,"351":0,"355":0,"356":0,"359":0,"362":0,"363":0,"365":0,"366":0,"371":0,"373":0,"375":0,"382":0,"383":0,"384":0,"385":0,"387":0,"388":0,"390":0,"394":0,"395":0,"397":0,"404":0,"408":0,"409":0,"415":1,"416":0,"417":0,"418":0,"419":0,"422":0,"426":1,"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/bulk/unordered.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/bulk/unordered.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":1,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":1,"181":0,"182":1,"183":1,"184":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":44}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":42},"end":{"line":37,"column":67}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":45},"end":{"line":63,"column":70}}},"4":{"name":"(anonymous_4)","line":89,"loc":{"start":{"line":89,"column":46},"end":{"line":89,"column":71}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":42},"end":{"line":100,"column":53}}},"6":{"name":"(anonymous_6)","line":112,"loc":{"start":{"line":112,"column":45},"end":{"line":112,"column":56}}},"7":{"name":"(anonymous_7)","line":132,"loc":{"start":{"line":132,"column":42},"end":{"line":132,"column":53}}},"8":{"name":"(anonymous_8)","line":148,"loc":{"start":{"line":148,"column":26},"end":{"line":148,"column":61}}},"9":{"name":"(anonymous_9)","line":213,"loc":{"start":{"line":213,"column":29},"end":{"line":213,"column":69}}},"10":{"name":"(anonymous_10)","line":306,"loc":{"start":{"line":306,"column":42},"end":{"line":306,"column":61}}},"11":{"name":"(anonymous_11)","line":319,"loc":{"start":{"line":319,"column":40},"end":{"line":319,"column":59}}},"12":{"name":"(anonymous_12)","line":334,"loc":{"start":{"line":334,"column":7},"end":{"line":334,"column":18}}},"13":{"name":"(anonymous_13)","line":339,"loc":{"start":{"line":339,"column":39},"end":{"line":339,"column":52}}},"14":{"name":"(anonymous_14)","line":399,"loc":{"start":{"line":399,"column":19},"end":{"line":399,"column":51}}},"15":{"name":"(anonymous_15)","line":405,"loc":{"start":{"line":405,"column":22},"end":{"line":405,"column":44}}},"16":{"name":"(anonymous_16)","line":449,"loc":{"start":{"line":449,"column":21},"end":{"line":449,"column":46}}},"17":{"name":"(anonymous_17)","line":453,"loc":{"start":{"line":453,"column":42},"end":{"line":453,"column":56}}},"18":{"name":"(anonymous_18)","line":491,"loc":{"start":{"line":491,"column":43},"end":{"line":491,"column":77}}},"19":{"name":"(anonymous_19)","line":514,"loc":{"start":{"line":514,"column":35},"end":{"line":514,"column":61}}},"20":{"name":"(anonymous_20)","line":515,"loc":{"start":{"line":515,"column":25},"end":{"line":515,"column":42}}},"21":{"name":"(anonymous_21)","line":528,"loc":{"start":{"line":528,"column":32},"end":{"line":528,"column":72}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":13,"column":49}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":63}},"3":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}},"4":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"5":{"start":{"line":37,"column":0},"end":{"line":53,"column":1}},"6":{"start":{"line":39,"column":2},"end":{"line":39,"column":93}},"7":{"start":{"line":42,"column":2},"end":{"line":47,"column":3}},"8":{"start":{"line":50,"column":2},"end":{"line":50,"column":26}},"9":{"start":{"line":52,"column":2},"end":{"line":52,"column":60}},"10":{"start":{"line":63,"column":0},"end":{"line":79,"column":1}},"11":{"start":{"line":65,"column":2},"end":{"line":65,"column":93}},"12":{"start":{"line":68,"column":2},"end":{"line":73,"column":3}},"13":{"start":{"line":76,"column":2},"end":{"line":76,"column":26}},"14":{"start":{"line":78,"column":2},"end":{"line":78,"column":60}},"15":{"start":{"line":89,"column":0},"end":{"line":91,"column":1}},"16":{"start":{"line":90,"column":2},"end":{"line":90,"column":33}},"17":{"start":{"line":100,"column":0},"end":{"line":103,"column":1}},"18":{"start":{"line":101,"column":2},"end":{"line":101,"column":33}},"19":{"start":{"line":102,"column":2},"end":{"line":102,"column":14}},"20":{"start":{"line":112,"column":0},"end":{"line":123,"column":1}},"21":{"start":{"line":114,"column":2},"end":{"line":117,"column":3}},"22":{"start":{"line":120,"column":2},"end":{"line":120,"column":26}},"23":{"start":{"line":122,"column":2},"end":{"line":122,"column":60}},"24":{"start":{"line":132,"column":0},"end":{"line":143,"column":1}},"25":{"start":{"line":134,"column":2},"end":{"line":137,"column":3}},"26":{"start":{"line":140,"column":2},"end":{"line":140,"column":26}},"27":{"start":{"line":142,"column":2},"end":{"line":142,"column":60}},"28":{"start":{"line":148,"column":0},"end":{"line":205,"column":1}},"29":{"start":{"line":150,"column":2},"end":{"line":152,"column":4}},"30":{"start":{"line":154,"column":2},"end":{"line":154,"column":131}},"31":{"start":{"line":154,"column":44},"end":{"line":154,"column":131}},"32":{"start":{"line":156,"column":2},"end":{"line":156,"column":30}},"33":{"start":{"line":158,"column":2},"end":{"line":164,"column":3}},"34":{"start":{"line":159,"column":4},"end":{"line":159,"column":54}},"35":{"start":{"line":160,"column":9},"end":{"line":164,"column":3}},"36":{"start":{"line":161,"column":4},"end":{"line":161,"column":54}},"37":{"start":{"line":162,"column":9},"end":{"line":164,"column":3}},"38":{"start":{"line":163,"column":4},"end":{"line":163,"column":54}},"39":{"start":{"line":167,"column":2},"end":{"line":167,"column":99}},"40":{"start":{"line":167,"column":35},"end":{"line":167,"column":99}},"41":{"start":{"line":170,"column":2},"end":{"line":178,"column":3}},"42":{"start":{"line":174,"column":4},"end":{"line":174,"column":47}},"43":{"start":{"line":177,"column":4},"end":{"line":177,"column":68}},"44":{"start":{"line":181,"column":2},"end":{"line":187,"column":3}},"45":{"start":{"line":182,"column":4},"end":{"line":182,"column":60}},"46":{"start":{"line":184,"column":4},"end":{"line":184,"column":51}},"47":{"start":{"line":185,"column":4},"end":{"line":185,"column":68}},"48":{"start":{"line":186,"column":4},"end":{"line":186,"column":52}},"49":{"start":{"line":190,"column":2},"end":{"line":197,"column":3}},"50":{"start":{"line":191,"column":4},"end":{"line":191,"column":54}},"51":{"start":{"line":192,"column":4},"end":{"line":192,"column":107}},"52":{"start":{"line":193,"column":9},"end":{"line":197,"column":3}},"53":{"start":{"line":194,"column":4},"end":{"line":194,"column":54}},"54":{"start":{"line":195,"column":9},"end":{"line":197,"column":3}},"55":{"start":{"line":196,"column":4},"end":{"line":196,"column":54}},"56":{"start":{"line":200,"column":2},"end":{"line":200,"column":60}},"57":{"start":{"line":201,"column":2},"end":{"line":201,"column":77}},"58":{"start":{"line":204,"column":2},"end":{"line":204,"column":15}},"59":{"start":{"line":213,"column":0},"end":{"line":295,"column":1}},"60":{"start":{"line":214,"column":1},"end":{"line":214,"column":42}},"61":{"start":{"line":217,"column":2},"end":{"line":217,"column":44}},"62":{"start":{"line":219,"column":2},"end":{"line":219,"column":23}},"63":{"start":{"line":223,"column":1},"end":{"line":223,"column":22}},"64":{"start":{"line":226,"column":1},"end":{"line":226,"column":26}},"65":{"start":{"line":229,"column":2},"end":{"line":230,"column":62}},"66":{"start":{"line":231,"column":2},"end":{"line":232,"column":52}},"67":{"start":{"line":235,"column":2},"end":{"line":235,"column":85}},"68":{"start":{"line":238,"column":2},"end":{"line":238,"column":46}},"69":{"start":{"line":241,"column":2},"end":{"line":244,"column":3}},"70":{"start":{"line":242,"column":4},"end":{"line":243,"column":54}},"71":{"start":{"line":247,"column":2},"end":{"line":258,"column":4}},"72":{"start":{"line":261,"column":2},"end":{"line":294,"column":3}},"73":{"start":{"line":297,"column":0},"end":{"line":297,"column":113}},"74":{"start":{"line":306,"column":0},"end":{"line":309,"column":1}},"75":{"start":{"line":307,"column":2},"end":{"line":307,"column":120}},"76":{"start":{"line":307,"column":90},"end":{"line":307,"column":120}},"77":{"start":{"line":308,"column":2},"end":{"line":308,"column":60}},"78":{"start":{"line":319,"column":0},"end":{"line":330,"column":1}},"79":{"start":{"line":320,"column":2},"end":{"line":322,"column":3}},"80":{"start":{"line":321,"column":4},"end":{"line":321,"column":65}},"81":{"start":{"line":325,"column":2},"end":{"line":327,"column":3}},"82":{"start":{"line":329,"column":2},"end":{"line":329,"column":42}},"83":{"start":{"line":332,"column":0},"end":{"line":337,"column":3}},"84":{"start":{"line":335,"column":4},"end":{"line":335,"column":31}},"85":{"start":{"line":339,"column":0},"end":{"line":395,"column":1}},"86":{"start":{"line":340,"column":2},"end":{"line":340,"column":31}},"87":{"start":{"line":343,"column":2},"end":{"line":344,"column":94}},"88":{"start":{"line":347,"column":2},"end":{"line":352,"column":3}},"89":{"start":{"line":350,"column":4},"end":{"line":350,"column":65}},"90":{"start":{"line":351,"column":4},"end":{"line":351,"column":61}},"91":{"start":{"line":355,"column":2},"end":{"line":360,"column":3}},"92":{"start":{"line":356,"column":4},"end":{"line":356,"column":61}},"93":{"start":{"line":357,"column":4},"end":{"line":357,"column":95}},"94":{"start":{"line":358,"column":4},"end":{"line":358,"column":47}},"95":{"start":{"line":358,"column":23},"end":{"line":358,"column":47}},"96":{"start":{"line":359,"column":4},"end":{"line":359,"column":63}},"97":{"start":{"line":363,"column":2},"end":{"line":366,"column":3}},"98":{"start":{"line":364,"column":4},"end":{"line":364,"column":41}},"99":{"start":{"line":365,"column":4},"end":{"line":365,"column":61}},"100":{"start":{"line":369,"column":2},"end":{"line":373,"column":3}},"101":{"start":{"line":370,"column":4},"end":{"line":370,"column":37}},"102":{"start":{"line":371,"column":4},"end":{"line":371,"column":49}},"103":{"start":{"line":372,"column":4},"end":{"line":372,"column":63}},"104":{"start":{"line":376,"column":2},"end":{"line":382,"column":3}},"105":{"start":{"line":377,"column":4},"end":{"line":377,"column":99}},"106":{"start":{"line":377,"column":65},"end":{"line":377,"column":99}},"107":{"start":{"line":378,"column":4},"end":{"line":378,"column":66}},"108":{"start":{"line":379,"column":9},"end":{"line":382,"column":3}},"109":{"start":{"line":380,"column":4},"end":{"line":380,"column":117}},"110":{"start":{"line":380,"column":74},"end":{"line":380,"column":117}},"111":{"start":{"line":381,"column":4},"end":{"line":381,"column":75}},"112":{"start":{"line":384,"column":2},"end":{"line":391,"column":3}},"113":{"start":{"line":385,"column":4},"end":{"line":388,"column":5}},"114":{"start":{"line":386,"column":6},"end":{"line":386,"column":109}},"115":{"start":{"line":386,"column":71},"end":{"line":386,"column":109}},"116":{"start":{"line":387,"column":6},"end":{"line":387,"column":65}},"117":{"start":{"line":390,"column":4},"end":{"line":390,"column":11}},"118":{"start":{"line":394,"column":2},"end":{"line":394,"column":134}},"119":{"start":{"line":399,"column":0},"end":{"line":445,"column":1}},"120":{"start":{"line":400,"column":2},"end":{"line":400,"column":37}},"121":{"start":{"line":401,"column":2},"end":{"line":403,"column":3}},"122":{"start":{"line":402,"column":4},"end":{"line":402,"column":52}},"123":{"start":{"line":405,"column":2},"end":{"line":414,"column":3}},"124":{"start":{"line":407,"column":2},"end":{"line":409,"column":3}},"125":{"start":{"line":408,"column":3},"end":{"line":408,"column":40}},"126":{"start":{"line":412,"column":4},"end":{"line":412,"column":23}},"127":{"start":{"line":412,"column":12},"end":{"line":412,"column":23}},"128":{"start":{"line":413,"column":4},"end":{"line":413,"column":100}},"129":{"start":{"line":417,"column":1},"end":{"line":419,"column":2}},"130":{"start":{"line":418,"column":2},"end":{"line":418,"column":47}},"131":{"start":{"line":422,"column":1},"end":{"line":424,"column":2}},"132":{"start":{"line":423,"column":2},"end":{"line":423,"column":40}},"133":{"start":{"line":427,"column":2},"end":{"line":429,"column":3}},"134":{"start":{"line":428,"column":4},"end":{"line":428,"column":49}},"135":{"start":{"line":431,"column":2},"end":{"line":444,"column":3}},"136":{"start":{"line":432,"column":4},"end":{"line":438,"column":5}},"137":{"start":{"line":433,"column":6},"end":{"line":433,"column":105}},"138":{"start":{"line":434,"column":11},"end":{"line":438,"column":5}},"139":{"start":{"line":435,"column":6},"end":{"line":435,"column":105}},"140":{"start":{"line":436,"column":11},"end":{"line":438,"column":5}},"141":{"start":{"line":437,"column":6},"end":{"line":437,"column":105}},"142":{"start":{"line":441,"column":4},"end":{"line":441,"column":15}},"143":{"start":{"line":443,"column":4},"end":{"line":443,"column":98}},"144":{"start":{"line":449,"column":0},"end":{"line":469,"column":1}},"145":{"start":{"line":450,"column":2},"end":{"line":450,"column":56}},"146":{"start":{"line":452,"column":2},"end":{"line":468,"column":3}},"147":{"start":{"line":453,"column":4},"end":{"line":467,"column":7}},"148":{"start":{"line":455,"column":3},"end":{"line":455,"column":23}},"149":{"start":{"line":455,"column":11},"end":{"line":455,"column":23}},"150":{"start":{"line":457,"column":6},"end":{"line":457,"column":64}},"151":{"start":{"line":460,"column":6},"end":{"line":466,"column":7}},"152":{"start":{"line":462,"column":4},"end":{"line":462,"column":53}},"153":{"start":{"line":462,"column":14},"end":{"line":462,"column":53}},"154":{"start":{"line":464,"column":8},"end":{"line":464,"column":112}},"155":{"start":{"line":465,"column":8},"end":{"line":465,"column":80}},"156":{"start":{"line":491,"column":0},"end":{"line":520,"column":1}},"157":{"start":{"line":492,"column":2},"end":{"line":492,"column":18}},"158":{"start":{"line":493,"column":2},"end":{"line":493,"column":67}},"159":{"start":{"line":493,"column":22},"end":{"line":493,"column":67}},"160":{"start":{"line":494,"column":2},"end":{"line":498,"column":3}},"161":{"start":{"line":495,"column":4},"end":{"line":495,"column":29}},"162":{"start":{"line":496,"column":9},"end":{"line":498,"column":3}},"163":{"start":{"line":497,"column":4},"end":{"line":497,"column":40}},"164":{"start":{"line":501,"column":2},"end":{"line":501,"column":79}},"165":{"start":{"line":501,"column":32},"end":{"line":501,"column":79}},"166":{"start":{"line":502,"column":2},"end":{"line":502,"column":79}},"167":{"start":{"line":502,"column":32},"end":{"line":502,"column":79}},"168":{"start":{"line":503,"column":2},"end":{"line":503,"column":79}},"169":{"start":{"line":503,"column":32},"end":{"line":503,"column":79}},"170":{"start":{"line":506,"column":2},"end":{"line":508,"column":3}},"171":{"start":{"line":507,"column":4},"end":{"line":507,"column":62}},"172":{"start":{"line":511,"column":2},"end":{"line":511,"column":74}},"173":{"start":{"line":511,"column":36},"end":{"line":511,"column":74}},"174":{"start":{"line":514,"column":2},"end":{"line":519,"column":5}},"175":{"start":{"line":515,"column":4},"end":{"line":518,"column":7}},"176":{"start":{"line":516,"column":6},"end":{"line":516,"column":33}},"177":{"start":{"line":516,"column":14},"end":{"line":516,"column":33}},"178":{"start":{"line":517,"column":6},"end":{"line":517,"column":17}},"179":{"start":{"line":522,"column":0},"end":{"line":522,"column":63}},"180":{"start":{"line":528,"column":0},"end":{"line":530,"column":1}},"181":{"start":{"line":529,"column":1},"end":{"line":529,"column":66}},"182":{"start":{"line":532,"column":0},"end":{"line":532,"column":74}},"183":{"start":{"line":533,"column":0},"end":{"line":533,"column":43}},"184":{"start":{"line":534,"column":0},"end":{"line":534,"column":45}}},"branchMap":{"1":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":61},"end":{"line":39,"column":84}},{"start":{"line":39,"column":87},"end":{"line":39,"column":92}}]},"2":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":61},"end":{"line":65,"column":84}},{"start":{"line":65,"column":87},"end":{"line":65,"column":92}}]},"3":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":2},"end":{"line":154,"column":2}},{"start":{"line":154,"column":2},"end":{"line":154,"column":2}}]},"4":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"5":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":9},"end":{"line":160,"column":9}},{"start":{"line":160,"column":9},"end":{"line":160,"column":9}}]},"6":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":9},"end":{"line":162,"column":9}},{"start":{"line":162,"column":9},"end":{"line":162,"column":9}}]},"7":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"8":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"9":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":6},"end":{"line":170,"column":66}},{"start":{"line":171,"column":8},"end":{"line":171,"column":80}},{"start":{"line":172,"column":8},"end":{"line":172,"column":49}}]},"10":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"11":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"12":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":9},"end":{"line":193,"column":9}},{"start":{"line":193,"column":9},"end":{"line":193,"column":9}}]},"13":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":9},"end":{"line":195,"column":9}},{"start":{"line":195,"column":9},"end":{"line":195,"column":9}}]},"14":{"line":214,"type":"cond-expr","locations":[{"start":{"line":214,"column":29},"end":{"line":214,"column":31}},{"start":{"line":214,"column":34},"end":{"line":214,"column":41}}]},"15":{"line":229,"type":"cond-expr","locations":[{"start":{"line":230,"column":6},"end":{"line":230,"column":44}},{"start":{"line":230,"column":48},"end":{"line":230,"column":60}}]},"16":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":26},"end":{"line":229,"column":46}},{"start":{"line":229,"column":50},"end":{"line":229,"column":88}}]},"17":{"line":231,"type":"cond-expr","locations":[{"start":{"line":232,"column":6},"end":{"line":232,"column":44}},{"start":{"line":232,"column":47},"end":{"line":232,"column":51}}]},"18":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":26},"end":{"line":231,"column":46}},{"start":{"line":231,"column":50},"end":{"line":231,"column":88}}]},"19":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"20":{"line":242,"type":"cond-expr","locations":[{"start":{"line":243,"column":6},"end":{"line":243,"column":20}},{"start":{"line":243,"column":23},"end":{"line":243,"column":53}}]},"21":{"line":293,"type":"cond-expr","locations":[{"start":{"line":293,"column":87},"end":{"line":293,"column":119}},{"start":{"line":293,"column":122},"end":{"line":293,"column":127}}]},"22":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":2},"end":{"line":307,"column":2}},{"start":{"line":307,"column":2},"end":{"line":307,"column":2}}]},"23":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":5},"end":{"line":307,"column":64}},{"start":{"line":307,"column":68},"end":{"line":307,"column":88}}]},"24":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":2},"end":{"line":320,"column":2}},{"start":{"line":320,"column":2},"end":{"line":320,"column":2}}]},"25":{"line":343,"type":"cond-expr","locations":[{"start":{"line":344,"column":6},"end":{"line":344,"column":40}},{"start":{"line":344,"column":43},"end":{"line":344,"column":93}}]},"26":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":2},"end":{"line":347,"column":2}},{"start":{"line":347,"column":2},"end":{"line":347,"column":2}}]},"27":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":6},"end":{"line":347,"column":18}},{"start":{"line":347,"column":22},"end":{"line":347,"column":36}},{"start":{"line":348,"column":8},"end":{"line":348,"column":21}},{"start":{"line":348,"column":25},"end":{"line":348,"column":40}},{"start":{"line":349,"column":8},"end":{"line":349,"column":21}},{"start":{"line":349,"column":25},"end":{"line":349,"column":40}}]},"28":{"line":350,"type":"cond-expr","locations":[{"start":{"line":350,"column":52},"end":{"line":350,"column":57}},{"start":{"line":350,"column":60},"end":{"line":350,"column":64}}]},"29":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":20},"end":{"line":350,"column":32}},{"start":{"line":350,"column":36},"end":{"line":350,"column":49}}]},"30":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"31":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":5},"end":{"line":355,"column":17}},{"start":{"line":355,"column":21},"end":{"line":355,"column":34}},{"start":{"line":355,"column":38},"end":{"line":355,"column":51}}]},"32":{"line":356,"type":"cond-expr","locations":[{"start":{"line":356,"column":48},"end":{"line":356,"column":53}},{"start":{"line":356,"column":56},"end":{"line":356,"column":60}}]},"33":{"line":356,"type":"binary-expr","locations":[{"start":{"line":356,"column":16},"end":{"line":356,"column":28}},{"start":{"line":356,"column":32},"end":{"line":356,"column":45}}]},"34":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":43},"end":{"line":357,"column":57}},{"start":{"line":357,"column":61},"end":{"line":357,"column":80}}]},"35":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"36":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"37":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":5},"end":{"line":363,"column":17}},{"start":{"line":363,"column":21},"end":{"line":363,"column":34}},{"start":{"line":363,"column":39},"end":{"line":363,"column":51}},{"start":{"line":363,"column":55},"end":{"line":363,"column":69}},{"start":{"line":363,"column":74},"end":{"line":363,"column":87}},{"start":{"line":363,"column":91},"end":{"line":363,"column":106}}]},"38":{"line":364,"type":"cond-expr","locations":[{"start":{"line":364,"column":35},"end":{"line":364,"column":36}},{"start":{"line":364,"column":39},"end":{"line":364,"column":40}}]},"39":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":2},"end":{"line":369,"column":2}},{"start":{"line":369,"column":2},"end":{"line":369,"column":2}}]},"40":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":5},"end":{"line":369,"column":17}},{"start":{"line":369,"column":21},"end":{"line":369,"column":34}}]},"41":{"line":370,"type":"cond-expr","locations":[{"start":{"line":370,"column":31},"end":{"line":370,"column":32}},{"start":{"line":370,"column":35},"end":{"line":370,"column":36}}]},"42":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":2},"end":{"line":376,"column":2}},{"start":{"line":376,"column":2},"end":{"line":376,"column":2}}]},"43":{"line":376,"type":"binary-expr","locations":[{"start":{"line":376,"column":5},"end":{"line":376,"column":17}},{"start":{"line":376,"column":21},"end":{"line":376,"column":50}}]},"44":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":377,"column":4}},{"start":{"line":377,"column":4},"end":{"line":377,"column":4}}]},"45":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":7},"end":{"line":377,"column":35}},{"start":{"line":377,"column":39},"end":{"line":377,"column":63}}]},"46":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":9},"end":{"line":379,"column":9}},{"start":{"line":379,"column":9},"end":{"line":379,"column":9}}]},"47":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":12},"end":{"line":379,"column":24}},{"start":{"line":379,"column":28},"end":{"line":379,"column":49}}]},"48":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":4},"end":{"line":380,"column":4}},{"start":{"line":380,"column":4},"end":{"line":380,"column":4}}]},"49":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":7},"end":{"line":380,"column":35}},{"start":{"line":380,"column":39},"end":{"line":380,"column":72}}]},"50":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":2},"end":{"line":384,"column":2}},{"start":{"line":384,"column":2},"end":{"line":384,"column":2}}]},"51":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":6}},{"start":{"line":386,"column":6},"end":{"line":386,"column":6}}]},"52":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":9},"end":{"line":386,"column":37}},{"start":{"line":386,"column":41},"end":{"line":386,"column":69}}]},"53":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":2},"end":{"line":401,"column":2}},{"start":{"line":401,"column":2},"end":{"line":401,"column":2}}]},"54":{"line":407,"type":"if","locations":[{"start":{"line":407,"column":2},"end":{"line":407,"column":2}},{"start":{"line":407,"column":2},"end":{"line":407,"column":2}}]},"55":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":5},"end":{"line":407,"column":8}},{"start":{"line":407,"column":12},"end":{"line":407,"column":22}},{"start":{"line":407,"column":26},"end":{"line":407,"column":29}},{"start":{"line":407,"column":33},"end":{"line":407,"column":44}}]},"56":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":4},"end":{"line":412,"column":4}},{"start":{"line":412,"column":4},"end":{"line":412,"column":4}}]},"57":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":1},"end":{"line":417,"column":1}},{"start":{"line":417,"column":1},"end":{"line":417,"column":1}}]},"58":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":1},"end":{"line":422,"column":1}},{"start":{"line":422,"column":1},"end":{"line":422,"column":1}}]},"59":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":2},"end":{"line":427,"column":2}},{"start":{"line":427,"column":2},"end":{"line":427,"column":2}}]},"60":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":4},"end":{"line":432,"column":4}},{"start":{"line":432,"column":4},"end":{"line":432,"column":4}}]},"61":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":11},"end":{"line":434,"column":11}},{"start":{"line":434,"column":11},"end":{"line":434,"column":11}}]},"62":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":11},"end":{"line":436,"column":11}},{"start":{"line":436,"column":11},"end":{"line":436,"column":11}}]},"63":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":3},"end":{"line":455,"column":3}},{"start":{"line":455,"column":3},"end":{"line":455,"column":3}}]},"64":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":6},"end":{"line":460,"column":6}},{"start":{"line":460,"column":6},"end":{"line":460,"column":6}}]},"65":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":4},"end":{"line":462,"column":4}},{"start":{"line":462,"column":4},"end":{"line":462,"column":4}}]},"66":{"line":464,"type":"cond-expr","locations":[{"start":{"line":464,"column":63},"end":{"line":464,"column":104}},{"start":{"line":464,"column":107},"end":{"line":464,"column":111}}]},"67":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"68":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":494,"column":2}},{"start":{"line":494,"column":2},"end":{"line":494,"column":2}}]},"69":{"line":496,"type":"if","locations":[{"start":{"line":496,"column":9},"end":{"line":496,"column":9}},{"start":{"line":496,"column":9},"end":{"line":496,"column":9}}]},"70":{"line":496,"type":"binary-expr","locations":[{"start":{"line":496,"column":12},"end":{"line":496,"column":25}},{"start":{"line":496,"column":29},"end":{"line":496,"column":61}}]},"71":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":501,"column":2}},{"start":{"line":501,"column":2},"end":{"line":501,"column":2}}]},"72":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":2},"end":{"line":502,"column":2}},{"start":{"line":502,"column":2},"end":{"line":502,"column":2}}]},"73":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"74":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":2},"end":{"line":506,"column":2}},{"start":{"line":506,"column":2},"end":{"line":506,"column":2}}]},"75":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":2},"end":{"line":511,"column":2}},{"start":{"line":511,"column":2},"end":{"line":511,"column":2}}]},"76":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":6},"end":{"line":516,"column":6}},{"start":{"line":516,"column":6},"end":{"line":516,"column":6}}]}},"code":["\"use strict\";","","var common = require('./common')","\t, utils = require('../utils')","  , toError = require('../utils').toError","\t, handleCallback = require('../utils').handleCallback","  , shallowClone = utils.shallowClone","  , BulkWriteResult = common.BulkWriteResult","  , ObjectID = require('mongodb-core').BSON.ObjectID","\t, BSON = require('mongodb-core').BSON","  , Define = require('../metadata')","  , Batch = common.Batch","  , mergeBatchResults = common.mergeBatchResults;","","var bson = new BSON([BSON.Binary, BSON.Code, BSON.DBRef, BSON.Decimal128,","\tBSON.Double, BSON.Int32, BSON.Long, BSON.Map, BSON.MaxKey, BSON.MinKey,","\tBSON.ObjectId, BSON.BSONRegExp, BSON.Symbol, BSON.Timestamp]);","","/**"," * Create a FindOperatorsUnordered instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @property {number} length Get the number of operations in the bulk."," * @return {FindOperatorsUnordered} a FindOperatorsUnordered instance."," */","var FindOperatorsUnordered = function(self) {","  this.s = self.s;","}","","/**"," * Add a single update document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.update = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , u: updateDocument","    , multi: true","    , upsert: upsert","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","}","","/**"," * Add a single update one document to the bulk operation"," *"," * @method"," * @param {object} doc update operations"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.updateOne = function(updateDocument) {","  // Perform upsert","  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;","","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , u: updateDocument","    , multi: false","    , upsert: upsert","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the update document to the list","  return addToOperationsList(this, common.UPDATE, document);","}","","/**"," * Add a replace one operation to the bulk operation"," *"," * @method"," * @param {object} doc the new document to replace the existing one with"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.replaceOne = function(updateDocument) {","  this.updateOne(updateDocument);","}","","/**"," * Upsert modifier for update bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {FindOperatorsUnordered}"," */","FindOperatorsUnordered.prototype.upsert = function() {","  this.s.currentOp.upsert = true;","  return this;","}","","/**"," * Add a remove one operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.removeOne = function() {","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , limit: 1","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","}","","/**"," * Add a remove operation to the bulk operation"," *"," * @method"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","FindOperatorsUnordered.prototype.remove = function() {","  // Establish the update command","  var document = {","      q: this.s.currentOp.selector","    , limit: 0","  }","","  // Clear out current Op","  this.s.currentOp = null;","  // Add the remove document to the list","  return addToOperationsList(this, common.REMOVE, document);","}","","//","// Add to the operations list","//","var addToOperationsList = function(_self, docType, document) {","  // Get the bsonSize","  var bsonSize = bson.calculateObjectSize(document, {","\t\tcheckKeys: false,","\t});","  // Throw error if the doc is bigger than the max BSON size","  if(bsonSize >= _self.s.maxBatchSizeBytes) throw toError(\"document is larger than the maximum size \" + _self.s.maxBatchSizeBytes);","  // Holds the current batch","  _self.s.currentBatch = null;","  // Get the right type of batch","  if(docType == common.INSERT) {","    _self.s.currentBatch = _self.s.currentInsertBatch;","  } else if(docType == common.UPDATE) {","    _self.s.currentBatch = _self.s.currentUpdateBatch;","  } else if(docType == common.REMOVE) {","    _self.s.currentBatch = _self.s.currentRemoveBatch;","  }","","  // Create a new batch object if we don't have a current one","  if(_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","","  // Check if we need to create a new batch","  if(((_self.s.currentBatch.size + 1) >= _self.s.maxWriteBatchSize)","    || ((_self.s.currentBatch.sizeBytes + bsonSize) >= _self.s.maxBatchSizeBytes)","    || (_self.s.currentBatch.batchType != docType)) {","    // Save the batch to the execution stack","    _self.s.batches.push(_self.s.currentBatch);","","    // Create a new batch","    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);","  }","","  // We have an array of documents","  if(Array.isArray(document)) {","    throw toError(\"operation passed in cannot be an Array\");","  } else {","    _self.s.currentBatch.operations.push(document);","    _self.s.currentBatch.originalIndexes.push(_self.s.currentIndex);","    _self.s.currentIndex = _self.s.currentIndex + 1;","  }","","  // Save back the current Batch to the right type","  if(docType == common.INSERT) {","    _self.s.currentInsertBatch = _self.s.currentBatch;","    _self.s.bulkResult.insertedIds.push({index: _self.s.bulkResult.insertedIds.length, _id: document._id});","  } else if(docType == common.UPDATE) {","    _self.s.currentUpdateBatch = _self.s.currentBatch;","  } else if(docType == common.REMOVE) {","    _self.s.currentRemoveBatch = _self.s.currentBatch;","  }","","  // Update current batch size","  _self.s.currentBatch.size = _self.s.currentBatch.size + 1;","  _self.s.currentBatch.sizeBytes = _self.s.currentBatch.sizeBytes + bsonSize;","","  // Return self","  return _self;","}","","/**"," * Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @property {number} length Get the number of operations in the bulk."," * @return {UnorderedBulkOperation} a UnorderedBulkOperation instance."," */","var UnorderedBulkOperation = function(topology, collection, options) {","\toptions = options == null ? {} : options;","","\t// Get the namesspace for the write operations","  var namespace = collection.collectionName;","  // Used to mark operation as executed","  var executed = false;","","\t// Current item","  // var currentBatch = null;","\tvar currentOp = null;","","\t// Handle to the bson serializer, used to calculate running sizes","\tvar bson = topology.bson;","","  // Set max byte size","  var maxBatchSizeBytes = topology.isMasterDoc && topology.isMasterDoc.maxBsonObjectSize","    ? topology.isMasterDoc.maxBsonObjectSize : (1024*1025*16);","  var maxWriteBatchSize = topology.isMasterDoc && topology.isMasterDoc.maxWriteBatchSize","    ? topology.isMasterDoc.maxWriteBatchSize : 1000;","","  // Get the write concern","  var writeConcern = common.writeConcern(shallowClone(options), collection, options);","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Final results","  var bulkResult = {","      ok: 1","    , writeErrors: []","    , writeConcernErrors: []","    , insertedIds: []","    , nInserted: 0","    , nUpserted: 0","    , nMatched: 0","    , nModified: 0","    , nRemoved: 0","    , upserted: []","  };","","  // Internal state","  this.s = {","    // Final result","      bulkResult: bulkResult","    // Current batch state","    , currentInsertBatch: null","    , currentUpdateBatch: null","    , currentRemoveBatch: null","    , currentBatch: null","    , currentIndex: 0","    , batches: []","    // Write concern","    , writeConcern: writeConcern","    // Max batch size options","    , maxBatchSizeBytes: maxBatchSizeBytes","    , maxWriteBatchSize: maxWriteBatchSize","    // Namespace","    , namespace: namespace","    // BSON","    , bson: bson","    // Topology","    , topology: topology","    // Options","    , options: options","    // Current operation","    , currentOp: currentOp","    // Executed","    , executed: executed","    // Collection","    , collection: collection","    // Promise Library","    , promiseLibrary: promiseLibrary","    // Bypass validation","    , bypassDocumentValidation: typeof options.bypassDocumentValidation == 'boolean' ? options.bypassDocumentValidation : false","  }","}","","var define = UnorderedBulkOperation.define = new Define('UnorderedBulkOperation', UnorderedBulkOperation, false);","","/**"," * Add a single insert document to the bulk operation"," *"," * @param {object} doc the document to insert"," * @throws {MongoError}"," * @return {UnorderedBulkOperation}"," */","UnorderedBulkOperation.prototype.insert = function(document) {","  if(this.s.collection.s.db.options.forceServerObjectId !== true && document._id == null) document._id = new ObjectID();","  return addToOperationsList(this, common.INSERT, document);","}","","/**"," * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne"," *"," * @method"," * @param {object} selector The selector for the bulk operation."," * @throws {MongoError}"," * @return {FindOperatorsUnordered}"," */","UnorderedBulkOperation.prototype.find = function(selector) {","  if (!selector) {","    throw toError(\"Bulk find operation must specify a selector\");","  }","","  // Save a current selector","  this.s.currentOp = {","    selector: selector","  }","","  return new FindOperatorsUnordered(this);","}","","Object.defineProperty(UnorderedBulkOperation.prototype, 'length', {","  enumerable: true,","  get: function() {","    return this.s.currentIndex;","  }","});","","UnorderedBulkOperation.prototype.raw = function(op) {","  var key = Object.keys(op)[0];","","  // Set up the force server object id","  var forceServerObjectId = typeof this.s.options.forceServerObjectId == 'boolean'","    ? this.s.options.forceServerObjectId : this.s.collection.s.db.options.forceServerObjectId;","","  // Update operations","  if((op.updateOne && op.updateOne.q)","    || (op.updateMany && op.updateMany.q)","    || (op.replaceOne && op.replaceOne.q)) {","    op[key].multi = op.updateOne || op.replaceOne ? false : true;","    return addToOperationsList(this, common.UPDATE, op[key]);","  }","","  // Crud spec update format","  if(op.updateOne || op.updateMany || op.replaceOne) {","    var multi = op.updateOne || op.replaceOne ? false : true;","    var operation = {q: op[key].filter, u: op[key].update || op[key].replacement, multi: multi}","    if(op[key].upsert) operation.upsert = true;","    return addToOperationsList(this, common.UPDATE, operation);","  }","","  // Remove operations","  if(op.removeOne || op.removeMany || (op.deleteOne && op.deleteOne.q) || op.deleteMany && op.deleteMany.q) {","    op[key].limit = op.removeOne ? 1 : 0;","    return addToOperationsList(this, common.REMOVE, op[key]);","  }","","  // Crud spec delete operations, less efficient","  if(op.deleteOne || op.deleteMany) {","    var limit = op.deleteOne ? 1 : 0;","    operation = {q: op[key].filter, limit: limit}","    return addToOperationsList(this, common.REMOVE, operation);","  }","","  // Insert operations","  if(op.insertOne && op.insertOne.document == null) {","    if(forceServerObjectId !== true && op.insertOne._id == null) op.insertOne._id = new ObjectID();","    return addToOperationsList(this, common.INSERT, op.insertOne);","  } else if(op.insertOne && op.insertOne.document) {","    if(forceServerObjectId !== true && op.insertOne.document._id == null) op.insertOne.document._id = new ObjectID();","    return addToOperationsList(this, common.INSERT, op.insertOne.document);","  }","","  if(op.insertMany) {","    for(var i = 0; i < op.insertMany.length; i++) {","      if(forceServerObjectId !== true && op.insertMany[i]._id == null) op.insertMany[i]._id = new ObjectID();","      addToOperationsList(this, common.INSERT, op.insertMany[i]);","    }","","    return;","  }","","  // No valid type of operation","  throw toError(\"bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany\");","}","","//","// Execute the command","var executeBatch = function(self, batch, callback) {","  var finalOptions = {ordered: false}","  if(self.s.writeConcern != null) {","    finalOptions.writeConcern = self.s.writeConcern;","  }","","  var resultHandler = function(err, result) {","\t\t// Error is a driver related error not a bulk op error, terminate","\t\tif(err && err.driver || err && err.message) {","\t\t\treturn handleCallback(callback, err);","\t\t}","","    // If we have and error","    if(err) err.ok = 0;","    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, result));","  }","","\t// Set an operationIf if provided","\tif(self.operationId) {","\t\tresultHandler.operationId = self.operationId;","\t}","","\t// Serialize functions","\tif(self.s.options.serializeFunctions) {","\t\tfinalOptions.serializeFunctions = true","\t}","","  // Is the bypassDocumentValidation options specific","  if(self.s.bypassDocumentValidation == true) {","    finalOptions.bypassDocumentValidation = true;","  }","","  try {","    if(batch.batchType == common.INSERT) {","      self.s.topology.insert(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);","    } else if(batch.batchType == common.UPDATE) {","      self.s.topology.update(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);","    } else if(batch.batchType == common.REMOVE) {","      self.s.topology.remove(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);","    }","  } catch(err) {","    // Force top level error","    err.ok = 0;","    // Merge top level error and return","    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));","  }","}","","//","// Execute all the commands","var executeBatches = function(self, callback) {","  var numberOfCommandsToExecute = self.s.batches.length;","  // Execute over all the batches","  for(var i = 0; i < self.s.batches.length; i++) {","    executeBatch(self, self.s.batches[i], function(err) {","\t\t\t// Driver layer error capture it","\t\t\tif(err) error = err;","\t\t\t// Count down the number of commands left to execute","      numberOfCommandsToExecute = numberOfCommandsToExecute - 1;","","      // Execute","      if(numberOfCommandsToExecute == 0) {","\t\t\t\t// Driver level error","\t\t\t\tif(error) return handleCallback(callback, error);","\t\t\t\t// Treat write errors","        var error = self.s.bulkResult.writeErrors.length > 0 ? toError(self.s.bulkResult.writeErrors[0]) : null;","        handleCallback(callback, error, new BulkWriteResult(self.s.bulkResult));","      }","    });","  }","}","","/**"," * The callback format for results"," * @callback UnorderedBulkOperation~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {BulkWriteResult} result The bulk write result."," */","","/**"," * Execute the ordered bulk operation"," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {UnorderedBulkOperation~resultCallback} [callback] The result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","UnorderedBulkOperation.prototype.execute = function(_writeConcern, callback) {","  var self = this;","  if(this.s.executed) throw toError(\"batch cannot be re-executed\");","  if(typeof _writeConcern == 'function') {","    callback = _writeConcern;","  } else if(_writeConcern && typeof _writeConcern == 'object') {","    this.s.writeConcern = _writeConcern;","  }","","  // If we have current batch","  if(this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);","  if(this.s.currentUpdateBatch) this.s.batches.push(this.s.currentUpdateBatch);","  if(this.s.currentRemoveBatch) this.s.batches.push(this.s.currentRemoveBatch);","","  // If we have no operations in the bulk raise an error","  if(this.s.batches.length == 0) {","    throw toError(\"Invalid Operation, No operations in bulk\");","  }","","  // Execute using callback","  if(typeof callback == 'function') return executeBatches(this, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    executeBatches(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('execute', {callback: true, promise:false});","","/**"," * Returns an unordered batch object"," * @ignore"," */","var initializeUnorderedBulkOp = function(topology, collection, options) {","\treturn new UnorderedBulkOperation(topology, collection, options);","}","","initializeUnorderedBulkOp.UnorderedBulkOperation = UnorderedBulkOperation;","module.exports = initializeUnorderedBulkOp;","module.exports.Bulk = UnorderedBulkOperation;",""],"l":{"3":1,"15":1,"25":1,"26":0,"37":1,"39":0,"42":0,"50":0,"52":0,"63":1,"65":0,"68":0,"76":0,"78":0,"89":1,"90":0,"100":1,"101":0,"102":0,"112":1,"114":0,"120":0,"122":0,"132":1,"134":0,"140":0,"142":0,"148":1,"150":0,"154":0,"156":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"167":0,"170":0,"174":0,"177":0,"181":0,"182":0,"184":0,"185":0,"186":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"200":0,"201":0,"204":0,"213":1,"214":0,"217":0,"219":0,"223":0,"226":0,"229":0,"231":0,"235":0,"238":0,"241":0,"242":0,"247":0,"261":0,"297":1,"306":1,"307":0,"308":0,"319":1,"320":0,"321":0,"325":0,"329":0,"332":1,"335":0,"339":1,"340":0,"343":0,"347":0,"350":0,"351":0,"355":0,"356":0,"357":0,"358":0,"359":0,"363":0,"364":0,"365":0,"369":0,"370":0,"371":0,"372":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"384":0,"385":0,"386":0,"387":0,"390":0,"394":0,"399":1,"400":0,"401":0,"402":0,"405":0,"407":0,"408":0,"412":0,"413":0,"417":0,"418":0,"422":0,"423":0,"427":0,"428":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"441":0,"443":0,"449":1,"450":0,"452":0,"453":0,"455":0,"457":0,"460":0,"462":0,"464":0,"465":0,"491":1,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"501":0,"502":0,"503":0,"506":0,"507":0,"511":0,"514":0,"515":0,"516":0,"517":0,"522":1,"528":1,"529":0,"532":1,"533":1,"534":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs/grid_store.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs/grid_store.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":1,"82":0,"83":1,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":1,"104":1,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":1,"116":0,"117":1,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":1,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":1,"240":0,"241":0,"242":0,"243":1,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":1,"265":1,"266":0,"267":0,"268":0,"269":1,"270":1,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":1,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":1,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":1,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":1,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":1,"364":0,"365":0,"366":0,"367":0,"368":0,"369":1,"370":1,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":1,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":1,"408":1,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":1,"497":0,"498":0,"499":0,"500":1,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":1,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":1,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":1,"561":0,"562":1,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":1,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":1,"610":1,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":1,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":1,"647":1,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":1,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":1,"683":1,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":1,"702":0,"703":0,"704":0,"705":0,"706":0,"707":1,"708":1,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":1,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":1,"747":1,"748":0,"749":0,"750":0,"751":1,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":1,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":1,"783":0,"784":0,"785":0,"786":0,"787":0,"788":1,"789":1,"790":1,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":1,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":1,"826":0,"827":0,"828":0,"829":0,"830":1,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":1,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0,0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0,0,0],"279":[0,0],"280":[0,0,0,0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0,0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0},"fnMap":{"1":{"name":"GridStore","line":88,"loc":{"start":{"line":88,"column":16},"end":{"line":88,"column":68}}},"2":{"name":"(anonymous_2)","line":148,"loc":{"start":{"line":148,"column":10},"end":{"line":148,"column":22}}},"3":{"name":"(anonymous_3)","line":151,"loc":{"start":{"line":151,"column":10},"end":{"line":151,"column":26}}},"4":{"name":"(anonymous_4)","line":161,"loc":{"start":{"line":161,"column":10},"end":{"line":161,"column":22}}},"5":{"name":"(anonymous_5)","line":167,"loc":{"start":{"line":167,"column":10},"end":{"line":167,"column":22}}},"6":{"name":"(anonymous_6)","line":191,"loc":{"start":{"line":191,"column":27},"end":{"line":191,"column":46}}},"7":{"name":"(anonymous_7)","line":200,"loc":{"start":{"line":200,"column":33},"end":{"line":200,"column":59}}},"8":{"name":"(anonymous_8)","line":201,"loc":{"start":{"line":201,"column":15},"end":{"line":201,"column":36}}},"9":{"name":"(anonymous_9)","line":208,"loc":{"start":{"line":208,"column":11},"end":{"line":208,"column":36}}},"10":{"name":"(anonymous_10)","line":217,"loc":{"start":{"line":217,"column":60},"end":{"line":217,"column":71}}},"11":{"name":"(anonymous_11)","line":224,"loc":{"start":{"line":224,"column":82},"end":{"line":224,"column":93}}},"12":{"name":"(anonymous_12)","line":226,"loc":{"start":{"line":226,"column":34},"end":{"line":226,"column":51}}},"13":{"name":"(anonymous_13)","line":235,"loc":{"start":{"line":235,"column":30},"end":{"line":235,"column":47}}},"14":{"name":"(anonymous_14)","line":253,"loc":{"start":{"line":253,"column":26},"end":{"line":253,"column":37}}},"15":{"name":"(anonymous_15)","line":274,"loc":{"start":{"line":274,"column":27},"end":{"line":274,"column":46}}},"16":{"name":"(anonymous_16)","line":279,"loc":{"start":{"line":279,"column":33},"end":{"line":279,"column":59}}},"17":{"name":"(anonymous_17)","line":280,"loc":{"start":{"line":280,"column":14},"end":{"line":280,"column":31}}},"18":{"name":"(anonymous_18)","line":287,"loc":{"start":{"line":287,"column":10},"end":{"line":287,"column":35}}},"19":{"name":"(anonymous_19)","line":291,"loc":{"start":{"line":291,"column":54},"end":{"line":291,"column":75}}},"20":{"name":"(anonymous_20)","line":314,"loc":{"start":{"line":314,"column":27},"end":{"line":314,"column":54}}},"21":{"name":"(anonymous_21)","line":320,"loc":{"start":{"line":320,"column":33},"end":{"line":320,"column":59}}},"22":{"name":"(anonymous_22)","line":321,"loc":{"start":{"line":321,"column":28},"end":{"line":321,"column":45}}},"23":{"name":"(anonymous_23)","line":337,"loc":{"start":{"line":337,"column":29},"end":{"line":337,"column":40}}},"24":{"name":"write","line":353,"loc":{"start":{"line":353,"column":28},"end":{"line":353,"column":66}}},"25":{"name":"(anonymous_25)","line":358,"loc":{"start":{"line":358,"column":33},"end":{"line":358,"column":59}}},"26":{"name":"(anonymous_26)","line":359,"loc":{"start":{"line":359,"column":36},"end":{"line":359,"column":53}}},"27":{"name":"destroy","line":375,"loc":{"start":{"line":375,"column":30},"end":{"line":375,"column":49}}},"28":{"name":"(anonymous_28)","line":397,"loc":{"start":{"line":397,"column":32},"end":{"line":397,"column":58}}},"29":{"name":"(anonymous_29)","line":402,"loc":{"start":{"line":402,"column":33},"end":{"line":402,"column":59}}},"30":{"name":"(anonymous_30)","line":403,"loc":{"start":{"line":403,"column":26},"end":{"line":403,"column":43}}},"31":{"name":"(anonymous_31)","line":410,"loc":{"start":{"line":410,"column":16},"end":{"line":410,"column":47}}},"32":{"name":"(anonymous_32)","line":412,"loc":{"start":{"line":412,"column":23},"end":{"line":412,"column":42}}},"33":{"name":"(anonymous_33)","line":419,"loc":{"start":{"line":419,"column":12},"end":{"line":419,"column":33}}},"34":{"name":"(anonymous_34)","line":422,"loc":{"start":{"line":422,"column":19},"end":{"line":422,"column":41}}},"35":{"name":"(anonymous_35)","line":429,"loc":{"start":{"line":429,"column":23},"end":{"line":429,"column":34}}},"36":{"name":"(anonymous_36)","line":430,"loc":{"start":{"line":430,"column":56},"end":{"line":430,"column":87}}},"37":{"name":"(anonymous_37)","line":437,"loc":{"start":{"line":437,"column":28},"end":{"line":437,"column":49}}},"38":{"name":"(anonymous_38)","line":440,"loc":{"start":{"line":440,"column":27},"end":{"line":440,"column":41}}},"39":{"name":"(anonymous_39)","line":450,"loc":{"start":{"line":450,"column":27},"end":{"line":450,"column":41}}},"40":{"name":"(anonymous_40)","line":480,"loc":{"start":{"line":480,"column":28},"end":{"line":480,"column":47}}},"41":{"name":"(anonymous_41)","line":485,"loc":{"start":{"line":485,"column":33},"end":{"line":485,"column":59}}},"42":{"name":"(anonymous_42)","line":486,"loc":{"start":{"line":486,"column":16},"end":{"line":486,"column":33}}},"43":{"name":"(anonymous_43)","line":493,"loc":{"start":{"line":493,"column":12},"end":{"line":493,"column":37}}},"44":{"name":"(anonymous_44)","line":499,"loc":{"start":{"line":499,"column":33},"end":{"line":499,"column":47}}},"45":{"name":"(anonymous_45)","line":502,"loc":{"start":{"line":502,"column":24},"end":{"line":502,"column":45}}},"46":{"name":"(anonymous_46)","line":507,"loc":{"start":{"line":507,"column":35},"end":{"line":507,"column":62}}},"47":{"name":"(anonymous_47)","line":512,"loc":{"start":{"line":512,"column":47},"end":{"line":512,"column":61}}},"48":{"name":"(anonymous_48)","line":519,"loc":{"start":{"line":519,"column":35},"end":{"line":519,"column":62}}},"49":{"name":"(anonymous_49)","line":524,"loc":{"start":{"line":524,"column":47},"end":{"line":524,"column":61}}},"50":{"name":"(anonymous_50)","line":533,"loc":{"start":{"line":533,"column":22},"end":{"line":533,"column":43}}},"51":{"name":"(anonymous_51)","line":537,"loc":{"start":{"line":537,"column":31},"end":{"line":537,"column":58}}},"52":{"name":"(anonymous_52)","line":542,"loc":{"start":{"line":542,"column":43},"end":{"line":542,"column":57}}},"53":{"name":"(anonymous_53)","line":575,"loc":{"start":{"line":575,"column":38},"end":{"line":575,"column":57}}},"54":{"name":"(anonymous_54)","line":591,"loc":{"start":{"line":591,"column":29},"end":{"line":591,"column":48}}},"55":{"name":"(anonymous_55)","line":596,"loc":{"start":{"line":596,"column":33},"end":{"line":596,"column":59}}},"56":{"name":"(anonymous_56)","line":597,"loc":{"start":{"line":597,"column":17},"end":{"line":597,"column":34}}},"57":{"name":"(anonymous_57)","line":604,"loc":{"start":{"line":604,"column":13},"end":{"line":604,"column":38}}},"58":{"name":"(anonymous_58)","line":605,"loc":{"start":{"line":605,"column":21},"end":{"line":605,"column":35}}},"59":{"name":"(anonymous_59)","line":611,"loc":{"start":{"line":611,"column":20},"end":{"line":611,"column":46}}},"60":{"name":"(anonymous_60)","line":617,"loc":{"start":{"line":617,"column":64},"end":{"line":617,"column":78}}},"61":{"name":"(anonymous_61)","line":634,"loc":{"start":{"line":634,"column":33},"end":{"line":634,"column":52}}},"62":{"name":"(anonymous_62)","line":658,"loc":{"start":{"line":658,"column":32},"end":{"line":658,"column":62}}},"63":{"name":"(anonymous_63)","line":670,"loc":{"start":{"line":670,"column":33},"end":{"line":670,"column":59}}},"64":{"name":"(anonymous_64)","line":671,"loc":{"start":{"line":671,"column":31},"end":{"line":671,"column":48}}},"65":{"name":"(anonymous_65)","line":678,"loc":{"start":{"line":678,"column":16},"end":{"line":678,"column":52}}},"66":{"name":"(anonymous_66)","line":679,"loc":{"start":{"line":679,"column":12},"end":{"line":679,"column":32}}},"67":{"name":"(anonymous_67)","line":703,"loc":{"start":{"line":703,"column":29},"end":{"line":703,"column":48}}},"68":{"name":"(anonymous_68)","line":708,"loc":{"start":{"line":708,"column":33},"end":{"line":708,"column":59}}},"69":{"name":"(anonymous_69)","line":709,"loc":{"start":{"line":709,"column":17},"end":{"line":709,"column":34}}},"70":{"name":"(anonymous_70)","line":716,"loc":{"start":{"line":716,"column":13},"end":{"line":716,"column":38}}},"71":{"name":"(anonymous_71)","line":719,"loc":{"start":{"line":719,"column":25},"end":{"line":719,"column":39}}},"72":{"name":"(anonymous_72)","line":726,"loc":{"start":{"line":726,"column":27},"end":{"line":726,"column":48}}},"73":{"name":"(anonymous_73)","line":766,"loc":{"start":{"line":766,"column":27},"end":{"line":766,"column":62}}},"74":{"name":"(anonymous_74)","line":777,"loc":{"start":{"line":777,"column":33},"end":{"line":777,"column":59}}},"75":{"name":"(anonymous_75)","line":778,"loc":{"start":{"line":778,"column":31},"end":{"line":778,"column":48}}},"76":{"name":"(anonymous_76)","line":785,"loc":{"start":{"line":785,"column":11},"end":{"line":785,"column":52}}},"77":{"name":"(anonymous_77)","line":812,"loc":{"start":{"line":812,"column":52},"end":{"line":812,"column":73}}},"78":{"name":"(anonymous_78)","line":847,"loc":{"start":{"line":847,"column":27},"end":{"line":847,"column":46}}},"79":{"name":"(anonymous_79)","line":852,"loc":{"start":{"line":852,"column":33},"end":{"line":852,"column":51}}},"80":{"name":"(anonymous_80)","line":883,"loc":{"start":{"line":883,"column":27},"end":{"line":883,"column":70}}},"81":{"name":"(anonymous_81)","line":894,"loc":{"start":{"line":894,"column":33},"end":{"line":894,"column":59}}},"82":{"name":"(anonymous_82)","line":895,"loc":{"start":{"line":895,"column":39},"end":{"line":895,"column":56}}},"83":{"name":"(anonymous_83)","line":902,"loc":{"start":{"line":902,"column":11},"end":{"line":902,"column":60}}},"84":{"name":"(anonymous_84)","line":923,"loc":{"start":{"line":923,"column":18},"end":{"line":923,"column":29}}},"85":{"name":"(anonymous_85)","line":924,"loc":{"start":{"line":924,"column":35},"end":{"line":924,"column":56}}},"86":{"name":"(anonymous_86)","line":944,"loc":{"start":{"line":944,"column":12},"end":{"line":944,"column":46}}},"87":{"name":"(anonymous_87)","line":953,"loc":{"start":{"line":953,"column":39},"end":{"line":953,"column":58}}},"88":{"name":"(anonymous_88)","line":981,"loc":{"start":{"line":981,"column":35},"end":{"line":981,"column":56}}},"89":{"name":"(anonymous_89)","line":989,"loc":{"start":{"line":989,"column":36},"end":{"line":989,"column":50}}},"90":{"name":"(anonymous_90)","line":1008,"loc":{"start":{"line":1008,"column":55},"end":{"line":1008,"column":76}}},"91":{"name":"(anonymous_91)","line":1030,"loc":{"start":{"line":1030,"column":34},"end":{"line":1030,"column":48}}},"92":{"name":"(anonymous_92)","line":1041,"loc":{"start":{"line":1041,"column":53},"end":{"line":1041,"column":74}}},"93":{"name":"error","line":1055,"loc":{"start":{"line":1055,"column":2},"end":{"line":1055,"column":23}}},"94":{"name":"(anonymous_94)","line":1064,"loc":{"start":{"line":1064,"column":18},"end":{"line":1064,"column":58}}},"95":{"name":"(anonymous_95)","line":1105,"loc":{"start":{"line":1105,"column":34},"end":{"line":1105,"column":48}}},"96":{"name":"(anonymous_96)","line":1113,"loc":{"start":{"line":1113,"column":32},"end":{"line":1113,"column":46}}},"97":{"name":"(anonymous_97)","line":1130,"loc":{"start":{"line":1130,"column":26},"end":{"line":1130,"column":40}}},"98":{"name":"(anonymous_98)","line":1158,"loc":{"start":{"line":1158,"column":23},"end":{"line":1158,"column":48}}},"99":{"name":"(anonymous_99)","line":1172,"loc":{"start":{"line":1172,"column":30},"end":{"line":1172,"column":53}}},"100":{"name":"(anonymous_100)","line":1184,"loc":{"start":{"line":1184,"column":15},"end":{"line":1184,"column":62}}},"101":{"name":"(anonymous_101)","line":1193,"loc":{"start":{"line":1193,"column":85},"end":{"line":1193,"column":106}}},"102":{"name":"(anonymous_102)","line":1204,"loc":{"start":{"line":1204,"column":22},"end":{"line":1204,"column":37}}},"103":{"name":"(anonymous_103)","line":1213,"loc":{"start":{"line":1213,"column":19},"end":{"line":1213,"column":53}}},"104":{"name":"(anonymous_104)","line":1222,"loc":{"start":{"line":1222,"column":69},"end":{"line":1222,"column":83}}},"105":{"name":"(anonymous_105)","line":1281,"loc":{"start":{"line":1281,"column":18},"end":{"line":1281,"column":80}}},"106":{"name":"(anonymous_106)","line":1301,"loc":{"start":{"line":1301,"column":28},"end":{"line":1301,"column":54}}},"107":{"name":"(anonymous_107)","line":1302,"loc":{"start":{"line":1302,"column":54},"end":{"line":1302,"column":71}}},"108":{"name":"(anonymous_108)","line":1309,"loc":{"start":{"line":1309,"column":13},"end":{"line":1309,"column":75}}},"109":{"name":"(anonymous_109)","line":1314,"loc":{"start":{"line":1314,"column":48},"end":{"line":1314,"column":74}}},"110":{"name":"(anonymous_110)","line":1330,"loc":{"start":{"line":1330,"column":63},"end":{"line":1330,"column":83}}},"111":{"name":"(anonymous_111)","line":1353,"loc":{"start":{"line":1353,"column":17},"end":{"line":1353,"column":65}}},"112":{"name":"(anonymous_112)","line":1373,"loc":{"start":{"line":1373,"column":28},"end":{"line":1373,"column":54}}},"113":{"name":"(anonymous_113)","line":1374,"loc":{"start":{"line":1374,"column":38},"end":{"line":1374,"column":55}}},"114":{"name":"(anonymous_114)","line":1381,"loc":{"start":{"line":1381,"column":11},"end":{"line":1381,"column":59}}},"115":{"name":"(anonymous_115)","line":1395,"loc":{"start":{"line":1395,"column":50},"end":{"line":1395,"column":76}}},"116":{"name":"(anonymous_116)","line":1398,"loc":{"start":{"line":1398,"column":57},"end":{"line":1398,"column":79}}},"117":{"name":"(anonymous_117)","line":1401,"loc":{"start":{"line":1401,"column":18},"end":{"line":1401,"column":38}}},"118":{"name":"(anonymous_118)","line":1437,"loc":{"start":{"line":1437,"column":17},"end":{"line":1437,"column":71}}},"119":{"name":"(anonymous_119)","line":1458,"loc":{"start":{"line":1458,"column":28},"end":{"line":1458,"column":54}}},"120":{"name":"(anonymous_120)","line":1459,"loc":{"start":{"line":1459,"column":50},"end":{"line":1459,"column":67}}},"121":{"name":"(anonymous_121)","line":1466,"loc":{"start":{"line":1466,"column":17},"end":{"line":1466,"column":71}}},"122":{"name":"(anonymous_122)","line":1467,"loc":{"start":{"line":1467,"column":45},"end":{"line":1467,"column":70}}},"123":{"name":"(anonymous_123)","line":1475,"loc":{"start":{"line":1475,"column":29},"end":{"line":1475,"column":54}}},"124":{"name":"(anonymous_124)","line":1502,"loc":{"start":{"line":1502,"column":22},"end":{"line":1502,"column":71}}},"125":{"name":"(anonymous_125)","line":1522,"loc":{"start":{"line":1522,"column":28},"end":{"line":1522,"column":54}}},"126":{"name":"(anonymous_126)","line":1523,"loc":{"start":{"line":1523,"column":50},"end":{"line":1523,"column":67}}},"127":{"name":"(anonymous_127)","line":1530,"loc":{"start":{"line":1530,"column":22},"end":{"line":1530,"column":71}}},"128":{"name":"(anonymous_128)","line":1532,"loc":{"start":{"line":1532,"column":45},"end":{"line":1532,"column":70}}},"129":{"name":"(anonymous_129)","line":1553,"loc":{"start":{"line":1553,"column":19},"end":{"line":1553,"column":58}}},"130":{"name":"(anonymous_130)","line":1574,"loc":{"start":{"line":1574,"column":28},"end":{"line":1574,"column":54}}},"131":{"name":"(anonymous_131)","line":1575,"loc":{"start":{"line":1575,"column":43},"end":{"line":1575,"column":60}}},"132":{"name":"(anonymous_132)","line":1582,"loc":{"start":{"line":1582,"column":19},"end":{"line":1582,"column":64}}},"133":{"name":"(anonymous_133)","line":1591,"loc":{"start":{"line":1591,"column":46},"end":{"line":1591,"column":57}}},"134":{"name":"(anonymous_134)","line":1598,"loc":{"start":{"line":1598,"column":48},"end":{"line":1598,"column":73}}},"135":{"name":"(anonymous_135)","line":1600,"loc":{"start":{"line":1600,"column":30},"end":{"line":1600,"column":44}}},"136":{"name":"(anonymous_136)","line":1602,"loc":{"start":{"line":1602,"column":29},"end":{"line":1602,"column":55}}},"137":{"name":"(anonymous_137)","line":1604,"loc":{"start":{"line":1604,"column":68},"end":{"line":1604,"column":82}}},"138":{"name":"(anonymous_138)","line":1618,"loc":{"start":{"line":1618,"column":19},"end":{"line":1618,"column":57}}},"139":{"name":"(anonymous_139)","line":1630,"loc":{"start":{"line":1630,"column":27},"end":{"line":1630,"column":45}}},"140":{"name":"(anonymous_140)","line":1643,"loc":{"start":{"line":1643,"column":23},"end":{"line":1643,"column":47}}},"141":{"name":"(anonymous_141)","line":1679,"loc":{"start":{"line":1679,"column":22},"end":{"line":1679,"column":35}}},"142":{"name":"(anonymous_142)","line":1701,"loc":{"start":{"line":1701,"column":33},"end":{"line":1701,"column":55}}},"143":{"name":"(anonymous_143)","line":1706,"loc":{"start":{"line":1706,"column":17},"end":{"line":1706,"column":31}}},"144":{"name":"(anonymous_144)","line":1720,"loc":{"start":{"line":1720,"column":34},"end":{"line":1720,"column":45}}},"145":{"name":"(anonymous_145)","line":1723,"loc":{"start":{"line":1723,"column":13},"end":{"line":1723,"column":24}}},"146":{"name":"(anonymous_146)","line":1725,"loc":{"start":{"line":1725,"column":25},"end":{"line":1725,"column":47}}},"147":{"name":"(anonymous_147)","line":1749,"loc":{"start":{"line":1749,"column":17},"end":{"line":1749,"column":31}}},"148":{"name":"(anonymous_148)","line":1759,"loc":{"start":{"line":1759,"column":36},"end":{"line":1759,"column":47}}},"149":{"name":"(anonymous_149)","line":1766,"loc":{"start":{"line":1766,"column":34},"end":{"line":1766,"column":50}}},"150":{"name":"(anonymous_150)","line":1771,"loc":{"start":{"line":1771,"column":17},"end":{"line":1771,"column":28}}},"151":{"name":"(anonymous_151)","line":1773,"loc":{"start":{"line":1773,"column":27},"end":{"line":1773,"column":38}}},"152":{"name":"(anonymous_152)","line":1774,"loc":{"start":{"line":1774,"column":25},"end":{"line":1774,"column":36}}},"153":{"name":"(anonymous_153)","line":1781,"loc":{"start":{"line":1781,"column":25},"end":{"line":1781,"column":36}}},"154":{"name":"(anonymous_154)","line":1788,"loc":{"start":{"line":1788,"column":32},"end":{"line":1788,"column":68}}},"155":{"name":"(anonymous_155)","line":1798,"loc":{"start":{"line":1798,"column":25},"end":{"line":1798,"column":36}}},"156":{"name":"(anonymous_156)","line":1799,"loc":{"start":{"line":1799,"column":20},"end":{"line":1799,"column":31}}},"157":{"name":"(anonymous_157)","line":1806,"loc":{"start":{"line":1806,"column":16},"end":{"line":1806,"column":27}}}},"statementMap":{"1":{"start":{"line":37,"column":0},"end":{"line":49,"column":50}},"2":{"start":{"line":51,"column":0},"end":{"line":52,"column":22}},"3":{"start":{"line":88,"column":0},"end":{"line":171,"column":1}},"4":{"start":{"line":89,"column":2},"end":{"line":89,"column":89}},"5":{"start":{"line":89,"column":35},"end":{"line":89,"column":89}},"6":{"start":{"line":90,"column":2},"end":{"line":90,"column":15}},"7":{"start":{"line":93,"column":2},"end":{"line":93,"column":50}},"8":{"start":{"line":93,"column":37},"end":{"line":93,"column":50}},"9":{"start":{"line":95,"column":2},"end":{"line":102,"column":3}},"10":{"start":{"line":96,"column":4},"end":{"line":96,"column":20}},"11":{"start":{"line":97,"column":4},"end":{"line":97,"column":25}},"12":{"start":{"line":98,"column":9},"end":{"line":102,"column":3}},"13":{"start":{"line":99,"column":4},"end":{"line":99,"column":19}},"14":{"start":{"line":100,"column":4},"end":{"line":100,"column":20}},"15":{"start":{"line":101,"column":4},"end":{"line":101,"column":25}},"16":{"start":{"line":104,"column":2},"end":{"line":118,"column":3}},"17":{"start":{"line":105,"column":4},"end":{"line":105,"column":39}},"18":{"start":{"line":106,"column":4},"end":{"line":106,"column":21}},"19":{"start":{"line":107,"column":4},"end":{"line":107,"column":29}},"20":{"start":{"line":108,"column":9},"end":{"line":118,"column":3}},"21":{"start":{"line":109,"column":4},"end":{"line":109,"column":45}},"22":{"start":{"line":110,"column":4},"end":{"line":110,"column":23}},"23":{"start":{"line":111,"column":4},"end":{"line":113,"column":5}},"24":{"start":{"line":112,"column":6},"end":{"line":112,"column":35}},"25":{"start":{"line":115,"column":4},"end":{"line":115,"column":39}},"26":{"start":{"line":116,"column":4},"end":{"line":116,"column":21}},"27":{"start":{"line":117,"column":4},"end":{"line":117,"column":29}},"28":{"start":{"line":121,"column":2},"end":{"line":121,"column":40}},"29":{"start":{"line":122,"column":2},"end":{"line":122,"column":31}},"30":{"start":{"line":125,"column":2},"end":{"line":125,"column":22}},"31":{"start":{"line":128,"column":2},"end":{"line":128,"column":102}},"32":{"start":{"line":129,"column":2},"end":{"line":129,"column":20}},"33":{"start":{"line":130,"column":2},"end":{"line":130,"column":107}},"34":{"start":{"line":131,"column":2},"end":{"line":131,"column":57}},"35":{"start":{"line":133,"column":2},"end":{"line":133,"column":116}},"36":{"start":{"line":136,"column":2},"end":{"line":136,"column":51}},"37":{"start":{"line":139,"column":2},"end":{"line":142,"column":3}},"38":{"start":{"line":140,"column":4},"end":{"line":141,"column":54}},"39":{"start":{"line":145,"column":2},"end":{"line":145,"column":39}},"40":{"start":{"line":147,"column":2},"end":{"line":158,"column":5}},"41":{"start":{"line":149,"column":7},"end":{"line":149,"column":37}},"42":{"start":{"line":152,"column":7},"end":{"line":156,"column":8}},"43":{"start":{"line":153,"column":9},"end":{"line":153,"column":57}},"44":{"start":{"line":155,"column":9},"end":{"line":155,"column":40}},"45":{"start":{"line":160,"column":2},"end":{"line":164,"column":5}},"46":{"start":{"line":162,"column":7},"end":{"line":162,"column":31}},"47":{"start":{"line":166,"column":2},"end":{"line":170,"column":5}},"48":{"start":{"line":168,"column":7},"end":{"line":168,"column":104}},"49":{"start":{"line":173,"column":0},"end":{"line":173,"column":73}},"50":{"start":{"line":191,"column":0},"end":{"line":206,"column":2}},"51":{"start":{"line":192,"column":2},"end":{"line":192,"column":18}},"52":{"start":{"line":193,"column":2},"end":{"line":195,"column":3}},"53":{"start":{"line":194,"column":4},"end":{"line":194,"column":81}},"54":{"start":{"line":198,"column":2},"end":{"line":198,"column":64}},"55":{"start":{"line":198,"column":36},"end":{"line":198,"column":64}},"56":{"start":{"line":200,"column":2},"end":{"line":205,"column":5}},"57":{"start":{"line":201,"column":4},"end":{"line":204,"column":6}},"58":{"start":{"line":202,"column":6},"end":{"line":202,"column":33}},"59":{"start":{"line":202,"column":14},"end":{"line":202,"column":33}},"60":{"start":{"line":203,"column":6},"end":{"line":203,"column":21}},"61":{"start":{"line":208,"column":0},"end":{"line":241,"column":1}},"62":{"start":{"line":210,"column":2},"end":{"line":210,"column":61}},"63":{"start":{"line":213,"column":2},"end":{"line":240,"column":3}},"64":{"start":{"line":215,"column":4},"end":{"line":215,"column":39}},"65":{"start":{"line":217,"column":4},"end":{"line":232,"column":7}},"66":{"start":{"line":219,"column":6},"end":{"line":219,"column":51}},"67":{"start":{"line":221,"column":6},"end":{"line":221,"column":57}},"68":{"start":{"line":222,"column":6},"end":{"line":222,"column":38}},"69":{"start":{"line":224,"column":6},"end":{"line":231,"column":9}},"70":{"start":{"line":226,"column":8},"end":{"line":230,"column":11}},"71":{"start":{"line":227,"column":10},"end":{"line":227,"column":39}},"72":{"start":{"line":227,"column":18},"end":{"line":227,"column":39}},"73":{"start":{"line":228,"column":10},"end":{"line":228,"column":29}},"74":{"start":{"line":229,"column":10},"end":{"line":229,"column":27}},"75":{"start":{"line":235,"column":4},"end":{"line":239,"column":7}},"76":{"start":{"line":236,"column":6},"end":{"line":236,"column":35}},"77":{"start":{"line":236,"column":14},"end":{"line":236,"column":35}},"78":{"start":{"line":237,"column":6},"end":{"line":237,"column":25}},"79":{"start":{"line":238,"column":6},"end":{"line":238,"column":23}},"80":{"start":{"line":244,"column":0},"end":{"line":244,"column":59}},"81":{"start":{"line":253,"column":0},"end":{"line":255,"column":1}},"82":{"start":{"line":254,"column":2},"end":{"line":254,"column":53}},"83":{"start":{"line":257,"column":0},"end":{"line":257,"column":80}},"84":{"start":{"line":274,"column":0},"end":{"line":285,"column":1}},"85":{"start":{"line":275,"column":2},"end":{"line":275,"column":18}},"86":{"start":{"line":277,"column":2},"end":{"line":277,"column":63}},"87":{"start":{"line":277,"column":36},"end":{"line":277,"column":63}},"88":{"start":{"line":279,"column":2},"end":{"line":284,"column":5}},"89":{"start":{"line":280,"column":4},"end":{"line":283,"column":6}},"90":{"start":{"line":281,"column":6},"end":{"line":281,"column":33}},"91":{"start":{"line":281,"column":14},"end":{"line":281,"column":33}},"92":{"start":{"line":282,"column":6},"end":{"line":282,"column":17}},"93":{"start":{"line":287,"column":0},"end":{"line":300,"column":1}},"94":{"start":{"line":288,"column":2},"end":{"line":299,"column":3}},"95":{"start":{"line":289,"column":4},"end":{"line":289,"column":25}},"96":{"start":{"line":290,"column":9},"end":{"line":299,"column":3}},"97":{"start":{"line":291,"column":4},"end":{"line":295,"column":7}},"98":{"start":{"line":292,"column":6},"end":{"line":292,"column":32}},"99":{"start":{"line":293,"column":6},"end":{"line":293,"column":40}},"100":{"start":{"line":294,"column":6},"end":{"line":294,"column":46}},"101":{"start":{"line":297,"column":4},"end":{"line":297,"column":38}},"102":{"start":{"line":298,"column":4},"end":{"line":298,"column":45}},"103":{"start":{"line":302,"column":0},"end":{"line":302,"column":59}},"104":{"start":{"line":314,"column":0},"end":{"line":326,"column":1}},"105":{"start":{"line":315,"column":2},"end":{"line":315,"column":18}},"106":{"start":{"line":316,"column":2},"end":{"line":316,"column":73}},"107":{"start":{"line":318,"column":2},"end":{"line":318,"column":77}},"108":{"start":{"line":318,"column":36},"end":{"line":318,"column":77}},"109":{"start":{"line":320,"column":2},"end":{"line":325,"column":5}},"110":{"start":{"line":321,"column":4},"end":{"line":324,"column":6}},"111":{"start":{"line":322,"column":6},"end":{"line":322,"column":33}},"112":{"start":{"line":322,"column":14},"end":{"line":322,"column":33}},"113":{"start":{"line":323,"column":6},"end":{"line":323,"column":17}},"114":{"start":{"line":328,"column":0},"end":{"line":328,"column":59}},"115":{"start":{"line":337,"column":0},"end":{"line":339,"column":1}},"116":{"start":{"line":338,"column":2},"end":{"line":338,"column":35}},"117":{"start":{"line":341,"column":0},"end":{"line":341,"column":91}},"118":{"start":{"line":353,"column":0},"end":{"line":364,"column":1}},"119":{"start":{"line":354,"column":2},"end":{"line":354,"column":18}},"120":{"start":{"line":356,"column":2},"end":{"line":356,"column":85}},"121":{"start":{"line":356,"column":36},"end":{"line":356,"column":85}},"122":{"start":{"line":358,"column":2},"end":{"line":363,"column":5}},"123":{"start":{"line":359,"column":4},"end":{"line":362,"column":6}},"124":{"start":{"line":360,"column":6},"end":{"line":360,"column":33}},"125":{"start":{"line":360,"column":14},"end":{"line":360,"column":33}},"126":{"start":{"line":361,"column":6},"end":{"line":361,"column":17}},"127":{"start":{"line":366,"column":0},"end":{"line":366,"column":60}},"128":{"start":{"line":375,"column":0},"end":{"line":384,"column":1}},"129":{"start":{"line":377,"column":2},"end":{"line":377,"column":28}},"130":{"start":{"line":377,"column":21},"end":{"line":377,"column":28}},"131":{"start":{"line":378,"column":2},"end":{"line":378,"column":24}},"132":{"start":{"line":379,"column":2},"end":{"line":383,"column":3}},"133":{"start":{"line":380,"column":4},"end":{"line":380,"column":26}},"134":{"start":{"line":381,"column":4},"end":{"line":381,"column":23}},"135":{"start":{"line":382,"column":4},"end":{"line":382,"column":23}},"136":{"start":{"line":386,"column":0},"end":{"line":386,"column":64}},"137":{"start":{"line":397,"column":0},"end":{"line":408,"column":2}},"138":{"start":{"line":398,"column":2},"end":{"line":398,"column":18}},"139":{"start":{"line":400,"column":2},"end":{"line":400,"column":75}},"140":{"start":{"line":400,"column":36},"end":{"line":400,"column":75}},"141":{"start":{"line":402,"column":2},"end":{"line":407,"column":5}},"142":{"start":{"line":403,"column":4},"end":{"line":406,"column":6}},"143":{"start":{"line":404,"column":6},"end":{"line":404,"column":33}},"144":{"start":{"line":404,"column":14},"end":{"line":404,"column":33}},"145":{"start":{"line":405,"column":6},"end":{"line":405,"column":17}},"146":{"start":{"line":410,"column":0},"end":{"line":466,"column":1}},"147":{"start":{"line":411,"column":2},"end":{"line":417,"column":3}},"148":{"start":{"line":412,"column":4},"end":{"line":415,"column":7}},"149":{"start":{"line":413,"column":6},"end":{"line":413,"column":35}},"150":{"start":{"line":413,"column":14},"end":{"line":413,"column":35}},"151":{"start":{"line":414,"column":6},"end":{"line":414,"column":35}},"152":{"start":{"line":416,"column":4},"end":{"line":416,"column":11}},"153":{"start":{"line":419,"column":2},"end":{"line":465,"column":5}},"154":{"start":{"line":420,"column":4},"end":{"line":420,"column":39}},"155":{"start":{"line":420,"column":12},"end":{"line":420,"column":39}},"156":{"start":{"line":422,"column":4},"end":{"line":464,"column":7}},"157":{"start":{"line":423,"column":6},"end":{"line":423,"column":41}},"158":{"start":{"line":423,"column":14},"end":{"line":423,"column":41}},"159":{"start":{"line":425,"column":6},"end":{"line":425,"column":21}},"160":{"start":{"line":426,"column":6},"end":{"line":426,"column":20}},"161":{"start":{"line":429,"column":6},"end":{"line":460,"column":7}},"162":{"start":{"line":430,"column":8},"end":{"line":459,"column":11}},"163":{"start":{"line":431,"column":10},"end":{"line":431,"column":45}},"164":{"start":{"line":431,"column":18},"end":{"line":431,"column":45}},"165":{"start":{"line":433,"column":10},"end":{"line":433,"column":38}},"166":{"start":{"line":436,"column":10},"end":{"line":436,"column":70}},"167":{"start":{"line":437,"column":10},"end":{"line":458,"column":13}},"168":{"start":{"line":438,"column":12},"end":{"line":438,"column":47}},"169":{"start":{"line":438,"column":20},"end":{"line":438,"column":47}},"170":{"start":{"line":440,"column":12},"end":{"line":457,"column":15}},"171":{"start":{"line":441,"column":14},"end":{"line":441,"column":49}},"172":{"start":{"line":441,"column":22},"end":{"line":441,"column":49}},"173":{"start":{"line":443,"column":14},"end":{"line":443,"column":58}},"174":{"start":{"line":446,"column":14},"end":{"line":446,"column":40}},"175":{"start":{"line":448,"column":14},"end":{"line":456,"column":15}},"176":{"start":{"line":449,"column":16},"end":{"line":449,"column":31}},"177":{"start":{"line":450,"column":16},"end":{"line":453,"column":19}},"178":{"start":{"line":451,"column":18},"end":{"line":451,"column":53}},"179":{"start":{"line":451,"column":26},"end":{"line":451,"column":53}},"180":{"start":{"line":452,"column":18},"end":{"line":452,"column":46}},"181":{"start":{"line":455,"column":16},"end":{"line":455,"column":52}},"182":{"start":{"line":463,"column":6},"end":{"line":463,"column":35}},"183":{"start":{"line":468,"column":0},"end":{"line":468,"column":64}},"184":{"start":{"line":480,"column":0},"end":{"line":491,"column":2}},"185":{"start":{"line":481,"column":2},"end":{"line":481,"column":18}},"186":{"start":{"line":483,"column":2},"end":{"line":483,"column":65}},"187":{"start":{"line":483,"column":36},"end":{"line":483,"column":65}},"188":{"start":{"line":485,"column":2},"end":{"line":490,"column":5}},"189":{"start":{"line":486,"column":4},"end":{"line":489,"column":6}},"190":{"start":{"line":487,"column":6},"end":{"line":487,"column":33}},"191":{"start":{"line":487,"column":14},"end":{"line":487,"column":33}},"192":{"start":{"line":488,"column":6},"end":{"line":488,"column":17}},"193":{"start":{"line":493,"column":0},"end":{"line":556,"column":1}},"194":{"start":{"line":494,"column":2},"end":{"line":555,"column":3}},"195":{"start":{"line":496,"column":4},"end":{"line":496,"column":36}},"196":{"start":{"line":498,"column":4},"end":{"line":548,"column":5}},"197":{"start":{"line":499,"column":6},"end":{"line":531,"column":9}},"198":{"start":{"line":500,"column":8},"end":{"line":500,"column":70}},"199":{"start":{"line":500,"column":49},"end":{"line":500,"column":70}},"200":{"start":{"line":502,"column":8},"end":{"line":530,"column":11}},"201":{"start":{"line":503,"column":10},"end":{"line":503,"column":72}},"202":{"start":{"line":503,"column":51},"end":{"line":503,"column":72}},"203":{"start":{"line":506,"column":10},"end":{"line":529,"column":11}},"204":{"start":{"line":507,"column":12},"end":{"line":516,"column":15}},"205":{"start":{"line":508,"column":14},"end":{"line":510,"column":15}},"206":{"start":{"line":509,"column":16},"end":{"line":509,"column":87}},"207":{"start":{"line":509,"column":50},"end":{"line":509,"column":71}},"208":{"start":{"line":509,"column":77},"end":{"line":509,"column":87}},"209":{"start":{"line":512,"column":14},"end":{"line":515,"column":17}},"210":{"start":{"line":513,"column":16},"end":{"line":514,"column":45}},"211":{"start":{"line":514,"column":18},"end":{"line":514,"column":45}},"212":{"start":{"line":518,"column":12},"end":{"line":518,"column":41}},"213":{"start":{"line":519,"column":12},"end":{"line":528,"column":15}},"214":{"start":{"line":520,"column":14},"end":{"line":522,"column":15}},"215":{"start":{"line":521,"column":16},"end":{"line":521,"column":87}},"216":{"start":{"line":521,"column":50},"end":{"line":521,"column":71}},"217":{"start":{"line":521,"column":77},"end":{"line":521,"column":87}},"218":{"start":{"line":524,"column":14},"end":{"line":527,"column":17}},"219":{"start":{"line":525,"column":16},"end":{"line":526,"column":45}},"220":{"start":{"line":526,"column":18},"end":{"line":526,"column":45}},"221":{"start":{"line":533,"column":6},"end":{"line":547,"column":9}},"222":{"start":{"line":534,"column":8},"end":{"line":534,"column":70}},"223":{"start":{"line":534,"column":49},"end":{"line":534,"column":70}},"224":{"start":{"line":536,"column":8},"end":{"line":536,"column":37}},"225":{"start":{"line":537,"column":8},"end":{"line":546,"column":11}},"226":{"start":{"line":538,"column":10},"end":{"line":540,"column":11}},"227":{"start":{"line":539,"column":12},"end":{"line":539,"column":83}},"228":{"start":{"line":539,"column":46},"end":{"line":539,"column":67}},"229":{"start":{"line":539,"column":73},"end":{"line":539,"column":83}},"230":{"start":{"line":542,"column":10},"end":{"line":545,"column":13}},"231":{"start":{"line":543,"column":12},"end":{"line":544,"column":41}},"232":{"start":{"line":544,"column":14},"end":{"line":544,"column":41}},"233":{"start":{"line":549,"column":9},"end":{"line":555,"column":3}},"234":{"start":{"line":550,"column":4},"end":{"line":551,"column":27}},"235":{"start":{"line":551,"column":6},"end":{"line":551,"column":27}},"236":{"start":{"line":553,"column":4},"end":{"line":554,"column":91}},"237":{"start":{"line":554,"column":6},"end":{"line":554,"column":91}},"238":{"start":{"line":558,"column":0},"end":{"line":558,"column":60}},"239":{"start":{"line":575,"column":0},"end":{"line":579,"column":2}},"240":{"start":{"line":576,"column":2},"end":{"line":577,"column":65}},"241":{"start":{"line":577,"column":4},"end":{"line":577,"column":65}},"242":{"start":{"line":578,"column":2},"end":{"line":578,"column":53}},"243":{"start":{"line":581,"column":0},"end":{"line":581,"column":94}},"244":{"start":{"line":591,"column":0},"end":{"line":602,"column":2}},"245":{"start":{"line":592,"column":2},"end":{"line":592,"column":18}},"246":{"start":{"line":594,"column":2},"end":{"line":594,"column":66}},"247":{"start":{"line":594,"column":36},"end":{"line":594,"column":66}},"248":{"start":{"line":596,"column":2},"end":{"line":601,"column":5}},"249":{"start":{"line":597,"column":4},"end":{"line":600,"column":6}},"250":{"start":{"line":598,"column":6},"end":{"line":598,"column":33}},"251":{"start":{"line":598,"column":14},"end":{"line":598,"column":33}},"252":{"start":{"line":599,"column":6},"end":{"line":599,"column":17}},"253":{"start":{"line":604,"column":0},"end":{"line":622,"column":1}},"254":{"start":{"line":605,"column":2},"end":{"line":621,"column":5}},"255":{"start":{"line":606,"column":4},"end":{"line":609,"column":5}},"256":{"start":{"line":607,"column":6},"end":{"line":607,"column":54}},"257":{"start":{"line":608,"column":6},"end":{"line":608,"column":27}},"258":{"start":{"line":611,"column":4},"end":{"line":620,"column":7}},"259":{"start":{"line":612,"column":6},"end":{"line":615,"column":7}},"260":{"start":{"line":613,"column":8},"end":{"line":613,"column":54}},"261":{"start":{"line":614,"column":8},"end":{"line":614,"column":29}},"262":{"start":{"line":617,"column":6},"end":{"line":619,"column":9}},"263":{"start":{"line":618,"column":8},"end":{"line":618,"column":28}},"264":{"start":{"line":624,"column":0},"end":{"line":624,"column":61}},"265":{"start":{"line":634,"column":0},"end":{"line":638,"column":2}},"266":{"start":{"line":635,"column":2},"end":{"line":636,"column":55}},"267":{"start":{"line":636,"column":4},"end":{"line":636,"column":55}},"268":{"start":{"line":637,"column":2},"end":{"line":637,"column":50}},"269":{"start":{"line":640,"column":0},"end":{"line":640,"column":89}},"270":{"start":{"line":658,"column":0},"end":{"line":676,"column":2}},"271":{"start":{"line":659,"column":2},"end":{"line":659,"column":18}},"272":{"start":{"line":660,"column":2},"end":{"line":660,"column":54}},"273":{"start":{"line":661,"column":2},"end":{"line":661,"column":24}},"274":{"start":{"line":662,"column":2},"end":{"line":662,"column":56}},"275":{"start":{"line":662,"column":36},"end":{"line":662,"column":56}},"276":{"start":{"line":663,"column":2},"end":{"line":663,"column":48}},"277":{"start":{"line":664,"column":2},"end":{"line":664,"column":32}},"278":{"start":{"line":667,"column":2},"end":{"line":667,"column":80}},"279":{"start":{"line":667,"column":36},"end":{"line":667,"column":80}},"280":{"start":{"line":670,"column":2},"end":{"line":675,"column":5}},"281":{"start":{"line":671,"column":4},"end":{"line":674,"column":6}},"282":{"start":{"line":672,"column":6},"end":{"line":672,"column":33}},"283":{"start":{"line":672,"column":14},"end":{"line":672,"column":33}},"284":{"start":{"line":673,"column":6},"end":{"line":673,"column":17}},"285":{"start":{"line":678,"column":0},"end":{"line":690,"column":1}},"286":{"start":{"line":679,"column":2},"end":{"line":689,"column":5}},"287":{"start":{"line":680,"column":4},"end":{"line":680,"column":33}},"288":{"start":{"line":680,"column":12},"end":{"line":680,"column":33}},"289":{"start":{"line":682,"column":4},"end":{"line":682,"column":49}},"290":{"start":{"line":683,"column":4},"end":{"line":683,"column":70}},"291":{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},"292":{"start":{"line":685,"column":6},"end":{"line":685,"column":38}},"293":{"start":{"line":688,"column":4},"end":{"line":688,"column":26}},"294":{"start":{"line":692,"column":0},"end":{"line":692,"column":64}},"295":{"start":{"line":703,"column":0},"end":{"line":714,"column":2}},"296":{"start":{"line":704,"column":2},"end":{"line":704,"column":18}},"297":{"start":{"line":706,"column":2},"end":{"line":706,"column":66}},"298":{"start":{"line":706,"column":36},"end":{"line":706,"column":66}},"299":{"start":{"line":708,"column":2},"end":{"line":713,"column":5}},"300":{"start":{"line":709,"column":4},"end":{"line":712,"column":6}},"301":{"start":{"line":710,"column":6},"end":{"line":710,"column":33}},"302":{"start":{"line":710,"column":14},"end":{"line":710,"column":33}},"303":{"start":{"line":711,"column":6},"end":{"line":711,"column":17}},"304":{"start":{"line":716,"column":0},"end":{"line":739,"column":1}},"305":{"start":{"line":717,"column":2},"end":{"line":738,"column":3}},"306":{"start":{"line":718,"column":4},"end":{"line":733,"column":5}},"307":{"start":{"line":719,"column":6},"end":{"line":724,"column":9}},"308":{"start":{"line":720,"column":8},"end":{"line":720,"column":37}},"309":{"start":{"line":720,"column":16},"end":{"line":720,"column":37}},"310":{"start":{"line":721,"column":8},"end":{"line":721,"column":73}},"311":{"start":{"line":722,"column":8},"end":{"line":722,"column":26}},"312":{"start":{"line":723,"column":8},"end":{"line":723,"column":29}},"313":{"start":{"line":726,"column":6},"end":{"line":732,"column":9}},"314":{"start":{"line":727,"column":8},"end":{"line":727,"column":37}},"315":{"start":{"line":727,"column":16},"end":{"line":727,"column":37}},"316":{"start":{"line":728,"column":8},"end":{"line":728,"column":34}},"317":{"start":{"line":729,"column":8},"end":{"line":729,"column":35}},"318":{"start":{"line":730,"column":8},"end":{"line":730,"column":26}},"319":{"start":{"line":731,"column":8},"end":{"line":731,"column":29}},"320":{"start":{"line":735,"column":4},"end":{"line":735,"column":31}},"321":{"start":{"line":736,"column":4},"end":{"line":736,"column":22}},"322":{"start":{"line":737,"column":4},"end":{"line":737,"column":25}},"323":{"start":{"line":741,"column":0},"end":{"line":741,"column":61}},"324":{"start":{"line":766,"column":0},"end":{"line":783,"column":1}},"325":{"start":{"line":767,"column":2},"end":{"line":767,"column":18}},"326":{"start":{"line":769,"column":2},"end":{"line":769,"column":54}},"327":{"start":{"line":770,"column":2},"end":{"line":770,"column":24}},"328":{"start":{"line":771,"column":2},"end":{"line":771,"column":56}},"329":{"start":{"line":771,"column":36},"end":{"line":771,"column":56}},"330":{"start":{"line":772,"column":2},"end":{"line":772,"column":45}},"331":{"start":{"line":773,"column":2},"end":{"line":773,"column":45}},"332":{"start":{"line":775,"column":2},"end":{"line":775,"column":80}},"333":{"start":{"line":775,"column":36},"end":{"line":775,"column":80}},"334":{"start":{"line":777,"column":2},"end":{"line":782,"column":5}},"335":{"start":{"line":778,"column":4},"end":{"line":781,"column":6}},"336":{"start":{"line":779,"column":6},"end":{"line":779,"column":33}},"337":{"start":{"line":779,"column":14},"end":{"line":779,"column":33}},"338":{"start":{"line":780,"column":6},"end":{"line":780,"column":17}},"339":{"start":{"line":785,"column":0},"end":{"line":826,"column":1}},"340":{"start":{"line":787,"column":2},"end":{"line":787,"column":74}},"341":{"start":{"line":788,"column":2},"end":{"line":788,"column":70}},"342":{"start":{"line":790,"column":2},"end":{"line":790,"column":83}},"343":{"start":{"line":792,"column":2},"end":{"line":802,"column":3}},"344":{"start":{"line":793,"column":4},"end":{"line":793,"column":78}},"345":{"start":{"line":795,"column":4},"end":{"line":795,"column":48}},"346":{"start":{"line":797,"column":4},"end":{"line":797,"column":55}},"347":{"start":{"line":799,"column":4},"end":{"line":799,"column":140}},"348":{"start":{"line":799,"column":52},"end":{"line":799,"column":140}},"349":{"start":{"line":801,"column":4},"end":{"line":801,"column":39}},"350":{"start":{"line":805,"column":2},"end":{"line":805,"column":95}},"351":{"start":{"line":807,"column":2},"end":{"line":807,"column":46}},"352":{"start":{"line":809,"column":2},"end":{"line":809,"column":37}},"353":{"start":{"line":812,"column":2},"end":{"line":825,"column":5}},"354":{"start":{"line":813,"column":4},"end":{"line":813,"column":33}},"355":{"start":{"line":813,"column":12},"end":{"line":813,"column":33}},"356":{"start":{"line":815,"column":4},"end":{"line":824,"column":5}},"357":{"start":{"line":816,"column":6},"end":{"line":816,"column":32}},"358":{"start":{"line":817,"column":6},"end":{"line":817,"column":47}},"359":{"start":{"line":819,"column":6},"end":{"line":823,"column":7}},"360":{"start":{"line":820,"column":8},"end":{"line":820,"column":35}},"361":{"start":{"line":822,"column":8},"end":{"line":822,"column":112}},"362":{"start":{"line":828,"column":0},"end":{"line":828,"column":59}},"363":{"start":{"line":847,"column":0},"end":{"line":855,"column":2}},"364":{"start":{"line":848,"column":2},"end":{"line":848,"column":18}},"365":{"start":{"line":850,"column":2},"end":{"line":850,"column":73}},"366":{"start":{"line":850,"column":36},"end":{"line":850,"column":73}},"367":{"start":{"line":852,"column":2},"end":{"line":854,"column":5}},"368":{"start":{"line":853,"column":4},"end":{"line":853,"column":27}},"369":{"start":{"line":857,"column":0},"end":{"line":857,"column":59}},"370":{"start":{"line":883,"column":0},"end":{"line":900,"column":1}},"371":{"start":{"line":884,"column":2},"end":{"line":884,"column":18}},"372":{"start":{"line":886,"column":2},"end":{"line":886,"column":54}},"373":{"start":{"line":887,"column":2},"end":{"line":887,"column":24}},"374":{"start":{"line":888,"column":2},"end":{"line":888,"column":56}},"375":{"start":{"line":888,"column":36},"end":{"line":888,"column":56}},"376":{"start":{"line":889,"column":2},"end":{"line":889,"column":51}},"377":{"start":{"line":892,"column":2},"end":{"line":892,"column":88}},"378":{"start":{"line":892,"column":36},"end":{"line":892,"column":88}},"379":{"start":{"line":894,"column":2},"end":{"line":899,"column":5}},"380":{"start":{"line":895,"column":4},"end":{"line":898,"column":6}},"381":{"start":{"line":896,"column":6},"end":{"line":896,"column":33}},"382":{"start":{"line":896,"column":14},"end":{"line":896,"column":33}},"383":{"start":{"line":897,"column":6},"end":{"line":897,"column":17}},"384":{"start":{"line":902,"column":0},"end":{"line":937,"column":1}},"385":{"start":{"line":904,"column":2},"end":{"line":906,"column":3}},"386":{"start":{"line":905,"column":4},"end":{"line":905,"column":99}},"387":{"start":{"line":908,"column":2},"end":{"line":908,"column":86}},"388":{"start":{"line":909,"column":2},"end":{"line":909,"column":31}},"389":{"start":{"line":910,"column":2},"end":{"line":910,"column":25}},"390":{"start":{"line":913,"column":2},"end":{"line":919,"column":3}},"391":{"start":{"line":914,"column":4},"end":{"line":914,"column":51}},"392":{"start":{"line":915,"column":9},"end":{"line":919,"column":3}},"393":{"start":{"line":916,"column":4},"end":{"line":916,"column":49}},"394":{"start":{"line":918,"column":4},"end":{"line":918,"column":35}},"395":{"start":{"line":922,"column":2},"end":{"line":922,"column":65}},"396":{"start":{"line":923,"column":2},"end":{"line":934,"column":4}},"397":{"start":{"line":924,"column":4},"end":{"line":933,"column":7}},"398":{"start":{"line":925,"column":6},"end":{"line":925,"column":41}},"399":{"start":{"line":925,"column":14},"end":{"line":925,"column":41}},"400":{"start":{"line":926,"column":6},"end":{"line":926,"column":69}},"401":{"start":{"line":926,"column":24},"end":{"line":926,"column":69}},"402":{"start":{"line":929,"column":6},"end":{"line":929,"column":32}},"403":{"start":{"line":930,"column":6},"end":{"line":930,"column":37}},"404":{"start":{"line":931,"column":6},"end":{"line":931,"column":68}},"405":{"start":{"line":932,"column":6},"end":{"line":932,"column":26}},"406":{"start":{"line":936,"column":2},"end":{"line":936,"column":14}},"407":{"start":{"line":939,"column":0},"end":{"line":939,"column":59}},"408":{"start":{"line":944,"column":0},"end":{"line":1059,"column":2}},"409":{"start":{"line":945,"column":2},"end":{"line":945,"column":37}},"410":{"start":{"line":947,"column":2},"end":{"line":947,"column":97}},"411":{"start":{"line":948,"column":2},"end":{"line":948,"column":70}},"412":{"start":{"line":949,"column":2},"end":{"line":949,"column":47}},"413":{"start":{"line":952,"column":2},"end":{"line":1052,"column":3}},"414":{"start":{"line":953,"column":4},"end":{"line":1019,"column":7}},"415":{"start":{"line":954,"column":6},"end":{"line":954,"column":32}},"416":{"start":{"line":954,"column":14},"end":{"line":954,"column":32}},"417":{"start":{"line":957,"column":6},"end":{"line":977,"column":7}},"418":{"start":{"line":958,"column":8},"end":{"line":958,"column":30}},"419":{"start":{"line":960,"column":8},"end":{"line":960,"column":108}},"420":{"start":{"line":961,"column":8},"end":{"line":961,"column":43}},"421":{"start":{"line":962,"column":8},"end":{"line":962,"column":47}},"422":{"start":{"line":963,"column":8},"end":{"line":963,"column":41}},"423":{"start":{"line":964,"column":8},"end":{"line":964,"column":35}},"424":{"start":{"line":965,"column":8},"end":{"line":965,"column":33}},"425":{"start":{"line":966,"column":8},"end":{"line":966,"column":37}},"426":{"start":{"line":967,"column":8},"end":{"line":967,"column":35}},"427":{"start":{"line":968,"column":13},"end":{"line":977,"column":7}},"428":{"start":{"line":969,"column":8},"end":{"line":969,"column":73}},"429":{"start":{"line":970,"column":8},"end":{"line":970,"column":58}},"430":{"start":{"line":971,"column":8},"end":{"line":971,"column":116}},"431":{"start":{"line":972,"column":8},"end":{"line":972,"column":24}},"432":{"start":{"line":974,"column":8},"end":{"line":974,"column":24}},"433":{"start":{"line":975,"column":8},"end":{"line":975,"column":98}},"434":{"start":{"line":976,"column":8},"end":{"line":976,"column":178}},"435":{"start":{"line":980,"column":6},"end":{"line":1018,"column":7}},"436":{"start":{"line":981,"column":8},"end":{"line":986,"column":11}},"437":{"start":{"line":982,"column":10},"end":{"line":982,"column":36}},"438":{"start":{"line":982,"column":18},"end":{"line":982,"column":36}},"439":{"start":{"line":983,"column":10},"end":{"line":983,"column":36}},"440":{"start":{"line":984,"column":10},"end":{"line":984,"column":28}},"441":{"start":{"line":985,"column":10},"end":{"line":985,"column":31}},"442":{"start":{"line":987,"column":13},"end":{"line":1018,"column":7}},"443":{"start":{"line":989,"column":8},"end":{"line":998,"column":11}},"444":{"start":{"line":990,"column":10},"end":{"line":990,"column":36}},"445":{"start":{"line":990,"column":18},"end":{"line":990,"column":36}},"446":{"start":{"line":991,"column":10},"end":{"line":991,"column":74}},"447":{"start":{"line":992,"column":10},"end":{"line":992,"column":116}},"448":{"start":{"line":993,"column":10},"end":{"line":993,"column":124}},"449":{"start":{"line":994,"column":10},"end":{"line":994,"column":102}},"450":{"start":{"line":995,"column":10},"end":{"line":995,"column":98}},"451":{"start":{"line":996,"column":10},"end":{"line":996,"column":28}},"452":{"start":{"line":997,"column":10},"end":{"line":997,"column":31}},"453":{"start":{"line":999,"column":13},"end":{"line":1018,"column":7}},"454":{"start":{"line":1000,"column":8},"end":{"line":1000,"column":72}},"455":{"start":{"line":1001,"column":8},"end":{"line":1001,"column":114}},"456":{"start":{"line":1002,"column":8},"end":{"line":1002,"column":122}},"457":{"start":{"line":1003,"column":8},"end":{"line":1003,"column":100}},"458":{"start":{"line":1004,"column":8},"end":{"line":1004,"column":96}},"459":{"start":{"line":1005,"column":8},"end":{"line":1005,"column":26}},"460":{"start":{"line":1006,"column":8},"end":{"line":1006,"column":29}},"461":{"start":{"line":1007,"column":13},"end":{"line":1018,"column":7}},"462":{"start":{"line":1008,"column":8},"end":{"line":1017,"column":11}},"463":{"start":{"line":1009,"column":10},"end":{"line":1009,"column":36}},"464":{"start":{"line":1009,"column":18},"end":{"line":1009,"column":36}},"465":{"start":{"line":1011,"column":10},"end":{"line":1011,"column":98}},"466":{"start":{"line":1012,"column":10},"end":{"line":1012,"column":71}},"467":{"start":{"line":1013,"column":10},"end":{"line":1013,"column":102}},"468":{"start":{"line":1014,"column":10},"end":{"line":1014,"column":98}},"469":{"start":{"line":1015,"column":10},"end":{"line":1015,"column":38}},"470":{"start":{"line":1016,"column":10},"end":{"line":1016,"column":31}},"471":{"start":{"line":1022,"column":4},"end":{"line":1022,"column":69}},"472":{"start":{"line":1023,"column":4},"end":{"line":1023,"column":54}},"473":{"start":{"line":1024,"column":4},"end":{"line":1024,"column":112}},"474":{"start":{"line":1025,"column":4},"end":{"line":1025,"column":20}},"475":{"start":{"line":1028,"column":4},"end":{"line":1051,"column":5}},"476":{"start":{"line":1030,"column":6},"end":{"line":1039,"column":9}},"477":{"start":{"line":1031,"column":8},"end":{"line":1031,"column":34}},"478":{"start":{"line":1031,"column":16},"end":{"line":1031,"column":34}},"479":{"start":{"line":1032,"column":8},"end":{"line":1032,"column":72}},"480":{"start":{"line":1033,"column":8},"end":{"line":1033,"column":114}},"481":{"start":{"line":1034,"column":8},"end":{"line":1034,"column":122}},"482":{"start":{"line":1035,"column":8},"end":{"line":1035,"column":100}},"483":{"start":{"line":1036,"column":8},"end":{"line":1036,"column":96}},"484":{"start":{"line":1037,"column":8},"end":{"line":1037,"column":26}},"485":{"start":{"line":1038,"column":8},"end":{"line":1038,"column":29}},"486":{"start":{"line":1040,"column":11},"end":{"line":1051,"column":5}},"487":{"start":{"line":1041,"column":6},"end":{"line":1050,"column":9}},"488":{"start":{"line":1042,"column":8},"end":{"line":1042,"column":34}},"489":{"start":{"line":1042,"column":16},"end":{"line":1042,"column":34}},"490":{"start":{"line":1044,"column":8},"end":{"line":1044,"column":96}},"491":{"start":{"line":1045,"column":8},"end":{"line":1045,"column":69}},"492":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":100}},"493":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":96}},"494":{"start":{"line":1048,"column":8},"end":{"line":1048,"column":36}},"495":{"start":{"line":1049,"column":8},"end":{"line":1049,"column":29}},"496":{"start":{"line":1055,"column":2},"end":{"line":1058,"column":3}},"497":{"start":{"line":1056,"column":4},"end":{"line":1056,"column":25}},"498":{"start":{"line":1056,"column":18},"end":{"line":1056,"column":25}},"499":{"start":{"line":1057,"column":4},"end":{"line":1057,"column":30}},"500":{"start":{"line":1064,"column":0},"end":{"line":1138,"column":2}},"501":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":69}},"502":{"start":{"line":1065,"column":36},"end":{"line":1065,"column":53}},"503":{"start":{"line":1065,"column":54},"end":{"line":1065,"column":67}},"504":{"start":{"line":1066,"column":2},"end":{"line":1066,"column":61}},"505":{"start":{"line":1068,"column":2},"end":{"line":1137,"column":3}},"506":{"start":{"line":1069,"column":4},"end":{"line":1069,"column":181}},"507":{"start":{"line":1071,"column":4},"end":{"line":1136,"column":5}},"508":{"start":{"line":1074,"column":6},"end":{"line":1074,"column":62}},"509":{"start":{"line":1075,"column":6},"end":{"line":1075,"column":73}},"510":{"start":{"line":1076,"column":6},"end":{"line":1076,"column":61}},"511":{"start":{"line":1077,"column":6},"end":{"line":1077,"column":56}},"512":{"start":{"line":1079,"column":6},"end":{"line":1079,"column":68}},"513":{"start":{"line":1081,"column":6},"end":{"line":1092,"column":7}},"514":{"start":{"line":1083,"column":8},"end":{"line":1083,"column":92}},"515":{"start":{"line":1084,"column":8},"end":{"line":1084,"column":63}},"516":{"start":{"line":1085,"column":8},"end":{"line":1085,"column":58}},"517":{"start":{"line":1087,"column":8},"end":{"line":1087,"column":54}},"518":{"start":{"line":1089,"column":8},"end":{"line":1089,"column":39}},"519":{"start":{"line":1091,"column":8},"end":{"line":1091,"column":37}},"520":{"start":{"line":1095,"column":6},"end":{"line":1095,"column":95}},"521":{"start":{"line":1097,"column":6},"end":{"line":1097,"column":72}},"522":{"start":{"line":1097,"column":34},"end":{"line":1097,"column":72}},"523":{"start":{"line":1100,"column":6},"end":{"line":1100,"column":52}},"524":{"start":{"line":1102,"column":6},"end":{"line":1102,"column":55}},"525":{"start":{"line":1104,"column":6},"end":{"line":1122,"column":7}},"526":{"start":{"line":1105,"column":8},"end":{"line":1121,"column":11}},"527":{"start":{"line":1106,"column":10},"end":{"line":1106,"column":39}},"528":{"start":{"line":1106,"column":18},"end":{"line":1106,"column":39}},"529":{"start":{"line":1108,"column":10},"end":{"line":1108,"column":60}},"530":{"start":{"line":1110,"column":10},"end":{"line":1120,"column":11}},"531":{"start":{"line":1112,"column":12},"end":{"line":1116,"column":13}},"532":{"start":{"line":1113,"column":14},"end":{"line":1115,"column":17}},"533":{"start":{"line":1114,"column":16},"end":{"line":1114,"column":36}},"534":{"start":{"line":1119,"column":12},"end":{"line":1119,"column":40}},"535":{"start":{"line":1125,"column":6},"end":{"line":1125,"column":52}},"536":{"start":{"line":1127,"column":6},"end":{"line":1127,"column":38}},"537":{"start":{"line":1129,"column":6},"end":{"line":1133,"column":7}},"538":{"start":{"line":1130,"column":8},"end":{"line":1132,"column":11}},"539":{"start":{"line":1131,"column":10},"end":{"line":1131,"column":30}},"540":{"start":{"line":1135,"column":6},"end":{"line":1135,"column":34}},"541":{"start":{"line":1158,"column":0},"end":{"line":1178,"column":2}},"542":{"start":{"line":1160,"column":2},"end":{"line":1169,"column":4}},"543":{"start":{"line":1171,"column":2},"end":{"line":1171,"column":57}},"544":{"start":{"line":1172,"column":2},"end":{"line":1177,"column":5}},"545":{"start":{"line":1173,"column":4},"end":{"line":1173,"column":33}},"546":{"start":{"line":1173,"column":12},"end":{"line":1173,"column":33}},"547":{"start":{"line":1175,"column":4},"end":{"line":1175,"column":34}},"548":{"start":{"line":1176,"column":4},"end":{"line":1176,"column":32}},"549":{"start":{"line":1184,"column":0},"end":{"line":1199,"column":2}},"550":{"start":{"line":1185,"column":2},"end":{"line":1188,"column":3}},"551":{"start":{"line":1186,"column":4},"end":{"line":1186,"column":23}},"552":{"start":{"line":1187,"column":4},"end":{"line":1187,"column":17}},"553":{"start":{"line":1190,"column":2},"end":{"line":1190,"column":41}},"554":{"start":{"line":1191,"column":2},"end":{"line":1191,"column":47}},"555":{"start":{"line":1193,"column":2},"end":{"line":1198,"column":5}},"556":{"start":{"line":1194,"column":4},"end":{"line":1194,"column":33}},"557":{"start":{"line":1194,"column":12},"end":{"line":1194,"column":33}},"558":{"start":{"line":1196,"column":4},"end":{"line":1196,"column":48}},"559":{"start":{"line":1197,"column":4},"end":{"line":1197,"column":67}},"560":{"start":{"line":1204,"column":0},"end":{"line":1206,"column":2}},"561":{"start":{"line":1205,"column":2},"end":{"line":1205,"column":72}},"562":{"start":{"line":1213,"column":0},"end":{"line":1229,"column":2}},"563":{"start":{"line":1214,"column":2},"end":{"line":1217,"column":3}},"564":{"start":{"line":1215,"column":4},"end":{"line":1215,"column":23}},"565":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":17}},"566":{"start":{"line":1219,"column":2},"end":{"line":1219,"column":41}},"567":{"start":{"line":1221,"column":2},"end":{"line":1228,"column":3}},"568":{"start":{"line":1222,"column":4},"end":{"line":1225,"column":7}},"569":{"start":{"line":1223,"column":6},"end":{"line":1223,"column":42}},"570":{"start":{"line":1223,"column":14},"end":{"line":1223,"column":42}},"571":{"start":{"line":1224,"column":6},"end":{"line":1224,"column":27}},"572":{"start":{"line":1227,"column":4},"end":{"line":1227,"column":25}},"573":{"start":{"line":1236,"column":0},"end":{"line":1236,"column":41}},"574":{"start":{"line":1243,"column":0},"end":{"line":1243,"column":55}},"575":{"start":{"line":1250,"column":0},"end":{"line":1250,"column":26}},"576":{"start":{"line":1257,"column":0},"end":{"line":1257,"column":26}},"577":{"start":{"line":1264,"column":0},"end":{"line":1264,"column":26}},"578":{"start":{"line":1281,"column":0},"end":{"line":1307,"column":2}},"579":{"start":{"line":1282,"column":2},"end":{"line":1282,"column":54}},"580":{"start":{"line":1283,"column":2},"end":{"line":1283,"column":24}},"581":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":56}},"582":{"start":{"line":1284,"column":36},"end":{"line":1284,"column":56}},"583":{"start":{"line":1285,"column":2},"end":{"line":1285,"column":53}},"584":{"start":{"line":1286,"column":2},"end":{"line":1286,"column":44}},"585":{"start":{"line":1287,"column":2},"end":{"line":1287,"column":26}},"586":{"start":{"line":1290,"column":2},"end":{"line":1290,"column":46}},"587":{"start":{"line":1293,"column":2},"end":{"line":1296,"column":3}},"588":{"start":{"line":1294,"column":4},"end":{"line":1295,"column":54}},"589":{"start":{"line":1299,"column":2},"end":{"line":1299,"column":103}},"590":{"start":{"line":1299,"column":36},"end":{"line":1299,"column":103}},"591":{"start":{"line":1301,"column":2},"end":{"line":1306,"column":5}},"592":{"start":{"line":1302,"column":4},"end":{"line":1305,"column":6}},"593":{"start":{"line":1303,"column":6},"end":{"line":1303,"column":33}},"594":{"start":{"line":1303,"column":14},"end":{"line":1303,"column":33}},"595":{"start":{"line":1304,"column":6},"end":{"line":1304,"column":17}},"596":{"start":{"line":1309,"column":0},"end":{"line":1335,"column":1}},"597":{"start":{"line":1311,"column":2},"end":{"line":1311,"column":72}},"598":{"start":{"line":1313,"column":2},"end":{"line":1313,"column":104}},"599":{"start":{"line":1314,"column":2},"end":{"line":1334,"column":5}},"600":{"start":{"line":1315,"column":4},"end":{"line":1315,"column":33}},"601":{"start":{"line":1315,"column":12},"end":{"line":1315,"column":33}},"602":{"start":{"line":1318,"column":4},"end":{"line":1320,"column":29}},"603":{"start":{"line":1323,"column":4},"end":{"line":1327,"column":5}},"604":{"start":{"line":1326,"column":6},"end":{"line":1326,"column":27}},"605":{"start":{"line":1330,"column":4},"end":{"line":1333,"column":7}},"606":{"start":{"line":1331,"column":6},"end":{"line":1331,"column":35}},"607":{"start":{"line":1331,"column":14},"end":{"line":1331,"column":35}},"608":{"start":{"line":1332,"column":6},"end":{"line":1332,"column":50}},"609":{"start":{"line":1337,"column":0},"end":{"line":1337,"column":61}},"610":{"start":{"line":1353,"column":0},"end":{"line":1379,"column":2}},"611":{"start":{"line":1354,"column":2},"end":{"line":1354,"column":54}},"612":{"start":{"line":1355,"column":2},"end":{"line":1355,"column":24}},"613":{"start":{"line":1356,"column":2},"end":{"line":1356,"column":56}},"614":{"start":{"line":1356,"column":36},"end":{"line":1356,"column":56}},"615":{"start":{"line":1357,"column":2},"end":{"line":1357,"column":53}},"616":{"start":{"line":1358,"column":2},"end":{"line":1358,"column":44}},"617":{"start":{"line":1359,"column":2},"end":{"line":1359,"column":26}},"618":{"start":{"line":1362,"column":2},"end":{"line":1362,"column":46}},"619":{"start":{"line":1365,"column":2},"end":{"line":1368,"column":3}},"620":{"start":{"line":1366,"column":4},"end":{"line":1367,"column":54}},"621":{"start":{"line":1371,"column":2},"end":{"line":1371,"column":87}},"622":{"start":{"line":1371,"column":36},"end":{"line":1371,"column":87}},"623":{"start":{"line":1373,"column":2},"end":{"line":1378,"column":5}},"624":{"start":{"line":1374,"column":4},"end":{"line":1377,"column":6}},"625":{"start":{"line":1375,"column":6},"end":{"line":1375,"column":33}},"626":{"start":{"line":1375,"column":14},"end":{"line":1375,"column":33}},"627":{"start":{"line":1376,"column":6},"end":{"line":1376,"column":17}},"628":{"start":{"line":1381,"column":0},"end":{"line":1410,"column":1}},"629":{"start":{"line":1383,"column":2},"end":{"line":1386,"column":3}},"630":{"start":{"line":1384,"column":4},"end":{"line":1384,"column":29}},"631":{"start":{"line":1385,"column":4},"end":{"line":1385,"column":26}},"632":{"start":{"line":1389,"column":2},"end":{"line":1389,"column":72}},"633":{"start":{"line":1391,"column":2},"end":{"line":1391,"column":59}},"634":{"start":{"line":1393,"column":2},"end":{"line":1393,"column":104}},"635":{"start":{"line":1394,"column":2},"end":{"line":1394,"column":17}},"636":{"start":{"line":1395,"column":2},"end":{"line":1409,"column":5}},"637":{"start":{"line":1396,"column":4},"end":{"line":1396,"column":33}},"638":{"start":{"line":1396,"column":12},"end":{"line":1396,"column":33}},"639":{"start":{"line":1398,"column":4},"end":{"line":1408,"column":7}},"640":{"start":{"line":1399,"column":6},"end":{"line":1399,"column":35}},"641":{"start":{"line":1399,"column":14},"end":{"line":1399,"column":35}},"642":{"start":{"line":1401,"column":6},"end":{"line":1407,"column":9}},"643":{"start":{"line":1402,"column":8},"end":{"line":1406,"column":9}},"644":{"start":{"line":1403,"column":10},"end":{"line":1403,"column":54}},"645":{"start":{"line":1405,"column":10},"end":{"line":1405,"column":31}},"646":{"start":{"line":1412,"column":0},"end":{"line":1412,"column":60}},"647":{"start":{"line":1437,"column":0},"end":{"line":1464,"column":2}},"648":{"start":{"line":1438,"column":2},"end":{"line":1438,"column":54}},"649":{"start":{"line":1439,"column":2},"end":{"line":1439,"column":24}},"650":{"start":{"line":1440,"column":2},"end":{"line":1440,"column":56}},"651":{"start":{"line":1440,"column":36},"end":{"line":1440,"column":56}},"652":{"start":{"line":1441,"column":2},"end":{"line":1441,"column":45}},"653":{"start":{"line":1442,"column":2},"end":{"line":1442,"column":45}},"654":{"start":{"line":1443,"column":2},"end":{"line":1443,"column":46}},"655":{"start":{"line":1444,"column":2},"end":{"line":1444,"column":26}},"656":{"start":{"line":1447,"column":2},"end":{"line":1447,"column":63}},"657":{"start":{"line":1450,"column":2},"end":{"line":1453,"column":3}},"658":{"start":{"line":1451,"column":4},"end":{"line":1452,"column":54}},"659":{"start":{"line":1456,"column":2},"end":{"line":1456,"column":99}},"660":{"start":{"line":1456,"column":36},"end":{"line":1456,"column":99}},"661":{"start":{"line":1458,"column":2},"end":{"line":1463,"column":5}},"662":{"start":{"line":1459,"column":4},"end":{"line":1462,"column":6}},"663":{"start":{"line":1460,"column":6},"end":{"line":1460,"column":33}},"664":{"start":{"line":1460,"column":14},"end":{"line":1460,"column":33}},"665":{"start":{"line":1461,"column":6},"end":{"line":1461,"column":17}},"666":{"start":{"line":1466,"column":0},"end":{"line":1483,"column":1}},"667":{"start":{"line":1467,"column":2},"end":{"line":1482,"column":5}},"668":{"start":{"line":1468,"column":4},"end":{"line":1468,"column":33}},"669":{"start":{"line":1468,"column":12},"end":{"line":1468,"column":33}},"670":{"start":{"line":1470,"column":4},"end":{"line":1470,"column":102}},"671":{"start":{"line":1470,"column":45},"end":{"line":1470,"column":102}},"672":{"start":{"line":1471,"column":4},"end":{"line":1471,"column":112}},"673":{"start":{"line":1471,"column":44},"end":{"line":1471,"column":112}},"674":{"start":{"line":1472,"column":4},"end":{"line":1472,"column":144}},"675":{"start":{"line":1472,"column":65},"end":{"line":1472,"column":144}},"676":{"start":{"line":1474,"column":4},"end":{"line":1481,"column":5}},"677":{"start":{"line":1475,"column":6},"end":{"line":1478,"column":9}},"678":{"start":{"line":1476,"column":8},"end":{"line":1476,"column":37}},"679":{"start":{"line":1476,"column":16},"end":{"line":1476,"column":37}},"680":{"start":{"line":1477,"column":8},"end":{"line":1477,"column":41}},"681":{"start":{"line":1480,"column":6},"end":{"line":1480,"column":39}},"682":{"start":{"line":1485,"column":0},"end":{"line":1485,"column":60}},"683":{"start":{"line":1502,"column":0},"end":{"line":1528,"column":2}},"684":{"start":{"line":1503,"column":2},"end":{"line":1503,"column":54}},"685":{"start":{"line":1504,"column":2},"end":{"line":1504,"column":24}},"686":{"start":{"line":1505,"column":2},"end":{"line":1505,"column":56}},"687":{"start":{"line":1505,"column":36},"end":{"line":1505,"column":56}},"688":{"start":{"line":1506,"column":2},"end":{"line":1506,"column":48}},"689":{"start":{"line":1507,"column":2},"end":{"line":1507,"column":46}},"690":{"start":{"line":1508,"column":2},"end":{"line":1508,"column":26}},"691":{"start":{"line":1511,"column":2},"end":{"line":1511,"column":63}},"692":{"start":{"line":1514,"column":2},"end":{"line":1517,"column":3}},"693":{"start":{"line":1515,"column":4},"end":{"line":1516,"column":54}},"694":{"start":{"line":1520,"column":2},"end":{"line":1520,"column":99}},"695":{"start":{"line":1520,"column":36},"end":{"line":1520,"column":99}},"696":{"start":{"line":1522,"column":2},"end":{"line":1527,"column":5}},"697":{"start":{"line":1523,"column":4},"end":{"line":1526,"column":6}},"698":{"start":{"line":1524,"column":6},"end":{"line":1524,"column":33}},"699":{"start":{"line":1524,"column":14},"end":{"line":1524,"column":33}},"700":{"start":{"line":1525,"column":6},"end":{"line":1525,"column":17}},"701":{"start":{"line":1530,"column":0},"end":{"line":1536,"column":1}},"702":{"start":{"line":1531,"column":2},"end":{"line":1531,"column":60}},"703":{"start":{"line":1532,"column":2},"end":{"line":1535,"column":5}},"704":{"start":{"line":1533,"column":4},"end":{"line":1533,"column":33}},"705":{"start":{"line":1533,"column":12},"end":{"line":1533,"column":33}},"706":{"start":{"line":1534,"column":4},"end":{"line":1534,"column":50}},"707":{"start":{"line":1538,"column":0},"end":{"line":1538,"column":65}},"708":{"start":{"line":1553,"column":0},"end":{"line":1580,"column":2}},"709":{"start":{"line":1554,"column":2},"end":{"line":1554,"column":18}},"710":{"start":{"line":1555,"column":2},"end":{"line":1555,"column":54}},"711":{"start":{"line":1556,"column":2},"end":{"line":1556,"column":24}},"712":{"start":{"line":1557,"column":2},"end":{"line":1557,"column":56}},"713":{"start":{"line":1557,"column":36},"end":{"line":1557,"column":56}},"714":{"start":{"line":1558,"column":2},"end":{"line":1558,"column":44}},"715":{"start":{"line":1559,"column":2},"end":{"line":1559,"column":26}},"716":{"start":{"line":1562,"column":2},"end":{"line":1562,"column":46}},"717":{"start":{"line":1565,"column":2},"end":{"line":1568,"column":3}},"718":{"start":{"line":1566,"column":4},"end":{"line":1567,"column":54}},"719":{"start":{"line":1571,"column":2},"end":{"line":1571,"column":92}},"720":{"start":{"line":1571,"column":36},"end":{"line":1571,"column":92}},"721":{"start":{"line":1574,"column":2},"end":{"line":1579,"column":5}},"722":{"start":{"line":1575,"column":4},"end":{"line":1578,"column":6}},"723":{"start":{"line":1576,"column":6},"end":{"line":1576,"column":33}},"724":{"start":{"line":1576,"column":14},"end":{"line":1576,"column":33}},"725":{"start":{"line":1577,"column":6},"end":{"line":1577,"column":17}},"726":{"start":{"line":1582,"column":0},"end":{"line":1611,"column":1}},"727":{"start":{"line":1584,"column":2},"end":{"line":1584,"column":51}},"728":{"start":{"line":1587,"column":2},"end":{"line":1610,"column":3}},"729":{"start":{"line":1588,"column":4},"end":{"line":1588,"column":15}},"730":{"start":{"line":1589,"column":4},"end":{"line":1596,"column":5}},"731":{"start":{"line":1590,"column":6},"end":{"line":1590,"column":11}},"732":{"start":{"line":1591,"column":6},"end":{"line":1595,"column":9}},"733":{"start":{"line":1592,"column":8},"end":{"line":1594,"column":9}},"734":{"start":{"line":1593,"column":10},"end":{"line":1593,"column":31}},"735":{"start":{"line":1598,"column":4},"end":{"line":1609,"column":7}},"736":{"start":{"line":1599,"column":6},"end":{"line":1599,"column":35}},"737":{"start":{"line":1599,"column":14},"end":{"line":1599,"column":35}},"738":{"start":{"line":1600,"column":6},"end":{"line":1608,"column":9}},"739":{"start":{"line":1601,"column":8},"end":{"line":1601,"column":37}},"740":{"start":{"line":1601,"column":16},"end":{"line":1601,"column":37}},"741":{"start":{"line":1602,"column":8},"end":{"line":1607,"column":11}},"742":{"start":{"line":1603,"column":10},"end":{"line":1603,"column":39}},"743":{"start":{"line":1603,"column":18},"end":{"line":1603,"column":39}},"744":{"start":{"line":1604,"column":10},"end":{"line":1606,"column":13}},"745":{"start":{"line":1605,"column":12},"end":{"line":1605,"column":32}},"746":{"start":{"line":1613,"column":0},"end":{"line":1613,"column":62}},"747":{"start":{"line":1618,"column":0},"end":{"line":1625,"column":1}},"748":{"start":{"line":1620,"column":2},"end":{"line":1624,"column":3}},"749":{"start":{"line":1621,"column":4},"end":{"line":1621,"column":52}},"750":{"start":{"line":1623,"column":4},"end":{"line":1623,"column":74}},"751":{"start":{"line":1630,"column":0},"end":{"line":1638,"column":1}},"752":{"start":{"line":1631,"column":2},"end":{"line":1631,"column":24}},"753":{"start":{"line":1632,"column":2},"end":{"line":1632,"column":51}},"754":{"start":{"line":1632,"column":24},"end":{"line":1632,"column":51}},"755":{"start":{"line":1633,"column":2},"end":{"line":1633,"column":63}},"756":{"start":{"line":1633,"column":30},"end":{"line":1633,"column":63}},"757":{"start":{"line":1634,"column":2},"end":{"line":1634,"column":51}},"758":{"start":{"line":1634,"column":24},"end":{"line":1634,"column":51}},"759":{"start":{"line":1635,"column":2},"end":{"line":1635,"column":63}},"760":{"start":{"line":1635,"column":28},"end":{"line":1635,"column":63}},"761":{"start":{"line":1636,"column":2},"end":{"line":1636,"column":72}},"762":{"start":{"line":1636,"column":31},"end":{"line":1636,"column":72}},"763":{"start":{"line":1637,"column":2},"end":{"line":1637,"column":22}},"764":{"start":{"line":1643,"column":0},"end":{"line":1669,"column":1}},"765":{"start":{"line":1645,"column":2},"end":{"line":1645,"column":27}},"766":{"start":{"line":1646,"column":2},"end":{"line":1646,"column":26}},"767":{"start":{"line":1649,"column":2},"end":{"line":1661,"column":3}},"768":{"start":{"line":1650,"column":4},"end":{"line":1650,"column":49}},"769":{"start":{"line":1651,"column":9},"end":{"line":1661,"column":3}},"770":{"start":{"line":1652,"column":4},"end":{"line":1652,"column":54}},"771":{"start":{"line":1653,"column":9},"end":{"line":1661,"column":3}},"772":{"start":{"line":1654,"column":4},"end":{"line":1654,"column":47}},"773":{"start":{"line":1655,"column":9},"end":{"line":1661,"column":3}},"774":{"start":{"line":1656,"column":4},"end":{"line":1656,"column":54}},"775":{"start":{"line":1657,"column":9},"end":{"line":1661,"column":3}},"776":{"start":{"line":1658,"column":4},"end":{"line":1658,"column":51}},"777":{"start":{"line":1659,"column":9},"end":{"line":1661,"column":3}},"778":{"start":{"line":1660,"column":4},"end":{"line":1660,"column":44}},"779":{"start":{"line":1664,"column":2},"end":{"line":1665,"column":228}},"780":{"start":{"line":1665,"column":95},"end":{"line":1665,"column":228}},"781":{"start":{"line":1668,"column":2},"end":{"line":1668,"column":22}},"782":{"start":{"line":1679,"column":0},"end":{"line":1692,"column":1}},"783":{"start":{"line":1681,"column":2},"end":{"line":1681,"column":20}},"784":{"start":{"line":1684,"column":2},"end":{"line":1684,"column":15}},"785":{"start":{"line":1687,"column":2},"end":{"line":1687,"column":25}},"786":{"start":{"line":1690,"column":2},"end":{"line":1690,"column":60}},"787":{"start":{"line":1691,"column":2},"end":{"line":1691,"column":39}},"788":{"start":{"line":1696,"column":0},"end":{"line":1696,"column":34}},"789":{"start":{"line":1698,"column":0},"end":{"line":1698,"column":65}},"790":{"start":{"line":1701,"column":0},"end":{"line":1717,"column":1}},"791":{"start":{"line":1702,"column":2},"end":{"line":1702,"column":18}},"792":{"start":{"line":1705,"column":2},"end":{"line":1714,"column":3}},"793":{"start":{"line":1706,"column":4},"end":{"line":1710,"column":7}},"794":{"start":{"line":1707,"column":6},"end":{"line":1707,"column":45}},"795":{"start":{"line":1707,"column":14},"end":{"line":1707,"column":45}},"796":{"start":{"line":1708,"column":6},"end":{"line":1708,"column":64}},"797":{"start":{"line":1709,"column":6},"end":{"line":1709,"column":44}},"798":{"start":{"line":1712,"column":4},"end":{"line":1712,"column":62}},"799":{"start":{"line":1713,"column":4},"end":{"line":1713,"column":42}},"800":{"start":{"line":1716,"column":2},"end":{"line":1716,"column":21}},"801":{"start":{"line":1720,"column":0},"end":{"line":1757,"column":1}},"802":{"start":{"line":1721,"column":2},"end":{"line":1721,"column":18}},"803":{"start":{"line":1723,"column":2},"end":{"line":1744,"column":3}},"804":{"start":{"line":1725,"column":4},"end":{"line":1743,"column":7}},"805":{"start":{"line":1726,"column":6},"end":{"line":1726,"column":64}},"806":{"start":{"line":1726,"column":33},"end":{"line":1726,"column":64}},"807":{"start":{"line":1729,"column":6},"end":{"line":1729,"column":66}},"808":{"start":{"line":1729,"column":43},"end":{"line":1729,"column":66}},"809":{"start":{"line":1731,"column":6},"end":{"line":1737,"column":7}},"810":{"start":{"line":1732,"column":8},"end":{"line":1732,"column":70}},"811":{"start":{"line":1733,"column":8},"end":{"line":1733,"column":26}},"812":{"start":{"line":1734,"column":13},"end":{"line":1737,"column":7}},"813":{"start":{"line":1735,"column":8},"end":{"line":1735,"column":70}},"814":{"start":{"line":1736,"column":8},"end":{"line":1736,"column":50}},"815":{"start":{"line":1740,"column":6},"end":{"line":1742,"column":7}},"816":{"start":{"line":1741,"column":8},"end":{"line":1741,"column":30}},"817":{"start":{"line":1747,"column":2},"end":{"line":1747,"column":107}},"818":{"start":{"line":1748,"column":2},"end":{"line":1756,"column":3}},"819":{"start":{"line":1749,"column":4},"end":{"line":1753,"column":7}},"820":{"start":{"line":1750,"column":6},"end":{"line":1750,"column":64}},"821":{"start":{"line":1751,"column":6},"end":{"line":1751,"column":45}},"822":{"start":{"line":1751,"column":14},"end":{"line":1751,"column":45}},"823":{"start":{"line":1752,"column":6},"end":{"line":1752,"column":13}},"824":{"start":{"line":1755,"column":4},"end":{"line":1755,"column":11}},"825":{"start":{"line":1759,"column":0},"end":{"line":1764,"column":1}},"826":{"start":{"line":1760,"column":2},"end":{"line":1760,"column":15}},"827":{"start":{"line":1761,"column":2},"end":{"line":1761,"column":24}},"828":{"start":{"line":1762,"column":2},"end":{"line":1762,"column":18}},"829":{"start":{"line":1763,"column":2},"end":{"line":1763,"column":19}},"830":{"start":{"line":1766,"column":0},"end":{"line":1786,"column":1}},"831":{"start":{"line":1767,"column":2},"end":{"line":1767,"column":18}},"832":{"start":{"line":1768,"column":2},"end":{"line":1768,"column":139}},"833":{"start":{"line":1768,"column":21},"end":{"line":1768,"column":139}},"834":{"start":{"line":1770,"column":2},"end":{"line":1785,"column":3}},"835":{"start":{"line":1771,"column":4},"end":{"line":1778,"column":7}},"836":{"start":{"line":1772,"column":6},"end":{"line":1772,"column":28}},"837":{"start":{"line":1773,"column":6},"end":{"line":1777,"column":9}},"838":{"start":{"line":1774,"column":8},"end":{"line":1776,"column":11}},"839":{"start":{"line":1775,"column":10},"end":{"line":1775,"column":29}},"840":{"start":{"line":1779,"column":4},"end":{"line":1779,"column":17}},"841":{"start":{"line":1781,"column":4},"end":{"line":1783,"column":7}},"842":{"start":{"line":1782,"column":6},"end":{"line":1782,"column":25}},"843":{"start":{"line":1784,"column":4},"end":{"line":1784,"column":16}},"844":{"start":{"line":1788,"column":0},"end":{"line":1810,"column":1}},"845":{"start":{"line":1789,"column":2},"end":{"line":1789,"column":18}},"846":{"start":{"line":1790,"column":2},"end":{"line":1790,"column":54}},"847":{"start":{"line":1791,"column":2},"end":{"line":1791,"column":24}},"848":{"start":{"line":1792,"column":2},"end":{"line":1792,"column":56}},"849":{"start":{"line":1792,"column":36},"end":{"line":1792,"column":56}},"850":{"start":{"line":1793,"column":2},"end":{"line":1793,"column":44}},"851":{"start":{"line":1794,"column":2},"end":{"line":1794,"column":47}},"852":{"start":{"line":1795,"column":2},"end":{"line":1795,"column":24}},"853":{"start":{"line":1797,"column":2},"end":{"line":1804,"column":3}},"854":{"start":{"line":1798,"column":4},"end":{"line":1803,"column":7}},"855":{"start":{"line":1799,"column":6},"end":{"line":1802,"column":9}},"856":{"start":{"line":1800,"column":8},"end":{"line":1800,"column":53}},"857":{"start":{"line":1800,"column":42},"end":{"line":1800,"column":53}},"858":{"start":{"line":1801,"column":8},"end":{"line":1801,"column":24}},"859":{"start":{"line":1806,"column":2},"end":{"line":1809,"column":5}},"860":{"start":{"line":1807,"column":4},"end":{"line":1807,"column":49}},"861":{"start":{"line":1807,"column":38},"end":{"line":1807,"column":49}},"862":{"start":{"line":1808,"column":4},"end":{"line":1808,"column":20}},"863":{"start":{"line":1951,"column":0},"end":{"line":1951,"column":27}}},"branchMap":{"1":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":11},"end":{"line":48,"column":35}},{"start":{"line":48,"column":39},"end":{"line":48,"column":72}}]},"2":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"3":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"4":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":9},"end":{"line":98,"column":9}},{"start":{"line":98,"column":9},"end":{"line":98,"column":9}}]},"6":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"7":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":5},"end":{"line":104,"column":7}},{"start":{"line":104,"column":11},"end":{"line":104,"column":37}}]},"8":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":9},"end":{"line":108,"column":9}},{"start":{"line":108,"column":9},"end":{"line":108,"column":9}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"10":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":29},"end":{"line":121,"column":32}},{"start":{"line":121,"column":35},"end":{"line":121,"column":39}}]},"11":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":17},"end":{"line":122,"column":24}},{"start":{"line":122,"column":28},"end":{"line":122,"column":30}}]},"12":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":45},"end":{"line":128,"column":78}},{"start":{"line":128,"column":81},"end":{"line":128,"column":101}}]},"13":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":24},"end":{"line":130,"column":51}},{"start":{"line":130,"column":55},"end":{"line":130,"column":80}},{"start":{"line":130,"column":84},"end":{"line":130,"column":106}}]},"14":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":63},"end":{"line":133,"column":87}},{"start":{"line":133,"column":90},"end":{"line":133,"column":115}}]},"15":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"16":{"line":140,"type":"cond-expr","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":20}},{"start":{"line":141,"column":23},"end":{"line":141,"column":53}}]},"17":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":7},"end":{"line":152,"column":7}},{"start":{"line":152,"column":7},"end":{"line":152,"column":7}}]},"18":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":31}},{"start":{"line":152,"column":35},"end":{"line":152,"column":53}},{"start":{"line":152,"column":57},"end":{"line":152,"column":80}}]},"19":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":67},"end":{"line":168,"column":96}},{"start":{"line":168,"column":99},"end":{"line":168,"column":103}}]},"20":{"line":168,"type":"binary-expr","locations":[{"start":{"line":168,"column":14},"end":{"line":168,"column":31}},{"start":{"line":168,"column":35},"end":{"line":168,"column":64}}]},"21":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":2},"end":{"line":193,"column":2}},{"start":{"line":193,"column":2},"end":{"line":193,"column":2}}]},"22":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":6},"end":{"line":193,"column":22}},{"start":{"line":193,"column":26},"end":{"line":193,"column":43}},{"start":{"line":193,"column":47},"end":{"line":193,"column":63}}]},"23":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"24":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":6},"end":{"line":202,"column":6}},{"start":{"line":202,"column":6},"end":{"line":202,"column":6}}]},"25":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"26":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":22}},{"start":{"line":213,"column":26},"end":{"line":213,"column":43}}]},"27":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":10},"end":{"line":227,"column":10}},{"start":{"line":227,"column":10},"end":{"line":227,"column":10}}]},"28":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":6}},{"start":{"line":236,"column":6},"end":{"line":236,"column":6}}]},"29":{"line":254,"type":"cond-expr","locations":[{"start":{"line":254,"column":40},"end":{"line":254,"column":44}},{"start":{"line":254,"column":47},"end":{"line":254,"column":52}}]},"30":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]},"31":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":6}},{"start":{"line":281,"column":6},"end":{"line":281,"column":6}}]},"32":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"33":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":9},"end":{"line":290,"column":9}},{"start":{"line":290,"column":9},"end":{"line":290,"column":9}}]},"34":{"line":316,"type":"cond-expr","locations":[{"start":{"line":316,"column":50},"end":{"line":316,"column":63}},{"start":{"line":316,"column":66},"end":{"line":316,"column":72}}]},"35":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":2},"end":{"line":318,"column":2}},{"start":{"line":318,"column":2},"end":{"line":318,"column":2}}]},"36":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":6},"end":{"line":322,"column":6}},{"start":{"line":322,"column":6},"end":{"line":322,"column":6}}]},"37":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":2},"end":{"line":356,"column":2}},{"start":{"line":356,"column":2},"end":{"line":356,"column":2}}]},"38":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":6},"end":{"line":360,"column":6}},{"start":{"line":360,"column":6},"end":{"line":360,"column":6}}]},"39":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":2},"end":{"line":377,"column":2}},{"start":{"line":377,"column":2},"end":{"line":377,"column":2}}]},"40":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":2},"end":{"line":379,"column":2}},{"start":{"line":379,"column":2},"end":{"line":379,"column":2}}]},"41":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":2},"end":{"line":400,"column":2}},{"start":{"line":400,"column":2},"end":{"line":400,"column":2}}]},"42":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":6},"end":{"line":404,"column":6}},{"start":{"line":404,"column":6},"end":{"line":404,"column":6}}]},"43":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]},"44":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":6},"end":{"line":413,"column":6}},{"start":{"line":413,"column":6},"end":{"line":413,"column":6}}]},"45":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"46":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":6},"end":{"line":423,"column":6}},{"start":{"line":423,"column":6},"end":{"line":423,"column":6}}]},"47":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":10},"end":{"line":431,"column":10}},{"start":{"line":431,"column":10},"end":{"line":431,"column":10}}]},"48":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":12},"end":{"line":438,"column":12}},{"start":{"line":438,"column":12},"end":{"line":438,"column":12}}]},"49":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":14},"end":{"line":441,"column":14}},{"start":{"line":441,"column":14},"end":{"line":441,"column":14}}]},"50":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":14},"end":{"line":448,"column":14}},{"start":{"line":448,"column":14},"end":{"line":448,"column":14}}]},"51":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":18},"end":{"line":451,"column":18}},{"start":{"line":451,"column":18},"end":{"line":451,"column":18}}]},"52":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":2},"end":{"line":483,"column":2}},{"start":{"line":483,"column":2},"end":{"line":483,"column":2}}]},"53":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":6},"end":{"line":487,"column":6}},{"start":{"line":487,"column":6},"end":{"line":487,"column":6}}]},"54":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":494,"column":2}},{"start":{"line":494,"column":2},"end":{"line":494,"column":2}}]},"55":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":4},"end":{"line":498,"column":4}},{"start":{"line":498,"column":4},"end":{"line":498,"column":4}}]},"56":{"line":498,"type":"binary-expr","locations":[{"start":{"line":498,"column":7},"end":{"line":498,"column":32}},{"start":{"line":498,"column":36},"end":{"line":498,"column":66}}]},"57":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":8},"end":{"line":500,"column":8}},{"start":{"line":500,"column":8},"end":{"line":500,"column":8}}]},"58":{"line":500,"type":"binary-expr","locations":[{"start":{"line":500,"column":11},"end":{"line":500,"column":14}},{"start":{"line":500,"column":18},"end":{"line":500,"column":47}}]},"59":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":10},"end":{"line":503,"column":10}},{"start":{"line":503,"column":10},"end":{"line":503,"column":10}}]},"60":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":13},"end":{"line":503,"column":16}},{"start":{"line":503,"column":20},"end":{"line":503,"column":49}}]},"61":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":10},"end":{"line":506,"column":10}},{"start":{"line":506,"column":10},"end":{"line":506,"column":10}}]},"62":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":14},"end":{"line":508,"column":14}},{"start":{"line":508,"column":14},"end":{"line":508,"column":14}}]},"63":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":16},"end":{"line":509,"column":16}},{"start":{"line":509,"column":16},"end":{"line":509,"column":16}}]},"64":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":16},"end":{"line":513,"column":16}},{"start":{"line":513,"column":16},"end":{"line":513,"column":16}}]},"65":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":14},"end":{"line":520,"column":14}},{"start":{"line":520,"column":14},"end":{"line":520,"column":14}}]},"66":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":16},"end":{"line":521,"column":16}},{"start":{"line":521,"column":16},"end":{"line":521,"column":16}}]},"67":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":16},"end":{"line":525,"column":16}},{"start":{"line":525,"column":16},"end":{"line":525,"column":16}}]},"68":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":8},"end":{"line":534,"column":8}},{"start":{"line":534,"column":8},"end":{"line":534,"column":8}}]},"69":{"line":534,"type":"binary-expr","locations":[{"start":{"line":534,"column":11},"end":{"line":534,"column":14}},{"start":{"line":534,"column":18},"end":{"line":534,"column":47}}]},"70":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":10},"end":{"line":538,"column":10}},{"start":{"line":538,"column":10},"end":{"line":538,"column":10}}]},"71":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":12},"end":{"line":539,"column":12}},{"start":{"line":539,"column":12},"end":{"line":539,"column":12}}]},"72":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":12},"end":{"line":543,"column":12}},{"start":{"line":543,"column":12},"end":{"line":543,"column":12}}]},"73":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":9},"end":{"line":549,"column":9}},{"start":{"line":549,"column":9},"end":{"line":549,"column":9}}]},"74":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"75":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":4},"end":{"line":553,"column":4}},{"start":{"line":553,"column":4},"end":{"line":553,"column":4}}]},"76":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":2},"end":{"line":576,"column":2}},{"start":{"line":576,"column":2},"end":{"line":576,"column":2}}]},"77":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":2},"end":{"line":594,"column":2}},{"start":{"line":594,"column":2},"end":{"line":594,"column":2}}]},"78":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":6},"end":{"line":598,"column":6}},{"start":{"line":598,"column":6},"end":{"line":598,"column":6}}]},"79":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":4},"end":{"line":606,"column":4}},{"start":{"line":606,"column":4},"end":{"line":606,"column":4}}]},"80":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":6},"end":{"line":612,"column":6}},{"start":{"line":612,"column":6},"end":{"line":612,"column":6}}]},"81":{"line":635,"type":"if","locations":[{"start":{"line":635,"column":2},"end":{"line":635,"column":2}},{"start":{"line":635,"column":2},"end":{"line":635,"column":2}}]},"82":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":2},"end":{"line":662,"column":2}},{"start":{"line":662,"column":2},"end":{"line":662,"column":2}}]},"83":{"line":663,"type":"cond-expr","locations":[{"start":{"line":663,"column":28},"end":{"line":663,"column":40}},{"start":{"line":663,"column":43},"end":{"line":663,"column":47}}]},"84":{"line":664,"type":"binary-expr","locations":[{"start":{"line":664,"column":14},"end":{"line":664,"column":23}},{"start":{"line":664,"column":27},"end":{"line":664,"column":31}}]},"85":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":2},"end":{"line":667,"column":2}},{"start":{"line":667,"column":2},"end":{"line":667,"column":2}}]},"86":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":6},"end":{"line":672,"column":6}},{"start":{"line":672,"column":6},"end":{"line":672,"column":6}}]},"87":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":4},"end":{"line":680,"column":4}},{"start":{"line":680,"column":4},"end":{"line":680,"column":4}}]},"88":{"line":683,"type":"cond-expr","locations":[{"start":{"line":683,"column":31},"end":{"line":683,"column":64}},{"start":{"line":683,"column":67},"end":{"line":683,"column":69}}]},"89":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":2},"end":{"line":706,"column":2}},{"start":{"line":706,"column":2},"end":{"line":706,"column":2}}]},"90":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":6},"end":{"line":710,"column":6}},{"start":{"line":710,"column":6},"end":{"line":710,"column":6}}]},"91":{"line":717,"type":"if","locations":[{"start":{"line":717,"column":2},"end":{"line":717,"column":2}},{"start":{"line":717,"column":2},"end":{"line":717,"column":2}}]},"92":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":4},"end":{"line":718,"column":4}},{"start":{"line":718,"column":4},"end":{"line":718,"column":4}}]},"93":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":8},"end":{"line":720,"column":8}},{"start":{"line":720,"column":8},"end":{"line":720,"column":8}}]},"94":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":8},"end":{"line":727,"column":8}},{"start":{"line":727,"column":8},"end":{"line":727,"column":8}}]},"95":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":2},"end":{"line":771,"column":2}},{"start":{"line":771,"column":2},"end":{"line":771,"column":2}}]},"96":{"line":772,"type":"cond-expr","locations":[{"start":{"line":772,"column":25},"end":{"line":772,"column":37}},{"start":{"line":772,"column":40},"end":{"line":772,"column":44}}]},"97":{"line":773,"type":"cond-expr","locations":[{"start":{"line":773,"column":25},"end":{"line":773,"column":37}},{"start":{"line":773,"column":40},"end":{"line":773,"column":44}}]},"98":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":2},"end":{"line":775,"column":2}},{"start":{"line":775,"column":2},"end":{"line":775,"column":2}}]},"99":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":6},"end":{"line":779,"column":6}},{"start":{"line":779,"column":6},"end":{"line":779,"column":6}}]},"100":{"line":787,"type":"cond-expr","locations":[{"start":{"line":787,"column":37},"end":{"line":787,"column":64}},{"start":{"line":787,"column":67},"end":{"line":787,"column":73}}]},"101":{"line":788,"type":"cond-expr","locations":[{"start":{"line":788,"column":37},"end":{"line":788,"column":60}},{"start":{"line":788,"column":63},"end":{"line":788,"column":69}}]},"102":{"line":790,"type":"cond-expr","locations":[{"start":{"line":790,"column":65},"end":{"line":790,"column":78}},{"start":{"line":790,"column":81},"end":{"line":790,"column":82}}]},"103":{"line":790,"type":"binary-expr","locations":[{"start":{"line":790,"column":23},"end":{"line":790,"column":37}},{"start":{"line":790,"column":41},"end":{"line":790,"column":62}}]},"104":{"line":792,"type":"if","locations":[{"start":{"line":792,"column":2},"end":{"line":792,"column":2}},{"start":{"line":792,"column":2},"end":{"line":792,"column":2}}]},"105":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":4},"end":{"line":799,"column":4}},{"start":{"line":799,"column":4},"end":{"line":799,"column":4}}]},"106":{"line":799,"type":"binary-expr","locations":[{"start":{"line":799,"column":7},"end":{"line":799,"column":23}},{"start":{"line":799,"column":27},"end":{"line":799,"column":50}}]},"107":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":4},"end":{"line":813,"column":4}},{"start":{"line":813,"column":4},"end":{"line":813,"column":4}}]},"108":{"line":815,"type":"if","locations":[{"start":{"line":815,"column":4},"end":{"line":815,"column":4}},{"start":{"line":815,"column":4},"end":{"line":815,"column":4}}]},"109":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":6},"end":{"line":819,"column":6}},{"start":{"line":819,"column":6},"end":{"line":819,"column":6}}]},"110":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":2},"end":{"line":850,"column":2}},{"start":{"line":850,"column":2},"end":{"line":850,"column":2}}]},"111":{"line":888,"type":"if","locations":[{"start":{"line":888,"column":2},"end":{"line":888,"column":2}},{"start":{"line":888,"column":2},"end":{"line":888,"column":2}}]},"112":{"line":889,"type":"cond-expr","locations":[{"start":{"line":889,"column":31},"end":{"line":889,"column":43}},{"start":{"line":889,"column":46},"end":{"line":889,"column":50}}]},"113":{"line":892,"type":"if","locations":[{"start":{"line":892,"column":2},"end":{"line":892,"column":2}},{"start":{"line":892,"column":2},"end":{"line":892,"column":2}}]},"114":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":6},"end":{"line":896,"column":6}},{"start":{"line":896,"column":6},"end":{"line":896,"column":6}}]},"115":{"line":904,"type":"if","locations":[{"start":{"line":904,"column":2},"end":{"line":904,"column":2}},{"start":{"line":904,"column":2},"end":{"line":904,"column":2}}]},"116":{"line":908,"type":"cond-expr","locations":[{"start":{"line":908,"column":49},"end":{"line":908,"column":70}},{"start":{"line":908,"column":73},"end":{"line":908,"column":85}}]},"117":{"line":913,"type":"if","locations":[{"start":{"line":913,"column":2},"end":{"line":913,"column":2}},{"start":{"line":913,"column":2},"end":{"line":913,"column":2}}]},"118":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":9},"end":{"line":915,"column":9}},{"start":{"line":915,"column":9},"end":{"line":915,"column":9}}]},"119":{"line":925,"type":"if","locations":[{"start":{"line":925,"column":6},"end":{"line":925,"column":6}},{"start":{"line":925,"column":6},"end":{"line":925,"column":6}}]},"120":{"line":926,"type":"if","locations":[{"start":{"line":926,"column":6},"end":{"line":926,"column":6}},{"start":{"line":926,"column":6},"end":{"line":926,"column":6}}]},"121":{"line":947,"type":"cond-expr","locations":[{"start":{"line":947,"column":52},"end":{"line":947,"column":69}},{"start":{"line":947,"column":72},"end":{"line":947,"column":96}}]},"122":{"line":948,"type":"cond-expr","locations":[{"start":{"line":948,"column":57},"end":{"line":948,"column":61}},{"start":{"line":948,"column":64},"end":{"line":948,"column":69}}]},"123":{"line":948,"type":"binary-expr","locations":[{"start":{"line":948,"column":10},"end":{"line":948,"column":29}},{"start":{"line":948,"column":33},"end":{"line":948,"column":54}}]},"124":{"line":952,"type":"if","locations":[{"start":{"line":952,"column":2},"end":{"line":952,"column":2}},{"start":{"line":952,"column":2},"end":{"line":952,"column":2}}]},"125":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":6},"end":{"line":954,"column":6}},{"start":{"line":954,"column":6},"end":{"line":954,"column":6}}]},"126":{"line":957,"type":"if","locations":[{"start":{"line":957,"column":6},"end":{"line":957,"column":6}},{"start":{"line":957,"column":6},"end":{"line":957,"column":6}}]},"127":{"line":960,"type":"cond-expr","locations":[{"start":{"line":960,"column":79},"end":{"line":960,"column":91}},{"start":{"line":960,"column":94},"end":{"line":960,"column":107}}]},"128":{"line":960,"type":"binary-expr","locations":[{"start":{"line":960,"column":26},"end":{"line":960,"column":42}},{"start":{"line":960,"column":48},"end":{"line":960,"column":74}}]},"129":{"line":968,"type":"if","locations":[{"start":{"line":968,"column":13},"end":{"line":968,"column":13}},{"start":{"line":968,"column":13},"end":{"line":968,"column":13}}]},"130":{"line":969,"type":"cond-expr","locations":[{"start":{"line":969,"column":44},"end":{"line":969,"column":58}},{"start":{"line":969,"column":61},"end":{"line":969,"column":72}}]},"131":{"line":971,"type":"cond-expr","locations":[{"start":{"line":971,"column":66},"end":{"line":971,"column":90}},{"start":{"line":971,"column":93},"end":{"line":971,"column":115}}]},"132":{"line":975,"type":"cond-expr","locations":[{"start":{"line":975,"column":58},"end":{"line":975,"column":83}},{"start":{"line":975,"column":86},"end":{"line":975,"column":97}}]},"133":{"line":976,"type":"cond-expr","locations":[{"start":{"line":976,"column":132},"end":{"line":976,"column":137}},{"start":{"line":976,"column":140},"end":{"line":976,"column":153}}]},"134":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":6},"end":{"line":980,"column":6}},{"start":{"line":980,"column":6},"end":{"line":980,"column":6}}]},"135":{"line":982,"type":"if","locations":[{"start":{"line":982,"column":10},"end":{"line":982,"column":10}},{"start":{"line":982,"column":10},"end":{"line":982,"column":10}}]},"136":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":13},"end":{"line":987,"column":13}},{"start":{"line":987,"column":13},"end":{"line":987,"column":13}}]},"137":{"line":987,"type":"binary-expr","locations":[{"start":{"line":987,"column":16},"end":{"line":987,"column":32}},{"start":{"line":987,"column":36},"end":{"line":987,"column":39}}]},"138":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":10},"end":{"line":990,"column":10}},{"start":{"line":990,"column":10},"end":{"line":990,"column":10}}]},"139":{"line":992,"type":"cond-expr","locations":[{"start":{"line":992,"column":68},"end":{"line":992,"column":84}},{"start":{"line":992,"column":87},"end":{"line":992,"column":115}}]},"140":{"line":993,"type":"cond-expr","locations":[{"start":{"line":993,"column":72},"end":{"line":993,"column":94}},{"start":{"line":993,"column":97},"end":{"line":993,"column":123}}]},"141":{"line":994,"type":"cond-expr","locations":[{"start":{"line":994,"column":61},"end":{"line":994,"column":74}},{"start":{"line":994,"column":77},"end":{"line":994,"column":101}}]},"142":{"line":995,"type":"cond-expr","locations":[{"start":{"line":995,"column":59},"end":{"line":995,"column":71}},{"start":{"line":995,"column":74},"end":{"line":995,"column":97}}]},"143":{"line":999,"type":"if","locations":[{"start":{"line":999,"column":13},"end":{"line":999,"column":13}},{"start":{"line":999,"column":13},"end":{"line":999,"column":13}}]},"144":{"line":1001,"type":"cond-expr","locations":[{"start":{"line":1001,"column":66},"end":{"line":1001,"column":82}},{"start":{"line":1001,"column":85},"end":{"line":1001,"column":113}}]},"145":{"line":1002,"type":"cond-expr","locations":[{"start":{"line":1002,"column":70},"end":{"line":1002,"column":92}},{"start":{"line":1002,"column":95},"end":{"line":1002,"column":121}}]},"146":{"line":1003,"type":"cond-expr","locations":[{"start":{"line":1003,"column":59},"end":{"line":1003,"column":72}},{"start":{"line":1003,"column":75},"end":{"line":1003,"column":99}}]},"147":{"line":1004,"type":"cond-expr","locations":[{"start":{"line":1004,"column":57},"end":{"line":1004,"column":69}},{"start":{"line":1004,"column":72},"end":{"line":1004,"column":95}}]},"148":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":13},"end":{"line":1007,"column":13}},{"start":{"line":1007,"column":13},"end":{"line":1007,"column":13}}]},"149":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":10},"end":{"line":1009,"column":10}},{"start":{"line":1009,"column":10},"end":{"line":1009,"column":10}}]},"150":{"line":1011,"type":"cond-expr","locations":[{"start":{"line":1011,"column":46},"end":{"line":1011,"column":89}},{"start":{"line":1011,"column":92},"end":{"line":1011,"column":97}}]},"151":{"line":1013,"type":"cond-expr","locations":[{"start":{"line":1013,"column":61},"end":{"line":1013,"column":74}},{"start":{"line":1013,"column":77},"end":{"line":1013,"column":101}}]},"152":{"line":1014,"type":"cond-expr","locations":[{"start":{"line":1014,"column":59},"end":{"line":1014,"column":71}},{"start":{"line":1014,"column":74},"end":{"line":1014,"column":97}}]},"153":{"line":1022,"type":"cond-expr","locations":[{"start":{"line":1022,"column":40},"end":{"line":1022,"column":54}},{"start":{"line":1022,"column":57},"end":{"line":1022,"column":68}}]},"154":{"line":1024,"type":"cond-expr","locations":[{"start":{"line":1024,"column":62},"end":{"line":1024,"column":86}},{"start":{"line":1024,"column":89},"end":{"line":1024,"column":111}}]},"155":{"line":1028,"type":"if","locations":[{"start":{"line":1028,"column":4},"end":{"line":1028,"column":4}},{"start":{"line":1028,"column":4},"end":{"line":1028,"column":4}}]},"156":{"line":1031,"type":"if","locations":[{"start":{"line":1031,"column":8},"end":{"line":1031,"column":8}},{"start":{"line":1031,"column":8},"end":{"line":1031,"column":8}}]},"157":{"line":1033,"type":"cond-expr","locations":[{"start":{"line":1033,"column":66},"end":{"line":1033,"column":82}},{"start":{"line":1033,"column":85},"end":{"line":1033,"column":113}}]},"158":{"line":1034,"type":"cond-expr","locations":[{"start":{"line":1034,"column":70},"end":{"line":1034,"column":92}},{"start":{"line":1034,"column":95},"end":{"line":1034,"column":121}}]},"159":{"line":1035,"type":"cond-expr","locations":[{"start":{"line":1035,"column":59},"end":{"line":1035,"column":72}},{"start":{"line":1035,"column":75},"end":{"line":1035,"column":99}}]},"160":{"line":1036,"type":"cond-expr","locations":[{"start":{"line":1036,"column":57},"end":{"line":1036,"column":69}},{"start":{"line":1036,"column":72},"end":{"line":1036,"column":95}}]},"161":{"line":1040,"type":"if","locations":[{"start":{"line":1040,"column":11},"end":{"line":1040,"column":11}},{"start":{"line":1040,"column":11},"end":{"line":1040,"column":11}}]},"162":{"line":1042,"type":"if","locations":[{"start":{"line":1042,"column":8},"end":{"line":1042,"column":8}},{"start":{"line":1042,"column":8},"end":{"line":1042,"column":8}}]},"163":{"line":1044,"type":"cond-expr","locations":[{"start":{"line":1044,"column":44},"end":{"line":1044,"column":87}},{"start":{"line":1044,"column":90},"end":{"line":1044,"column":95}}]},"164":{"line":1046,"type":"cond-expr","locations":[{"start":{"line":1046,"column":59},"end":{"line":1046,"column":72}},{"start":{"line":1046,"column":75},"end":{"line":1046,"column":99}}]},"165":{"line":1047,"type":"cond-expr","locations":[{"start":{"line":1047,"column":57},"end":{"line":1047,"column":69}},{"start":{"line":1047,"column":72},"end":{"line":1047,"column":95}}]},"166":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}},{"start":{"line":1056,"column":4},"end":{"line":1056,"column":4}}]},"167":{"line":1065,"type":"if","locations":[{"start":{"line":1065,"column":2},"end":{"line":1065,"column":2}},{"start":{"line":1065,"column":2},"end":{"line":1065,"column":2}}]},"168":{"line":1066,"type":"cond-expr","locations":[{"start":{"line":1066,"column":47},"end":{"line":1066,"column":52}},{"start":{"line":1066,"column":55},"end":{"line":1066,"column":60}}]},"169":{"line":1068,"type":"if","locations":[{"start":{"line":1068,"column":2},"end":{"line":1068,"column":2}},{"start":{"line":1068,"column":2},"end":{"line":1068,"column":2}}]},"170":{"line":1069,"type":"cond-expr","locations":[{"start":{"line":1069,"column":124},"end":{"line":1069,"column":140}},{"start":{"line":1069,"column":143},"end":{"line":1069,"column":156}}]},"171":{"line":1071,"type":"if","locations":[{"start":{"line":1071,"column":4},"end":{"line":1071,"column":4}},{"start":{"line":1071,"column":4},"end":{"line":1071,"column":4}}]},"172":{"line":1097,"type":"if","locations":[{"start":{"line":1097,"column":6},"end":{"line":1097,"column":6}},{"start":{"line":1097,"column":6},"end":{"line":1097,"column":6}}]},"173":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":10},"end":{"line":1106,"column":10}},{"start":{"line":1106,"column":10},"end":{"line":1106,"column":10}}]},"174":{"line":1110,"type":"if","locations":[{"start":{"line":1110,"column":10},"end":{"line":1110,"column":10}},{"start":{"line":1110,"column":10},"end":{"line":1110,"column":10}}]},"175":{"line":1112,"type":"if","locations":[{"start":{"line":1112,"column":12},"end":{"line":1112,"column":12}},{"start":{"line":1112,"column":12},"end":{"line":1112,"column":12}}]},"176":{"line":1129,"type":"if","locations":[{"start":{"line":1129,"column":6},"end":{"line":1129,"column":6}},{"start":{"line":1129,"column":6},"end":{"line":1129,"column":6}}]},"177":{"line":1164,"type":"cond-expr","locations":[{"start":{"line":1164,"column":30},"end":{"line":1164,"column":43}},{"start":{"line":1164,"column":46},"end":{"line":1164,"column":47}}]},"178":{"line":1173,"type":"if","locations":[{"start":{"line":1173,"column":4},"end":{"line":1173,"column":4}},{"start":{"line":1173,"column":4},"end":{"line":1173,"column":4}}]},"179":{"line":1185,"type":"if","locations":[{"start":{"line":1185,"column":2},"end":{"line":1185,"column":2}},{"start":{"line":1185,"column":2},"end":{"line":1185,"column":2}}]},"180":{"line":1190,"type":"binary-expr","locations":[{"start":{"line":1190,"column":12},"end":{"line":1190,"column":19}},{"start":{"line":1190,"column":23},"end":{"line":1190,"column":40}}]},"181":{"line":1194,"type":"if","locations":[{"start":{"line":1194,"column":4},"end":{"line":1194,"column":4}},{"start":{"line":1194,"column":4},"end":{"line":1194,"column":4}}]},"182":{"line":1196,"type":"cond-expr","locations":[{"start":{"line":1196,"column":37},"end":{"line":1196,"column":39}},{"start":{"line":1196,"column":42},"end":{"line":1196,"column":47}}]},"183":{"line":1205,"type":"cond-expr","locations":[{"start":{"line":1205,"column":35},"end":{"line":1205,"column":50}},{"start":{"line":1205,"column":53},"end":{"line":1205,"column":54}}]},"184":{"line":1214,"type":"if","locations":[{"start":{"line":1214,"column":2},"end":{"line":1214,"column":2}},{"start":{"line":1214,"column":2},"end":{"line":1214,"column":2}}]},"185":{"line":1219,"type":"binary-expr","locations":[{"start":{"line":1219,"column":12},"end":{"line":1219,"column":19}},{"start":{"line":1219,"column":23},"end":{"line":1219,"column":40}}]},"186":{"line":1221,"type":"if","locations":[{"start":{"line":1221,"column":2},"end":{"line":1221,"column":2}},{"start":{"line":1221,"column":2},"end":{"line":1221,"column":2}}]},"187":{"line":1223,"type":"if","locations":[{"start":{"line":1223,"column":6},"end":{"line":1223,"column":6}},{"start":{"line":1223,"column":6},"end":{"line":1223,"column":6}}]},"188":{"line":1284,"type":"if","locations":[{"start":{"line":1284,"column":2},"end":{"line":1284,"column":2}},{"start":{"line":1284,"column":2},"end":{"line":1284,"column":2}}]},"189":{"line":1285,"type":"cond-expr","locations":[{"start":{"line":1285,"column":33},"end":{"line":1285,"column":45}},{"start":{"line":1285,"column":48},"end":{"line":1285,"column":52}}]},"190":{"line":1286,"type":"cond-expr","locations":[{"start":{"line":1286,"column":26},"end":{"line":1286,"column":38}},{"start":{"line":1286,"column":41},"end":{"line":1286,"column":43}}]},"191":{"line":1287,"type":"binary-expr","locations":[{"start":{"line":1287,"column":12},"end":{"line":1287,"column":19}},{"start":{"line":1287,"column":23},"end":{"line":1287,"column":25}}]},"192":{"line":1293,"type":"if","locations":[{"start":{"line":1293,"column":2},"end":{"line":1293,"column":2}},{"start":{"line":1293,"column":2},"end":{"line":1293,"column":2}}]},"193":{"line":1294,"type":"cond-expr","locations":[{"start":{"line":1295,"column":6},"end":{"line":1295,"column":20}},{"start":{"line":1295,"column":23},"end":{"line":1295,"column":53}}]},"194":{"line":1299,"type":"if","locations":[{"start":{"line":1299,"column":2},"end":{"line":1299,"column":2}},{"start":{"line":1299,"column":2},"end":{"line":1299,"column":2}}]},"195":{"line":1303,"type":"if","locations":[{"start":{"line":1303,"column":6},"end":{"line":1303,"column":6}},{"start":{"line":1303,"column":6},"end":{"line":1303,"column":6}}]},"196":{"line":1311,"type":"binary-expr","locations":[{"start":{"line":1311,"column":23},"end":{"line":1311,"column":45}},{"start":{"line":1311,"column":49},"end":{"line":1311,"column":71}}]},"197":{"line":1313,"type":"cond-expr","locations":[{"start":{"line":1313,"column":53},"end":{"line":1313,"column":67}},{"start":{"line":1313,"column":70},"end":{"line":1313,"column":103}}]},"198":{"line":1315,"type":"if","locations":[{"start":{"line":1315,"column":4},"end":{"line":1315,"column":4}},{"start":{"line":1315,"column":4},"end":{"line":1315,"column":4}}]},"199":{"line":1318,"type":"cond-expr","locations":[{"start":{"line":1319,"column":8},"end":{"line":1319,"column":33}},{"start":{"line":1320,"column":8},"end":{"line":1320,"column":28}}]},"200":{"line":1318,"type":"binary-expr","locations":[{"start":{"line":1318,"column":17},"end":{"line":1318,"column":48}},{"start":{"line":1318,"column":52},"end":{"line":1318,"column":117}}]},"201":{"line":1323,"type":"if","locations":[{"start":{"line":1323,"column":4},"end":{"line":1323,"column":4}},{"start":{"line":1323,"column":4},"end":{"line":1323,"column":4}}]},"202":{"line":1323,"type":"binary-expr","locations":[{"start":{"line":1323,"column":7},"end":{"line":1323,"column":27}},{"start":{"line":1324,"column":9},"end":{"line":1324,"column":40}},{"start":{"line":1325,"column":9},"end":{"line":1325,"column":74}}]},"203":{"line":1331,"type":"if","locations":[{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}},{"start":{"line":1331,"column":6},"end":{"line":1331,"column":6}}]},"204":{"line":1332,"type":"cond-expr","locations":[{"start":{"line":1332,"column":36},"end":{"line":1332,"column":41}},{"start":{"line":1332,"column":44},"end":{"line":1332,"column":48}}]},"205":{"line":1356,"type":"if","locations":[{"start":{"line":1356,"column":2},"end":{"line":1356,"column":2}},{"start":{"line":1356,"column":2},"end":{"line":1356,"column":2}}]},"206":{"line":1357,"type":"cond-expr","locations":[{"start":{"line":1357,"column":33},"end":{"line":1357,"column":45}},{"start":{"line":1357,"column":48},"end":{"line":1357,"column":52}}]},"207":{"line":1358,"type":"cond-expr","locations":[{"start":{"line":1358,"column":26},"end":{"line":1358,"column":38}},{"start":{"line":1358,"column":41},"end":{"line":1358,"column":43}}]},"208":{"line":1359,"type":"binary-expr","locations":[{"start":{"line":1359,"column":12},"end":{"line":1359,"column":19}},{"start":{"line":1359,"column":23},"end":{"line":1359,"column":25}}]},"209":{"line":1365,"type":"if","locations":[{"start":{"line":1365,"column":2},"end":{"line":1365,"column":2}},{"start":{"line":1365,"column":2},"end":{"line":1365,"column":2}}]},"210":{"line":1366,"type":"cond-expr","locations":[{"start":{"line":1367,"column":6},"end":{"line":1367,"column":20}},{"start":{"line":1367,"column":23},"end":{"line":1367,"column":53}}]},"211":{"line":1371,"type":"if","locations":[{"start":{"line":1371,"column":2},"end":{"line":1371,"column":2}},{"start":{"line":1371,"column":2},"end":{"line":1371,"column":2}}]},"212":{"line":1375,"type":"if","locations":[{"start":{"line":1375,"column":6},"end":{"line":1375,"column":6}},{"start":{"line":1375,"column":6},"end":{"line":1375,"column":6}}]},"213":{"line":1383,"type":"if","locations":[{"start":{"line":1383,"column":2},"end":{"line":1383,"column":2}},{"start":{"line":1383,"column":2},"end":{"line":1383,"column":2}}]},"214":{"line":1383,"type":"binary-expr","locations":[{"start":{"line":1383,"column":5},"end":{"line":1383,"column":27}},{"start":{"line":1383,"column":31},"end":{"line":1383,"column":64}}]},"215":{"line":1389,"type":"binary-expr","locations":[{"start":{"line":1389,"column":23},"end":{"line":1389,"column":45}},{"start":{"line":1389,"column":49},"end":{"line":1389,"column":71}}]},"216":{"line":1391,"type":"cond-expr","locations":[{"start":{"line":1391,"column":37},"end":{"line":1391,"column":50}},{"start":{"line":1391,"column":53},"end":{"line":1391,"column":58}}]},"217":{"line":1393,"type":"cond-expr","locations":[{"start":{"line":1393,"column":53},"end":{"line":1393,"column":67}},{"start":{"line":1393,"column":70},"end":{"line":1393,"column":103}}]},"218":{"line":1396,"type":"if","locations":[{"start":{"line":1396,"column":4},"end":{"line":1396,"column":4}},{"start":{"line":1396,"column":4},"end":{"line":1396,"column":4}}]},"219":{"line":1399,"type":"if","locations":[{"start":{"line":1399,"column":6},"end":{"line":1399,"column":6}},{"start":{"line":1399,"column":6},"end":{"line":1399,"column":6}}]},"220":{"line":1402,"type":"if","locations":[{"start":{"line":1402,"column":8},"end":{"line":1402,"column":8}},{"start":{"line":1402,"column":8},"end":{"line":1402,"column":8}}]},"221":{"line":1403,"type":"cond-expr","locations":[{"start":{"line":1403,"column":28},"end":{"line":1403,"column":36}},{"start":{"line":1403,"column":39},"end":{"line":1403,"column":52}}]},"222":{"line":1440,"type":"if","locations":[{"start":{"line":1440,"column":2},"end":{"line":1440,"column":2}},{"start":{"line":1440,"column":2},"end":{"line":1440,"column":2}}]},"223":{"line":1441,"type":"cond-expr","locations":[{"start":{"line":1441,"column":25},"end":{"line":1441,"column":37}},{"start":{"line":1441,"column":40},"end":{"line":1441,"column":44}}]},"224":{"line":1442,"type":"cond-expr","locations":[{"start":{"line":1442,"column":25},"end":{"line":1442,"column":37}},{"start":{"line":1442,"column":40},"end":{"line":1442,"column":44}}]},"225":{"line":1443,"type":"cond-expr","locations":[{"start":{"line":1443,"column":26},"end":{"line":1443,"column":38}},{"start":{"line":1443,"column":41},"end":{"line":1443,"column":45}}]},"226":{"line":1444,"type":"binary-expr","locations":[{"start":{"line":1444,"column":12},"end":{"line":1444,"column":19}},{"start":{"line":1444,"column":23},"end":{"line":1444,"column":25}}]},"227":{"line":1447,"type":"cond-expr","locations":[{"start":{"line":1447,"column":33},"end":{"line":1447,"column":55}},{"start":{"line":1447,"column":58},"end":{"line":1447,"column":62}}]},"228":{"line":1450,"type":"if","locations":[{"start":{"line":1450,"column":2},"end":{"line":1450,"column":2}},{"start":{"line":1450,"column":2},"end":{"line":1450,"column":2}}]},"229":{"line":1451,"type":"cond-expr","locations":[{"start":{"line":1452,"column":6},"end":{"line":1452,"column":20}},{"start":{"line":1452,"column":23},"end":{"line":1452,"column":53}}]},"230":{"line":1456,"type":"if","locations":[{"start":{"line":1456,"column":2},"end":{"line":1456,"column":2}},{"start":{"line":1456,"column":2},"end":{"line":1456,"column":2}}]},"231":{"line":1460,"type":"if","locations":[{"start":{"line":1460,"column":6},"end":{"line":1460,"column":6}},{"start":{"line":1460,"column":6},"end":{"line":1460,"column":6}}]},"232":{"line":1468,"type":"if","locations":[{"start":{"line":1468,"column":4},"end":{"line":1468,"column":4}},{"start":{"line":1468,"column":4},"end":{"line":1468,"column":4}}]},"233":{"line":1470,"type":"if","locations":[{"start":{"line":1470,"column":4},"end":{"line":1470,"column":4}},{"start":{"line":1470,"column":4},"end":{"line":1470,"column":4}}]},"234":{"line":1470,"type":"binary-expr","locations":[{"start":{"line":1470,"column":7},"end":{"line":1470,"column":13}},{"start":{"line":1470,"column":17},"end":{"line":1470,"column":43}}]},"235":{"line":1471,"type":"if","locations":[{"start":{"line":1471,"column":4},"end":{"line":1471,"column":4}},{"start":{"line":1471,"column":4},"end":{"line":1471,"column":4}}]},"236":{"line":1471,"type":"binary-expr","locations":[{"start":{"line":1471,"column":7},"end":{"line":1471,"column":13}},{"start":{"line":1471,"column":17},"end":{"line":1471,"column":42}}]},"237":{"line":1472,"type":"if","locations":[{"start":{"line":1472,"column":4},"end":{"line":1472,"column":4}},{"start":{"line":1472,"column":4},"end":{"line":1472,"column":4}}]},"238":{"line":1472,"type":"binary-expr","locations":[{"start":{"line":1472,"column":7},"end":{"line":1472,"column":13}},{"start":{"line":1472,"column":17},"end":{"line":1472,"column":23}},{"start":{"line":1472,"column":27},"end":{"line":1472,"column":63}}]},"239":{"line":1474,"type":"if","locations":[{"start":{"line":1474,"column":4},"end":{"line":1474,"column":4}},{"start":{"line":1474,"column":4},"end":{"line":1474,"column":4}}]},"240":{"line":1476,"type":"if","locations":[{"start":{"line":1476,"column":8},"end":{"line":1476,"column":8}},{"start":{"line":1476,"column":8},"end":{"line":1476,"column":8}}]},"241":{"line":1505,"type":"if","locations":[{"start":{"line":1505,"column":2},"end":{"line":1505,"column":2}},{"start":{"line":1505,"column":2},"end":{"line":1505,"column":2}}]},"242":{"line":1506,"type":"cond-expr","locations":[{"start":{"line":1506,"column":28},"end":{"line":1506,"column":40}},{"start":{"line":1506,"column":43},"end":{"line":1506,"column":47}}]},"243":{"line":1507,"type":"cond-expr","locations":[{"start":{"line":1507,"column":26},"end":{"line":1507,"column":38}},{"start":{"line":1507,"column":41},"end":{"line":1507,"column":45}}]},"244":{"line":1508,"type":"binary-expr","locations":[{"start":{"line":1508,"column":12},"end":{"line":1508,"column":19}},{"start":{"line":1508,"column":23},"end":{"line":1508,"column":25}}]},"245":{"line":1511,"type":"cond-expr","locations":[{"start":{"line":1511,"column":33},"end":{"line":1511,"column":55}},{"start":{"line":1511,"column":58},"end":{"line":1511,"column":62}}]},"246":{"line":1514,"type":"if","locations":[{"start":{"line":1514,"column":2},"end":{"line":1514,"column":2}},{"start":{"line":1514,"column":2},"end":{"line":1514,"column":2}}]},"247":{"line":1515,"type":"cond-expr","locations":[{"start":{"line":1516,"column":6},"end":{"line":1516,"column":20}},{"start":{"line":1516,"column":23},"end":{"line":1516,"column":53}}]},"248":{"line":1520,"type":"if","locations":[{"start":{"line":1520,"column":2},"end":{"line":1520,"column":2}},{"start":{"line":1520,"column":2},"end":{"line":1520,"column":2}}]},"249":{"line":1524,"type":"if","locations":[{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}},{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}}]},"250":{"line":1531,"type":"cond-expr","locations":[{"start":{"line":1531,"column":43},"end":{"line":1531,"column":47}},{"start":{"line":1531,"column":50},"end":{"line":1531,"column":59}}]},"251":{"line":1533,"type":"if","locations":[{"start":{"line":1533,"column":4},"end":{"line":1533,"column":4}},{"start":{"line":1533,"column":4},"end":{"line":1533,"column":4}}]},"252":{"line":1557,"type":"if","locations":[{"start":{"line":1557,"column":2},"end":{"line":1557,"column":2}},{"start":{"line":1557,"column":2},"end":{"line":1557,"column":2}}]},"253":{"line":1558,"type":"cond-expr","locations":[{"start":{"line":1558,"column":26},"end":{"line":1558,"column":38}},{"start":{"line":1558,"column":41},"end":{"line":1558,"column":43}}]},"254":{"line":1559,"type":"binary-expr","locations":[{"start":{"line":1559,"column":12},"end":{"line":1559,"column":19}},{"start":{"line":1559,"column":23},"end":{"line":1559,"column":25}}]},"255":{"line":1565,"type":"if","locations":[{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}},{"start":{"line":1565,"column":2},"end":{"line":1565,"column":2}}]},"256":{"line":1566,"type":"cond-expr","locations":[{"start":{"line":1567,"column":6},"end":{"line":1567,"column":20}},{"start":{"line":1567,"column":23},"end":{"line":1567,"column":53}}]},"257":{"line":1571,"type":"if","locations":[{"start":{"line":1571,"column":2},"end":{"line":1571,"column":2}},{"start":{"line":1571,"column":2},"end":{"line":1571,"column":2}}]},"258":{"line":1576,"type":"if","locations":[{"start":{"line":1576,"column":6},"end":{"line":1576,"column":6}},{"start":{"line":1576,"column":6},"end":{"line":1576,"column":6}}]},"259":{"line":1587,"type":"if","locations":[{"start":{"line":1587,"column":2},"end":{"line":1587,"column":2}},{"start":{"line":1587,"column":2},"end":{"line":1587,"column":2}}]},"260":{"line":1592,"type":"if","locations":[{"start":{"line":1592,"column":8},"end":{"line":1592,"column":8}},{"start":{"line":1592,"column":8},"end":{"line":1592,"column":8}}]},"261":{"line":1599,"type":"if","locations":[{"start":{"line":1599,"column":6},"end":{"line":1599,"column":6}},{"start":{"line":1599,"column":6},"end":{"line":1599,"column":6}}]},"262":{"line":1601,"type":"if","locations":[{"start":{"line":1601,"column":8},"end":{"line":1601,"column":8}},{"start":{"line":1601,"column":8},"end":{"line":1601,"column":8}}]},"263":{"line":1603,"type":"if","locations":[{"start":{"line":1603,"column":10},"end":{"line":1603,"column":10}},{"start":{"line":1603,"column":10},"end":{"line":1603,"column":10}}]},"264":{"line":1620,"type":"if","locations":[{"start":{"line":1620,"column":2},"end":{"line":1620,"column":2}},{"start":{"line":1620,"column":2},"end":{"line":1620,"column":2}}]},"265":{"line":1632,"type":"if","locations":[{"start":{"line":1632,"column":2},"end":{"line":1632,"column":2}},{"start":{"line":1632,"column":2},"end":{"line":1632,"column":2}}]},"266":{"line":1633,"type":"if","locations":[{"start":{"line":1633,"column":2},"end":{"line":1633,"column":2}},{"start":{"line":1633,"column":2},"end":{"line":1633,"column":2}}]},"267":{"line":1634,"type":"if","locations":[{"start":{"line":1634,"column":2},"end":{"line":1634,"column":2}},{"start":{"line":1634,"column":2},"end":{"line":1634,"column":2}}]},"268":{"line":1635,"type":"if","locations":[{"start":{"line":1635,"column":2},"end":{"line":1635,"column":2}},{"start":{"line":1635,"column":2},"end":{"line":1635,"column":2}}]},"269":{"line":1636,"type":"if","locations":[{"start":{"line":1636,"column":2},"end":{"line":1636,"column":2}},{"start":{"line":1636,"column":2},"end":{"line":1636,"column":2}}]},"270":{"line":1646,"type":"binary-expr","locations":[{"start":{"line":1646,"column":12},"end":{"line":1646,"column":19}},{"start":{"line":1646,"column":23},"end":{"line":1646,"column":25}}]},"271":{"line":1649,"type":"if","locations":[{"start":{"line":1649,"column":2},"end":{"line":1649,"column":2}},{"start":{"line":1649,"column":2},"end":{"line":1649,"column":2}}]},"272":{"line":1649,"type":"binary-expr","locations":[{"start":{"line":1649,"column":5},"end":{"line":1649,"column":22}},{"start":{"line":1649,"column":26},"end":{"line":1649,"column":55}},{"start":{"line":1649,"column":59},"end":{"line":1649,"column":94}},{"start":{"line":1649,"column":98},"end":{"line":1649,"column":131}}]},"273":{"line":1651,"type":"if","locations":[{"start":{"line":1651,"column":9},"end":{"line":1651,"column":9}},{"start":{"line":1651,"column":9},"end":{"line":1651,"column":9}}]},"274":{"line":1651,"type":"binary-expr","locations":[{"start":{"line":1651,"column":12},"end":{"line":1651,"column":32}},{"start":{"line":1651,"column":36},"end":{"line":1651,"column":67}}]},"275":{"line":1653,"type":"if","locations":[{"start":{"line":1653,"column":9},"end":{"line":1653,"column":9}},{"start":{"line":1653,"column":9},"end":{"line":1653,"column":9}}]},"276":{"line":1654,"type":"cond-expr","locations":[{"start":{"line":1654,"column":39},"end":{"line":1654,"column":40}},{"start":{"line":1654,"column":43},"end":{"line":1654,"column":44}}]},"277":{"line":1655,"type":"if","locations":[{"start":{"line":1655,"column":9},"end":{"line":1655,"column":9}},{"start":{"line":1655,"column":9},"end":{"line":1655,"column":9}}]},"278":{"line":1655,"type":"binary-expr","locations":[{"start":{"line":1655,"column":12},"end":{"line":1655,"column":34}},{"start":{"line":1655,"column":38},"end":{"line":1655,"column":72}},{"start":{"line":1655,"column":76},"end":{"line":1655,"column":116}},{"start":{"line":1655,"column":120},"end":{"line":1655,"column":158}}]},"279":{"line":1657,"type":"if","locations":[{"start":{"line":1657,"column":9},"end":{"line":1657,"column":9}},{"start":{"line":1657,"column":9},"end":{"line":1657,"column":9}}]},"280":{"line":1657,"type":"binary-expr","locations":[{"start":{"line":1657,"column":12},"end":{"line":1657,"column":21}},{"start":{"line":1657,"column":26},"end":{"line":1657,"column":45}},{"start":{"line":1657,"column":49},"end":{"line":1657,"column":80}},{"start":{"line":1657,"column":84},"end":{"line":1657,"column":121}},{"start":{"line":1657,"column":125},"end":{"line":1657,"column":160}}]},"281":{"line":1659,"type":"if","locations":[{"start":{"line":1659,"column":9},"end":{"line":1659,"column":9}},{"start":{"line":1659,"column":9},"end":{"line":1659,"column":9}}]},"282":{"line":1660,"type":"cond-expr","locations":[{"start":{"line":1660,"column":36},"end":{"line":1660,"column":37}},{"start":{"line":1660,"column":40},"end":{"line":1660,"column":41}}]},"283":{"line":1664,"type":"if","locations":[{"start":{"line":1664,"column":2},"end":{"line":1664,"column":2}},{"start":{"line":1664,"column":2},"end":{"line":1664,"column":2}}]},"284":{"line":1664,"type":"binary-expr","locations":[{"start":{"line":1664,"column":5},"end":{"line":1664,"column":23}},{"start":{"line":1665,"column":8},"end":{"line":1665,"column":36}},{"start":{"line":1665,"column":40},"end":{"line":1665,"column":62}},{"start":{"line":1665,"column":66},"end":{"line":1665,"column":92}}]},"285":{"line":1705,"type":"if","locations":[{"start":{"line":1705,"column":2},"end":{"line":1705,"column":2}},{"start":{"line":1705,"column":2},"end":{"line":1705,"column":2}}]},"286":{"line":1707,"type":"if","locations":[{"start":{"line":1707,"column":6},"end":{"line":1707,"column":6}},{"start":{"line":1707,"column":6},"end":{"line":1707,"column":6}}]},"287":{"line":1726,"type":"if","locations":[{"start":{"line":1726,"column":6},"end":{"line":1726,"column":6}},{"start":{"line":1726,"column":6},"end":{"line":1726,"column":6}}]},"288":{"line":1726,"type":"binary-expr","locations":[{"start":{"line":1726,"column":9},"end":{"line":1726,"column":12}},{"start":{"line":1726,"column":16},"end":{"line":1726,"column":31}}]},"289":{"line":1729,"type":"if","locations":[{"start":{"line":1729,"column":6},"end":{"line":1729,"column":6}},{"start":{"line":1729,"column":6},"end":{"line":1729,"column":6}}]},"290":{"line":1729,"type":"binary-expr","locations":[{"start":{"line":1729,"column":9},"end":{"line":1729,"column":23}},{"start":{"line":1729,"column":27},"end":{"line":1729,"column":41}}]},"291":{"line":1731,"type":"if","locations":[{"start":{"line":1731,"column":6},"end":{"line":1731,"column":6}},{"start":{"line":1731,"column":6},"end":{"line":1731,"column":6}}]},"292":{"line":1734,"type":"if","locations":[{"start":{"line":1734,"column":13},"end":{"line":1734,"column":13}},{"start":{"line":1734,"column":13},"end":{"line":1734,"column":13}}]},"293":{"line":1740,"type":"if","locations":[{"start":{"line":1740,"column":6},"end":{"line":1740,"column":6}},{"start":{"line":1740,"column":6},"end":{"line":1740,"column":6}}]},"294":{"line":1747,"type":"cond-expr","locations":[{"start":{"line":1747,"column":52},"end":{"line":1747,"column":86}},{"start":{"line":1747,"column":89},"end":{"line":1747,"column":106}}]},"295":{"line":1748,"type":"if","locations":[{"start":{"line":1748,"column":2},"end":{"line":1748,"column":2}},{"start":{"line":1748,"column":2},"end":{"line":1748,"column":2}}]},"296":{"line":1751,"type":"if","locations":[{"start":{"line":1751,"column":6},"end":{"line":1751,"column":6}},{"start":{"line":1751,"column":6},"end":{"line":1751,"column":6}}]},"297":{"line":1768,"type":"if","locations":[{"start":{"line":1768,"column":2},"end":{"line":1768,"column":2}},{"start":{"line":1768,"column":2},"end":{"line":1768,"column":2}}]},"298":{"line":1770,"type":"if","locations":[{"start":{"line":1770,"column":2},"end":{"line":1770,"column":2}},{"start":{"line":1770,"column":2},"end":{"line":1770,"column":2}}]},"299":{"line":1792,"type":"if","locations":[{"start":{"line":1792,"column":2},"end":{"line":1792,"column":2}},{"start":{"line":1792,"column":2},"end":{"line":1792,"column":2}}]},"300":{"line":1793,"type":"cond-expr","locations":[{"start":{"line":1793,"column":24},"end":{"line":1793,"column":36}},{"start":{"line":1793,"column":39},"end":{"line":1793,"column":43}}]},"301":{"line":1794,"type":"cond-expr","locations":[{"start":{"line":1794,"column":27},"end":{"line":1794,"column":39}},{"start":{"line":1794,"column":42},"end":{"line":1794,"column":46}}]},"302":{"line":1797,"type":"if","locations":[{"start":{"line":1797,"column":2},"end":{"line":1797,"column":2}},{"start":{"line":1797,"column":2},"end":{"line":1797,"column":2}}]},"303":{"line":1800,"type":"if","locations":[{"start":{"line":1800,"column":8},"end":{"line":1800,"column":8}},{"start":{"line":1800,"column":8},"end":{"line":1800,"column":8}}]},"304":{"line":1807,"type":"if","locations":[{"start":{"line":1807,"column":4},"end":{"line":1807,"column":4}},{"start":{"line":1807,"column":4},"end":{"line":1807,"column":4}}]}},"code":["\"use strict\";","","/**"," * @fileOverview GridFS is a tool for MongoDB to store files to the database."," * Because of the restrictions of the object size the database can hold, a"," * facility to split a file into several chunks is needed. The {@link GridStore}"," * class offers a simplified api to interact with files while managing the"," * chunks of split files behind the scenes. More information about GridFS can be"," * found <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>."," *"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   GridStore = require('mongodb').GridStore,"," *   ObjectID = require('mongodb').ObjectID,"," *   test = require('assert');"," *"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   var gridStore = new GridStore(db, null, \"w\");"," *   gridStore.open(function(err, gridStore) {"," *     gridStore.write(\"hello world!\", function(err, gridStore) {"," *       gridStore.close(function(err, result) {"," *"," *         // Let's read the file using object Id"," *         GridStore.read(db, result._id, function(err, data) {"," *           test.equal('hello world!', data);"," *           db.close();"," *           test.done();"," *         });"," *       });"," *     });"," *   });"," * });"," */","var Chunk = require('./chunk'),","  ObjectID = require('mongodb-core').BSON.ObjectID,","  ReadPreference = require('../read_preference'),","  Buffer = require('buffer').Buffer,","  Collection = require('../collection'),","  fs = require('fs'),","  f = require('util').format,","  util = require('util'),","  Define = require('../metadata'),","  MongoError = require('mongodb-core').MongoError,","  inherits = util.inherits,","  Duplex = require('stream').Duplex || require('readable-stream').Duplex,","  shallowClone = require('../utils').shallowClone;","","var REFERENCE_BY_FILENAME = 0,","  REFERENCE_BY_ID = 1;","","/**"," * Namespace provided by the mongodb-core and node.js"," * @external Duplex"," */","","/**"," * Create a new GridStore instance"," *"," * Modes"," *  - **\"r\"** - read only. This is the default mode."," *  - **\"w\"** - write in truncate mode. Existing data will be overwriten."," *"," * @class"," * @param {Db} db A database instance to interact with."," * @param {object} [id] optional unique id for this file"," * @param {string} [filename] optional filename for this file, no unique constrain on the field"," * @param {string} mode set the mode for this file."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {string} [options.root=null] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**."," * @param {string} [options.content_type=null] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**."," * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**."," * @param {object} [options.metadata=null] Arbitrary data the user wants to store."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @property {number} chunkSize Get the gridstore chunk size."," * @property {number} md5 The md5 checksum for this file."," * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory"," * @return {GridStore} a GridStore instance."," * @deprecated Use GridFSBucket API instead"," */","var GridStore = function GridStore(db, id, filename, mode, options) {","  if(!(this instanceof GridStore)) return new GridStore(db, id, filename, mode, options);","  this.db = db;","","  // Handle options","  if(typeof options === 'undefined') options = {};","  // Handle mode","  if(typeof mode === 'undefined') {","    mode = filename;","    filename = undefined;","  } else if(typeof mode == 'object') {","    options = mode;","    mode = filename;","    filename = undefined;","  }","","  if(id && id._bsontype == 'ObjectID') {","    this.referenceBy = REFERENCE_BY_ID;","    this.fileId = id;","    this.filename = filename;","  } else if(typeof filename == 'undefined') {","    this.referenceBy = REFERENCE_BY_FILENAME;","    this.filename = id;","    if (mode.indexOf('w') != null) {","      this.fileId = new ObjectID();","    }","  } else {","    this.referenceBy = REFERENCE_BY_ID;","    this.fileId = id;","    this.filename = filename;","  }","","  // Set up the rest","  this.mode = mode == null ? \"r\" : mode;","  this.options = options || {};","","  // Opened","  this.isOpen = false;","","  // Set the root if overridden","  this.root = this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];","  this.position = 0;","  this.readPreference = this.options.readPreference || db.options.readPreference || ReadPreference.PRIMARY;","  this.writeConcern = _getWriteConcern(db, this.options);","  // Set default chunk size","  this.internalChunkSize = this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];","","  // Get the promiseLibrary","  var promiseLibrary = this.options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Set the promiseLibrary","  this.promiseLibrary = promiseLibrary;","","  Object.defineProperty(this, \"chunkSize\", { enumerable: true","   , get: function () {","       return this.internalChunkSize;","     }","   , set: function(value) {","       if(!(this.mode[0] == \"w\" && this.position == 0 && this.uploadDate == null)) {","         this.internalChunkSize = this.internalChunkSize;","       } else {","         this.internalChunkSize = value;","       }","     }","  });","","  Object.defineProperty(this, \"md5\", { enumerable: true","   , get: function () {","       return this.internalMd5;","     }","  });","","  Object.defineProperty(this, \"chunkNumber\", { enumerable: true","   , get: function () {","       return this.currentChunk && this.currentChunk.chunkNumber ? this.currentChunk.chunkNumber : null;","     }","  });","}","","var define = GridStore.define = new Define('Gridstore', GridStore, true);","","/**"," * The callback format for the Gridstore.open method"," * @callback GridStore~openCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {GridStore} gridStore The GridStore instance if the open method was successful."," */","","/**"," * Opens the file from the database and initialize this object. Also creates a"," * new one if file does not exist."," *"," * @method"," * @param {GridStore~openCallback} [callback] this will be called after executing this method"," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.open = function(callback) {","  var self = this;","  if( this.mode != \"w\" && this.mode != \"w+\" && this.mode != \"r\"){","    throw MongoError.create({message: \"Illegal mode \" + this.mode, driver:true});","  }","","  // We provided a callback leg","  if(typeof callback == 'function') return open(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    open(self, function(err, store) {","      if(err) return reject(err);","      resolve(store);","    })","  });","};","","var open = function(self, callback) {","  // Get the write concern","  var writeConcern = _getWriteConcern(self.db, self.options);","","  // If we are writing we need to ensure we have the right indexes for md5's","  if((self.mode == \"w\" || self.mode == \"w+\")) {","    // Get files collection","    var collection = self.collection();","    // Put index on filename","    collection.ensureIndex([['filename', 1]], writeConcern, function() {","      // Get chunk collection","      var chunkCollection = self.chunkCollection();","      // Make an unique index for compatibility with mongo-cxx-driver:legacy","      var chunkIndexOptions = shallowClone(writeConcern);","      chunkIndexOptions.unique = true;","      // Ensure index on chunk collection","      chunkCollection.ensureIndex([['files_id', 1], ['n', 1]], chunkIndexOptions, function() {","        // Open the connection","        _open(self, writeConcern, function(err, r) {","          if(err) return callback(err);","          self.isOpen = true;","          callback(err, r);","        });","      });","    });","  } else {","    // Open the gridstore","    _open(self, writeConcern, function(err, r) {","      if(err) return callback(err);","      self.isOpen = true;","      callback(err, r);","    });","  }","}","","// Push the definition for open","define.classMethod('open', {callback: true, promise:true});","","/**"," * Verify if the file is at EOF."," *"," * @method"," * @return {boolean} true if the read/write head is at the end of this file."," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.eof = function() {","  return this.position == this.length ? true : false;","}","","define.classMethod('eof', {callback: false, promise:false, returns: [Boolean]});","","/**"," * The callback result format."," * @callback GridStore~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result from the callback."," */","","/**"," * Retrieves a single character from this file."," *"," * @method"," * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.getc = function(callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return eof(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    eof(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","}","","var eof = function(self, callback) {","  if(self.eof()) {","    callback(null, null);","  } else if(self.currentChunk.eof()) {","    nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {","      self.currentChunk = chunk;","      self.position = self.position + 1;","      callback(err, self.currentChunk.getc());","    });","  } else {","    self.position = self.position + 1;","    callback(null, self.currentChunk.getc());","  }","}","","define.classMethod('getc', {callback: true, promise:true});","","/**"," * Writes a string to the file with a newline character appended at the end if"," * the given string does not have one."," *"," * @method"," * @param {string} string the string to write."," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.puts = function(string, callback) {","  var self = this;","  var finalString = string.match(/\\n$/) == null ? string + \"\\n\" : string;","  // We provided a callback leg","  if(typeof callback == 'function') return this.write(finalString, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    self.write(finalString, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","}","","define.classMethod('puts', {callback: true, promise:true});","","/**"," * Return a modified Readable stream including a possible transform method."," *"," * @method"," * @return {GridStoreStream}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.stream = function() {","  return new GridStoreStream(this);","}","","define.classMethod('stream', {callback: false, promise:false, returns: [GridStoreStream]});","","/**"," * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\"."," *"," * @method"," * @param {(string|Buffer)} data the data to write."," * @param {boolean} [close] closes this file after writing if set to true."," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.write = function write(data, close, callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return _writeNormal(this, data, close, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    _writeNormal(self, data, close, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","}","","define.classMethod('write', {callback: true, promise:true});","","/**"," * Handles the destroy part of a stream"," *"," * @method"," * @result {null}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.destroy = function destroy() {","  // close and do not emit any more events. queued data is not sent.","  if(!this.writable) return;","  this.readable = false;","  if(this.writable) {","    this.writable = false;","    this._q.length = 0;","    this.emit('close');","  }","}","","define.classMethod('destroy', {callback: false, promise:false});","","/**"," * Stores a file from the file system to the GridFS database."," *"," * @method"," * @param {(string|Buffer|FileHandle)} file the file to store."," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.writeFile = function (file, callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return writeFile(self, file, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    writeFile(self, file, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var writeFile = function(self, file, callback) {","  if (typeof file === 'string') {","    fs.open(file, 'r', function (err, fd) {","      if(err) return callback(err);","      self.writeFile(fd, callback);","    });","    return;","  }","","  self.open(function (err, self) {","    if(err) return callback(err, self);","","    fs.fstat(file, function (err, stats) {","      if(err) return callback(err, self);","","      var offset = 0;","      var index = 0;","","      // Write a chunk","      var writeChunk = function() {","        fs.read(file, self.chunkSize, offset, 'binary', function(err, data, bytesRead) {","          if(err) return callback(err, self);","","          offset = offset + bytesRead;","","          // Create a new chunk for the data","          var chunk = new Chunk(self, {n:index++}, self.writeConcern);","          chunk.write(data, function(err, chunk) {","            if(err) return callback(err, self);","","            chunk.save({}, function(err) {","              if(err) return callback(err, self);","","              self.position = self.position + data.length;","","              // Point to current chunk","              self.currentChunk = chunk;","","              if(offset >= stats.size) {","                fs.close(file);","                self.close(function(err) {","                  if(err) return callback(err, self);","                  return callback(null, self);","                });","              } else {","                return process.nextTick(writeChunk);","              }","            });","          });","        });","      }","","      // Process the first write","      process.nextTick(writeChunk);","    });","  });","}","","define.classMethod('writeFile', {callback: true, promise:true});","","/**"," * Saves this file to the database. This will overwrite the old entry if it"," * already exists. This will work properly only if mode was initialized to"," * \"w\" or \"w+\"."," *"," * @method"," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.close = function(callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return close(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    close(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var close = function(self, callback) {","  if(self.mode[0] == \"w\") {","    // Set up options","    var options = self.writeConcern;","","    if(self.currentChunk != null && self.currentChunk.position > 0) {","      self.currentChunk.save({}, function(err) {","        if(err && typeof callback == 'function') return callback(err);","","        self.collection(function(err, files) {","          if(err && typeof callback == 'function') return callback(err);","","          // Build the mongo object","          if(self.uploadDate != null) {","            buildMongoObject(self, function(err, mongoObject) {","              if(err) {","                if(typeof callback == 'function') return callback(err); else throw err;","              }","","              files.save(mongoObject, options, function(err) {","                if(typeof callback == 'function')","                  callback(err, mongoObject);","              });","            });","          } else {","            self.uploadDate = new Date();","            buildMongoObject(self, function(err, mongoObject) {","              if(err) {","                if(typeof callback == 'function') return callback(err); else throw err;","              }","","              files.save(mongoObject, options, function(err) {","                if(typeof callback == 'function')","                  callback(err, mongoObject);","              });","            });","          }","        });","      });","    } else {","      self.collection(function(err, files) {","        if(err && typeof callback == 'function') return callback(err);","","        self.uploadDate = new Date();","        buildMongoObject(self, function(err, mongoObject) {","          if(err) {","            if(typeof callback == 'function') return callback(err); else throw err;","          }","","          files.save(mongoObject, options, function(err) {","            if(typeof callback == 'function')","              callback(err, mongoObject);","          });","        });","      });","    }","  } else if(self.mode[0] == \"r\") {","    if(typeof callback == 'function')","      callback(null, null);","  } else {","    if(typeof callback == 'function')","      callback(MongoError.create({message: f(\"Illegal mode %s\", self.mode), driver:true}));","  }","}","","define.classMethod('close', {callback: true, promise:true});","","/**"," * The collection callback format."," * @callback GridStore~collectionCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection} collection The collection from the command execution."," */","","/**"," * Retrieve this file's chunks collection."," *"," * @method"," * @param {GridStore~collectionCallback} callback the command callback."," * @return {Collection}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.chunkCollection = function(callback) {","  if(typeof callback == 'function')","    return this.db.collection((this.root + \".chunks\"), callback);","  return this.db.collection((this.root + \".chunks\"));","};","","define.classMethod('chunkCollection', {callback: true, promise:false, returns: [Collection]});","","/**"," * Deletes all the chunks of this file in the database."," *"," * @method"," * @param {GridStore~resultCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.unlink = function(callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return unlink(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    unlink(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var unlink = function(self, callback) {","  deleteChunks(self, function(err) {","    if(err!==null) {","      err.message = \"at deleteChunks: \" + err.message;","      return callback(err);","    }","","    self.collection(function(err, collection) {","      if(err!==null) {","        err.message = \"at collection: \" + err.message;","        return callback(err);","      }","","      collection.remove({'_id':self.fileId}, self.writeConcern, function(err) {","        callback(err, self);","      });","    });","  });","}","","define.classMethod('unlink', {callback: true, promise:true});","","/**"," * Retrieves the file collection associated with this object."," *"," * @method"," * @param {GridStore~collectionCallback} callback the command callback."," * @return {Collection}"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.collection = function(callback) {","  if(typeof callback == 'function')","    this.db.collection(this.root + \".files\", callback);","  return this.db.collection(this.root + \".files\");","};","","define.classMethod('collection', {callback: true, promise:false, returns: [Collection]});","","/**"," * The readlines callback format."," * @callback GridStore~readlinesCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {string[]} strings The array of strings returned."," */","","/**"," * Read the entire file as a list of strings splitting by the provided separator."," *"," * @method"," * @param {string} [separator] The character to be recognized as the newline separator."," * @param {GridStore~readlinesCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.readlines = function(separator, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  separator = args.length ? args.shift() : \"\\n\";","  separator = separator || \"\\n\";","","  // We provided a callback leg","  if(typeof callback == 'function') return readlines(self, separator, callback);","","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    readlines(self, separator, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var readlines = function(self, separator, callback) {","  self.read(function(err, data) {","    if(err) return callback(err);","","    var items = data.toString().split(separator);","    items = items.length > 0 ? items.splice(0, items.length - 1) : [];","    for(var i = 0; i < items.length; i++) {","      items[i] = items[i] + separator;","    }","","    callback(null, items);","  });","}","","define.classMethod('readlines', {callback: true, promise:true});","","/**"," * Deletes all the chunks of this file in the database if mode was set to \"w\" or"," * \"w+\" and resets the read/write head to the initial position."," *"," * @method"," * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.rewind = function(callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return rewind(self, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    rewind(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var rewind = function(self, callback) {","  if(self.currentChunk.chunkNumber != 0) {","    if(self.mode[0] == \"w\") {","      deleteChunks(self, function(err) {","        if(err) return callback(err);","        self.currentChunk = new Chunk(self, {'n': 0}, self.writeConcern);","        self.position = 0;","        callback(null, self);","      });","    } else {","      self.currentChunk(0, function(err, chunk) {","        if(err) return callback(err);","        self.currentChunk = chunk;","        self.currentChunk.rewind();","        self.position = 0;","        callback(null, self);","      });","    }","  } else {","    self.currentChunk.rewind();","    self.position = 0;","    callback(null, self);","  }","}","","define.classMethod('rewind', {callback: true, promise:true});","","/**"," * The read callback format."," * @callback GridStore~readCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Buffer} data The data read from the GridStore object"," */","","/**"," * Retrieves the contents of this file and advances the read/write head. Works with Buffers only."," *"," * There are 3 signatures for this method:"," *"," * (callback)"," * (length, callback)"," * (length, buffer, callback)"," *"," * @method"," * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified."," * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method."," * @param {GridStore~readCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.read = function(length, buffer, callback) {","  var self = this;","","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  length = args.length ? args.shift() : null;","  buffer = args.length ? args.shift() : null;","  // We provided a callback leg","  if(typeof callback == 'function') return read(self, length, buffer, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    read(self, length, buffer, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","}","","var read = function(self, length, buffer, callback) {","  // The data is a c-terminated string and thus the length - 1","  var finalLength = length == null ? self.length - self.position : length;","  var finalBuffer = buffer == null ? new Buffer(finalLength) : buffer;","  // Add a index to buffer to keep track of writing position or apply current index","  finalBuffer._index = buffer != null && buffer._index != null ? buffer._index : 0;","","  if((self.currentChunk.length() - self.currentChunk.position + finalBuffer._index) >= finalLength) {","    var slice = self.currentChunk.readSlice(finalLength - finalBuffer._index);","    // Copy content to final buffer","    slice.copy(finalBuffer, finalBuffer._index);","    // Update internal position","    self.position = self.position + finalBuffer.length;","    // Check if we don't have a file at all","    if(finalLength == 0 && finalBuffer.length == 0) return callback(MongoError.create({message: \"File does not exist\", driver:true}), null);","    // Else return data","    return callback(null, finalBuffer);","  }","","  // Read the next chunk","  slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);","  // Copy content to final buffer","  slice.copy(finalBuffer, finalBuffer._index);","  // Update index position","  finalBuffer._index += slice.length;","","  // Load next chunk and read more","  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {","    if(err) return callback(err);","","    if(chunk.length() > 0) {","      self.currentChunk = chunk;","      self.read(length, finalBuffer, callback);","    } else {","      if(finalBuffer._index > 0) {","        callback(null, finalBuffer)","      } else {","        callback(MongoError.create({message: \"no chunks found for file, possibly corrupt\", driver:true}), null);","      }","    }","  });","}","","define.classMethod('read', {callback: true, promise:true});","","/**"," * The tell callback format."," * @callback GridStore~tellCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {number} position The current read position in the GridStore."," */","","/**"," * Retrieves the position of the read/write head of this file."," *"," * @method"," * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified."," * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method."," * @param {GridStore~tellCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.tell = function(callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return callback(null, this.position);","  // Return promise","  return new self.promiseLibrary(function(resolve) {","    resolve(self.position);","  });","};","","define.classMethod('tell', {callback: true, promise:true});","","/**"," * The tell callback format."," * @callback GridStore~gridStoreCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {GridStore} gridStore The gridStore."," */","","/**"," * Moves the read/write head to a new location."," *"," * There are 3 signatures for this method"," *"," * Seek Location Modes"," *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file."," *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file."," *  - **GridStore.IO_SEEK_END**, set the position from the end of the file."," *"," * @method"," * @param {number} [position] the position to seek to"," * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes."," * @param {GridStore~gridStoreCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.prototype.seek = function(position, seekLocation, callback) {","  var self = this;","","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  seekLocation = args.length ? args.shift() : null;","","  // We provided a callback leg","  if(typeof callback == 'function') return seek(self, position, seekLocation, callback);","  // Return promise","  return new self.promiseLibrary(function(resolve, reject) {","    seek(self, position, seekLocation, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","}","","var seek = function(self, position, seekLocation, callback) {","  // Seek only supports read mode","  if(self.mode != 'r') {","    return callback(MongoError.create({message: \"seek is only supported for mode r\", driver:true}))","  }","","  var seekLocationFinal = seekLocation == null ? GridStore.IO_SEEK_SET : seekLocation;","  var finalPosition = position;","  var targetPosition = 0;","","  // Calculate the position","  if(seekLocationFinal == GridStore.IO_SEEK_CUR) {","    targetPosition = self.position + finalPosition;","  } else if(seekLocationFinal == GridStore.IO_SEEK_END) {","    targetPosition = self.length + finalPosition;","  } else {","    targetPosition = finalPosition;","  }","","  // Get the chunk","  var newChunkNumber = Math.floor(targetPosition/self.chunkSize);","  var seekChunk = function() {","    nthChunk(self, newChunkNumber, function(err, chunk) {","      if(err) return callback(err, null);","      if(chunk == null) return callback(new Error('no chunk found'));","","      // Set the current chunk","      self.currentChunk = chunk;","      self.position = targetPosition;","      self.currentChunk.position = (self.position % self.chunkSize);","      callback(err, self);","    });","  };","","  seekChunk();","}","","define.classMethod('seek', {callback: true, promise:true});","","/**"," * @ignore"," */","var _open = function(self, options, callback) {","  var collection = self.collection();","  // Create the query","  var query = self.referenceBy == REFERENCE_BY_ID ? {_id:self.fileId} : {filename:self.filename};","  query = null == self.fileId && self.filename == null ? null : query;","  options.readPreference = self.readPreference;","","  // Fetch the chunks","  if(query != null) {","    collection.findOne(query, options, function(err, doc) {","      if(err) return error(err);","","      // Check if the collection for the files exists otherwise prepare the new one","      if(doc != null) {","        self.fileId = doc._id;","        // Prefer a new filename over the existing one if this is a write","        self.filename = ((self.mode == 'r') || (self.filename == undefined)) ? doc.filename : self.filename;","        self.contentType = doc.contentType;","        self.internalChunkSize = doc.chunkSize;","        self.uploadDate = doc.uploadDate;","        self.aliases = doc.aliases;","        self.length = doc.length;","        self.metadata = doc.metadata;","        self.internalMd5 = doc.md5;","      } else if (self.mode != 'r') {","        self.fileId = self.fileId == null ? new ObjectID() : self.fileId;","        self.contentType = GridStore.DEFAULT_CONTENT_TYPE;","        self.internalChunkSize = self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;","        self.length = 0;","      } else {","        self.length = 0;","        var txtId = self.fileId._bsontype == \"ObjectID\" ? self.fileId.toHexString() : self.fileId;","        return error(MongoError.create({message: f(\"file with id %s not opened for writing\", (self.referenceBy == REFERENCE_BY_ID ? txtId : self.filename)), driver:true}), self);","      }","","      // Process the mode of the object","      if(self.mode == \"r\") {","        nthChunk(self, 0, options, function(err, chunk) {","          if(err) return error(err);","          self.currentChunk = chunk;","          self.position = 0;","          callback(null, self);","        });","      } else if(self.mode == \"w\" && doc) {","        // Delete any existing chunks","        deleteChunks(self, options, function(err) {","          if(err) return error(err);","          self.currentChunk = new Chunk(self, {'n':0}, self.writeConcern);","          self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];","          self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];","          self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];","          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];","          self.position = 0;","          callback(null, self);","        });","      } else if(self.mode == \"w\") {","        self.currentChunk = new Chunk(self, {'n':0}, self.writeConcern);","        self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];","        self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];","        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];","        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];","        self.position = 0;","        callback(null, self);","      } else if(self.mode == \"w+\") {","        nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {","          if(err) return error(err);","          // Set the current chunk","          self.currentChunk = chunk == null ? new Chunk(self, {'n':0}, self.writeConcern) : chunk;","          self.currentChunk.position = self.currentChunk.data.length();","          self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];","          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];","          self.position = self.length;","          callback(null, self);","        });","      }","    });","  } else {","    // Write only mode","    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;","    self.contentType = GridStore.DEFAULT_CONTENT_TYPE;","    self.internalChunkSize = self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;","    self.length = 0;","","    // No file exists set up write mode","    if(self.mode == \"w\") {","      // Delete any existing chunks","      deleteChunks(self, options, function(err) {","        if(err) return error(err);","        self.currentChunk = new Chunk(self, {'n':0}, self.writeConcern);","        self.contentType = self.options['content_type'] == null ? self.contentType : self.options['content_type'];","        self.internalChunkSize = self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];","        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];","        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];","        self.position = 0;","        callback(null, self);","      });","    } else if(self.mode == \"w+\") {","      nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {","        if(err) return error(err);","        // Set the current chunk","        self.currentChunk = chunk == null ? new Chunk(self, {'n':0}, self.writeConcern) : chunk;","        self.currentChunk.position = self.currentChunk.data.length();","        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];","        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];","        self.position = self.length;","        callback(null, self);","      });","    }","  }","","  // only pass error to callback once","  function error (err) {","    if(error.err) return;","    callback(error.err = err);","  }","};","","/**"," * @ignore"," */","var writeBuffer = function(self, buffer, close, callback) {","  if(typeof close === \"function\") { callback = close; close = null; }","  var finalClose = typeof close == 'boolean' ? close : false;","","  if(self.mode != \"w\") {","    callback(MongoError.create({message: f(\"file with id %s not opened for writing\", (self.referenceBy == REFERENCE_BY_ID ? self.referenceBy : self.filename)), driver:true}), null);","  } else {","    if(self.currentChunk.position + buffer.length >= self.chunkSize) {","      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left","      // to a new chunk (recursively)","      var previousChunkNumber = self.currentChunk.chunkNumber;","      var leftOverDataSize = self.chunkSize - self.currentChunk.position;","      var firstChunkData = buffer.slice(0, leftOverDataSize);","      var leftOverData = buffer.slice(leftOverDataSize);","      // A list of chunks to write out","      var chunksToWrite = [self.currentChunk.write(firstChunkData)];","      // If we have more data left than the chunk size let's keep writing new chunks","      while(leftOverData.length >= self.chunkSize) {","        // Create a new chunk and write to it","        var newChunk = new Chunk(self, {'n': (previousChunkNumber + 1)}, self.writeConcern);","        firstChunkData = leftOverData.slice(0, self.chunkSize);","        leftOverData = leftOverData.slice(self.chunkSize);","        // Update chunk number","        previousChunkNumber = previousChunkNumber + 1;","        // Write data","        newChunk.write(firstChunkData);","        // Push chunk to save list","        chunksToWrite.push(newChunk);","      }","","      // Set current chunk with remaining data","      self.currentChunk = new Chunk(self, {'n': (previousChunkNumber + 1)}, self.writeConcern);","      // If we have left over data write it","      if(leftOverData.length > 0) self.currentChunk.write(leftOverData);","","      // Update the position for the gridstore","      self.position = self.position + buffer.length;","      // Total number of chunks to write","      var numberOfChunksToWrite = chunksToWrite.length;","","      for(var i = 0; i < chunksToWrite.length; i++) {","        chunksToWrite[i].save({}, function(err) {","          if(err) return callback(err);","","          numberOfChunksToWrite = numberOfChunksToWrite - 1;","","          if(numberOfChunksToWrite <= 0) {","            // We care closing the file before returning","            if(finalClose) {","              return self.close(function(err) {","                callback(err, self);","              });","            }","","            // Return normally","            return callback(null, self);","          }","        });","      }","    } else {","      // Update the position for the gridstore","      self.position = self.position + buffer.length;","      // We have less data than the chunk size just write it and callback","      self.currentChunk.write(buffer);","      // We care closing the file before returning","      if(finalClose) {","        return self.close(function(err) {","          callback(err, self);","        });","      }","      // Return normally","      return callback(null, self);","    }","  }","};","","/**"," * Creates a mongoDB object representation of this object."," *"," *        <pre><code>"," *        {"," *          '_id' : , // {number} id for this file"," *          'filename' : , // {string} name for this file"," *          'contentType' : , // {string} mime type for this file"," *          'length' : , // {number} size of this file?"," *          'chunksize' : , // {number} chunk size used by this file"," *          'uploadDate' : , // {Date}"," *          'aliases' : , // {array of string}"," *          'metadata' : , // {string}"," *        }"," *        </code></pre>"," *"," * @ignore"," */","var buildMongoObject = function(self, callback) {","  // Calcuate the length","  var mongoObject = {","    '_id': self.fileId,","    'filename': self.filename,","    'contentType': self.contentType,","    'length': self.position ? self.position : 0,","    'chunkSize': self.chunkSize,","    'uploadDate': self.uploadDate,","    'aliases': self.aliases,","    'metadata': self.metadata","  };","","  var md5Command = {filemd5:self.fileId, root:self.root};","  self.db.command(md5Command, function(err, results) {","    if(err) return callback(err);","","    mongoObject.md5 = results.md5;","    callback(null, mongoObject);","  });","};","","/**"," * Gets the nth chunk of this file."," * @ignore"," */","var nthChunk = function(self, chunkNumber, options, callback) {","  if(typeof options == 'function') {","    callback = options;","    options = {};","  }","","  options = options || self.writeConcern;","  options.readPreference = self.readPreference;","  // Get the nth chunk","  self.chunkCollection().findOne({'files_id':self.fileId, 'n':chunkNumber}, options, function(err, chunk) {","    if(err) return callback(err);","","    var finalChunk = chunk == null ? {} : chunk;","    callback(null, new Chunk(self, finalChunk, self.writeConcern));","  });","};","","/**"," * @ignore"," */","var lastChunkNumber = function(self) {","  return Math.floor((self.length ? self.length - 1 : 0)/self.chunkSize);","};","","/**"," * Deletes all the chunks of this file in the database."," *"," * @ignore"," */","var deleteChunks = function(self, options, callback) {","  if(typeof options == 'function') {","    callback = options;","    options = {};","  }","","  options = options || self.writeConcern;","","  if(self.fileId != null) {","    self.chunkCollection().remove({'files_id':self.fileId}, options, function(err) {","      if(err) return callback(err, false);","      callback(null, true);","    });","  } else {","    callback(null, true);","  }","};","","/**","* The collection to be used for holding the files and chunks collection.","*","* @classconstant DEFAULT_ROOT_COLLECTION","**/","GridStore.DEFAULT_ROOT_COLLECTION = 'fs';","","/**","* Default file mime type","*","* @classconstant DEFAULT_CONTENT_TYPE","**/","GridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';","","/**","* Seek mode where the given length is absolute.","*","* @classconstant IO_SEEK_SET","**/","GridStore.IO_SEEK_SET = 0;","","/**","* Seek mode where the given length is an offset to the current read/write head.","*","* @classconstant IO_SEEK_CUR","**/","GridStore.IO_SEEK_CUR = 1;","","/**","* Seek mode where the given length is an offset to the end of the file.","*","* @classconstant IO_SEEK_END","**/","GridStore.IO_SEEK_END = 2;","","/**"," * Checks if a file exists in the database."," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {string} name The name of the file to look for."," * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~resultCallback} [callback] result from exists."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.exist = function(db, fileIdObject, rootCollection, options, callback) {","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  rootCollection = args.length ? args.shift() : null;","  options = args.length ? args.shift() : {};","  options = options || {};","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // We provided a callback leg","  if(typeof callback == 'function') return exists(db, fileIdObject, rootCollection, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","    exists(db, fileIdObject, rootCollection, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var exists = function(db, fileIdObject, rootCollection, options, callback) {","  // Establish read preference","  var readPreference = options.readPreference || ReadPreference.PRIMARY;","  // Fetch collection","  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;","  db.collection(rootCollectionFinal + \".files\", function(err, collection) {","    if(err) return callback(err);","","    // Build query","    var query = (typeof fileIdObject == 'string' || Object.prototype.toString.call(fileIdObject) == '[object RegExp]' )","      ? {'filename':fileIdObject}","      : {'_id':fileIdObject};    // Attempt to locate file","","    // We have a specific query","    if(fileIdObject != null","      && typeof fileIdObject == 'object'","      && Object.prototype.toString.call(fileIdObject) != '[object RegExp]') {","      query = fileIdObject;","    }","","    // Check if the entry exists","    collection.findOne(query, {readPreference:readPreference}, function(err, item) {","      if(err) return callback(err);","      callback(null, item == null ? false : true);","    });","  });","}","","define.staticMethod('exist', {callback: true, promise:true});","","/**"," * Gets the list of files stored in the GridFS."," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~resultCallback} [callback] result from exists."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.list = function(db, rootCollection, options, callback) {","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  rootCollection = args.length ? args.shift() : null;","  options = args.length ? args.shift() : {};","  options = options || {};","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // We provided a callback leg","  if(typeof callback == 'function') return list(db, rootCollection, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","    list(db, rootCollection, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var list = function(db, rootCollection, options, callback) {","  // Ensure we have correct values","  if(rootCollection != null && typeof rootCollection == 'object') {","    options = rootCollection;","    rootCollection = null;","  }","","  // Establish read preference","  var readPreference = options.readPreference || ReadPreference.PRIMARY;","  // Check if we are returning by id not filename","  var byId = options['id'] != null ? options['id'] : false;","  // Fetch item","  var rootCollectionFinal = rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;","  var items = [];","  db.collection((rootCollectionFinal + \".files\"), function(err, collection) {","    if(err) return callback(err);","","    collection.find({}, {readPreference:readPreference}, function(err, cursor) {","      if(err) return callback(err);","","      cursor.each(function(err, item) {","        if(item != null) {","          items.push(byId ? item._id : item.filename);","        } else {","          callback(err, items);","        }","      });","    });","  });","}","","define.staticMethod('list', {callback: true, promise:true});","","/**"," * Reads the contents of a file."," *"," * This method has the following signatures"," *"," * (db, name, callback)"," * (db, name, length, callback)"," * (db, name, length, offset, callback)"," * (db, name, length, offset, options, callback)"," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {string} name The name of the file."," * @param {number} [length] The size of data to read."," * @param {number} [offset] The offset from the head of the file of which to start reading from."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~readCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.read = function(db, name, length, offset, options, callback) {","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  length = args.length ? args.shift() : null;","  offset = args.length ? args.shift() : null;","  options = args.length ? args.shift() : null;","  options = options || {};","","  // Get the promiseLibrary","  var promiseLibrary = options ? options.promiseLibrary : null;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // We provided a callback leg","  if(typeof callback == 'function') return readStatic(db, name, length, offset, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","    readStatic(db, name, length, offset, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var readStatic = function(db, name, length, offset, options, callback) {","  new GridStore(db, name, \"r\", options).open(function(err, gridStore) {","    if(err) return callback(err);","    // Make sure we are not reading out of bounds","    if(offset && offset >= gridStore.length) return callback(\"offset larger than size of file\", null);","    if(length && length > gridStore.length) return callback(\"length is larger than the size of the file\", null);","    if(offset && length && (offset + length) > gridStore.length) return callback(\"offset and length is larger than the size of the file\", null);","","    if(offset != null) {","      gridStore.seek(offset, function(err, gridStore) {","        if(err) return callback(err);","        gridStore.read(length, callback);","      });","    } else {","      gridStore.read(length, callback);","    }","  });","}","","define.staticMethod('read', {callback: true, promise:true});","","/**"," * Read the entire file as a list of strings splitting by the provided separator."," *"," * @method"," * @static"," * @param {Db} db the database to query."," * @param {(String|object)} name the name of the file."," * @param {string} [separator] The character to be recognized as the newline separator."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~readlinesCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.readlines = function(db, name, separator, options, callback) {","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  separator = args.length ? args.shift() : null;","  options = args.length ? args.shift() : null;","  options = options || {};","","  // Get the promiseLibrary","  var promiseLibrary = options ? options.promiseLibrary : null;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // We provided a callback leg","  if(typeof callback == 'function') return readlinesStatic(db, name, separator, options, callback);","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","    readlinesStatic(db, name, separator, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var readlinesStatic = function(db, name, separator, options, callback) {","  var finalSeperator = separator == null ? \"\\n\" : separator;","  new GridStore(db, name, \"r\", options).open(function(err, gridStore) {","    if(err) return callback(err);","    gridStore.readlines(finalSeperator, callback);","  });","}","","define.staticMethod('readlines', {callback: true, promise:true});","","/**"," * Deletes the chunks and metadata information of a file from GridFS."," *"," * @method"," * @static"," * @param {Db} db The database to query."," * @param {(string|array)} names The name/names of the files to delete."," * @param {object} [options=null] Optional settings."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {GridStore~resultCallback} [callback] the command callback."," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use GridFSBucket API instead"," */","GridStore.unlink = function(db, names, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() : {};","  options = options || {};","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // We provided a callback leg","  if(typeof callback == 'function') return unlinkStatic(self, db, names, options, callback);","","  // Return promise","  return new promiseLibrary(function(resolve, reject) {","    unlinkStatic(self, db, names, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    })","  });","};","","var unlinkStatic = function(self, db, names, options, callback) {","  // Get the write concern","  var writeConcern = _getWriteConcern(db, options);","","  // List of names","  if(names.constructor == Array) {","    var tc = 0;","    for(var i = 0; i < names.length; i++) {","      ++tc;","      GridStore.unlink(db, names[i], options, function() {","        if(--tc == 0) {","          callback(null, self);","        }","      });","    }","  } else {","    new GridStore(db, names, \"w\", options).open(function(err, gridStore) {","      if(err) return callback(err);","      deleteChunks(gridStore, function(err) {","        if(err) return callback(err);","        gridStore.collection(function(err, collection) {","          if(err) return callback(err);","          collection.remove({'_id':gridStore.fileId}, writeConcern, function(err) {","            callback(err, self);","          });","        });","      });","    });","  }","}","","define.staticMethod('unlink', {callback: true, promise:true});","","/**"," *  @ignore"," */","var _writeNormal = function(self, data, close, callback) {","  // If we have a buffer write it using the writeBuffer method","  if(Buffer.isBuffer(data)) {","    return writeBuffer(self, data, close, callback);","  } else {","    return writeBuffer(self, new Buffer(data, 'binary'), close, callback);","  }","}","","/**"," * @ignore"," */","var _setWriteConcernHash = function(options) {","  var finalOptions = {};","  if(options.w != null) finalOptions.w = options.w;","  if(options.journal == true) finalOptions.j = options.journal;","  if(options.j == true) finalOptions.j = options.j;","  if(options.fsync == true) finalOptions.fsync = options.fsync;","  if(options.wtimeout != null) finalOptions.wtimeout = options.wtimeout;","  return finalOptions;","}","","/**"," * @ignore"," */","var _getWriteConcern = function(self, options) {","  // Final options","  var finalOptions = {w:1};","  options = options || {};","","  // Local options verification","  if(options.w != null || typeof options.j == 'boolean' || typeof options.journal == 'boolean' || typeof options.fsync == 'boolean') {","    finalOptions = _setWriteConcernHash(options);","  } else if(options.safe != null && typeof options.safe == 'object') {","    finalOptions = _setWriteConcernHash(options.safe);","  } else if(typeof options.safe == \"boolean\") {","    finalOptions = {w: (options.safe ? 1 : 0)};","  } else if(self.options.w != null || typeof self.options.j == 'boolean' || typeof self.options.journal == 'boolean' || typeof self.options.fsync == 'boolean') {","    finalOptions = _setWriteConcernHash(self.options);","  } else if(self.safe && (self.safe.w != null || typeof self.safe.j == 'boolean' || typeof self.safe.journal == 'boolean' || typeof self.safe.fsync == 'boolean')) {","    finalOptions = _setWriteConcernHash(self.safe);","  } else if(typeof self.safe == \"boolean\") {","    finalOptions = {w: (self.safe ? 1 : 0)};","  }","","  // Ensure we don't have an invalid combination of write concerns","  if(finalOptions.w < 1","    && (finalOptions.journal == true || finalOptions.j == true || finalOptions.fsync == true)) throw MongoError.create({message: \"No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true\", driver:true});","","  // Return the options","  return finalOptions;","}","","/**"," * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)"," *"," * @class"," * @extends external:Duplex"," * @return {GridStoreStream} a GridStoreStream instance."," * @deprecated Use GridFSBucket API instead"," */","var GridStoreStream = function(gs) {","  // Initialize the duplex stream","  Duplex.call(this);","","  // Get the gridstore","  this.gs = gs;","","  // End called","  this.endCalled = false;","","  // If we have a seek","  this.totalBytesToRead = this.gs.length - this.gs.position;","  this.seekPosition = this.gs.position;","}","","//","// Inherit duplex","inherits(GridStoreStream, Duplex);","","GridStoreStream.prototype._pipe = GridStoreStream.prototype.pipe;","","// Set up override","GridStoreStream.prototype.pipe = function(destination) {","  var self = this;","","  // Only open gridstore if not already open","  if(!self.gs.isOpen) {","    self.gs.open(function(err) {","      if(err) return self.emit('error', err);","      self.totalBytesToRead = self.gs.length - self.gs.position;","      self._pipe.apply(self, [destination]);","    });","  } else {","    self.totalBytesToRead = self.gs.length - self.gs.position;","    self._pipe.apply(self, [destination]);","  }","","  return destination;","}","","// Called by stream","GridStoreStream.prototype._read = function() {","  var self = this;","","  var read = function() {","    // Read data","    self.gs.read(length, function(err, buffer) {","      if(err && !self.endCalled) return self.emit('error', err);","","      // Stream is closed","      if(self.endCalled || buffer == null) return self.push(null);","      // Remove bytes read","      if(buffer.length <= self.totalBytesToRead) {","        self.totalBytesToRead = self.totalBytesToRead - buffer.length;","        self.push(buffer);","      } else if(buffer.length > self.totalBytesToRead) {","        self.totalBytesToRead = self.totalBytesToRead - buffer._index;","        self.push(buffer.slice(0, buffer._index));","      }","","      // Finished reading","      if(self.totalBytesToRead <= 0) {","        self.endCalled = true;","      }","    });","  }","","  // Set read length","  var length = self.gs.length < self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;","  if(!self.gs.isOpen) {","    self.gs.open(function(err) {","      self.totalBytesToRead = self.gs.length - self.gs.position;","      if(err) return self.emit('error', err);","      read();","    });","  } else {","    read();","  }","}","","GridStoreStream.prototype.destroy = function() {","  this.pause();","  this.endCalled = true;","  this.gs.close();","  this.emit('end');","}","","GridStoreStream.prototype.write = function(chunk) {","  var self = this;","  if(self.endCalled) return self.emit('error', MongoError.create({message: 'attempting to write to stream after end called', driver:true}))","  // Do we have to open the gridstore","  if(!self.gs.isOpen) {","    self.gs.open(function() {","      self.gs.isOpen = true;","      self.gs.write(chunk, function() {","        process.nextTick(function() {","          self.emit('drain');","        });","      });","    });","    return false;","  } else {","    self.gs.write(chunk, function() {","      self.emit('drain');","    });","    return true;","  }","}","","GridStoreStream.prototype.end = function(chunk, encoding, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  chunk = args.length ? args.shift() : null;","  encoding = args.length ? args.shift() : null;","  self.endCalled = true;","","  if(chunk) {","    self.gs.write(chunk, function() {","      self.gs.close(function() {","        if(typeof callback == 'function') callback();","        self.emit('end')","      });","    });","  }","","  self.gs.close(function() {","    if(typeof callback == 'function') callback();","    self.emit('end')","  });","}","","/**"," * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null."," * @function external:Duplex#read"," * @param {number} size Optional argument to specify how much data to read."," * @return {(String | Buffer | null)}"," */","","/**"," * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects."," * @function external:Duplex#setEncoding"," * @param {string} encoding The encoding to use."," * @return {null}"," */","","/**"," * This method will cause the readable stream to resume emitting data events."," * @function external:Duplex#resume"," * @return {null}"," */","","/**"," * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer."," * @function external:Duplex#pause"," * @return {null}"," */","","/**"," * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream."," * @function external:Duplex#pipe"," * @param {Writable} destination The destination for writing data"," * @param {object} [options] Pipe options"," * @return {null}"," */","","/**"," * This method will remove the hooks set up for a previous pipe() call."," * @function external:Duplex#unpipe"," * @param {Writable} [destination] The destination for writing data"," * @return {null}"," */","","/**"," * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party."," * @function external:Duplex#unshift"," * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue."," * @return {null}"," */","","/**"," * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)"," * @function external:Duplex#wrap"," * @param {Stream} stream An \"old style\" readable stream."," * @return {null}"," */","","/**"," * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled."," * @function external:Duplex#write"," * @param {(string|Buffer)} chunk The data to write"," * @param {string} encoding The encoding, if chunk is a String"," * @param {function} callback Callback for when this chunk of data is flushed"," * @return {boolean}"," */","","/**"," * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event."," * @function external:Duplex#end"," * @param {(string|Buffer)} chunk The data to write"," * @param {string} encoding The encoding, if chunk is a String"," * @param {function} callback Callback for when this chunk of data is flushed"," * @return {null}"," */","","/**"," * GridStoreStream stream data event, fired for each document in the cursor."," *"," * @event GridStoreStream#data"," * @type {object}"," */","","/**"," * GridStoreStream stream end event"," *"," * @event GridStoreStream#end"," * @type {null}"," */","","/**"," * GridStoreStream stream close event"," *"," * @event GridStoreStream#close"," * @type {null}"," */","","/**"," * GridStoreStream stream readable event"," *"," * @event GridStoreStream#readable"," * @type {null}"," */","","/**"," * GridStoreStream stream drain event"," *"," * @event GridStoreStream#drain"," * @type {null}"," */","","/**"," * GridStoreStream stream finish event"," *"," * @event GridStoreStream#finish"," * @type {null}"," */","","/**"," * GridStoreStream stream pipe event"," *"," * @event GridStoreStream#pipe"," * @type {null}"," */","","/**"," * GridStoreStream stream unpipe event"," *"," * @event GridStoreStream#unpipe"," * @type {null}"," */","","/**"," * GridStoreStream stream error event"," *"," * @event GridStoreStream#error"," * @type {null}"," */","","/**"," * @ignore"," */","module.exports = GridStore;",""],"l":{"37":1,"51":1,"88":1,"89":0,"90":0,"93":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"115":0,"116":0,"117":0,"121":0,"122":0,"125":0,"128":0,"129":0,"130":0,"131":0,"133":0,"136":0,"139":0,"140":0,"145":0,"147":0,"149":0,"152":0,"153":0,"155":0,"160":0,"162":0,"166":0,"168":0,"173":1,"191":1,"192":0,"193":0,"194":0,"198":0,"200":0,"201":0,"202":0,"203":0,"208":1,"210":0,"213":0,"215":0,"217":0,"219":0,"221":0,"222":0,"224":0,"226":0,"227":0,"228":0,"229":0,"235":0,"236":0,"237":0,"238":0,"244":1,"253":1,"254":0,"257":1,"274":1,"275":0,"277":0,"279":0,"280":0,"281":0,"282":0,"287":1,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"297":0,"298":0,"302":1,"314":1,"315":0,"316":0,"318":0,"320":0,"321":0,"322":0,"323":0,"328":1,"337":1,"338":0,"341":1,"353":1,"354":0,"356":0,"358":0,"359":0,"360":0,"361":0,"366":1,"375":1,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"386":1,"397":1,"398":0,"400":0,"402":0,"403":0,"404":0,"405":0,"410":1,"411":0,"412":0,"413":0,"414":0,"416":0,"419":0,"420":0,"422":0,"423":0,"425":0,"426":0,"429":0,"430":0,"431":0,"433":0,"436":0,"437":0,"438":0,"440":0,"441":0,"443":0,"446":0,"448":0,"449":0,"450":0,"451":0,"452":0,"455":0,"463":0,"468":1,"480":1,"481":0,"483":0,"485":0,"486":0,"487":0,"488":0,"493":1,"494":0,"496":0,"498":0,"499":0,"500":0,"502":0,"503":0,"506":0,"507":0,"508":0,"509":0,"512":0,"513":0,"514":0,"518":0,"519":0,"520":0,"521":0,"524":0,"525":0,"526":0,"533":0,"534":0,"536":0,"537":0,"538":0,"539":0,"542":0,"543":0,"544":0,"549":0,"550":0,"551":0,"553":0,"554":0,"558":1,"575":1,"576":0,"577":0,"578":0,"581":1,"591":1,"592":0,"594":0,"596":0,"597":0,"598":0,"599":0,"604":1,"605":0,"606":0,"607":0,"608":0,"611":0,"612":0,"613":0,"614":0,"617":0,"618":0,"624":1,"634":1,"635":0,"636":0,"637":0,"640":1,"658":1,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"667":0,"670":0,"671":0,"672":0,"673":0,"678":1,"679":0,"680":0,"682":0,"683":0,"684":0,"685":0,"688":0,"692":1,"703":1,"704":0,"706":0,"708":0,"709":0,"710":0,"711":0,"716":1,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"735":0,"736":0,"737":0,"741":1,"766":1,"767":0,"769":0,"770":0,"771":0,"772":0,"773":0,"775":0,"777":0,"778":0,"779":0,"780":0,"785":1,"787":0,"788":0,"790":0,"792":0,"793":0,"795":0,"797":0,"799":0,"801":0,"805":0,"807":0,"809":0,"812":0,"813":0,"815":0,"816":0,"817":0,"819":0,"820":0,"822":0,"828":1,"847":1,"848":0,"850":0,"852":0,"853":0,"857":1,"883":1,"884":0,"886":0,"887":0,"888":0,"889":0,"892":0,"894":0,"895":0,"896":0,"897":0,"902":1,"904":0,"905":0,"908":0,"909":0,"910":0,"913":0,"914":0,"915":0,"916":0,"918":0,"922":0,"923":0,"924":0,"925":0,"926":0,"929":0,"930":0,"931":0,"932":0,"936":0,"939":1,"944":1,"945":0,"947":0,"948":0,"949":0,"952":0,"953":0,"954":0,"957":0,"958":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"974":0,"975":0,"976":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"987":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1022":0,"1023":0,"1024":0,"1025":0,"1028":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1040":0,"1041":0,"1042":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1055":1,"1056":0,"1057":0,"1064":1,"1065":0,"1066":0,"1068":0,"1069":0,"1071":0,"1074":0,"1075":0,"1076":0,"1077":0,"1079":0,"1081":0,"1083":0,"1084":0,"1085":0,"1087":0,"1089":0,"1091":0,"1095":0,"1097":0,"1100":0,"1102":0,"1104":0,"1105":0,"1106":0,"1108":0,"1110":0,"1112":0,"1113":0,"1114":0,"1119":0,"1125":0,"1127":0,"1129":0,"1130":0,"1131":0,"1135":0,"1158":1,"1160":0,"1171":0,"1172":0,"1173":0,"1175":0,"1176":0,"1184":1,"1185":0,"1186":0,"1187":0,"1190":0,"1191":0,"1193":0,"1194":0,"1196":0,"1197":0,"1204":1,"1205":0,"1213":1,"1214":0,"1215":0,"1216":0,"1219":0,"1221":0,"1222":0,"1223":0,"1224":0,"1227":0,"1236":1,"1243":1,"1250":1,"1257":1,"1264":1,"1281":1,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1290":0,"1293":0,"1294":0,"1299":0,"1301":0,"1302":0,"1303":0,"1304":0,"1309":1,"1311":0,"1313":0,"1314":0,"1315":0,"1318":0,"1323":0,"1326":0,"1330":0,"1331":0,"1332":0,"1337":1,"1353":1,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1362":0,"1365":0,"1366":0,"1371":0,"1373":0,"1374":0,"1375":0,"1376":0,"1381":1,"1383":0,"1384":0,"1385":0,"1389":0,"1391":0,"1393":0,"1394":0,"1395":0,"1396":0,"1398":0,"1399":0,"1401":0,"1402":0,"1403":0,"1405":0,"1412":1,"1437":1,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1447":0,"1450":0,"1451":0,"1456":0,"1458":0,"1459":0,"1460":0,"1461":0,"1466":1,"1467":0,"1468":0,"1470":0,"1471":0,"1472":0,"1474":0,"1475":0,"1476":0,"1477":0,"1480":0,"1485":1,"1502":1,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1511":0,"1514":0,"1515":0,"1520":0,"1522":0,"1523":0,"1524":0,"1525":0,"1530":1,"1531":0,"1532":0,"1533":0,"1534":0,"1538":1,"1553":1,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1562":0,"1565":0,"1566":0,"1571":0,"1574":0,"1575":0,"1576":0,"1577":0,"1582":1,"1584":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1613":1,"1618":1,"1620":0,"1621":0,"1623":0,"1630":1,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1643":1,"1645":0,"1646":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":0,"1660":0,"1664":0,"1665":0,"1668":0,"1679":1,"1681":0,"1684":0,"1687":0,"1690":0,"1691":0,"1696":1,"1698":1,"1701":1,"1702":0,"1705":0,"1706":0,"1707":0,"1708":0,"1709":0,"1712":0,"1713":0,"1716":0,"1720":1,"1721":0,"1723":0,"1725":0,"1726":0,"1729":0,"1731":0,"1732":0,"1733":0,"1734":0,"1735":0,"1736":0,"1740":0,"1741":0,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":0,"1755":0,"1759":1,"1760":0,"1761":0,"1762":0,"1763":0,"1766":1,"1767":0,"1768":0,"1770":0,"1771":0,"1772":0,"1773":0,"1774":0,"1775":0,"1779":0,"1781":0,"1782":0,"1784":0,"1788":1,"1789":0,"1790":0,"1791":0,"1792":0,"1793":0,"1794":0,"1795":0,"1797":0,"1798":0,"1799":0,"1800":0,"1801":0,"1806":0,"1807":0,"1808":0,"1951":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs/chunk.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs/chunk.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":1,"84":0,"85":0,"86":1,"87":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":12},"end":{"line":21,"column":54}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":24},"end":{"line":58,"column":49}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":23},"end":{"line":73,"column":40}}},"4":{"name":"(anonymous_4)","line":86,"loc":{"start":{"line":86,"column":28},"end":{"line":86,"column":45}}},"5":{"name":"(anonymous_5)","line":108,"loc":{"start":{"line":108,"column":22},"end":{"line":108,"column":33}}},"6":{"name":"(anonymous_6)","line":119,"loc":{"start":{"line":119,"column":23},"end":{"line":119,"column":34}}},"7":{"name":"(anonymous_7)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":36}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":23},"end":{"line":140,"column":51}}},"9":{"name":"(anonymous_9)","line":147,"loc":{"start":{"line":147,"column":28},"end":{"line":147,"column":54}}},"10":{"name":"(anonymous_10)","line":156,"loc":{"start":{"line":156,"column":28},"end":{"line":156,"column":50}}},"11":{"name":"(anonymous_11)","line":162,"loc":{"start":{"line":162,"column":80},"end":{"line":162,"column":94}}},"12":{"name":"(anonymous_12)","line":191,"loc":{"start":{"line":191,"column":35},"end":{"line":191,"column":54}}},"13":{"name":"(anonymous_13)","line":205,"loc":{"start":{"line":205,"column":25},"end":{"line":205,"column":36}}},"14":{"name":"(anonymous_14)","line":216,"loc":{"start":{"line":216,"column":9},"end":{"line":216,"column":21}}},"15":{"name":"(anonymous_15)","line":219,"loc":{"start":{"line":219,"column":9},"end":{"line":219,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":51}},"2":{"start":{"line":21,"column":0},"end":{"line":48,"column":2}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":67}},"4":{"start":{"line":22,"column":31},"end":{"line":22,"column":67}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":19}},"6":{"start":{"line":25,"column":2},"end":{"line":25,"column":64}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":44}},"8":{"start":{"line":27,"column":2},"end":{"line":27,"column":87}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":73}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"11":{"start":{"line":31,"column":2},"end":{"line":44,"column":3}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":58}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":83}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"15":{"start":{"line":35,"column":9},"end":{"line":44,"column":3}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":54}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":46}},"18":{"start":{"line":38,"column":4},"end":{"line":38,"column":49}},"19":{"start":{"line":39,"column":4},"end":{"line":39,"column":35}},"20":{"start":{"line":40,"column":9},"end":{"line":44,"column":3}},"21":{"start":{"line":41,"column":4},"end":{"line":41,"column":38}},"22":{"start":{"line":42,"column":9},"end":{"line":44,"column":3}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"24":{"start":{"line":47,"column":2},"end":{"line":47,"column":28}},"25":{"start":{"line":58,"column":0},"end":{"line":63,"column":2}},"26":{"start":{"line":59,"column":2},"end":{"line":59,"column":70}},"27":{"start":{"line":60,"column":2},"end":{"line":60,"column":45}},"28":{"start":{"line":61,"column":2},"end":{"line":61,"column":51}},"29":{"start":{"line":61,"column":23},"end":{"line":61,"column":51}},"30":{"start":{"line":62,"column":2},"end":{"line":62,"column":14}},"31":{"start":{"line":73,"column":0},"end":{"line":84,"column":2}},"32":{"start":{"line":75,"column":2},"end":{"line":75,"column":66}},"33":{"start":{"line":77,"column":2},"end":{"line":83,"column":3}},"34":{"start":{"line":78,"column":4},"end":{"line":78,"column":61}},"35":{"start":{"line":79,"column":4},"end":{"line":79,"column":59}},"36":{"start":{"line":80,"column":4},"end":{"line":80,"column":16}},"37":{"start":{"line":82,"column":4},"end":{"line":82,"column":14}},"38":{"start":{"line":86,"column":0},"end":{"line":100,"column":2}},"39":{"start":{"line":87,"column":2},"end":{"line":99,"column":3}},"40":{"start":{"line":88,"column":4},"end":{"line":88,"column":20}},"41":{"start":{"line":89,"column":4},"end":{"line":94,"column":5}},"42":{"start":{"line":90,"column":6},"end":{"line":90,"column":91}},"43":{"start":{"line":92,"column":6},"end":{"line":92,"column":32}},"44":{"start":{"line":93,"column":6},"end":{"line":93,"column":63}},"45":{"start":{"line":95,"column":4},"end":{"line":95,"column":59}},"46":{"start":{"line":96,"column":4},"end":{"line":96,"column":16}},"47":{"start":{"line":98,"column":4},"end":{"line":98,"column":16}},"48":{"start":{"line":108,"column":0},"end":{"line":110,"column":2}},"49":{"start":{"line":109,"column":2},"end":{"line":109,"column":63}},"50":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"51":{"start":{"line":120,"column":2},"end":{"line":120,"column":22}},"52":{"start":{"line":127,"column":0},"end":{"line":130,"column":2}},"53":{"start":{"line":128,"column":2},"end":{"line":128,"column":28}},"54":{"start":{"line":129,"column":2},"end":{"line":129,"column":27}},"55":{"start":{"line":140,"column":0},"end":{"line":171,"column":2}},"56":{"start":{"line":141,"column":2},"end":{"line":141,"column":18}},"57":{"start":{"line":142,"column":2},"end":{"line":145,"column":3}},"58":{"start":{"line":143,"column":4},"end":{"line":143,"column":23}},"59":{"start":{"line":144,"column":4},"end":{"line":144,"column":17}},"60":{"start":{"line":147,"column":2},"end":{"line":170,"column":5}},"61":{"start":{"line":148,"column":4},"end":{"line":148,"column":33}},"62":{"start":{"line":148,"column":12},"end":{"line":148,"column":33}},"63":{"start":{"line":151,"column":4},"end":{"line":151,"column":40}},"64":{"start":{"line":152,"column":4},"end":{"line":152,"column":64}},"65":{"start":{"line":152,"column":29},"end":{"line":152,"column":64}},"66":{"start":{"line":153,"column":4},"end":{"line":153,"column":80}},"67":{"start":{"line":153,"column":35},"end":{"line":153,"column":80}},"68":{"start":{"line":155,"column":4},"end":{"line":168,"column":5}},"69":{"start":{"line":156,"column":6},"end":{"line":165,"column":9}},"70":{"start":{"line":157,"column":8},"end":{"line":157,"column":49}},"71":{"start":{"line":158,"column":8},"end":{"line":160,"column":9}},"72":{"start":{"line":159,"column":10},"end":{"line":159,"column":50}},"73":{"start":{"line":162,"column":8},"end":{"line":164,"column":11}},"74":{"start":{"line":163,"column":10},"end":{"line":163,"column":30}},"75":{"start":{"line":167,"column":6},"end":{"line":167,"column":27}},"76":{"start":{"line":191,"column":0},"end":{"line":200,"column":2}},"77":{"start":{"line":192,"column":2},"end":{"line":195,"column":23}},"78":{"start":{"line":197,"column":2},"end":{"line":197,"column":60}},"79":{"start":{"line":197,"column":28},"end":{"line":197,"column":60}},"80":{"start":{"line":199,"column":2},"end":{"line":199,"column":24}},"81":{"start":{"line":205,"column":0},"end":{"line":207,"column":2}},"82":{"start":{"line":206,"column":2},"end":{"line":206,"column":28}},"83":{"start":{"line":215,"column":0},"end":{"line":222,"column":3}},"84":{"start":{"line":217,"column":6},"end":{"line":217,"column":35}},"85":{"start":{"line":220,"column":6},"end":{"line":220,"column":36}},"86":{"start":{"line":228,"column":0},"end":{"line":228,"column":38}},"87":{"start":{"line":230,"column":0},"end":{"line":230,"column":23}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":47},"end":{"line":25,"column":49}},{"start":{"line":25,"column":52},"end":{"line":25,"column":63}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":22},"end":{"line":26,"column":34}},{"start":{"line":26,"column":38},"end":{"line":26,"column":43}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":49},"end":{"line":27,"column":63}},{"start":{"line":27,"column":66},"end":{"line":27,"column":86}}]},"5":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":50},"end":{"line":28,"column":51}},{"start":{"line":28,"column":54},"end":{"line":28,"column":72}}]},"6":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"7":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":9},"end":{"line":35,"column":9}},{"start":{"line":35,"column":9},"end":{"line":35,"column":9}}]},"8":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":9},"end":{"line":40,"column":9}},{"start":{"line":40,"column":9},"end":{"line":40,"column":9}}]},"9":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":33}},{"start":{"line":40,"column":37},"end":{"line":40,"column":81}}]},"10":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":9}},{"start":{"line":42,"column":9},"end":{"line":42,"column":9}}]},"11":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":51}},{"start":{"line":42,"column":55},"end":{"line":42,"column":87}}]},"12":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"13":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":43},"end":{"line":75,"column":56}},{"start":{"line":75,"column":59},"end":{"line":75,"column":65}}]},"14":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":11},"end":{"line":75,"column":25}},{"start":{"line":75,"column":29},"end":{"line":75,"column":40}}]},"15":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"16":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"17":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"18":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":50},"end":{"line":109,"column":54}},{"start":{"line":109,"column":57},"end":{"line":109,"column":62}}]},"19":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"20":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"21":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"22":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":2},"end":{"line":197,"column":2}},{"start":{"line":197,"column":2},"end":{"line":197,"column":2}}]}},"code":["\"use strict\";","","var Binary = require('mongodb-core').BSON.Binary,","  ObjectID = require('mongodb-core').BSON.ObjectID;","","/**"," * Class for representing a single chunk in GridFS."," *"," * @class"," *"," * @param file {GridStore} The {@link GridStore} object holding this chunk."," * @param mongoObject {object} The mongo object representation of this chunk."," *"," * @throws Error when the type of data field for {@link mongoObject} is not"," *     supported. Currently supported types for data field are instances of"," *     {@link String}, {@link Array}, {@link Binary} and {@link Binary}"," *     from the bson module"," *"," * @see Chunk#buildMongoObject"," */","var Chunk = function(file, mongoObject, writeConcern) {","  if(!(this instanceof Chunk)) return new Chunk(file, mongoObject);","","  this.file = file;","  var mongoObjectFinal = mongoObject == null ? {} : mongoObject;","  this.writeConcern = writeConcern || {w:1};","  this.objectId = mongoObjectFinal._id == null ? new ObjectID() : mongoObjectFinal._id;","  this.chunkNumber = mongoObjectFinal.n == null ? 0 : mongoObjectFinal.n;","  this.data = new Binary();","","  if(typeof mongoObjectFinal.data == \"string\") {","    var buffer = new Buffer(mongoObjectFinal.data.length);","    buffer.write(mongoObjectFinal.data, 0, mongoObjectFinal.data.length, 'binary');","    this.data = new Binary(buffer);","  } else if(Array.isArray(mongoObjectFinal.data)) {","    buffer = new Buffer(mongoObjectFinal.data.length);","    var data = mongoObjectFinal.data.join('');","    buffer.write(data, 0, data.length, 'binary');","    this.data = new Binary(buffer);","  } else if(mongoObjectFinal.data && mongoObjectFinal.data._bsontype === 'Binary') {","    this.data = mongoObjectFinal.data;","  } else if(!Buffer.isBuffer(mongoObjectFinal.data) && !(mongoObjectFinal.data == null)){","    throw Error(\"Illegal chunk format\");","  }","","  // Update position","  this.internalPosition = 0;","};","","/**"," * Writes a data to this object and advance the read/write head."," *"," * @param data {string} the data to write"," * @param callback {function(*, GridStore)} This will be called after executing"," *     this method. The first parameter will contain null and the second one"," *     will contain a reference to this object."," */","Chunk.prototype.write = function(data, callback) {","  this.data.write(data, this.internalPosition, data.length, 'binary');","  this.internalPosition = this.data.length();","  if(callback != null) return callback(null, this);","  return this;","};","","/**"," * Reads data and advances the read/write head."," *"," * @param length {number} The length of data to read."," *"," * @return {string} The data read if the given length will not exceed the end of"," *     the chunk. Returns an empty String otherwise."," */","Chunk.prototype.read = function(length) {","  // Default to full read if no index defined","  length = length == null || length == 0 ? this.length() : length;","","  if(this.length() - this.internalPosition + 1 >= length) {","    var data = this.data.read(this.internalPosition, length);","    this.internalPosition = this.internalPosition + length;","    return data;","  } else {","    return '';","  }","};","","Chunk.prototype.readSlice = function(length) {","  if ((this.length() - this.internalPosition) >= length) {","    var data = null;","    if (this.data.buffer != null) { //Pure BSON","      data = this.data.buffer.slice(this.internalPosition, this.internalPosition + length);","    } else { //Native BSON","      data = new Buffer(length);","      length = this.data.readInto(data, this.internalPosition);","    }","    this.internalPosition = this.internalPosition + length;","    return data;","  } else {","    return null;","  }","};","","/**"," * Checks if the read/write head is at the end."," *"," * @return {boolean} Whether the read/write head has reached the end of this"," *     chunk."," */","Chunk.prototype.eof = function() {","  return this.internalPosition == this.length() ? true : false;","};","","/**"," * Reads one character from the data of this chunk and advances the read/write"," * head."," *"," * @return {string} a single character data read if the the read/write head is"," *     not at the end of the chunk. Returns an empty String otherwise."," */","Chunk.prototype.getc = function() {","  return this.read(1);","};","","/**"," * Clears the contents of the data in this chunk and resets the read/write head"," * to the initial position."," */","Chunk.prototype.rewind = function() {","  this.internalPosition = 0;","  this.data = new Binary();","};","","/**"," * Saves this chunk to the database. Also overwrites existing entries having the"," * same id as this chunk."," *"," * @param callback {function(*, GridStore)} This will be called after executing"," *     this method. The first parameter will contain null and the second one"," *     will contain a reference to this object."," */","Chunk.prototype.save = function(options, callback) {","  var self = this;","  if(typeof options == 'function') {","    callback = options;","    options = {};","  }","","  self.file.chunkCollection(function(err, collection) {","    if(err) return callback(err);","","    // Merge the options","    var writeOptions = { upsert: true };","    for(var name in options) writeOptions[name] = options[name];","    for(name in self.writeConcern) writeOptions[name] = self.writeConcern[name];","","    if(self.data.length() > 0) {","      self.buildMongoObject(function(mongoObject) {","        var options = {forceServerObjectId:true};","        for(var name in self.writeConcern) {","          options[name] = self.writeConcern[name];","        }","","        collection.replaceOne({'_id':self.objectId}, mongoObject, writeOptions, function(err) {","          callback(err, self);","        });","      });","    } else {","      callback(null, self);","    }","    // });","  });","};","","/**"," * Creates a mongoDB object representation of this chunk."," *"," * @param callback {function(Object)} This will be called after executing this"," *     method. The object will be passed to the first parameter and will have"," *     the structure:"," *"," *        <pre><code>"," *        {"," *          '_id' : , // {number} id for this chunk"," *          'files_id' : , // {number} foreign key to the file collection"," *          'n' : , // {number} chunk number"," *          'data' : , // {bson#Binary} the chunk data itself"," *        }"," *        </code></pre>"," *"," * @see <a href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\">MongoDB GridFS Chunk Object Structure</a>"," */","Chunk.prototype.buildMongoObject = function(callback) {","  var mongoObject = {","    'files_id': this.file.fileId,","    'n': this.chunkNumber,","    'data': this.data};","  // If we are saving using a specific ObjectId","  if(this.objectId != null) mongoObject._id = this.objectId;","","  callback(mongoObject);","};","","/**"," * @return {number} the length of the data"," */","Chunk.prototype.length = function() {","  return this.data.length();","};","","/**"," * The position of the read/write head"," * @name position"," * @lends Chunk#"," * @field"," */","Object.defineProperty(Chunk.prototype, \"position\", { enumerable: true","  , get: function () {","      return this.internalPosition;","    }","  , set: function(value) {","      this.internalPosition = value;","    }","});","","/**"," * The default chunk size"," * @constant"," */","Chunk.DEFAULT_CHUNK_SIZE = 1024 * 255;","","module.exports = Chunk;",""],"l":{"3":1,"21":1,"22":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"47":0,"58":1,"59":0,"60":0,"61":0,"62":0,"73":1,"75":0,"77":0,"78":0,"79":0,"80":0,"82":0,"86":1,"87":0,"88":0,"89":0,"90":0,"92":0,"93":0,"95":0,"96":0,"98":0,"108":1,"109":0,"119":1,"120":0,"127":1,"128":0,"129":0,"140":1,"141":0,"142":0,"143":0,"144":0,"147":0,"148":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"159":0,"162":0,"163":0,"167":0,"191":1,"192":0,"197":0,"199":0,"205":1,"206":0,"215":1,"217":0,"220":0,"228":1,"230":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/collection.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":1,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":1,"191":1,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":1,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":1,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":1,"308":1,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":1,"317":1,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":1,"348":1,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":1,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":1,"380":1,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":1,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":1,"411":1,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":1,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":1,"453":1,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":1,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":1,"481":1,"482":1,"483":1,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":1,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":1,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":1,"538":1,"539":1,"540":1,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":1,"553":1,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":1,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":1,"582":1,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":1,"596":0,"597":0,"598":0,"599":0,"600":0,"601":1,"602":1,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":1,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":1,"630":1,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":1,"643":1,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":1,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":1,"660":1,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":1,"670":0,"671":0,"672":0,"673":0,"674":1,"675":1,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":1,"692":0,"693":1,"694":1,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":1,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":1,"715":1,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":1,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":1,"740":1,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":1,"753":0,"754":0,"755":0,"756":0,"757":1,"758":1,"759":1,"760":1,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":1,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":1,"781":1,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":1,"804":1,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":1,"817":0,"818":1,"819":1,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":1,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":1,"839":1,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":1,"854":0,"855":1,"856":1,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":1,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":1,"897":1,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":1,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":1,"929":1,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":1,"939":0,"940":1,"941":1,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":1,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":1,"963":1,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":1,"979":0,"980":0,"981":0,"982":0,"983":1,"984":1,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":1,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":1,"1009":1,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":1,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":1,"1034":1,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":1,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":1,"1082":1,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":1,"1098":0,"1099":0,"1100":1,"1101":1,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":1,"1108":0,"1109":0,"1110":0,"1111":0,"1112":1,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":1,"1175":1,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":1,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":1,"1211":1,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":1,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":1,"1241":1,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":1,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":1,"1269":1,"1270":1,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":1,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":1,"1329":1,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":1,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":1,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":1,"1406":1,"1407":0,"1408":0,"1409":0,"1410":1,"1411":1,"1412":0,"1413":0,"1414":0,"1415":1,"1416":1,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":1,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":1,"1451":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0],"345":[0,0],"346":[0,0],"347":[0,0],"348":[0,0],"349":[0,0],"350":[0,0],"351":[0,0],"352":[0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0],"363":[0,0],"364":[0,0],"365":[0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0],"375":[0,0],"376":[0,0],"377":[0,0],"378":[0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0],"426":[0,0],"427":[0,0],"428":[0,0],"429":[0,0],"430":[0,0],"431":[0,0,0,0,0,0,0],"432":[0,0],"433":[0,0],"434":[0,0],"435":[0,0],"436":[0,0],"437":[0,0],"438":[0,0],"439":[0,0],"440":[0,0],"441":[0,0],"442":[0,0],"443":[0,0],"444":[0,0],"445":[0,0],"446":[0,0],"447":[0,0],"448":[0,0],"449":[0,0],"450":[0,0],"451":[0,0],"452":[0,0],"453":[0,0],"454":[0,0],"455":[0,0],"456":[0,0],"457":[0,0],"458":[0,0],"459":[0,0],"460":[0,0],"461":[0,0],"462":[0,0],"463":[0,0],"464":[0,0],"465":[0,0],"466":[0,0],"467":[0,0],"468":[0,0],"469":[0,0],"470":[0,0],"471":[0,0],"472":[0,0],"473":[0,0],"474":[0,0],"475":[0,0],"476":[0,0],"477":[0,0],"478":[0,0],"479":[0,0],"480":[0,0],"481":[0,0],"482":[0,0],"483":[0,0],"484":[0,0],"485":[0,0],"486":[0,0],"487":[0,0],"488":[0,0],"489":[0,0],"490":[0,0],"491":[0,0],"492":[0,0],"493":[0,0],"494":[0,0],"495":[0,0],"496":[0,0],"497":[0,0],"498":[0,0,0,0],"499":[0,0],"500":[0,0],"501":[0,0],"502":[0,0],"503":[0,0],"504":[0,0],"505":[0,0],"506":[0,0],"507":[0,0],"508":[0,0],"509":[0,0,0],"510":[0,0],"511":[0,0],"512":[0,0],"513":[0,0],"514":[0,0],"515":[0,0],"516":[0,0],"517":[0,0],"518":[0,0],"519":[0,0],"520":[0,0],"521":[0,0],"522":[0,0],"523":[0,0],"524":[0,0],"525":[0,0],"526":[0,0],"527":[0,0],"528":[0,0],"529":[0,0],"530":[0,0],"531":[0,0],"532":[0,0,0,0,0],"533":[0,0],"534":[0,0],"535":[0,0],"536":[0,0],"537":[0,0,0],"538":[0,0],"539":[0,0],"540":[0,0],"541":[0,0],"542":[0,0],"543":[0,0],"544":[0,0],"545":[0,0],"546":[0,0],"547":[0,0],"548":[0,0],"549":[0,0],"550":[0,0],"551":[0,0,0],"552":[0,0],"553":[0,0],"554":[0,0],"555":[0,0],"556":[0,0],"557":[0,0,0],"558":[0,0],"559":[0,0,0],"560":[0,0],"561":[0,0],"562":[0,0],"563":[0,0],"564":[0,0],"565":[0,0],"566":[0,0,0],"567":[0,0],"568":[0,0],"569":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0},"fnMap":{"1":{"name":"(anonymous_1)","line":60,"loc":{"start":{"line":60,"column":17},"end":{"line":60,"column":74}}},"2":{"name":"(anonymous_2)","line":140,"loc":{"start":{"line":140,"column":25},"end":{"line":140,"column":36}}},"3":{"name":"(anonymous_3)","line":144,"loc":{"start":{"line":144,"column":25},"end":{"line":144,"column":36}}},"4":{"name":"(anonymous_4)","line":148,"loc":{"start":{"line":148,"column":25},"end":{"line":148,"column":36}}},"5":{"name":"(anonymous_5)","line":153,"loc":{"start":{"line":153,"column":7},"end":{"line":153,"column":18}}},"6":{"name":"(anonymous_6)","line":168,"loc":{"start":{"line":168,"column":9},"end":{"line":168,"column":21}}},"7":{"name":"(anonymous_7)","line":169,"loc":{"start":{"line":169,"column":9},"end":{"line":169,"column":22}}},"8":{"name":"(anonymous_8)","line":179,"loc":{"start":{"line":179,"column":28},"end":{"line":179,"column":39}}},"9":{"name":"(anonymous_9)","line":328,"loc":{"start":{"line":328,"column":21},"end":{"line":328,"column":38}}},"10":{"name":"(anonymous_10)","line":398,"loc":{"start":{"line":398,"column":33},"end":{"line":398,"column":66}}},"11":{"name":"(anonymous_11)","line":405,"loc":{"start":{"line":405,"column":37},"end":{"line":405,"column":63}}},"12":{"name":"(anonymous_12)","line":420,"loc":{"start":{"line":420,"column":35},"end":{"line":420,"column":61}}},"13":{"name":"(anonymous_13)","line":421,"loc":{"start":{"line":421,"column":34},"end":{"line":421,"column":51}}},"14":{"name":"(anonymous_14)","line":428,"loc":{"start":{"line":428,"column":16},"end":{"line":428,"column":55}}},"15":{"name":"(anonymous_15)","line":429,"loc":{"start":{"line":429,"column":40},"end":{"line":429,"column":57}}},"16":{"name":"(anonymous_16)","line":441,"loc":{"start":{"line":441,"column":26},"end":{"line":441,"column":44}}},"17":{"name":"(anonymous_17)","line":486,"loc":{"start":{"line":486,"column":34},"end":{"line":486,"column":68}}},"18":{"name":"(anonymous_18)","line":493,"loc":{"start":{"line":493,"column":37},"end":{"line":493,"column":63}}},"19":{"name":"(anonymous_19)","line":524,"loc":{"start":{"line":524,"column":80},"end":{"line":524,"column":97}}},"20":{"name":"(anonymous_20)","line":530,"loc":{"start":{"line":530,"column":35},"end":{"line":530,"column":61}}},"21":{"name":"(anonymous_21)","line":531,"loc":{"start":{"line":531,"column":41},"end":{"line":531,"column":58}}},"22":{"name":"(anonymous_22)","line":592,"loc":{"start":{"line":592,"column":33},"end":{"line":592,"column":73}}},"23":{"name":"(anonymous_23)","line":605,"loc":{"start":{"line":605,"column":35},"end":{"line":605,"column":61}}},"24":{"name":"(anonymous_24)","line":606,"loc":{"start":{"line":606,"column":41},"end":{"line":606,"column":58}}},"25":{"name":"(anonymous_25)","line":613,"loc":{"start":{"line":613,"column":16},"end":{"line":613,"column":62}}},"26":{"name":"(anonymous_26)","line":654,"loc":{"start":{"line":654,"column":25},"end":{"line":654,"column":42}}},"27":{"name":"(anonymous_27)","line":708,"loc":{"start":{"line":708,"column":22},"end":{"line":708,"column":62}}},"28":{"name":"(anonymous_28)","line":734,"loc":{"start":{"line":734,"column":63},"end":{"line":734,"column":85}}},"29":{"name":"(anonymous_29)","line":817,"loc":{"start":{"line":817,"column":30},"end":{"line":817,"column":64}}},"30":{"name":"(anonymous_30)","line":866,"loc":{"start":{"line":866,"column":33},"end":{"line":866,"column":77}}},"31":{"name":"(anonymous_31)","line":881,"loc":{"start":{"line":881,"column":35},"end":{"line":881,"column":61}}},"32":{"name":"(anonymous_32)","line":882,"loc":{"start":{"line":882,"column":45},"end":{"line":882,"column":62}}},"33":{"name":"(anonymous_33)","line":889,"loc":{"start":{"line":889,"column":16},"end":{"line":889,"column":66}}},"34":{"name":"(anonymous_34)","line":893,"loc":{"start":{"line":893,"column":49},"end":{"line":893,"column":66}}},"35":{"name":"(anonymous_35)","line":921,"loc":{"start":{"line":921,"column":34},"end":{"line":921,"column":75}}},"36":{"name":"(anonymous_36)","line":936,"loc":{"start":{"line":936,"column":35},"end":{"line":936,"column":61}}},"37":{"name":"(anonymous_37)","line":937,"loc":{"start":{"line":937,"column":43},"end":{"line":937,"column":60}}},"38":{"name":"(anonymous_38)","line":944,"loc":{"start":{"line":944,"column":17},"end":{"line":944,"column":64}}},"39":{"name":"(anonymous_39)","line":949,"loc":{"start":{"line":949,"column":46},"end":{"line":949,"column":63}}},"40":{"name":"(anonymous_40)","line":978,"loc":{"start":{"line":978,"column":34},"end":{"line":978,"column":78}}},"41":{"name":"(anonymous_41)","line":993,"loc":{"start":{"line":993,"column":35},"end":{"line":993,"column":61}}},"42":{"name":"(anonymous_42)","line":994,"loc":{"start":{"line":994,"column":46},"end":{"line":994,"column":63}}},"43":{"name":"(anonymous_43)","line":1001,"loc":{"start":{"line":1001,"column":17},"end":{"line":1001,"column":67}}},"44":{"name":"(anonymous_44)","line":1005,"loc":{"start":{"line":1005,"column":49},"end":{"line":1005,"column":66}}},"45":{"name":"(anonymous_45)","line":1019,"loc":{"start":{"line":1019,"column":22},"end":{"line":1019,"column":76}}},"46":{"name":"(anonymous_46)","line":1045,"loc":{"start":{"line":1045,"column":63},"end":{"line":1045,"column":85}}},"47":{"name":"(anonymous_47)","line":1074,"loc":{"start":{"line":1074,"column":30},"end":{"line":1074,"column":78}}},"48":{"name":"(anonymous_48)","line":1087,"loc":{"start":{"line":1087,"column":35},"end":{"line":1087,"column":61}}},"49":{"name":"(anonymous_49)","line":1088,"loc":{"start":{"line":1088,"column":55},"end":{"line":1088,"column":72}}},"50":{"name":"(anonymous_50)","line":1124,"loc":{"start":{"line":1124,"column":33},"end":{"line":1124,"column":69}}},"51":{"name":"(anonymous_51)","line":1139,"loc":{"start":{"line":1139,"column":35},"end":{"line":1139,"column":61}}},"52":{"name":"(anonymous_52)","line":1140,"loc":{"start":{"line":1140,"column":37},"end":{"line":1140,"column":54}}},"53":{"name":"(anonymous_53)","line":1147,"loc":{"start":{"line":1147,"column":16},"end":{"line":1147,"column":58}}},"54":{"name":"(anonymous_54)","line":1149,"loc":{"start":{"line":1149,"column":41},"end":{"line":1149,"column":58}}},"55":{"name":"(anonymous_55)","line":1175,"loc":{"start":{"line":1175,"column":34},"end":{"line":1175,"column":70}}},"56":{"name":"(anonymous_56)","line":1190,"loc":{"start":{"line":1190,"column":35},"end":{"line":1190,"column":61}}},"57":{"name":"(anonymous_57)","line":1191,"loc":{"start":{"line":1191,"column":38},"end":{"line":1191,"column":55}}},"58":{"name":"(anonymous_58)","line":1198,"loc":{"start":{"line":1198,"column":17},"end":{"line":1198,"column":59}}},"59":{"name":"(anonymous_59)","line":1201,"loc":{"start":{"line":1201,"column":41},"end":{"line":1201,"column":58}}},"60":{"name":"(anonymous_60)","line":1210,"loc":{"start":{"line":1210,"column":22},"end":{"line":1210,"column":66}}},"61":{"name":"(anonymous_61)","line":1236,"loc":{"start":{"line":1236,"column":63},"end":{"line":1236,"column":85}}},"62":{"name":"(anonymous_62)","line":1266,"loc":{"start":{"line":1266,"column":30},"end":{"line":1266,"column":68}}},"63":{"name":"(anonymous_63)","line":1279,"loc":{"start":{"line":1279,"column":35},"end":{"line":1279,"column":61}}},"64":{"name":"(anonymous_64)","line":1280,"loc":{"start":{"line":1280,"column":45},"end":{"line":1280,"column":62}}},"65":{"name":"(anonymous_65)","line":1302,"loc":{"start":{"line":1302,"column":28},"end":{"line":1302,"column":61}}},"66":{"name":"(anonymous_66)","line":1317,"loc":{"start":{"line":1317,"column":35},"end":{"line":1317,"column":61}}},"67":{"name":"(anonymous_67)","line":1318,"loc":{"start":{"line":1318,"column":29},"end":{"line":1318,"column":46}}},"68":{"name":"(anonymous_68)","line":1325,"loc":{"start":{"line":1325,"column":11},"end":{"line":1325,"column":50}}},"69":{"name":"(anonymous_69)","line":1335,"loc":{"start":{"line":1335,"column":40},"end":{"line":1335,"column":57}}},"70":{"name":"(anonymous_70)","line":1384,"loc":{"start":{"line":1384,"column":31},"end":{"line":1384,"column":42}}},"71":{"name":"(anonymous_71)","line":1394,"loc":{"start":{"line":1394,"column":35},"end":{"line":1394,"column":61}}},"72":{"name":"(anonymous_72)","line":1395,"loc":{"start":{"line":1395,"column":24},"end":{"line":1395,"column":41}}},"73":{"name":"(anonymous_73)","line":1402,"loc":{"start":{"line":1402,"column":14},"end":{"line":1402,"column":45}}},"74":{"name":"(anonymous_74)","line":1405,"loc":{"start":{"line":1405,"column":14},"end":{"line":1405,"column":34}}},"75":{"name":"(anonymous_75)","line":1430,"loc":{"start":{"line":1430,"column":30},"end":{"line":1430,"column":63}}},"76":{"name":"(anonymous_76)","line":1439,"loc":{"start":{"line":1439,"column":35},"end":{"line":1439,"column":61}}},"77":{"name":"(anonymous_77)","line":1440,"loc":{"start":{"line":1440,"column":31},"end":{"line":1440,"column":48}}},"78":{"name":"(anonymous_78)","line":1447,"loc":{"start":{"line":1447,"column":13},"end":{"line":1447,"column":52}}},"79":{"name":"(anonymous_79)","line":1460,"loc":{"start":{"line":1460,"column":38},"end":{"line":1460,"column":57}}},"80":{"name":"(anonymous_80)","line":1482,"loc":{"start":{"line":1482,"column":28},"end":{"line":1482,"column":56}}},"81":{"name":"(anonymous_81)","line":1490,"loc":{"start":{"line":1490,"column":35},"end":{"line":1490,"column":61}}},"82":{"name":"(anonymous_82)","line":1491,"loc":{"start":{"line":1491,"column":51},"end":{"line":1491,"column":68}}},"83":{"name":"(anonymous_83)","line":1507,"loc":{"start":{"line":1507,"column":31},"end":{"line":1507,"column":50}}},"84":{"name":"(anonymous_84)","line":1514,"loc":{"start":{"line":1514,"column":35},"end":{"line":1514,"column":61}}},"85":{"name":"(anonymous_85)","line":1515,"loc":{"start":{"line":1515,"column":18},"end":{"line":1515,"column":35}}},"86":{"name":"(anonymous_86)","line":1522,"loc":{"start":{"line":1522,"column":14},"end":{"line":1522,"column":39}}},"87":{"name":"(anonymous_87)","line":1523,"loc":{"start":{"line":1523,"column":57},"end":{"line":1523,"column":84}}},"88":{"name":"(anonymous_88)","line":1542,"loc":{"start":{"line":1542,"column":32},"end":{"line":1542,"column":51}}},"89":{"name":"(anonymous_89)","line":1549,"loc":{"start":{"line":1549,"column":35},"end":{"line":1549,"column":61}}},"90":{"name":"(anonymous_90)","line":1550,"loc":{"start":{"line":1550,"column":19},"end":{"line":1550,"column":36}}},"91":{"name":"(anonymous_91)","line":1557,"loc":{"start":{"line":1557,"column":15},"end":{"line":1557,"column":40}}},"92":{"name":"(anonymous_92)","line":1558,"loc":{"start":{"line":1558,"column":15},"end":{"line":1558,"column":39}}},"93":{"name":"(anonymous_93)","line":1588,"loc":{"start":{"line":1588,"column":35},"end":{"line":1588,"column":76}}},"94":{"name":"(anonymous_94)","line":1601,"loc":{"start":{"line":1601,"column":35},"end":{"line":1601,"column":61}}},"95":{"name":"(anonymous_95)","line":1602,"loc":{"start":{"line":1602,"column":44},"end":{"line":1602,"column":61}}},"96":{"name":"(anonymous_96)","line":1609,"loc":{"start":{"line":1609,"column":18},"end":{"line":1609,"column":65}}},"97":{"name":"(anonymous_97)","line":1624,"loc":{"start":{"line":1624,"column":37},"end":{"line":1624,"column":68}}},"98":{"name":"(anonymous_98)","line":1631,"loc":{"start":{"line":1631,"column":35},"end":{"line":1631,"column":61}}},"99":{"name":"(anonymous_99)","line":1632,"loc":{"start":{"line":1632,"column":36},"end":{"line":1632,"column":53}}},"100":{"name":"(anonymous_100)","line":1639,"loc":{"start":{"line":1639,"column":20},"end":{"line":1639,"column":57}}},"101":{"name":"(anonymous_101)","line":1680,"loc":{"start":{"line":1680,"column":33},"end":{"line":1680,"column":72}}},"102":{"name":"(anonymous_102)","line":1693,"loc":{"start":{"line":1693,"column":35},"end":{"line":1693,"column":61}}},"103":{"name":"(anonymous_103)","line":1694,"loc":{"start":{"line":1694,"column":40},"end":{"line":1694,"column":57}}},"104":{"name":"(anonymous_104)","line":1701,"loc":{"start":{"line":1701,"column":16},"end":{"line":1701,"column":61}}},"105":{"name":"(anonymous_105)","line":1709,"loc":{"start":{"line":1709,"column":34},"end":{"line":1709,"column":56}}},"106":{"name":"(anonymous_106)","line":1724,"loc":{"start":{"line":1724,"column":35},"end":{"line":1724,"column":63}}},"107":{"name":"(anonymous_107)","line":1735,"loc":{"start":{"line":1735,"column":35},"end":{"line":1735,"column":61}}},"108":{"name":"(anonymous_108)","line":1736,"loc":{"start":{"line":1736,"column":22},"end":{"line":1736,"column":39}}},"109":{"name":"(anonymous_109)","line":1743,"loc":{"start":{"line":1743,"column":18},"end":{"line":1743,"column":52}}},"110":{"name":"(anonymous_110)","line":1744,"loc":{"start":{"line":1744,"column":31},"end":{"line":1744,"column":45}}},"111":{"name":"(anonymous_111)","line":1770,"loc":{"start":{"line":1770,"column":31},"end":{"line":1770,"column":59}}},"112":{"name":"(anonymous_112)","line":1779,"loc":{"start":{"line":1779,"column":35},"end":{"line":1779,"column":61}}},"113":{"name":"(anonymous_113)","line":1780,"loc":{"start":{"line":1780,"column":27},"end":{"line":1780,"column":44}}},"114":{"name":"(anonymous_114)","line":1787,"loc":{"start":{"line":1787,"column":14},"end":{"line":1787,"column":48}}},"115":{"name":"(anonymous_115)","line":1792,"loc":{"start":{"line":1792,"column":34},"end":{"line":1792,"column":56}}},"116":{"name":"(anonymous_116)","line":1810,"loc":{"start":{"line":1810,"column":35},"end":{"line":1810,"column":53}}},"117":{"name":"(anonymous_117)","line":1875,"loc":{"start":{"line":1875,"column":35},"end":{"line":1875,"column":76}}},"118":{"name":"(anonymous_118)","line":1884,"loc":{"start":{"line":1884,"column":35},"end":{"line":1884,"column":61}}},"119":{"name":"(anonymous_119)","line":1885,"loc":{"start":{"line":1885,"column":44},"end":{"line":1885,"column":61}}},"120":{"name":"(anonymous_120)","line":1892,"loc":{"start":{"line":1892,"column":18},"end":{"line":1892,"column":65}}},"121":{"name":"(anonymous_121)","line":1905,"loc":{"start":{"line":1905,"column":35},"end":{"line":1905,"column":63}}},"122":{"name":"(anonymous_122)","line":1912,"loc":{"start":{"line":1912,"column":35},"end":{"line":1912,"column":61}}},"123":{"name":"(anonymous_123)","line":1913,"loc":{"start":{"line":1913,"column":31},"end":{"line":1913,"column":48}}},"124":{"name":"(anonymous_124)","line":1920,"loc":{"start":{"line":1920,"column":18},"end":{"line":1920,"column":52}}},"125":{"name":"(anonymous_125)","line":1921,"loc":{"start":{"line":1921,"column":24},"end":{"line":1921,"column":56}}},"126":{"name":"(anonymous_126)","line":1948,"loc":{"start":{"line":1948,"column":40},"end":{"line":1948,"column":68}}},"127":{"name":"(anonymous_127)","line":1960,"loc":{"start":{"line":1960,"column":35},"end":{"line":1960,"column":61}}},"128":{"name":"(anonymous_128)","line":1961,"loc":{"start":{"line":1961,"column":36},"end":{"line":1961,"column":53}}},"129":{"name":"(anonymous_129)","line":1968,"loc":{"start":{"line":1968,"column":23},"end":{"line":1968,"column":57}}},"130":{"name":"(anonymous_130)","line":1994,"loc":{"start":{"line":1994,"column":29},"end":{"line":1994,"column":64}}},"131":{"name":"(anonymous_131)","line":2010,"loc":{"start":{"line":2010,"column":35},"end":{"line":2010,"column":61}}},"132":{"name":"(anonymous_132)","line":2011,"loc":{"start":{"line":2011,"column":32},"end":{"line":2011,"column":49}}},"133":{"name":"(anonymous_133)","line":2018,"loc":{"start":{"line":2018,"column":12},"end":{"line":2018,"column":53}}},"134":{"name":"(anonymous_134)","line":2048,"loc":{"start":{"line":2048,"column":34},"end":{"line":2048,"column":56}}},"135":{"name":"(anonymous_135)","line":2067,"loc":{"start":{"line":2067,"column":32},"end":{"line":2067,"column":72}}},"136":{"name":"(anonymous_136)","line":2083,"loc":{"start":{"line":2083,"column":35},"end":{"line":2083,"column":61}}},"137":{"name":"(anonymous_137)","line":2084,"loc":{"start":{"line":2084,"column":40},"end":{"line":2084,"column":57}}},"138":{"name":"(anonymous_138)","line":2091,"loc":{"start":{"line":2091,"column":15},"end":{"line":2091,"column":61}}},"139":{"name":"(anonymous_139)","line":2117,"loc":{"start":{"line":2117,"column":34},"end":{"line":2117,"column":56}}},"140":{"name":"(anonymous_140)","line":2131,"loc":{"start":{"line":2131,"column":31},"end":{"line":2131,"column":50}}},"141":{"name":"(anonymous_141)","line":2137,"loc":{"start":{"line":2137,"column":35},"end":{"line":2137,"column":61}}},"142":{"name":"(anonymous_142)","line":2138,"loc":{"start":{"line":2138,"column":18},"end":{"line":2138,"column":35}}},"143":{"name":"(anonymous_143)","line":2145,"loc":{"start":{"line":2145,"column":14},"end":{"line":2145,"column":39}}},"144":{"name":"(anonymous_144)","line":2160,"loc":{"start":{"line":2160,"column":29},"end":{"line":2160,"column":57}}},"145":{"name":"(anonymous_145)","line":2172,"loc":{"start":{"line":2172,"column":35},"end":{"line":2172,"column":61}}},"146":{"name":"(anonymous_146)","line":2173,"loc":{"start":{"line":2173,"column":25},"end":{"line":2173,"column":42}}},"147":{"name":"(anonymous_147)","line":2180,"loc":{"start":{"line":2180,"column":12},"end":{"line":2180,"column":46}}},"148":{"name":"(anonymous_148)","line":2225,"loc":{"start":{"line":2225,"column":40},"end":{"line":2225,"column":76}}},"149":{"name":"(anonymous_149)","line":2237,"loc":{"start":{"line":2237,"column":35},"end":{"line":2237,"column":61}}},"150":{"name":"(anonymous_150)","line":2240,"loc":{"start":{"line":2240,"column":44},"end":{"line":2240,"column":61}}},"151":{"name":"(anonymous_151)","line":2247,"loc":{"start":{"line":2247,"column":23},"end":{"line":2247,"column":65}}},"152":{"name":"(anonymous_152)","line":2279,"loc":{"start":{"line":2279,"column":41},"end":{"line":2279,"column":90}}},"153":{"name":"(anonymous_153)","line":2292,"loc":{"start":{"line":2292,"column":35},"end":{"line":2292,"column":61}}},"154":{"name":"(anonymous_154)","line":2295,"loc":{"start":{"line":2295,"column":58},"end":{"line":2295,"column":75}}},"155":{"name":"(anonymous_155)","line":2302,"loc":{"start":{"line":2302,"column":24},"end":{"line":2302,"column":79}}},"156":{"name":"(anonymous_156)","line":2337,"loc":{"start":{"line":2337,"column":40},"end":{"line":2337,"column":84}}},"157":{"name":"(anonymous_157)","line":2350,"loc":{"start":{"line":2350,"column":35},"end":{"line":2350,"column":61}}},"158":{"name":"(anonymous_158)","line":2353,"loc":{"start":{"line":2353,"column":52},"end":{"line":2353,"column":69}}},"159":{"name":"(anonymous_159)","line":2360,"loc":{"start":{"line":2360,"column":23},"end":{"line":2360,"column":73}}},"160":{"name":"(anonymous_160)","line":2398,"loc":{"start":{"line":2398,"column":37},"end":{"line":2398,"column":83}}},"161":{"name":"(anonymous_161)","line":2416,"loc":{"start":{"line":2416,"column":35},"end":{"line":2416,"column":61}}},"162":{"name":"(anonymous_162)","line":2419,"loc":{"start":{"line":2419,"column":51},"end":{"line":2419,"column":68}}},"163":{"name":"(anonymous_163)","line":2426,"loc":{"start":{"line":2426,"column":20},"end":{"line":2426,"column":72}}},"164":{"name":"(anonymous_164)","line":2482,"loc":{"start":{"line":2482,"column":15},"end":{"line":2482,"column":37}}},"165":{"name":"(anonymous_165)","line":2503,"loc":{"start":{"line":2503,"column":37},"end":{"line":2503,"column":78}}},"166":{"name":"(anonymous_166)","line":2515,"loc":{"start":{"line":2515,"column":35},"end":{"line":2515,"column":61}}},"167":{"name":"(anonymous_167)","line":2516,"loc":{"start":{"line":2516,"column":46},"end":{"line":2516,"column":63}}},"168":{"name":"(anonymous_168)","line":2523,"loc":{"start":{"line":2523,"column":20},"end":{"line":2523,"column":67}}},"169":{"name":"decorateWithWriteConcern","line":2532,"loc":{"start":{"line":2532,"column":0},"end":{"line":2532,"column":58}}},"170":{"name":"decorateWithCollation","line":2546,"loc":{"start":{"line":2546,"column":0},"end":{"line":2546,"column":55}}},"171":{"name":"(anonymous_171)","line":2577,"loc":{"start":{"line":2577,"column":33},"end":{"line":2577,"column":71}}},"172":{"name":"(anonymous_172)","line":2685,"loc":{"start":{"line":2685,"column":38},"end":{"line":2685,"column":60}}},"173":{"name":"(anonymous_173)","line":2721,"loc":{"start":{"line":2721,"column":46},"end":{"line":2721,"column":74}}},"174":{"name":"(anonymous_174)","line":2739,"loc":{"start":{"line":2739,"column":35},"end":{"line":2739,"column":61}}},"175":{"name":"(anonymous_175)","line":2740,"loc":{"start":{"line":2740,"column":42},"end":{"line":2740,"column":59}}},"176":{"name":"(anonymous_176)","line":2747,"loc":{"start":{"line":2747,"column":29},"end":{"line":2747,"column":63}}},"177":{"name":"(anonymous_177)","line":2764,"loc":{"start":{"line":2764,"column":44},"end":{"line":2764,"column":66}}},"178":{"name":"(anonymous_178)","line":2805,"loc":{"start":{"line":2805,"column":31},"end":{"line":2805,"column":65}}},"179":{"name":"(anonymous_179)","line":2819,"loc":{"start":{"line":2819,"column":35},"end":{"line":2819,"column":61}}},"180":{"name":"(anonymous_180)","line":2820,"loc":{"start":{"line":2820,"column":40},"end":{"line":2820,"column":57}}},"181":{"name":"(anonymous_181)","line":2827,"loc":{"start":{"line":2827,"column":14},"end":{"line":2827,"column":61}}},"182":{"name":"(anonymous_182)","line":2858,"loc":{"start":{"line":2858,"column":44},"end":{"line":2858,"column":64}}},"183":{"name":"(anonymous_183)","line":2883,"loc":{"start":{"line":2883,"column":41},"end":{"line":2883,"column":75}}},"184":{"name":"(anonymous_184)","line":2895,"loc":{"start":{"line":2895,"column":35},"end":{"line":2895,"column":61}}},"185":{"name":"(anonymous_185)","line":2896,"loc":{"start":{"line":2896,"column":43},"end":{"line":2896,"column":60}}},"186":{"name":"(anonymous_186)","line":2903,"loc":{"start":{"line":2903,"column":24},"end":{"line":2903,"column":64}}},"187":{"name":"(anonymous_187)","line":2923,"loc":{"start":{"line":2923,"column":44},"end":{"line":2923,"column":64}}},"188":{"name":"(anonymous_188)","line":2982,"loc":{"start":{"line":2982,"column":29},"end":{"line":2982,"column":110}}},"189":{"name":"(anonymous_189)","line":3017,"loc":{"start":{"line":3017,"column":35},"end":{"line":3017,"column":61}}},"190":{"name":"(anonymous_190)","line":3018,"loc":{"start":{"line":3018,"column":78},"end":{"line":3018,"column":95}}},"191":{"name":"(anonymous_191)","line":3025,"loc":{"start":{"line":3025,"column":12},"end":{"line":3025,"column":99}}},"192":{"name":"(anonymous_192)","line":3051,"loc":{"start":{"line":3051,"column":19},"end":{"line":3051,"column":34}}},"193":{"name":"(anonymous_193)","line":3070,"loc":{"start":{"line":3070,"column":41},"end":{"line":3070,"column":63}}},"194":{"name":"(anonymous_194)","line":3088,"loc":{"start":{"line":3088,"column":45},"end":{"line":3088,"column":69}}},"195":{"name":"processScope","line":3102,"loc":{"start":{"line":3102,"column":0},"end":{"line":3102,"column":30}}},"196":{"name":"(anonymous_196)","line":3146,"loc":{"start":{"line":3146,"column":33},"end":{"line":3146,"column":74}}},"197":{"name":"(anonymous_197)","line":3170,"loc":{"start":{"line":3170,"column":35},"end":{"line":3170,"column":61}}},"198":{"name":"(anonymous_198)","line":3171,"loc":{"start":{"line":3171,"column":42},"end":{"line":3171,"column":63}}},"199":{"name":"(anonymous_199)","line":3179,"loc":{"start":{"line":3179,"column":16},"end":{"line":3179,"column":63}}},"200":{"name":"(anonymous_200)","line":3226,"loc":{"start":{"line":3226,"column":77},"end":{"line":3226,"column":100}}},"201":{"name":"(anonymous_201)","line":3283,"loc":{"start":{"line":3283,"column":49},"end":{"line":3283,"column":67}}},"202":{"name":"(anonymous_202)","line":3302,"loc":{"start":{"line":3302,"column":47},"end":{"line":3302,"column":65}}},"203":{"name":"(anonymous_203)","line":3311,"loc":{"start":{"line":3311,"column":19},"end":{"line":3311,"column":54}}},"204":{"name":"(anonymous_204)","line":3329,"loc":{"start":{"line":3329,"column":24},"end":{"line":3329,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":25,"column":51}},"2":{"start":{"line":60,"column":0},"end":{"line":135,"column":1}},"3":{"start":{"line":61,"column":2},"end":{"line":61,"column":28}},"4":{"start":{"line":64,"column":2},"end":{"line":64,"column":26}},"5":{"start":{"line":65,"column":2},"end":{"line":65,"column":90}},"6":{"start":{"line":66,"column":2},"end":{"line":66,"column":144}},"7":{"start":{"line":67,"column":2},"end":{"line":67,"column":84}},"8":{"start":{"line":68,"column":2},"end":{"line":68,"column":120}},"9":{"start":{"line":69,"column":2},"end":{"line":69,"column":124}},"10":{"start":{"line":70,"column":2},"end":{"line":70,"column":128}},"11":{"start":{"line":71,"column":2},"end":{"line":71,"column":28}},"12":{"start":{"line":72,"column":2},"end":{"line":72,"column":28}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":43}},"14":{"start":{"line":76,"column":2},"end":{"line":76,"column":46}},"15":{"start":{"line":79,"column":2},"end":{"line":82,"column":3}},"16":{"start":{"line":80,"column":4},"end":{"line":81,"column":54}},"17":{"start":{"line":85,"column":2},"end":{"line":89,"column":3}},"18":{"start":{"line":86,"column":4},"end":{"line":86,"column":44}},"19":{"start":{"line":87,"column":9},"end":{"line":89,"column":3}},"20":{"start":{"line":88,"column":4},"end":{"line":88,"column":47}},"21":{"start":{"line":92,"column":2},"end":{"line":94,"column":16}},"22":{"start":{"line":97,"column":2},"end":{"line":134,"column":3}},"23":{"start":{"line":137,"column":0},"end":{"line":137,"column":77}},"24":{"start":{"line":139,"column":0},"end":{"line":141,"column":3}},"25":{"start":{"line":140,"column":38},"end":{"line":140,"column":57}},"26":{"start":{"line":143,"column":0},"end":{"line":145,"column":3}},"27":{"start":{"line":144,"column":38},"end":{"line":144,"column":62}},"28":{"start":{"line":147,"column":0},"end":{"line":149,"column":3}},"29":{"start":{"line":148,"column":38},"end":{"line":148,"column":84}},"30":{"start":{"line":151,"column":0},"end":{"line":161,"column":3}},"31":{"start":{"line":154,"column":4},"end":{"line":154,"column":17}},"32":{"start":{"line":155,"column":4},"end":{"line":155,"column":58}},"33":{"start":{"line":155,"column":33},"end":{"line":155,"column":58}},"34":{"start":{"line":156,"column":4},"end":{"line":156,"column":58}},"35":{"start":{"line":156,"column":33},"end":{"line":156,"column":58}},"36":{"start":{"line":157,"column":4},"end":{"line":157,"column":70}},"37":{"start":{"line":157,"column":37},"end":{"line":157,"column":70}},"38":{"start":{"line":158,"column":4},"end":{"line":158,"column":79}},"39":{"start":{"line":158,"column":40},"end":{"line":158,"column":79}},"40":{"start":{"line":159,"column":4},"end":{"line":159,"column":15}},"41":{"start":{"line":166,"column":0},"end":{"line":170,"column":3}},"42":{"start":{"line":168,"column":23},"end":{"line":168,"column":52}},"43":{"start":{"line":169,"column":24},"end":{"line":169,"column":70}},"44":{"start":{"line":179,"column":0},"end":{"line":377,"column":1}},"45":{"start":{"line":180,"column":2},"end":{"line":187,"column":46}},"46":{"start":{"line":189,"column":2},"end":{"line":193,"column":3}},"47":{"start":{"line":191,"column":4},"end":{"line":191,"column":18}},"48":{"start":{"line":192,"column":4},"end":{"line":192,"column":22}},"49":{"start":{"line":195,"column":2},"end":{"line":220,"column":3}},"50":{"start":{"line":196,"column":4},"end":{"line":196,"column":40}},"51":{"start":{"line":197,"column":4},"end":{"line":197,"column":26}},"52":{"start":{"line":199,"column":4},"end":{"line":204,"column":5}},"53":{"start":{"line":200,"column":6},"end":{"line":203,"column":7}},"54":{"start":{"line":201,"column":8},"end":{"line":201,"column":25}},"55":{"start":{"line":202,"column":8},"end":{"line":202,"column":14}},"56":{"start":{"line":206,"column":4},"end":{"line":211,"column":5}},"57":{"start":{"line":207,"column":6},"end":{"line":207,"column":23}},"58":{"start":{"line":208,"column":6},"end":{"line":208,"column":25}},"59":{"start":{"line":210,"column":6},"end":{"line":210,"column":19}},"60":{"start":{"line":212,"column":9},"end":{"line":220,"column":3}},"61":{"start":{"line":213,"column":4},"end":{"line":213,"column":23}},"62":{"start":{"line":215,"column":4},"end":{"line":217,"column":5}},"63":{"start":{"line":216,"column":6},"end":{"line":216,"column":31}},"64":{"start":{"line":219,"column":4},"end":{"line":219,"column":23}},"65":{"start":{"line":222,"column":2},"end":{"line":224,"column":3}},"66":{"start":{"line":223,"column":4},"end":{"line":223,"column":22}},"67":{"start":{"line":227,"column":2},"end":{"line":227,"column":46}},"68":{"start":{"line":229,"column":2},"end":{"line":229,"column":24}},"69":{"start":{"line":230,"column":2},"end":{"line":237,"column":3}},"70":{"start":{"line":231,"column":4},"end":{"line":231,"column":85}},"71":{"start":{"line":232,"column":4},"end":{"line":236,"column":5}},"72":{"start":{"line":233,"column":6},"end":{"line":233,"column":147}},"73":{"start":{"line":234,"column":6},"end":{"line":234,"column":32}},"74":{"start":{"line":235,"column":6},"end":{"line":235,"column":18}},"75":{"start":{"line":240,"column":2},"end":{"line":240,"column":18}},"76":{"start":{"line":241,"column":2},"end":{"line":248,"column":3}},"77":{"start":{"line":242,"column":4},"end":{"line":242,"column":81}},"78":{"start":{"line":243,"column":4},"end":{"line":247,"column":5}},"79":{"start":{"line":244,"column":6},"end":{"line":244,"column":141}},"80":{"start":{"line":245,"column":6},"end":{"line":245,"column":32}},"81":{"start":{"line":246,"column":6},"end":{"line":246,"column":18}},"82":{"start":{"line":251,"column":2},"end":{"line":253,"column":3}},"83":{"start":{"line":252,"column":4},"end":{"line":252,"column":30}},"84":{"start":{"line":257,"column":2},"end":{"line":273,"column":3}},"85":{"start":{"line":258,"column":4},"end":{"line":258,"column":16}},"86":{"start":{"line":260,"column":4},"end":{"line":272,"column":5}},"87":{"start":{"line":261,"column":6},"end":{"line":269,"column":7}},"88":{"start":{"line":262,"column":8},"end":{"line":262,"column":26}},"89":{"start":{"line":264,"column":8},"end":{"line":264,"column":38}},"90":{"start":{"line":266,"column":8},"end":{"line":268,"column":9}},"91":{"start":{"line":267,"column":10},"end":{"line":267,"column":40}},"92":{"start":{"line":271,"column":6},"end":{"line":271,"column":30}},"93":{"start":{"line":275,"column":2},"end":{"line":275,"column":29}},"94":{"start":{"line":275,"column":16},"end":{"line":275,"column":29}},"95":{"start":{"line":277,"column":2},"end":{"line":277,"column":22}},"96":{"start":{"line":279,"column":2},"end":{"line":281,"column":3}},"97":{"start":{"line":280,"column":4},"end":{"line":280,"column":35}},"98":{"start":{"line":284,"column":2},"end":{"line":284,"column":72}},"99":{"start":{"line":285,"column":2},"end":{"line":285,"column":75}},"100":{"start":{"line":286,"column":2},"end":{"line":286,"column":102}},"101":{"start":{"line":287,"column":2},"end":{"line":287,"column":100}},"102":{"start":{"line":288,"column":2},"end":{"line":288,"column":113}},"103":{"start":{"line":290,"column":2},"end":{"line":290,"column":85}},"104":{"start":{"line":293,"column":2},"end":{"line":293,"column":68}},"105":{"start":{"line":296,"column":2},"end":{"line":299,"column":3}},"106":{"start":{"line":298,"column":4},"end":{"line":298,"column":30}},"107":{"start":{"line":302,"column":2},"end":{"line":304,"column":3}},"108":{"start":{"line":303,"column":4},"end":{"line":303,"column":89}},"109":{"start":{"line":307,"column":2},"end":{"line":312,"column":3}},"110":{"start":{"line":315,"column":2},"end":{"line":317,"column":3}},"111":{"start":{"line":316,"column":4},"end":{"line":316,"column":47}},"112":{"start":{"line":320,"column":2},"end":{"line":320,"column":93}},"113":{"start":{"line":320,"column":45},"end":{"line":320,"column":93}},"114":{"start":{"line":323,"column":2},"end":{"line":325,"column":3}},"115":{"start":{"line":324,"column":4},"end":{"line":324,"column":70}},"116":{"start":{"line":324,"column":33},"end":{"line":324,"column":70}},"117":{"start":{"line":328,"column":2},"end":{"line":343,"column":3}},"118":{"start":{"line":329,"column":4},"end":{"line":329,"column":20}},"119":{"start":{"line":330,"column":4},"end":{"line":340,"column":5}},"120":{"start":{"line":331,"column":6},"end":{"line":337,"column":7}},"121":{"start":{"line":332,"column":8},"end":{"line":336,"column":9}},"122":{"start":{"line":333,"column":10},"end":{"line":333,"column":46}},"123":{"start":{"line":335,"column":10},"end":{"line":335,"column":35}},"124":{"start":{"line":339,"column":6},"end":{"line":339,"column":22}},"125":{"start":{"line":342,"column":4},"end":{"line":342,"column":18}},"126":{"start":{"line":346,"column":2},"end":{"line":346,"column":55}},"127":{"start":{"line":346,"column":13},"end":{"line":346,"column":55}},"128":{"start":{"line":349,"column":2},"end":{"line":349,"column":28}},"129":{"start":{"line":352,"column":2},"end":{"line":352,"column":52}},"130":{"start":{"line":355,"column":2},"end":{"line":355,"column":91}},"131":{"start":{"line":355,"column":63},"end":{"line":355,"column":91}},"132":{"start":{"line":357,"column":2},"end":{"line":357,"column":127}},"133":{"start":{"line":357,"column":81},"end":{"line":357,"column":127}},"134":{"start":{"line":358,"column":2},"end":{"line":358,"column":131}},"135":{"start":{"line":358,"column":83},"end":{"line":358,"column":131}},"136":{"start":{"line":359,"column":2},"end":{"line":359,"column":135}},"137":{"start":{"line":359,"column":85},"end":{"line":359,"column":135}},"138":{"start":{"line":362,"column":2},"end":{"line":364,"column":3}},"139":{"start":{"line":363,"column":4},"end":{"line":363,"column":62}},"140":{"start":{"line":367,"column":2},"end":{"line":369,"column":3}},"141":{"start":{"line":368,"column":4},"end":{"line":368,"column":49}},"142":{"start":{"line":372,"column":2},"end":{"line":372,"column":52}},"143":{"start":{"line":375,"column":2},"end":{"line":375,"column":141}},"144":{"start":{"line":375,"column":36},"end":{"line":375,"column":141}},"145":{"start":{"line":376,"column":2},"end":{"line":376,"column":75}},"146":{"start":{"line":379,"column":0},"end":{"line":379,"column":80}},"147":{"start":{"line":398,"column":0},"end":{"line":426,"column":1}},"148":{"start":{"line":399,"column":2},"end":{"line":399,"column":18}},"149":{"start":{"line":400,"column":2},"end":{"line":400,"column":68}},"150":{"start":{"line":400,"column":35},"end":{"line":400,"column":68}},"151":{"start":{"line":401,"column":2},"end":{"line":401,"column":26}},"152":{"start":{"line":402,"column":2},"end":{"line":408,"column":3}},"153":{"start":{"line":403,"column":4},"end":{"line":403,"column":99}},"154":{"start":{"line":404,"column":9},"end":{"line":408,"column":3}},"155":{"start":{"line":405,"column":4},"end":{"line":407,"column":7}},"156":{"start":{"line":406,"column":6},"end":{"line":406,"column":92}},"157":{"start":{"line":411,"column":2},"end":{"line":414,"column":3}},"158":{"start":{"line":412,"column":4},"end":{"line":412,"column":36}},"159":{"start":{"line":413,"column":4},"end":{"line":413,"column":61}},"160":{"start":{"line":417,"column":2},"end":{"line":417,"column":83}},"161":{"start":{"line":417,"column":36},"end":{"line":417,"column":83}},"162":{"start":{"line":420,"column":2},"end":{"line":425,"column":5}},"163":{"start":{"line":421,"column":4},"end":{"line":424,"column":7}},"164":{"start":{"line":422,"column":6},"end":{"line":422,"column":33}},"165":{"start":{"line":422,"column":14},"end":{"line":422,"column":33}},"166":{"start":{"line":423,"column":6},"end":{"line":423,"column":17}},"167":{"start":{"line":428,"column":0},"end":{"line":439,"column":1}},"168":{"start":{"line":429,"column":2},"end":{"line":438,"column":5}},"169":{"start":{"line":430,"column":4},"end":{"line":430,"column":32}},"170":{"start":{"line":430,"column":25},"end":{"line":430,"column":32}},"171":{"start":{"line":431,"column":4},"end":{"line":431,"column":45}},"172":{"start":{"line":431,"column":24},"end":{"line":431,"column":45}},"173":{"start":{"line":433,"column":4},"end":{"line":433,"column":58}},"174":{"start":{"line":433,"column":18},"end":{"line":433,"column":58}},"175":{"start":{"line":435,"column":4},"end":{"line":435,"column":33}},"176":{"start":{"line":436,"column":4},"end":{"line":436,"column":27}},"177":{"start":{"line":437,"column":4},"end":{"line":437,"column":35}},"178":{"start":{"line":437,"column":17},"end":{"line":437,"column":35}},"179":{"start":{"line":441,"column":0},"end":{"line":464,"column":1}},"180":{"start":{"line":442,"column":2},"end":{"line":442,"column":31}},"181":{"start":{"line":443,"column":2},"end":{"line":443,"column":30}},"182":{"start":{"line":444,"column":2},"end":{"line":444,"column":40}},"183":{"start":{"line":446,"column":2},"end":{"line":450,"column":3}},"184":{"start":{"line":447,"column":4},"end":{"line":449,"column":5}},"185":{"start":{"line":448,"column":6},"end":{"line":448,"column":54}},"186":{"start":{"line":452,"column":2},"end":{"line":457,"column":4}},"187":{"start":{"line":459,"column":2},"end":{"line":461,"column":3}},"188":{"start":{"line":460,"column":4},"end":{"line":460,"column":46}},"189":{"start":{"line":463,"column":2},"end":{"line":463,"column":21}},"190":{"start":{"line":466,"column":0},"end":{"line":466,"column":64}},"191":{"start":{"line":486,"column":0},"end":{"line":536,"column":1}},"192":{"start":{"line":487,"column":2},"end":{"line":487,"column":18}},"193":{"start":{"line":488,"column":2},"end":{"line":488,"column":68}},"194":{"start":{"line":488,"column":35},"end":{"line":488,"column":68}},"195":{"start":{"line":489,"column":2},"end":{"line":489,"column":38}},"196":{"start":{"line":490,"column":2},"end":{"line":496,"column":3}},"197":{"start":{"line":491,"column":4},"end":{"line":491,"column":112}},"198":{"start":{"line":492,"column":9},"end":{"line":496,"column":3}},"199":{"start":{"line":493,"column":4},"end":{"line":495,"column":7}},"200":{"start":{"line":494,"column":6},"end":{"line":494,"column":105}},"201":{"start":{"line":499,"column":2},"end":{"line":501,"column":3}},"202":{"start":{"line":500,"column":4},"end":{"line":500,"column":29}},"203":{"start":{"line":504,"column":2},"end":{"line":504,"column":93}},"204":{"start":{"line":507,"column":2},"end":{"line":508,"column":74}},"205":{"start":{"line":511,"column":2},"end":{"line":516,"column":3}},"206":{"start":{"line":513,"column":4},"end":{"line":515,"column":5}},"207":{"start":{"line":514,"column":6},"end":{"line":514,"column":72}},"208":{"start":{"line":514,"column":30},"end":{"line":514,"column":72}},"209":{"start":{"line":519,"column":2},"end":{"line":521,"column":5}},"210":{"start":{"line":524,"column":2},"end":{"line":527,"column":5}},"211":{"start":{"line":524,"column":36},"end":{"line":527,"column":5}},"212":{"start":{"line":525,"column":4},"end":{"line":525,"column":36}},"213":{"start":{"line":525,"column":12},"end":{"line":525,"column":36}},"214":{"start":{"line":526,"column":4},"end":{"line":526,"column":49}},"215":{"start":{"line":530,"column":2},"end":{"line":535,"column":5}},"216":{"start":{"line":531,"column":4},"end":{"line":534,"column":7}},"217":{"start":{"line":532,"column":6},"end":{"line":532,"column":33}},"218":{"start":{"line":532,"column":14},"end":{"line":532,"column":33}},"219":{"start":{"line":533,"column":6},"end":{"line":533,"column":44}},"220":{"start":{"line":538,"column":0},"end":{"line":538,"column":65}},"221":{"start":{"line":592,"column":0},"end":{"line":611,"column":1}},"222":{"start":{"line":593,"column":2},"end":{"line":593,"column":18}},"223":{"start":{"line":594,"column":2},"end":{"line":594,"column":68}},"224":{"start":{"line":594,"column":35},"end":{"line":594,"column":68}},"225":{"start":{"line":595,"column":2},"end":{"line":595,"column":38}},"226":{"start":{"line":597,"column":2},"end":{"line":599,"column":3}},"227":{"start":{"line":598,"column":4},"end":{"line":598,"column":97}},"228":{"start":{"line":602,"column":2},"end":{"line":602,"column":90}},"229":{"start":{"line":602,"column":36},"end":{"line":602,"column":90}},"230":{"start":{"line":605,"column":2},"end":{"line":610,"column":5}},"231":{"start":{"line":606,"column":4},"end":{"line":609,"column":7}},"232":{"start":{"line":607,"column":6},"end":{"line":607,"column":46}},"233":{"start":{"line":607,"column":27},"end":{"line":607,"column":46}},"234":{"start":{"line":608,"column":6},"end":{"line":608,"column":17}},"235":{"start":{"line":613,"column":0},"end":{"line":706,"column":1}},"236":{"start":{"line":615,"column":2},"end":{"line":618,"column":3}},"237":{"start":{"line":616,"column":4},"end":{"line":616,"column":36}},"238":{"start":{"line":617,"column":4},"end":{"line":617,"column":61}},"239":{"start":{"line":621,"column":2},"end":{"line":621,"column":146}},"240":{"start":{"line":624,"column":2},"end":{"line":624,"column":24}},"241":{"start":{"line":627,"column":2},"end":{"line":641,"column":3}},"242":{"start":{"line":628,"column":4},"end":{"line":638,"column":5}},"243":{"start":{"line":630,"column":6},"end":{"line":630,"column":46}},"244":{"start":{"line":632,"column":6},"end":{"line":634,"column":7}},"245":{"start":{"line":633,"column":8},"end":{"line":633,"column":25}},"246":{"start":{"line":637,"column":6},"end":{"line":637,"column":30}},"247":{"start":{"line":640,"column":4},"end":{"line":640,"column":31}},"248":{"start":{"line":644,"column":2},"end":{"line":644,"column":83}},"249":{"start":{"line":645,"column":2},"end":{"line":645,"column":76}},"250":{"start":{"line":646,"column":2},"end":{"line":646,"column":52}},"251":{"start":{"line":649,"column":2},"end":{"line":651,"column":3}},"252":{"start":{"line":650,"column":4},"end":{"line":650,"column":91}},"253":{"start":{"line":654,"column":2},"end":{"line":705,"column":5}},"254":{"start":{"line":656,"column":4},"end":{"line":656,"column":45}},"255":{"start":{"line":656,"column":18},"end":{"line":656,"column":45}},"256":{"start":{"line":658,"column":4},"end":{"line":660,"column":5}},"257":{"start":{"line":659,"column":6},"end":{"line":659,"column":56}},"258":{"start":{"line":662,"column":4},"end":{"line":662,"column":34}},"259":{"start":{"line":663,"column":4},"end":{"line":663,"column":32}},"260":{"start":{"line":664,"column":4},"end":{"line":664,"column":39}},"261":{"start":{"line":665,"column":4},"end":{"line":665,"column":32}},"262":{"start":{"line":666,"column":4},"end":{"line":666,"column":48}},"263":{"start":{"line":667,"column":4},"end":{"line":667,"column":23}},"264":{"start":{"line":668,"column":4},"end":{"line":668,"column":23}},"265":{"start":{"line":671,"column":4},"end":{"line":671,"column":26}},"266":{"start":{"line":674,"column":4},"end":{"line":674,"column":38}},"267":{"start":{"line":676,"column":4},"end":{"line":678,"column":5}},"268":{"start":{"line":677,"column":6},"end":{"line":677,"column":57}},"269":{"start":{"line":681,"column":4},"end":{"line":681,"column":38}},"270":{"start":{"line":683,"column":4},"end":{"line":685,"column":5}},"271":{"start":{"line":684,"column":6},"end":{"line":684,"column":57}},"272":{"start":{"line":688,"column":4},"end":{"line":695,"column":5}},"273":{"start":{"line":690,"column":6},"end":{"line":690,"column":38}},"274":{"start":{"line":692,"column":6},"end":{"line":694,"column":13}},"275":{"start":{"line":698,"column":4},"end":{"line":701,"column":5}},"276":{"start":{"line":700,"column":6},"end":{"line":700,"column":60}},"277":{"start":{"line":704,"column":4},"end":{"line":704,"column":22}},"278":{"start":{"line":708,"column":0},"end":{"line":745,"column":1}},"279":{"start":{"line":709,"column":2},"end":{"line":709,"column":68}},"280":{"start":{"line":709,"column":35},"end":{"line":709,"column":68}},"281":{"start":{"line":710,"column":2},"end":{"line":710,"column":26}},"282":{"start":{"line":712,"column":2},"end":{"line":712,"column":45}},"283":{"start":{"line":715,"column":2},"end":{"line":715,"column":83}},"284":{"start":{"line":716,"column":2},"end":{"line":716,"column":79}},"285":{"start":{"line":716,"column":49},"end":{"line":716,"column":79}},"286":{"start":{"line":719,"column":2},"end":{"line":719,"column":66}},"287":{"start":{"line":719,"column":37},"end":{"line":719,"column":66}},"288":{"start":{"line":720,"column":2},"end":{"line":720,"column":98}},"289":{"start":{"line":723,"column":2},"end":{"line":724,"column":74}},"290":{"start":{"line":727,"column":2},"end":{"line":731,"column":3}},"291":{"start":{"line":728,"column":4},"end":{"line":730,"column":5}},"292":{"start":{"line":729,"column":6},"end":{"line":729,"column":72}},"293":{"start":{"line":729,"column":30},"end":{"line":729,"column":72}},"294":{"start":{"line":734,"column":2},"end":{"line":744,"column":5}},"295":{"start":{"line":735,"column":4},"end":{"line":735,"column":32}},"296":{"start":{"line":735,"column":25},"end":{"line":735,"column":32}},"297":{"start":{"line":736,"column":4},"end":{"line":736,"column":49}},"298":{"start":{"line":736,"column":12},"end":{"line":736,"column":49}},"299":{"start":{"line":737,"column":4},"end":{"line":737,"column":67}},"300":{"start":{"line":737,"column":23},"end":{"line":737,"column":67}},"301":{"start":{"line":738,"column":4},"end":{"line":738,"column":83}},"302":{"start":{"line":738,"column":27},"end":{"line":738,"column":83}},"303":{"start":{"line":739,"column":4},"end":{"line":739,"column":105}},"304":{"start":{"line":739,"column":34},"end":{"line":739,"column":105}},"305":{"start":{"line":741,"column":4},"end":{"line":741,"column":22}},"306":{"start":{"line":743,"column":4},"end":{"line":743,"column":43}},"307":{"start":{"line":747,"column":0},"end":{"line":747,"column":64}},"308":{"start":{"line":817,"column":0},"end":{"line":827,"column":1}},"309":{"start":{"line":818,"column":2},"end":{"line":818,"column":68}},"310":{"start":{"line":818,"column":35},"end":{"line":818,"column":68}},"311":{"start":{"line":819,"column":2},"end":{"line":819,"column":39}},"312":{"start":{"line":820,"column":2},"end":{"line":820,"column":46}},"313":{"start":{"line":822,"column":2},"end":{"line":824,"column":3}},"314":{"start":{"line":823,"column":4},"end":{"line":823,"column":28}},"315":{"start":{"line":826,"column":2},"end":{"line":826,"column":50}},"316":{"start":{"line":829,"column":0},"end":{"line":829,"column":61}},"317":{"start":{"line":866,"column":0},"end":{"line":887,"column":1}},"318":{"start":{"line":867,"column":2},"end":{"line":867,"column":18}},"319":{"start":{"line":868,"column":2},"end":{"line":868,"column":68}},"320":{"start":{"line":868,"column":35},"end":{"line":868,"column":68}},"321":{"start":{"line":869,"column":2},"end":{"line":869,"column":33}},"322":{"start":{"line":872,"column":2},"end":{"line":875,"column":3}},"323":{"start":{"line":873,"column":4},"end":{"line":873,"column":36}},"324":{"start":{"line":874,"column":4},"end":{"line":874,"column":61}},"325":{"start":{"line":878,"column":2},"end":{"line":878,"column":94}},"326":{"start":{"line":878,"column":36},"end":{"line":878,"column":94}},"327":{"start":{"line":881,"column":2},"end":{"line":886,"column":5}},"328":{"start":{"line":882,"column":4},"end":{"line":885,"column":7}},"329":{"start":{"line":883,"column":6},"end":{"line":883,"column":33}},"330":{"start":{"line":883,"column":14},"end":{"line":883,"column":33}},"331":{"start":{"line":884,"column":6},"end":{"line":884,"column":17}},"332":{"start":{"line":889,"column":0},"end":{"line":903,"column":1}},"333":{"start":{"line":891,"column":2},"end":{"line":891,"column":24}},"334":{"start":{"line":893,"column":2},"end":{"line":902,"column":5}},"335":{"start":{"line":894,"column":4},"end":{"line":894,"column":32}},"336":{"start":{"line":894,"column":25},"end":{"line":894,"column":32}},"337":{"start":{"line":895,"column":4},"end":{"line":895,"column":45}},"338":{"start":{"line":895,"column":24},"end":{"line":895,"column":45}},"339":{"start":{"line":896,"column":4},"end":{"line":896,"column":58}},"340":{"start":{"line":896,"column":18},"end":{"line":896,"column":58}},"341":{"start":{"line":897,"column":4},"end":{"line":897,"column":83}},"342":{"start":{"line":898,"column":4},"end":{"line":898,"column":114}},"343":{"start":{"line":899,"column":4},"end":{"line":899,"column":114}},"344":{"start":{"line":900,"column":4},"end":{"line":900,"column":103}},"345":{"start":{"line":901,"column":4},"end":{"line":901,"column":35}},"346":{"start":{"line":901,"column":17},"end":{"line":901,"column":35}},"347":{"start":{"line":905,"column":0},"end":{"line":905,"column":64}},"348":{"start":{"line":921,"column":0},"end":{"line":942,"column":1}},"349":{"start":{"line":922,"column":2},"end":{"line":922,"column":18}},"350":{"start":{"line":923,"column":2},"end":{"line":923,"column":68}},"351":{"start":{"line":923,"column":35},"end":{"line":923,"column":68}},"352":{"start":{"line":924,"column":2},"end":{"line":924,"column":33}},"353":{"start":{"line":927,"column":2},"end":{"line":930,"column":3}},"354":{"start":{"line":928,"column":4},"end":{"line":928,"column":36}},"355":{"start":{"line":929,"column":4},"end":{"line":929,"column":61}},"356":{"start":{"line":933,"column":2},"end":{"line":933,"column":92}},"357":{"start":{"line":933,"column":36},"end":{"line":933,"column":92}},"358":{"start":{"line":936,"column":2},"end":{"line":941,"column":5}},"359":{"start":{"line":937,"column":4},"end":{"line":940,"column":7}},"360":{"start":{"line":938,"column":6},"end":{"line":938,"column":33}},"361":{"start":{"line":938,"column":14},"end":{"line":938,"column":33}},"362":{"start":{"line":939,"column":6},"end":{"line":939,"column":17}},"363":{"start":{"line":944,"column":0},"end":{"line":961,"column":1}},"364":{"start":{"line":946,"column":2},"end":{"line":946,"column":24}},"365":{"start":{"line":949,"column":2},"end":{"line":960,"column":5}},"366":{"start":{"line":950,"column":4},"end":{"line":950,"column":32}},"367":{"start":{"line":950,"column":25},"end":{"line":950,"column":32}},"368":{"start":{"line":951,"column":4},"end":{"line":951,"column":45}},"369":{"start":{"line":951,"column":24},"end":{"line":951,"column":45}},"370":{"start":{"line":952,"column":4},"end":{"line":952,"column":58}},"371":{"start":{"line":952,"column":18},"end":{"line":952,"column":58}},"372":{"start":{"line":954,"column":4},"end":{"line":954,"column":83}},"373":{"start":{"line":955,"column":4},"end":{"line":955,"column":114}},"374":{"start":{"line":956,"column":4},"end":{"line":956,"column":114}},"375":{"start":{"line":957,"column":4},"end":{"line":957,"column":103}},"376":{"start":{"line":958,"column":4},"end":{"line":958,"column":18}},"377":{"start":{"line":959,"column":4},"end":{"line":959,"column":35}},"378":{"start":{"line":959,"column":17},"end":{"line":959,"column":35}},"379":{"start":{"line":963,"column":0},"end":{"line":963,"column":65}},"380":{"start":{"line":978,"column":0},"end":{"line":999,"column":1}},"381":{"start":{"line":979,"column":2},"end":{"line":979,"column":18}},"382":{"start":{"line":980,"column":2},"end":{"line":980,"column":68}},"383":{"start":{"line":980,"column":35},"end":{"line":980,"column":68}},"384":{"start":{"line":981,"column":2},"end":{"line":981,"column":33}},"385":{"start":{"line":984,"column":2},"end":{"line":987,"column":3}},"386":{"start":{"line":985,"column":4},"end":{"line":985,"column":36}},"387":{"start":{"line":986,"column":4},"end":{"line":986,"column":61}},"388":{"start":{"line":990,"column":2},"end":{"line":990,"column":95}},"389":{"start":{"line":990,"column":36},"end":{"line":990,"column":95}},"390":{"start":{"line":993,"column":2},"end":{"line":998,"column":5}},"391":{"start":{"line":994,"column":4},"end":{"line":997,"column":7}},"392":{"start":{"line":995,"column":6},"end":{"line":995,"column":33}},"393":{"start":{"line":995,"column":14},"end":{"line":995,"column":33}},"394":{"start":{"line":996,"column":6},"end":{"line":996,"column":17}},"395":{"start":{"line":1001,"column":0},"end":{"line":1015,"column":1}},"396":{"start":{"line":1003,"column":2},"end":{"line":1003,"column":23}},"397":{"start":{"line":1005,"column":2},"end":{"line":1014,"column":5}},"398":{"start":{"line":1006,"column":4},"end":{"line":1006,"column":32}},"399":{"start":{"line":1006,"column":25},"end":{"line":1006,"column":32}},"400":{"start":{"line":1007,"column":4},"end":{"line":1007,"column":45}},"401":{"start":{"line":1007,"column":24},"end":{"line":1007,"column":45}},"402":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":58}},"403":{"start":{"line":1008,"column":18},"end":{"line":1008,"column":58}},"404":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":83}},"405":{"start":{"line":1010,"column":4},"end":{"line":1010,"column":114}},"406":{"start":{"line":1011,"column":4},"end":{"line":1011,"column":114}},"407":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":103}},"408":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":35}},"409":{"start":{"line":1013,"column":17},"end":{"line":1013,"column":35}},"410":{"start":{"line":1017,"column":0},"end":{"line":1017,"column":65}},"411":{"start":{"line":1019,"column":0},"end":{"line":1054,"column":1}},"412":{"start":{"line":1020,"column":2},"end":{"line":1020,"column":71}},"413":{"start":{"line":1020,"column":36},"end":{"line":1020,"column":71}},"414":{"start":{"line":1021,"column":2},"end":{"line":1021,"column":35}},"415":{"start":{"line":1021,"column":22},"end":{"line":1021,"column":35}},"416":{"start":{"line":1022,"column":2},"end":{"line":1022,"column":56}},"417":{"start":{"line":1022,"column":40},"end":{"line":1022,"column":56}},"418":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":125}},"419":{"start":{"line":1025,"column":54},"end":{"line":1025,"column":125}},"420":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":125}},"421":{"start":{"line":1026,"column":54},"end":{"line":1026,"column":125}},"422":{"start":{"line":1029,"column":2},"end":{"line":1029,"column":83}},"423":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":98}},"424":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":38}},"425":{"start":{"line":1038,"column":2},"end":{"line":1038,"column":74}},"426":{"start":{"line":1039,"column":2},"end":{"line":1039,"column":71}},"427":{"start":{"line":1042,"column":2},"end":{"line":1042,"column":53}},"428":{"start":{"line":1045,"column":2},"end":{"line":1053,"column":5}},"429":{"start":{"line":1046,"column":4},"end":{"line":1046,"column":32}},"430":{"start":{"line":1046,"column":25},"end":{"line":1046,"column":32}},"431":{"start":{"line":1047,"column":4},"end":{"line":1047,"column":55}},"432":{"start":{"line":1047,"column":12},"end":{"line":1047,"column":55}},"433":{"start":{"line":1048,"column":4},"end":{"line":1048,"column":67}},"434":{"start":{"line":1048,"column":23},"end":{"line":1048,"column":67}},"435":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":83}},"436":{"start":{"line":1049,"column":27},"end":{"line":1049,"column":83}},"437":{"start":{"line":1050,"column":4},"end":{"line":1050,"column":105}},"438":{"start":{"line":1050,"column":34},"end":{"line":1050,"column":105}},"439":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":43}},"440":{"start":{"line":1074,"column":0},"end":{"line":1093,"column":1}},"441":{"start":{"line":1075,"column":2},"end":{"line":1075,"column":18}},"442":{"start":{"line":1078,"column":2},"end":{"line":1081,"column":3}},"443":{"start":{"line":1079,"column":4},"end":{"line":1079,"column":36}},"444":{"start":{"line":1080,"column":4},"end":{"line":1080,"column":61}},"445":{"start":{"line":1084,"column":2},"end":{"line":1084,"column":104}},"446":{"start":{"line":1084,"column":36},"end":{"line":1084,"column":104}},"447":{"start":{"line":1087,"column":2},"end":{"line":1092,"column":5}},"448":{"start":{"line":1088,"column":4},"end":{"line":1091,"column":7}},"449":{"start":{"line":1089,"column":6},"end":{"line":1089,"column":33}},"450":{"start":{"line":1089,"column":14},"end":{"line":1089,"column":33}},"451":{"start":{"line":1090,"column":6},"end":{"line":1090,"column":17}},"452":{"start":{"line":1095,"column":0},"end":{"line":1095,"column":61}},"453":{"start":{"line":1124,"column":0},"end":{"line":1145,"column":1}},"454":{"start":{"line":1125,"column":2},"end":{"line":1125,"column":18}},"455":{"start":{"line":1126,"column":2},"end":{"line":1126,"column":68}},"456":{"start":{"line":1126,"column":35},"end":{"line":1126,"column":68}},"457":{"start":{"line":1127,"column":2},"end":{"line":1127,"column":34}},"458":{"start":{"line":1130,"column":2},"end":{"line":1133,"column":3}},"459":{"start":{"line":1131,"column":4},"end":{"line":1131,"column":36}},"460":{"start":{"line":1132,"column":4},"end":{"line":1132,"column":61}},"461":{"start":{"line":1136,"column":2},"end":{"line":1136,"column":86}},"462":{"start":{"line":1136,"column":36},"end":{"line":1136,"column":86}},"463":{"start":{"line":1139,"column":2},"end":{"line":1144,"column":5}},"464":{"start":{"line":1140,"column":4},"end":{"line":1143,"column":7}},"465":{"start":{"line":1141,"column":6},"end":{"line":1141,"column":33}},"466":{"start":{"line":1141,"column":14},"end":{"line":1141,"column":33}},"467":{"start":{"line":1142,"column":6},"end":{"line":1142,"column":17}},"468":{"start":{"line":1147,"column":0},"end":{"line":1156,"column":1}},"469":{"start":{"line":1148,"column":2},"end":{"line":1148,"column":24}},"470":{"start":{"line":1149,"column":2},"end":{"line":1155,"column":5}},"471":{"start":{"line":1150,"column":4},"end":{"line":1150,"column":32}},"472":{"start":{"line":1150,"column":25},"end":{"line":1150,"column":32}},"473":{"start":{"line":1151,"column":4},"end":{"line":1151,"column":45}},"474":{"start":{"line":1151,"column":24},"end":{"line":1151,"column":45}},"475":{"start":{"line":1152,"column":4},"end":{"line":1152,"column":58}},"476":{"start":{"line":1152,"column":18},"end":{"line":1152,"column":58}},"477":{"start":{"line":1153,"column":4},"end":{"line":1153,"column":32}},"478":{"start":{"line":1154,"column":4},"end":{"line":1154,"column":35}},"479":{"start":{"line":1154,"column":17},"end":{"line":1154,"column":35}},"480":{"start":{"line":1158,"column":0},"end":{"line":1158,"column":64}},"481":{"start":{"line":1160,"column":0},"end":{"line":1160,"column":64}},"482":{"start":{"line":1162,"column":0},"end":{"line":1162,"column":64}},"483":{"start":{"line":1175,"column":0},"end":{"line":1196,"column":1}},"484":{"start":{"line":1176,"column":2},"end":{"line":1176,"column":18}},"485":{"start":{"line":1177,"column":2},"end":{"line":1177,"column":68}},"486":{"start":{"line":1177,"column":35},"end":{"line":1177,"column":68}},"487":{"start":{"line":1178,"column":2},"end":{"line":1178,"column":34}},"488":{"start":{"line":1181,"column":2},"end":{"line":1184,"column":3}},"489":{"start":{"line":1182,"column":4},"end":{"line":1182,"column":36}},"490":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":61}},"491":{"start":{"line":1187,"column":2},"end":{"line":1187,"column":87}},"492":{"start":{"line":1187,"column":36},"end":{"line":1187,"column":87}},"493":{"start":{"line":1190,"column":2},"end":{"line":1195,"column":5}},"494":{"start":{"line":1191,"column":4},"end":{"line":1194,"column":7}},"495":{"start":{"line":1192,"column":6},"end":{"line":1192,"column":33}},"496":{"start":{"line":1192,"column":14},"end":{"line":1192,"column":33}},"497":{"start":{"line":1193,"column":6},"end":{"line":1193,"column":17}},"498":{"start":{"line":1198,"column":0},"end":{"line":1208,"column":1}},"499":{"start":{"line":1199,"column":2},"end":{"line":1199,"column":25}},"500":{"start":{"line":1201,"column":2},"end":{"line":1207,"column":5}},"501":{"start":{"line":1202,"column":4},"end":{"line":1202,"column":32}},"502":{"start":{"line":1202,"column":25},"end":{"line":1202,"column":32}},"503":{"start":{"line":1203,"column":4},"end":{"line":1203,"column":45}},"504":{"start":{"line":1203,"column":24},"end":{"line":1203,"column":45}},"505":{"start":{"line":1204,"column":4},"end":{"line":1204,"column":58}},"506":{"start":{"line":1204,"column":18},"end":{"line":1204,"column":58}},"507":{"start":{"line":1205,"column":4},"end":{"line":1205,"column":32}},"508":{"start":{"line":1206,"column":4},"end":{"line":1206,"column":35}},"509":{"start":{"line":1206,"column":17},"end":{"line":1206,"column":35}},"510":{"start":{"line":1210,"column":0},"end":{"line":1245,"column":1}},"511":{"start":{"line":1211,"column":2},"end":{"line":1217,"column":3}},"512":{"start":{"line":1212,"column":4},"end":{"line":1212,"column":37}},"513":{"start":{"line":1213,"column":9},"end":{"line":1217,"column":3}},"514":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":24}},"515":{"start":{"line":1215,"column":4},"end":{"line":1215,"column":17}},"516":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":18}},"517":{"start":{"line":1220,"column":2},"end":{"line":1220,"column":26}},"518":{"start":{"line":1223,"column":2},"end":{"line":1223,"column":83}},"519":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":37}},"520":{"start":{"line":1226,"column":23},"end":{"line":1226,"column":37}},"521":{"start":{"line":1229,"column":2},"end":{"line":1229,"column":35}},"522":{"start":{"line":1230,"column":2},"end":{"line":1230,"column":34}},"523":{"start":{"line":1230,"column":21},"end":{"line":1230,"column":34}},"524":{"start":{"line":1233,"column":2},"end":{"line":1233,"column":53}},"525":{"start":{"line":1236,"column":2},"end":{"line":1244,"column":5}},"526":{"start":{"line":1237,"column":4},"end":{"line":1237,"column":32}},"527":{"start":{"line":1237,"column":25},"end":{"line":1237,"column":32}},"528":{"start":{"line":1238,"column":4},"end":{"line":1238,"column":55}},"529":{"start":{"line":1238,"column":12},"end":{"line":1238,"column":55}},"530":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":67}},"531":{"start":{"line":1239,"column":23},"end":{"line":1239,"column":67}},"532":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":83}},"533":{"start":{"line":1240,"column":27},"end":{"line":1240,"column":83}},"534":{"start":{"line":1241,"column":4},"end":{"line":1241,"column":105}},"535":{"start":{"line":1241,"column":34},"end":{"line":1241,"column":105}},"536":{"start":{"line":1243,"column":4},"end":{"line":1243,"column":43}},"537":{"start":{"line":1247,"column":0},"end":{"line":1247,"column":65}},"538":{"start":{"line":1249,"column":0},"end":{"line":1249,"column":66}},"539":{"start":{"line":1251,"column":0},"end":{"line":1251,"column":65}},"540":{"start":{"line":1266,"column":0},"end":{"line":1285,"column":1}},"541":{"start":{"line":1267,"column":2},"end":{"line":1267,"column":18}},"542":{"start":{"line":1270,"column":2},"end":{"line":1273,"column":3}},"543":{"start":{"line":1271,"column":4},"end":{"line":1271,"column":36}},"544":{"start":{"line":1272,"column":4},"end":{"line":1272,"column":61}},"545":{"start":{"line":1276,"column":2},"end":{"line":1276,"column":94}},"546":{"start":{"line":1276,"column":36},"end":{"line":1276,"column":94}},"547":{"start":{"line":1279,"column":2},"end":{"line":1284,"column":5}},"548":{"start":{"line":1280,"column":4},"end":{"line":1283,"column":7}},"549":{"start":{"line":1281,"column":6},"end":{"line":1281,"column":33}},"550":{"start":{"line":1281,"column":14},"end":{"line":1281,"column":33}},"551":{"start":{"line":1282,"column":6},"end":{"line":1282,"column":17}},"552":{"start":{"line":1287,"column":0},"end":{"line":1287,"column":61}},"553":{"start":{"line":1302,"column":0},"end":{"line":1323,"column":1}},"554":{"start":{"line":1303,"column":2},"end":{"line":1303,"column":18}},"555":{"start":{"line":1304,"column":2},"end":{"line":1304,"column":68}},"556":{"start":{"line":1304,"column":35},"end":{"line":1304,"column":68}},"557":{"start":{"line":1305,"column":2},"end":{"line":1305,"column":26}},"558":{"start":{"line":1308,"column":2},"end":{"line":1311,"column":3}},"559":{"start":{"line":1309,"column":4},"end":{"line":1309,"column":36}},"560":{"start":{"line":1310,"column":4},"end":{"line":1310,"column":61}},"561":{"start":{"line":1314,"column":2},"end":{"line":1314,"column":78}},"562":{"start":{"line":1314,"column":36},"end":{"line":1314,"column":78}},"563":{"start":{"line":1317,"column":2},"end":{"line":1322,"column":5}},"564":{"start":{"line":1318,"column":4},"end":{"line":1321,"column":7}},"565":{"start":{"line":1319,"column":6},"end":{"line":1319,"column":33}},"566":{"start":{"line":1319,"column":14},"end":{"line":1319,"column":33}},"567":{"start":{"line":1320,"column":6},"end":{"line":1320,"column":17}},"568":{"start":{"line":1325,"column":0},"end":{"line":1341,"column":1}},"569":{"start":{"line":1327,"column":2},"end":{"line":1327,"column":83}},"570":{"start":{"line":1329,"column":2},"end":{"line":1332,"column":3}},"571":{"start":{"line":1330,"column":4},"end":{"line":1330,"column":31}},"572":{"start":{"line":1331,"column":4},"end":{"line":1331,"column":78}},"573":{"start":{"line":1335,"column":2},"end":{"line":1340,"column":5}},"574":{"start":{"line":1336,"column":4},"end":{"line":1336,"column":32}},"575":{"start":{"line":1336,"column":25},"end":{"line":1336,"column":32}},"576":{"start":{"line":1337,"column":4},"end":{"line":1337,"column":64}},"577":{"start":{"line":1337,"column":20},"end":{"line":1337,"column":64}},"578":{"start":{"line":1338,"column":4},"end":{"line":1338,"column":55}},"579":{"start":{"line":1338,"column":12},"end":{"line":1338,"column":55}},"580":{"start":{"line":1339,"column":4},"end":{"line":1339,"column":38}},"581":{"start":{"line":1343,"column":0},"end":{"line":1343,"column":59}},"582":{"start":{"line":1384,"column":0},"end":{"line":1400,"column":1}},"583":{"start":{"line":1385,"column":2},"end":{"line":1385,"column":18}},"584":{"start":{"line":1386,"column":2},"end":{"line":1386,"column":54}},"585":{"start":{"line":1387,"column":2},"end":{"line":1387,"column":28}},"586":{"start":{"line":1388,"column":2},"end":{"line":1388,"column":56}},"587":{"start":{"line":1388,"column":36},"end":{"line":1388,"column":56}},"588":{"start":{"line":1391,"column":2},"end":{"line":1391,"column":73}},"589":{"start":{"line":1391,"column":36},"end":{"line":1391,"column":73}},"590":{"start":{"line":1394,"column":2},"end":{"line":1399,"column":5}},"591":{"start":{"line":1395,"column":4},"end":{"line":1398,"column":7}},"592":{"start":{"line":1396,"column":6},"end":{"line":1396,"column":33}},"593":{"start":{"line":1396,"column":14},"end":{"line":1396,"column":33}},"594":{"start":{"line":1397,"column":6},"end":{"line":1397,"column":17}},"595":{"start":{"line":1402,"column":0},"end":{"line":1409,"column":1}},"596":{"start":{"line":1403,"column":2},"end":{"line":1403,"column":66}},"597":{"start":{"line":1405,"column":2},"end":{"line":1408,"column":5}},"598":{"start":{"line":1406,"column":4},"end":{"line":1406,"column":72}},"599":{"start":{"line":1406,"column":20},"end":{"line":1406,"column":72}},"600":{"start":{"line":1407,"column":4},"end":{"line":1407,"column":41}},"601":{"start":{"line":1411,"column":0},"end":{"line":1411,"column":62}},"602":{"start":{"line":1430,"column":0},"end":{"line":1445,"column":1}},"603":{"start":{"line":1431,"column":2},"end":{"line":1431,"column":18}},"604":{"start":{"line":1432,"column":2},"end":{"line":1432,"column":56}},"605":{"start":{"line":1432,"column":31},"end":{"line":1432,"column":56}},"606":{"start":{"line":1433,"column":2},"end":{"line":1433,"column":66}},"607":{"start":{"line":1436,"column":2},"end":{"line":1436,"column":80}},"608":{"start":{"line":1436,"column":36},"end":{"line":1436,"column":80}},"609":{"start":{"line":1439,"column":2},"end":{"line":1444,"column":5}},"610":{"start":{"line":1440,"column":4},"end":{"line":1443,"column":7}},"611":{"start":{"line":1441,"column":6},"end":{"line":1441,"column":33}},"612":{"start":{"line":1441,"column":14},"end":{"line":1441,"column":33}},"613":{"start":{"line":1442,"column":6},"end":{"line":1442,"column":17}},"614":{"start":{"line":1447,"column":0},"end":{"line":1470,"column":1}},"615":{"start":{"line":1449,"column":2},"end":{"line":1449,"column":31}},"616":{"start":{"line":1451,"column":2},"end":{"line":1451,"column":64}},"617":{"start":{"line":1452,"column":2},"end":{"line":1452,"column":57}},"618":{"start":{"line":1453,"column":2},"end":{"line":1453,"column":79}},"619":{"start":{"line":1454,"column":2},"end":{"line":1454,"column":94}},"620":{"start":{"line":1457,"column":2},"end":{"line":1457,"column":43}},"621":{"start":{"line":1460,"column":2},"end":{"line":1469,"column":5}},"622":{"start":{"line":1461,"column":4},"end":{"line":1461,"column":55}},"623":{"start":{"line":1461,"column":12},"end":{"line":1461,"column":55}},"624":{"start":{"line":1463,"column":4},"end":{"line":1463,"column":71}},"625":{"start":{"line":1463,"column":19},"end":{"line":1463,"column":71}},"626":{"start":{"line":1464,"column":4},"end":{"line":1468,"column":5}},"627":{"start":{"line":1465,"column":6},"end":{"line":1465,"column":146}},"628":{"start":{"line":1467,"column":6},"end":{"line":1467,"column":58}},"629":{"start":{"line":1472,"column":0},"end":{"line":1472,"column":61}},"630":{"start":{"line":1482,"column":0},"end":{"line":1496,"column":1}},"631":{"start":{"line":1483,"column":2},"end":{"line":1483,"column":18}},"632":{"start":{"line":1484,"column":2},"end":{"line":1484,"column":68}},"633":{"start":{"line":1484,"column":35},"end":{"line":1484,"column":68}},"634":{"start":{"line":1485,"column":2},"end":{"line":1485,"column":26}},"635":{"start":{"line":1488,"column":2},"end":{"line":1488,"column":100}},"636":{"start":{"line":1488,"column":36},"end":{"line":1488,"column":100}},"637":{"start":{"line":1490,"column":2},"end":{"line":1495,"column":5}},"638":{"start":{"line":1491,"column":4},"end":{"line":1494,"column":7}},"639":{"start":{"line":1492,"column":6},"end":{"line":1492,"column":33}},"640":{"start":{"line":1492,"column":14},"end":{"line":1492,"column":33}},"641":{"start":{"line":1493,"column":6},"end":{"line":1493,"column":17}},"642":{"start":{"line":1498,"column":0},"end":{"line":1498,"column":59}},"643":{"start":{"line":1507,"column":0},"end":{"line":1520,"column":1}},"644":{"start":{"line":1508,"column":2},"end":{"line":1508,"column":18}},"645":{"start":{"line":1511,"column":2},"end":{"line":1511,"column":67}},"646":{"start":{"line":1511,"column":36},"end":{"line":1511,"column":67}},"647":{"start":{"line":1514,"column":2},"end":{"line":1519,"column":5}},"648":{"start":{"line":1515,"column":4},"end":{"line":1518,"column":7}},"649":{"start":{"line":1516,"column":6},"end":{"line":1516,"column":33}},"650":{"start":{"line":1516,"column":14},"end":{"line":1516,"column":33}},"651":{"start":{"line":1517,"column":6},"end":{"line":1517,"column":17}},"652":{"start":{"line":1522,"column":0},"end":{"line":1531,"column":1}},"653":{"start":{"line":1523,"column":2},"end":{"line":1530,"column":5}},"654":{"start":{"line":1524,"column":4},"end":{"line":1524,"column":49}},"655":{"start":{"line":1524,"column":12},"end":{"line":1524,"column":49}},"656":{"start":{"line":1525,"column":4},"end":{"line":1527,"column":5}},"657":{"start":{"line":1526,"column":6},"end":{"line":1526,"column":130}},"658":{"start":{"line":1529,"column":4},"end":{"line":1529,"column":66}},"659":{"start":{"line":1533,"column":0},"end":{"line":1533,"column":62}},"660":{"start":{"line":1542,"column":0},"end":{"line":1555,"column":1}},"661":{"start":{"line":1543,"column":2},"end":{"line":1543,"column":18}},"662":{"start":{"line":1546,"column":2},"end":{"line":1546,"column":68}},"663":{"start":{"line":1546,"column":36},"end":{"line":1546,"column":68}},"664":{"start":{"line":1549,"column":2},"end":{"line":1554,"column":5}},"665":{"start":{"line":1550,"column":4},"end":{"line":1553,"column":7}},"666":{"start":{"line":1551,"column":6},"end":{"line":1551,"column":33}},"667":{"start":{"line":1551,"column":14},"end":{"line":1551,"column":33}},"668":{"start":{"line":1552,"column":6},"end":{"line":1552,"column":17}},"669":{"start":{"line":1557,"column":0},"end":{"line":1562,"column":1}},"670":{"start":{"line":1558,"column":2},"end":{"line":1561,"column":5}},"671":{"start":{"line":1559,"column":4},"end":{"line":1559,"column":49}},"672":{"start":{"line":1559,"column":12},"end":{"line":1559,"column":49}},"673":{"start":{"line":1560,"column":4},"end":{"line":1560,"column":64}},"674":{"start":{"line":1564,"column":0},"end":{"line":1564,"column":63}},"675":{"start":{"line":1588,"column":0},"end":{"line":1607,"column":1}},"676":{"start":{"line":1589,"column":2},"end":{"line":1589,"column":18}},"677":{"start":{"line":1590,"column":2},"end":{"line":1590,"column":54}},"678":{"start":{"line":1591,"column":2},"end":{"line":1591,"column":24}},"679":{"start":{"line":1592,"column":2},"end":{"line":1592,"column":56}},"680":{"start":{"line":1592,"column":36},"end":{"line":1592,"column":56}},"681":{"start":{"line":1593,"column":2},"end":{"line":1593,"column":50}},"682":{"start":{"line":1594,"column":2},"end":{"line":1594,"column":64}},"683":{"start":{"line":1595,"column":2},"end":{"line":1595,"column":43}},"684":{"start":{"line":1598,"column":2},"end":{"line":1598,"column":93}},"685":{"start":{"line":1598,"column":36},"end":{"line":1598,"column":93}},"686":{"start":{"line":1601,"column":2},"end":{"line":1606,"column":5}},"687":{"start":{"line":1602,"column":4},"end":{"line":1605,"column":7}},"688":{"start":{"line":1603,"column":6},"end":{"line":1603,"column":33}},"689":{"start":{"line":1603,"column":14},"end":{"line":1603,"column":33}},"690":{"start":{"line":1604,"column":6},"end":{"line":1604,"column":17}},"691":{"start":{"line":1609,"column":0},"end":{"line":1611,"column":1}},"692":{"start":{"line":1610,"column":2},"end":{"line":1610,"column":69}},"693":{"start":{"line":1613,"column":0},"end":{"line":1613,"column":66}},"694":{"start":{"line":1624,"column":0},"end":{"line":1637,"column":1}},"695":{"start":{"line":1625,"column":2},"end":{"line":1625,"column":18}},"696":{"start":{"line":1628,"column":2},"end":{"line":1628,"column":85}},"697":{"start":{"line":1628,"column":36},"end":{"line":1628,"column":85}},"698":{"start":{"line":1631,"column":2},"end":{"line":1636,"column":5}},"699":{"start":{"line":1632,"column":4},"end":{"line":1635,"column":7}},"700":{"start":{"line":1633,"column":6},"end":{"line":1633,"column":33}},"701":{"start":{"line":1633,"column":14},"end":{"line":1633,"column":33}},"702":{"start":{"line":1634,"column":6},"end":{"line":1634,"column":17}},"703":{"start":{"line":1639,"column":0},"end":{"line":1665,"column":1}},"704":{"start":{"line":1640,"column":2},"end":{"line":1640,"column":52}},"705":{"start":{"line":1643,"column":2},"end":{"line":1659,"column":3}},"706":{"start":{"line":1644,"column":4},"end":{"line":1658,"column":5}},"707":{"start":{"line":1645,"column":6},"end":{"line":1645,"column":20}},"708":{"start":{"line":1648,"column":6},"end":{"line":1650,"column":7}},"709":{"start":{"line":1649,"column":8},"end":{"line":1649,"column":95}},"710":{"start":{"line":1652,"column":6},"end":{"line":1654,"column":7}},"711":{"start":{"line":1653,"column":8},"end":{"line":1653,"column":61}},"712":{"start":{"line":1657,"column":6},"end":{"line":1657,"column":42}},"713":{"start":{"line":1662,"column":2},"end":{"line":1664,"column":59}},"714":{"start":{"line":1667,"column":0},"end":{"line":1667,"column":68}},"715":{"start":{"line":1680,"column":0},"end":{"line":1699,"column":1}},"716":{"start":{"line":1681,"column":2},"end":{"line":1681,"column":18}},"717":{"start":{"line":1682,"column":2},"end":{"line":1682,"column":54}},"718":{"start":{"line":1683,"column":2},"end":{"line":1683,"column":24}},"719":{"start":{"line":1684,"column":2},"end":{"line":1684,"column":56}},"720":{"start":{"line":1684,"column":36},"end":{"line":1684,"column":56}},"721":{"start":{"line":1685,"column":2},"end":{"line":1685,"column":50}},"722":{"start":{"line":1687,"column":2},"end":{"line":1687,"column":50}},"723":{"start":{"line":1690,"column":2},"end":{"line":1690,"column":89}},"724":{"start":{"line":1690,"column":36},"end":{"line":1690,"column":89}},"725":{"start":{"line":1693,"column":2},"end":{"line":1698,"column":5}},"726":{"start":{"line":1694,"column":4},"end":{"line":1697,"column":7}},"727":{"start":{"line":1695,"column":6},"end":{"line":1695,"column":33}},"728":{"start":{"line":1695,"column":14},"end":{"line":1695,"column":33}},"729":{"start":{"line":1696,"column":6},"end":{"line":1696,"column":17}},"730":{"start":{"line":1701,"column":0},"end":{"line":1714,"column":1}},"731":{"start":{"line":1703,"column":2},"end":{"line":1703,"column":59}},"732":{"start":{"line":1706,"column":2},"end":{"line":1706,"column":47}},"733":{"start":{"line":1709,"column":2},"end":{"line":1713,"column":5}},"734":{"start":{"line":1710,"column":4},"end":{"line":1710,"column":45}},"735":{"start":{"line":1710,"column":38},"end":{"line":1710,"column":45}},"736":{"start":{"line":1711,"column":4},"end":{"line":1711,"column":55}},"737":{"start":{"line":1711,"column":12},"end":{"line":1711,"column":55}},"738":{"start":{"line":1712,"column":4},"end":{"line":1712,"column":43}},"739":{"start":{"line":1716,"column":0},"end":{"line":1716,"column":64}},"740":{"start":{"line":1724,"column":0},"end":{"line":1741,"column":1}},"741":{"start":{"line":1725,"column":2},"end":{"line":1725,"column":18}},"742":{"start":{"line":1728,"column":2},"end":{"line":1728,"column":68}},"743":{"start":{"line":1728,"column":35},"end":{"line":1728,"column":68}},"744":{"start":{"line":1729,"column":2},"end":{"line":1729,"column":26}},"745":{"start":{"line":1732,"column":2},"end":{"line":1732,"column":80}},"746":{"start":{"line":1732,"column":36},"end":{"line":1732,"column":80}},"747":{"start":{"line":1735,"column":2},"end":{"line":1740,"column":5}},"748":{"start":{"line":1736,"column":4},"end":{"line":1739,"column":7}},"749":{"start":{"line":1737,"column":6},"end":{"line":1737,"column":33}},"750":{"start":{"line":1737,"column":14},"end":{"line":1737,"column":33}},"751":{"start":{"line":1738,"column":6},"end":{"line":1738,"column":17}},"752":{"start":{"line":1743,"column":0},"end":{"line":1748,"column":1}},"753":{"start":{"line":1744,"column":2},"end":{"line":1747,"column":5}},"754":{"start":{"line":1745,"column":4},"end":{"line":1745,"column":56}},"755":{"start":{"line":1745,"column":12},"end":{"line":1745,"column":56}},"756":{"start":{"line":1746,"column":4},"end":{"line":1746,"column":41}},"757":{"start":{"line":1750,"column":0},"end":{"line":1750,"column":66}},"758":{"start":{"line":1759,"column":0},"end":{"line":1759,"column":71}},"759":{"start":{"line":1761,"column":0},"end":{"line":1761,"column":69}},"760":{"start":{"line":1770,"column":0},"end":{"line":1785,"column":1}},"761":{"start":{"line":1771,"column":2},"end":{"line":1771,"column":18}},"762":{"start":{"line":1772,"column":2},"end":{"line":1772,"column":68}},"763":{"start":{"line":1772,"column":35},"end":{"line":1772,"column":68}},"764":{"start":{"line":1773,"column":2},"end":{"line":1773,"column":26}},"765":{"start":{"line":1776,"column":2},"end":{"line":1776,"column":76}},"766":{"start":{"line":1776,"column":36},"end":{"line":1776,"column":76}},"767":{"start":{"line":1779,"column":2},"end":{"line":1784,"column":5}},"768":{"start":{"line":1780,"column":4},"end":{"line":1783,"column":7}},"769":{"start":{"line":1781,"column":6},"end":{"line":1781,"column":33}},"770":{"start":{"line":1781,"column":14},"end":{"line":1781,"column":33}},"771":{"start":{"line":1782,"column":6},"end":{"line":1782,"column":17}},"772":{"start":{"line":1787,"column":0},"end":{"line":1797,"column":1}},"773":{"start":{"line":1789,"column":2},"end":{"line":1789,"column":36}},"774":{"start":{"line":1792,"column":2},"end":{"line":1796,"column":5}},"775":{"start":{"line":1793,"column":4},"end":{"line":1793,"column":32}},"776":{"start":{"line":1793,"column":25},"end":{"line":1793,"column":32}},"777":{"start":{"line":1794,"column":4},"end":{"line":1794,"column":55}},"778":{"start":{"line":1794,"column":12},"end":{"line":1794,"column":55}},"779":{"start":{"line":1795,"column":4},"end":{"line":1795,"column":61}},"780":{"start":{"line":1799,"column":0},"end":{"line":1799,"column":62}},"781":{"start":{"line":1810,"column":0},"end":{"line":1849,"column":2}},"782":{"start":{"line":1811,"column":2},"end":{"line":1811,"column":26}},"783":{"start":{"line":1813,"column":2},"end":{"line":1813,"column":34}},"784":{"start":{"line":1815,"column":2},"end":{"line":1815,"column":62}},"785":{"start":{"line":1817,"column":2},"end":{"line":1817,"column":40}},"786":{"start":{"line":1819,"column":2},"end":{"line":1819,"column":49}},"787":{"start":{"line":1821,"column":2},"end":{"line":1823,"column":3}},"788":{"start":{"line":1822,"column":4},"end":{"line":1822,"column":53}},"789":{"start":{"line":1826,"column":2},"end":{"line":1837,"column":3}},"790":{"start":{"line":1828,"column":4},"end":{"line":1828,"column":72}},"791":{"start":{"line":1830,"column":4},"end":{"line":1830,"column":63}},"792":{"start":{"line":1832,"column":4},"end":{"line":1832,"column":83}},"793":{"start":{"line":1834,"column":4},"end":{"line":1834,"column":80}},"794":{"start":{"line":1834,"column":31},"end":{"line":1834,"column":80}},"795":{"start":{"line":1836,"column":4},"end":{"line":1836,"column":18}},"796":{"start":{"line":1840,"column":2},"end":{"line":1840,"column":49}},"797":{"start":{"line":1842,"column":2},"end":{"line":1842,"column":90}},"798":{"start":{"line":1844,"column":2},"end":{"line":1844,"column":78}},"799":{"start":{"line":1844,"column":29},"end":{"line":1844,"column":78}},"800":{"start":{"line":1846,"column":2},"end":{"line":1846,"column":69}},"801":{"start":{"line":1846,"column":24},"end":{"line":1846,"column":69}},"802":{"start":{"line":1848,"column":2},"end":{"line":1848,"column":16}},"803":{"start":{"line":1851,"column":0},"end":{"line":1851,"column":94}},"804":{"start":{"line":1875,"column":0},"end":{"line":1890,"column":1}},"805":{"start":{"line":1876,"column":2},"end":{"line":1876,"column":18}},"806":{"start":{"line":1877,"column":2},"end":{"line":1877,"column":68}},"807":{"start":{"line":1877,"column":35},"end":{"line":1877,"column":68}},"808":{"start":{"line":1878,"column":2},"end":{"line":1878,"column":26}},"809":{"start":{"line":1881,"column":2},"end":{"line":1881,"column":93}},"810":{"start":{"line":1881,"column":36},"end":{"line":1881,"column":93}},"811":{"start":{"line":1884,"column":2},"end":{"line":1889,"column":5}},"812":{"start":{"line":1885,"column":4},"end":{"line":1888,"column":7}},"813":{"start":{"line":1886,"column":6},"end":{"line":1886,"column":33}},"814":{"start":{"line":1886,"column":14},"end":{"line":1886,"column":33}},"815":{"start":{"line":1887,"column":6},"end":{"line":1887,"column":17}},"816":{"start":{"line":1892,"column":0},"end":{"line":1894,"column":1}},"817":{"start":{"line":1893,"column":2},"end":{"line":1893,"column":69}},"818":{"start":{"line":1896,"column":0},"end":{"line":1896,"column":66}},"819":{"start":{"line":1905,"column":0},"end":{"line":1918,"column":1}},"820":{"start":{"line":1906,"column":2},"end":{"line":1906,"column":18}},"821":{"start":{"line":1909,"column":2},"end":{"line":1909,"column":80}},"822":{"start":{"line":1909,"column":36},"end":{"line":1909,"column":80}},"823":{"start":{"line":1912,"column":2},"end":{"line":1917,"column":5}},"824":{"start":{"line":1913,"column":4},"end":{"line":1916,"column":7}},"825":{"start":{"line":1914,"column":6},"end":{"line":1914,"column":33}},"826":{"start":{"line":1914,"column":14},"end":{"line":1914,"column":33}},"827":{"start":{"line":1915,"column":6},"end":{"line":1915,"column":17}},"828":{"start":{"line":1920,"column":0},"end":{"line":1936,"column":1}},"829":{"start":{"line":1921,"column":2},"end":{"line":1935,"column":5}},"830":{"start":{"line":1923,"column":4},"end":{"line":1923,"column":63}},"831":{"start":{"line":1923,"column":20},"end":{"line":1923,"column":63}},"832":{"start":{"line":1925,"column":4},"end":{"line":1925,"column":105}},"833":{"start":{"line":1925,"column":32},"end":{"line":1925,"column":105}},"834":{"start":{"line":1927,"column":4},"end":{"line":1931,"column":5}},"835":{"start":{"line":1928,"column":6},"end":{"line":1930,"column":7}},"836":{"start":{"line":1929,"column":8},"end":{"line":1929,"column":53}},"837":{"start":{"line":1934,"column":4},"end":{"line":1934,"column":48}},"838":{"start":{"line":1938,"column":0},"end":{"line":1938,"column":66}},"839":{"start":{"line":1948,"column":0},"end":{"line":1966,"column":1}},"840":{"start":{"line":1949,"column":2},"end":{"line":1949,"column":18}},"841":{"start":{"line":1951,"column":2},"end":{"line":1951,"column":54}},"842":{"start":{"line":1952,"column":2},"end":{"line":1952,"column":24}},"843":{"start":{"line":1953,"column":2},"end":{"line":1953,"column":56}},"844":{"start":{"line":1953,"column":36},"end":{"line":1953,"column":56}},"845":{"start":{"line":1954,"column":2},"end":{"line":1954,"column":50}},"846":{"start":{"line":1957,"column":2},"end":{"line":1957,"column":85}},"847":{"start":{"line":1957,"column":36},"end":{"line":1957,"column":85}},"848":{"start":{"line":1960,"column":2},"end":{"line":1965,"column":5}},"849":{"start":{"line":1961,"column":4},"end":{"line":1964,"column":7}},"850":{"start":{"line":1962,"column":6},"end":{"line":1962,"column":33}},"851":{"start":{"line":1962,"column":14},"end":{"line":1962,"column":33}},"852":{"start":{"line":1963,"column":6},"end":{"line":1963,"column":17}},"853":{"start":{"line":1968,"column":0},"end":{"line":1970,"column":1}},"854":{"start":{"line":1969,"column":2},"end":{"line":1969,"column":61}},"855":{"start":{"line":1972,"column":0},"end":{"line":1972,"column":71}},"856":{"start":{"line":1994,"column":0},"end":{"line":2016,"column":2}},"857":{"start":{"line":1995,"column":2},"end":{"line":1995,"column":18}},"858":{"start":{"line":1996,"column":2},"end":{"line":1996,"column":54}},"859":{"start":{"line":1997,"column":2},"end":{"line":1997,"column":24}},"860":{"start":{"line":1998,"column":2},"end":{"line":1998,"column":56}},"861":{"start":{"line":1998,"column":36},"end":{"line":1998,"column":56}},"862":{"start":{"line":1999,"column":2},"end":{"line":1999,"column":58}},"863":{"start":{"line":2000,"column":2},"end":{"line":2000,"column":60}},"864":{"start":{"line":2003,"column":2},"end":{"line":2003,"column":93}},"865":{"start":{"line":2003,"column":36},"end":{"line":2003,"column":93}},"866":{"start":{"line":2006,"column":2},"end":{"line":2006,"column":22}},"867":{"start":{"line":2007,"column":2},"end":{"line":2007,"column":26}},"868":{"start":{"line":2010,"column":2},"end":{"line":2015,"column":5}},"869":{"start":{"line":2011,"column":4},"end":{"line":2014,"column":7}},"870":{"start":{"line":2012,"column":6},"end":{"line":2012,"column":33}},"871":{"start":{"line":2012,"column":14},"end":{"line":2012,"column":33}},"872":{"start":{"line":2013,"column":6},"end":{"line":2013,"column":17}},"873":{"start":{"line":2018,"column":0},"end":{"line":2052,"column":1}},"874":{"start":{"line":2019,"column":2},"end":{"line":2019,"column":26}},"875":{"start":{"line":2020,"column":2},"end":{"line":2020,"column":28}},"876":{"start":{"line":2021,"column":2},"end":{"line":2021,"column":26}},"877":{"start":{"line":2022,"column":2},"end":{"line":2022,"column":36}},"878":{"start":{"line":2025,"column":2},"end":{"line":2027,"column":4}},"879":{"start":{"line":2030,"column":2},"end":{"line":2030,"column":46}},"880":{"start":{"line":2030,"column":30},"end":{"line":2030,"column":46}},"881":{"start":{"line":2031,"column":2},"end":{"line":2031,"column":49}},"882":{"start":{"line":2031,"column":31},"end":{"line":2031,"column":49}},"883":{"start":{"line":2032,"column":2},"end":{"line":2032,"column":61}},"884":{"start":{"line":2032,"column":35},"end":{"line":2032,"column":61}},"885":{"start":{"line":2033,"column":2},"end":{"line":2033,"column":31}},"886":{"start":{"line":2033,"column":11},"end":{"line":2033,"column":31}},"887":{"start":{"line":2035,"column":2},"end":{"line":2035,"column":34}},"888":{"start":{"line":2037,"column":2},"end":{"line":2037,"column":62}},"889":{"start":{"line":2040,"column":2},"end":{"line":2042,"column":3}},"890":{"start":{"line":2041,"column":4},"end":{"line":2041,"column":41}},"891":{"start":{"line":2045,"column":2},"end":{"line":2045,"column":44}},"892":{"start":{"line":2048,"column":2},"end":{"line":2051,"column":5}},"893":{"start":{"line":2049,"column":4},"end":{"line":2049,"column":49}},"894":{"start":{"line":2049,"column":12},"end":{"line":2049,"column":49}},"895":{"start":{"line":2050,"column":4},"end":{"line":2050,"column":45}},"896":{"start":{"line":2054,"column":0},"end":{"line":2054,"column":60}},"897":{"start":{"line":2067,"column":0},"end":{"line":2089,"column":2}},"898":{"start":{"line":2068,"column":2},"end":{"line":2068,"column":18}},"899":{"start":{"line":2069,"column":2},"end":{"line":2069,"column":54}},"900":{"start":{"line":2070,"column":2},"end":{"line":2070,"column":24}},"901":{"start":{"line":2071,"column":2},"end":{"line":2071,"column":56}},"902":{"start":{"line":2071,"column":36},"end":{"line":2071,"column":56}},"903":{"start":{"line":2072,"column":2},"end":{"line":2072,"column":58}},"904":{"start":{"line":2073,"column":2},"end":{"line":2073,"column":60}},"905":{"start":{"line":2076,"column":2},"end":{"line":2076,"column":101}},"906":{"start":{"line":2076,"column":36},"end":{"line":2076,"column":101}},"907":{"start":{"line":2079,"column":2},"end":{"line":2079,"column":22}},"908":{"start":{"line":2080,"column":2},"end":{"line":2080,"column":26}},"909":{"start":{"line":2083,"column":2},"end":{"line":2088,"column":5}},"910":{"start":{"line":2084,"column":4},"end":{"line":2087,"column":7}},"911":{"start":{"line":2085,"column":6},"end":{"line":2085,"column":33}},"912":{"start":{"line":2085,"column":14},"end":{"line":2085,"column":33}},"913":{"start":{"line":2086,"column":6},"end":{"line":2086,"column":17}},"914":{"start":{"line":2091,"column":0},"end":{"line":2121,"column":1}},"915":{"start":{"line":2093,"column":2},"end":{"line":2093,"column":36}},"916":{"start":{"line":2096,"column":2},"end":{"line":2098,"column":4}},"917":{"start":{"line":2100,"column":2},"end":{"line":2100,"column":34}},"918":{"start":{"line":2102,"column":2},"end":{"line":2102,"column":62}},"919":{"start":{"line":2105,"column":2},"end":{"line":2106,"column":30}},"920":{"start":{"line":2106,"column":4},"end":{"line":2106,"column":30}},"921":{"start":{"line":2109,"column":2},"end":{"line":2111,"column":3}},"922":{"start":{"line":2110,"column":4},"end":{"line":2110,"column":41}},"923":{"start":{"line":2114,"column":2},"end":{"line":2114,"column":44}},"924":{"start":{"line":2117,"column":2},"end":{"line":2120,"column":5}},"925":{"start":{"line":2118,"column":4},"end":{"line":2118,"column":49}},"926":{"start":{"line":2118,"column":12},"end":{"line":2118,"column":49}},"927":{"start":{"line":2119,"column":4},"end":{"line":2119,"column":50}},"928":{"start":{"line":2123,"column":0},"end":{"line":2123,"column":63}},"929":{"start":{"line":2131,"column":0},"end":{"line":2143,"column":1}},"930":{"start":{"line":2132,"column":2},"end":{"line":2132,"column":18}},"931":{"start":{"line":2134,"column":2},"end":{"line":2134,"column":67}},"932":{"start":{"line":2134,"column":36},"end":{"line":2134,"column":67}},"933":{"start":{"line":2137,"column":2},"end":{"line":2142,"column":5}},"934":{"start":{"line":2138,"column":4},"end":{"line":2141,"column":7}},"935":{"start":{"line":2139,"column":6},"end":{"line":2139,"column":33}},"936":{"start":{"line":2139,"column":14},"end":{"line":2139,"column":33}},"937":{"start":{"line":2140,"column":6},"end":{"line":2140,"column":17}},"938":{"start":{"line":2145,"column":0},"end":{"line":2147,"column":1}},"939":{"start":{"line":2146,"column":2},"end":{"line":2146,"column":65}},"940":{"start":{"line":2149,"column":0},"end":{"line":2149,"column":62}},"941":{"start":{"line":2160,"column":0},"end":{"line":2178,"column":1}},"942":{"start":{"line":2161,"column":2},"end":{"line":2161,"column":18}},"943":{"start":{"line":2162,"column":2},"end":{"line":2162,"column":54}},"944":{"start":{"line":2163,"column":2},"end":{"line":2163,"column":24}},"945":{"start":{"line":2164,"column":2},"end":{"line":2164,"column":56}},"946":{"start":{"line":2164,"column":36},"end":{"line":2164,"column":56}},"947":{"start":{"line":2166,"column":2},"end":{"line":2166,"column":50}},"948":{"start":{"line":2169,"column":2},"end":{"line":2169,"column":74}},"949":{"start":{"line":2169,"column":36},"end":{"line":2169,"column":74}},"950":{"start":{"line":2172,"column":2},"end":{"line":2177,"column":5}},"951":{"start":{"line":2173,"column":4},"end":{"line":2176,"column":7}},"952":{"start":{"line":2174,"column":6},"end":{"line":2174,"column":33}},"953":{"start":{"line":2174,"column":14},"end":{"line":2174,"column":33}},"954":{"start":{"line":2175,"column":6},"end":{"line":2175,"column":17}},"955":{"start":{"line":2180,"column":0},"end":{"line":2195,"column":1}},"956":{"start":{"line":2182,"column":2},"end":{"line":2184,"column":3}},"957":{"start":{"line":2187,"column":2},"end":{"line":2187,"column":73}},"958":{"start":{"line":2187,"column":31},"end":{"line":2187,"column":73}},"959":{"start":{"line":2189,"column":2},"end":{"line":2189,"column":34}},"960":{"start":{"line":2191,"column":2},"end":{"line":2191,"column":62}},"961":{"start":{"line":2194,"column":2},"end":{"line":2194,"column":54}},"962":{"start":{"line":2197,"column":0},"end":{"line":2197,"column":60}},"963":{"start":{"line":2225,"column":0},"end":{"line":2245,"column":1}},"964":{"start":{"line":2226,"column":2},"end":{"line":2226,"column":18}},"965":{"start":{"line":2227,"column":2},"end":{"line":2227,"column":68}},"966":{"start":{"line":2227,"column":35},"end":{"line":2227,"column":68}},"967":{"start":{"line":2228,"column":2},"end":{"line":2228,"column":26}},"968":{"start":{"line":2231,"column":2},"end":{"line":2231,"column":102}},"969":{"start":{"line":2231,"column":50},"end":{"line":2231,"column":102}},"970":{"start":{"line":2234,"column":2},"end":{"line":2234,"column":93}},"971":{"start":{"line":2234,"column":36},"end":{"line":2234,"column":93}},"972":{"start":{"line":2237,"column":2},"end":{"line":2244,"column":5}},"973":{"start":{"line":2238,"column":4},"end":{"line":2238,"column":28}},"974":{"start":{"line":2240,"column":4},"end":{"line":2243,"column":7}},"975":{"start":{"line":2241,"column":6},"end":{"line":2241,"column":33}},"976":{"start":{"line":2241,"column":14},"end":{"line":2241,"column":33}},"977":{"start":{"line":2242,"column":6},"end":{"line":2242,"column":17}},"978":{"start":{"line":2247,"column":0},"end":{"line":2260,"column":1}},"979":{"start":{"line":2249,"column":2},"end":{"line":2249,"column":43}},"980":{"start":{"line":2250,"column":2},"end":{"line":2250,"column":46}},"981":{"start":{"line":2251,"column":2},"end":{"line":2251,"column":32}},"982":{"start":{"line":2253,"column":2},"end":{"line":2259,"column":4}},"983":{"start":{"line":2262,"column":0},"end":{"line":2262,"column":71}},"984":{"start":{"line":2279,"column":0},"end":{"line":2300,"column":1}},"985":{"start":{"line":2280,"column":2},"end":{"line":2280,"column":18}},"986":{"start":{"line":2281,"column":2},"end":{"line":2281,"column":68}},"987":{"start":{"line":2281,"column":35},"end":{"line":2281,"column":68}},"988":{"start":{"line":2282,"column":2},"end":{"line":2282,"column":26}},"989":{"start":{"line":2285,"column":2},"end":{"line":2285,"column":102}},"990":{"start":{"line":2285,"column":50},"end":{"line":2285,"column":102}},"991":{"start":{"line":2286,"column":2},"end":{"line":2286,"column":117}},"992":{"start":{"line":2286,"column":60},"end":{"line":2286,"column":117}},"993":{"start":{"line":2289,"column":2},"end":{"line":2289,"column":107}},"994":{"start":{"line":2289,"column":36},"end":{"line":2289,"column":107}},"995":{"start":{"line":2292,"column":2},"end":{"line":2299,"column":5}},"996":{"start":{"line":2293,"column":4},"end":{"line":2293,"column":28}},"997":{"start":{"line":2295,"column":4},"end":{"line":2298,"column":7}},"998":{"start":{"line":2296,"column":6},"end":{"line":2296,"column":33}},"999":{"start":{"line":2296,"column":14},"end":{"line":2296,"column":33}},"1000":{"start":{"line":2297,"column":6},"end":{"line":2297,"column":17}},"1001":{"start":{"line":2302,"column":0},"end":{"line":2318,"column":1}},"1002":{"start":{"line":2304,"column":2},"end":{"line":2304,"column":43}},"1003":{"start":{"line":2305,"column":2},"end":{"line":2305,"column":46}},"1004":{"start":{"line":2306,"column":2},"end":{"line":2306,"column":32}},"1005":{"start":{"line":2307,"column":2},"end":{"line":2307,"column":101}},"1006":{"start":{"line":2308,"column":2},"end":{"line":2308,"column":87}},"1007":{"start":{"line":2311,"column":2},"end":{"line":2317,"column":4}},"1008":{"start":{"line":2320,"column":0},"end":{"line":2320,"column":72}},"1009":{"start":{"line":2337,"column":0},"end":{"line":2358,"column":1}},"1010":{"start":{"line":2338,"column":2},"end":{"line":2338,"column":18}},"1011":{"start":{"line":2339,"column":2},"end":{"line":2339,"column":68}},"1012":{"start":{"line":2339,"column":35},"end":{"line":2339,"column":68}},"1013":{"start":{"line":2340,"column":2},"end":{"line":2340,"column":26}},"1014":{"start":{"line":2343,"column":2},"end":{"line":2343,"column":102}},"1015":{"start":{"line":2343,"column":50},"end":{"line":2343,"column":102}},"1016":{"start":{"line":2344,"column":2},"end":{"line":2344,"column":102}},"1017":{"start":{"line":2344,"column":50},"end":{"line":2344,"column":102}},"1018":{"start":{"line":2347,"column":2},"end":{"line":2347,"column":101}},"1019":{"start":{"line":2347,"column":36},"end":{"line":2347,"column":101}},"1020":{"start":{"line":2350,"column":2},"end":{"line":2357,"column":5}},"1021":{"start":{"line":2351,"column":4},"end":{"line":2351,"column":28}},"1022":{"start":{"line":2353,"column":4},"end":{"line":2356,"column":7}},"1023":{"start":{"line":2354,"column":6},"end":{"line":2354,"column":33}},"1024":{"start":{"line":2354,"column":14},"end":{"line":2354,"column":33}},"1025":{"start":{"line":2355,"column":6},"end":{"line":2355,"column":17}},"1026":{"start":{"line":2360,"column":0},"end":{"line":2376,"column":1}},"1027":{"start":{"line":2362,"column":2},"end":{"line":2362,"column":43}},"1028":{"start":{"line":2363,"column":2},"end":{"line":2363,"column":46}},"1029":{"start":{"line":2364,"column":2},"end":{"line":2364,"column":32}},"1030":{"start":{"line":2365,"column":2},"end":{"line":2365,"column":101}},"1031":{"start":{"line":2366,"column":2},"end":{"line":2366,"column":87}},"1032":{"start":{"line":2369,"column":2},"end":{"line":2375,"column":4}},"1033":{"start":{"line":2378,"column":0},"end":{"line":2378,"column":71}},"1034":{"start":{"line":2398,"column":0},"end":{"line":2424,"column":1}},"1035":{"start":{"line":2399,"column":2},"end":{"line":2399,"column":18}},"1036":{"start":{"line":2400,"column":2},"end":{"line":2400,"column":54}},"1037":{"start":{"line":2401,"column":2},"end":{"line":2401,"column":24}},"1038":{"start":{"line":2402,"column":2},"end":{"line":2402,"column":56}},"1039":{"start":{"line":2402,"column":36},"end":{"line":2402,"column":56}},"1040":{"start":{"line":2403,"column":2},"end":{"line":2403,"column":47}},"1041":{"start":{"line":2404,"column":2},"end":{"line":2404,"column":42}},"1042":{"start":{"line":2405,"column":2},"end":{"line":2405,"column":50}},"1043":{"start":{"line":2408,"column":2},"end":{"line":2408,"column":34}},"1044":{"start":{"line":2410,"column":2},"end":{"line":2410,"column":50}},"1045":{"start":{"line":2413,"column":2},"end":{"line":2413,"column":100}},"1046":{"start":{"line":2413,"column":36},"end":{"line":2413,"column":100}},"1047":{"start":{"line":2416,"column":2},"end":{"line":2423,"column":5}},"1048":{"start":{"line":2417,"column":4},"end":{"line":2417,"column":28}},"1049":{"start":{"line":2419,"column":4},"end":{"line":2422,"column":7}},"1050":{"start":{"line":2420,"column":6},"end":{"line":2420,"column":33}},"1051":{"start":{"line":2420,"column":14},"end":{"line":2420,"column":33}},"1052":{"start":{"line":2421,"column":6},"end":{"line":2421,"column":17}},"1053":{"start":{"line":2426,"column":0},"end":{"line":2486,"column":1}},"1054":{"start":{"line":2428,"column":2},"end":{"line":2431,"column":4}},"1055":{"start":{"line":2433,"column":2},"end":{"line":2433,"column":36}},"1056":{"start":{"line":2434,"column":2},"end":{"line":2436,"column":3}},"1057":{"start":{"line":2435,"column":4},"end":{"line":2435,"column":28}},"1058":{"start":{"line":2438,"column":2},"end":{"line":2438,"column":47}},"1059":{"start":{"line":2439,"column":2},"end":{"line":2439,"column":53}},"1060":{"start":{"line":2440,"column":2},"end":{"line":2440,"column":53}},"1061":{"start":{"line":2442,"column":2},"end":{"line":2444,"column":3}},"1062":{"start":{"line":2443,"column":4},"end":{"line":2443,"column":40}},"1063":{"start":{"line":2446,"column":2},"end":{"line":2448,"column":3}},"1064":{"start":{"line":2447,"column":4},"end":{"line":2447,"column":29}},"1065":{"start":{"line":2450,"column":2},"end":{"line":2451,"column":46}},"1066":{"start":{"line":2451,"column":4},"end":{"line":2451,"column":46}},"1067":{"start":{"line":2455,"column":2},"end":{"line":2459,"column":3}},"1068":{"start":{"line":2456,"column":4},"end":{"line":2456,"column":66}},"1069":{"start":{"line":2458,"column":4},"end":{"line":2458,"column":62}},"1070":{"start":{"line":2462,"column":2},"end":{"line":2462,"column":28}},"1071":{"start":{"line":2465,"column":2},"end":{"line":2465,"column":69}},"1072":{"start":{"line":2468,"column":2},"end":{"line":2470,"column":3}},"1073":{"start":{"line":2469,"column":4},"end":{"line":2469,"column":57}},"1074":{"start":{"line":2473,"column":2},"end":{"line":2475,"column":3}},"1075":{"start":{"line":2474,"column":4},"end":{"line":2474,"column":81}},"1076":{"start":{"line":2478,"column":2},"end":{"line":2478,"column":52}},"1077":{"start":{"line":2481,"column":2},"end":{"line":2485,"column":5}},"1078":{"start":{"line":2483,"column":6},"end":{"line":2483,"column":57}},"1079":{"start":{"line":2483,"column":14},"end":{"line":2483,"column":57}},"1080":{"start":{"line":2484,"column":6},"end":{"line":2484,"column":52}},"1081":{"start":{"line":2488,"column":0},"end":{"line":2488,"column":68}},"1082":{"start":{"line":2503,"column":0},"end":{"line":2521,"column":1}},"1083":{"start":{"line":2504,"column":2},"end":{"line":2504,"column":18}},"1084":{"start":{"line":2505,"column":2},"end":{"line":2505,"column":54}},"1085":{"start":{"line":2506,"column":2},"end":{"line":2506,"column":24}},"1086":{"start":{"line":2507,"column":2},"end":{"line":2507,"column":56}},"1087":{"start":{"line":2507,"column":36},"end":{"line":2507,"column":56}},"1088":{"start":{"line":2508,"column":2},"end":{"line":2508,"column":47}},"1089":{"start":{"line":2509,"column":2},"end":{"line":2509,"column":50}},"1090":{"start":{"line":2512,"column":2},"end":{"line":2512,"column":95}},"1091":{"start":{"line":2512,"column":36},"end":{"line":2512,"column":95}},"1092":{"start":{"line":2515,"column":2},"end":{"line":2520,"column":5}},"1093":{"start":{"line":2516,"column":4},"end":{"line":2519,"column":7}},"1094":{"start":{"line":2517,"column":6},"end":{"line":2517,"column":33}},"1095":{"start":{"line":2517,"column":14},"end":{"line":2517,"column":33}},"1096":{"start":{"line":2518,"column":6},"end":{"line":2518,"column":17}},"1097":{"start":{"line":2523,"column":0},"end":{"line":2528,"column":1}},"1098":{"start":{"line":2525,"column":2},"end":{"line":2525,"column":27}},"1099":{"start":{"line":2527,"column":2},"end":{"line":2527,"column":59}},"1100":{"start":{"line":2530,"column":0},"end":{"line":2530,"column":68}},"1101":{"start":{"line":2532,"column":0},"end":{"line":2544,"column":1}},"1102":{"start":{"line":2534,"column":2},"end":{"line":2534,"column":52}},"1103":{"start":{"line":2536,"column":2},"end":{"line":2543,"column":3}},"1104":{"start":{"line":2538,"column":4},"end":{"line":2538,"column":85}},"1105":{"start":{"line":2540,"column":4},"end":{"line":2542,"column":5}},"1106":{"start":{"line":2541,"column":6},"end":{"line":2541,"column":55}},"1107":{"start":{"line":2546,"column":0},"end":{"line":2555,"column":1}},"1108":{"start":{"line":2548,"column":2},"end":{"line":2548,"column":52}},"1109":{"start":{"line":2550,"column":2},"end":{"line":2554,"column":3}},"1110":{"start":{"line":2551,"column":4},"end":{"line":2553,"column":5}},"1111":{"start":{"line":2552,"column":6},"end":{"line":2552,"column":44}},"1112":{"start":{"line":2577,"column":0},"end":{"line":2698,"column":1}},"1113":{"start":{"line":2578,"column":2},"end":{"line":2578,"column":18}},"1114":{"start":{"line":2580,"column":2},"end":{"line":2605,"column":3}},"1115":{"start":{"line":2582,"column":4},"end":{"line":2585,"column":5}},"1116":{"start":{"line":2583,"column":6},"end":{"line":2583,"column":25}},"1117":{"start":{"line":2584,"column":6},"end":{"line":2584,"column":19}},"1118":{"start":{"line":2589,"column":4},"end":{"line":2591,"column":5}},"1119":{"start":{"line":2590,"column":6},"end":{"line":2590,"column":19}},"1120":{"start":{"line":2594,"column":4},"end":{"line":2594,"column":56}},"1121":{"start":{"line":2596,"column":4},"end":{"line":2596,"column":26}},"1122":{"start":{"line":2598,"column":4},"end":{"line":2598,"column":37}},"1123":{"start":{"line":2600,"column":4},"end":{"line":2602,"column":64}},"1124":{"start":{"line":2604,"column":4},"end":{"line":2604,"column":20}},"1125":{"start":{"line":2608,"column":2},"end":{"line":2608,"column":32}},"1126":{"start":{"line":2611,"column":2},"end":{"line":2611,"column":64}},"1127":{"start":{"line":2614,"column":2},"end":{"line":2620,"column":3}},"1128":{"start":{"line":2615,"column":4},"end":{"line":2615,"column":39}},"1129":{"start":{"line":2617,"column":4},"end":{"line":2617,"column":29}},"1130":{"start":{"line":2618,"column":9},"end":{"line":2620,"column":3}},"1131":{"start":{"line":2619,"column":4},"end":{"line":2619,"column":29}},"1132":{"start":{"line":2623,"column":2},"end":{"line":2625,"column":3}},"1133":{"start":{"line":2624,"column":4},"end":{"line":2624,"column":53}},"1134":{"start":{"line":2628,"column":2},"end":{"line":2628,"column":48}},"1135":{"start":{"line":2631,"column":2},"end":{"line":2633,"column":3}},"1136":{"start":{"line":2632,"column":4},"end":{"line":2632,"column":72}},"1137":{"start":{"line":2636,"column":2},"end":{"line":2638,"column":3}},"1138":{"start":{"line":2637,"column":4},"end":{"line":2637,"column":45}},"1139":{"start":{"line":2641,"column":2},"end":{"line":2641,"column":71}},"1140":{"start":{"line":2641,"column":27},"end":{"line":2641,"column":71}},"1141":{"start":{"line":2642,"column":2},"end":{"line":2642,"column":81}},"1142":{"start":{"line":2642,"column":43},"end":{"line":2642,"column":81}},"1143":{"start":{"line":2644,"column":2},"end":{"line":2644,"column":34}},"1144":{"start":{"line":2646,"column":2},"end":{"line":2646,"column":62}},"1145":{"start":{"line":2649,"column":2},"end":{"line":2649,"column":56}},"1146":{"start":{"line":2649,"column":22},"end":{"line":2649,"column":56}},"1147":{"start":{"line":2652,"column":2},"end":{"line":2654,"column":3}},"1148":{"start":{"line":2653,"column":4},"end":{"line":2653,"column":54}},"1149":{"start":{"line":2657,"column":2},"end":{"line":2657,"column":49}},"1150":{"start":{"line":2660,"column":2},"end":{"line":2660,"column":44}},"1151":{"start":{"line":2661,"column":2},"end":{"line":2677,"column":3}},"1152":{"start":{"line":2662,"column":4},"end":{"line":2664,"column":5}},"1153":{"start":{"line":2663,"column":6},"end":{"line":2663,"column":55}},"1154":{"start":{"line":2666,"column":4},"end":{"line":2669,"column":5}},"1155":{"start":{"line":2667,"column":6},"end":{"line":2667,"column":62}},"1156":{"start":{"line":2668,"column":6},"end":{"line":2668,"column":38}},"1157":{"start":{"line":2672,"column":4},"end":{"line":2672,"column":93}},"1158":{"start":{"line":2672,"column":49},"end":{"line":2672,"column":93}},"1159":{"start":{"line":2673,"column":4},"end":{"line":2673,"column":83}},"1160":{"start":{"line":2673,"column":45},"end":{"line":2673,"column":83}},"1161":{"start":{"line":2676,"column":4},"end":{"line":2676,"column":70}},"1162":{"start":{"line":2680,"column":2},"end":{"line":2682,"column":3}},"1163":{"start":{"line":2681,"column":4},"end":{"line":2681,"column":70}},"1164":{"start":{"line":2685,"column":2},"end":{"line":2697,"column":5}},"1165":{"start":{"line":2686,"column":4},"end":{"line":2696,"column":5}},"1166":{"start":{"line":2687,"column":6},"end":{"line":2687,"column":36}},"1167":{"start":{"line":2688,"column":11},"end":{"line":2696,"column":5}},"1168":{"start":{"line":2689,"column":6},"end":{"line":2689,"column":48}},"1169":{"start":{"line":2690,"column":11},"end":{"line":2696,"column":5}},"1170":{"start":{"line":2691,"column":6},"end":{"line":2691,"column":63}},"1171":{"start":{"line":2692,"column":11},"end":{"line":2696,"column":5}},"1172":{"start":{"line":2693,"column":6},"end":{"line":2693,"column":55}},"1173":{"start":{"line":2695,"column":6},"end":{"line":2695,"column":52}},"1174":{"start":{"line":2700,"column":0},"end":{"line":2700,"column":65}},"1175":{"start":{"line":2721,"column":0},"end":{"line":2745,"column":1}},"1176":{"start":{"line":2722,"column":2},"end":{"line":2722,"column":18}},"1177":{"start":{"line":2723,"column":2},"end":{"line":2723,"column":81}},"1178":{"start":{"line":2723,"column":35},"end":{"line":2723,"column":81}},"1179":{"start":{"line":2725,"column":2},"end":{"line":2725,"column":47}},"1180":{"start":{"line":2726,"column":2},"end":{"line":2726,"column":48}},"1181":{"start":{"line":2728,"column":2},"end":{"line":2728,"column":34}},"1182":{"start":{"line":2730,"column":2},"end":{"line":2730,"column":62}},"1183":{"start":{"line":2733,"column":2},"end":{"line":2733,"column":49}},"1184":{"start":{"line":2736,"column":2},"end":{"line":2736,"column":91}},"1185":{"start":{"line":2736,"column":36},"end":{"line":2736,"column":91}},"1186":{"start":{"line":2739,"column":2},"end":{"line":2744,"column":5}},"1187":{"start":{"line":2740,"column":4},"end":{"line":2743,"column":7}},"1188":{"start":{"line":2741,"column":6},"end":{"line":2741,"column":33}},"1189":{"start":{"line":2741,"column":14},"end":{"line":2741,"column":33}},"1190":{"start":{"line":2742,"column":6},"end":{"line":2742,"column":17}},"1191":{"start":{"line":2747,"column":0},"end":{"line":2782,"column":1}},"1192":{"start":{"line":2749,"column":2},"end":{"line":2752,"column":3}},"1193":{"start":{"line":2755,"column":2},"end":{"line":2757,"column":3}},"1194":{"start":{"line":2756,"column":4},"end":{"line":2756,"column":51}},"1195":{"start":{"line":2760,"column":2},"end":{"line":2760,"column":24}},"1196":{"start":{"line":2761,"column":2},"end":{"line":2761,"column":24}},"1197":{"start":{"line":2764,"column":2},"end":{"line":2781,"column":5}},"1198":{"start":{"line":2765,"column":4},"end":{"line":2765,"column":55}},"1199":{"start":{"line":2765,"column":12},"end":{"line":2765,"column":55}},"1200":{"start":{"line":2766,"column":4},"end":{"line":2766,"column":121}},"1201":{"start":{"line":2766,"column":23},"end":{"line":2766,"column":121}},"1202":{"start":{"line":2768,"column":4},"end":{"line":2768,"column":21}},"1203":{"start":{"line":2770,"column":4},"end":{"line":2770,"column":30}},"1204":{"start":{"line":2770,"column":12},"end":{"line":2770,"column":30}},"1205":{"start":{"line":2772,"column":4},"end":{"line":2778,"column":5}},"1206":{"start":{"line":2773,"column":6},"end":{"line":2773,"column":45}},"1207":{"start":{"line":2775,"column":6},"end":{"line":2775,"column":79}},"1208":{"start":{"line":2777,"column":6},"end":{"line":2777,"column":80}},"1209":{"start":{"line":2780,"column":4},"end":{"line":2780,"column":44}},"1210":{"start":{"line":2784,"column":0},"end":{"line":2784,"column":77}},"1211":{"start":{"line":2805,"column":0},"end":{"line":2825,"column":1}},"1212":{"start":{"line":2806,"column":2},"end":{"line":2806,"column":18}},"1213":{"start":{"line":2807,"column":2},"end":{"line":2808,"column":62}},"1214":{"start":{"line":2810,"column":2},"end":{"line":2810,"column":24}},"1215":{"start":{"line":2811,"column":2},"end":{"line":2811,"column":56}},"1216":{"start":{"line":2811,"column":36},"end":{"line":2811,"column":56}},"1217":{"start":{"line":2813,"column":2},"end":{"line":2813,"column":50}},"1218":{"start":{"line":2816,"column":2},"end":{"line":2816,"column":89}},"1219":{"start":{"line":2816,"column":36},"end":{"line":2816,"column":89}},"1220":{"start":{"line":2819,"column":2},"end":{"line":2824,"column":5}},"1221":{"start":{"line":2820,"column":4},"end":{"line":2823,"column":7}},"1222":{"start":{"line":2821,"column":6},"end":{"line":2821,"column":33}},"1223":{"start":{"line":2821,"column":14},"end":{"line":2821,"column":33}},"1224":{"start":{"line":2822,"column":6},"end":{"line":2822,"column":17}},"1225":{"start":{"line":2827,"column":0},"end":{"line":2865,"column":1}},"1226":{"start":{"line":2829,"column":2},"end":{"line":2832,"column":3}},"1227":{"start":{"line":2834,"column":2},"end":{"line":2834,"column":34}},"1228":{"start":{"line":2836,"column":2},"end":{"line":2836,"column":62}},"1229":{"start":{"line":2840,"column":2},"end":{"line":2844,"column":4}},"1230":{"start":{"line":2847,"column":2},"end":{"line":2847,"column":67}},"1231":{"start":{"line":2850,"column":2},"end":{"line":2852,"column":3}},"1232":{"start":{"line":2851,"column":4},"end":{"line":2851,"column":51}},"1233":{"start":{"line":2855,"column":2},"end":{"line":2855,"column":54}},"1234":{"start":{"line":2858,"column":2},"end":{"line":2864,"column":5}},"1235":{"start":{"line":2859,"column":4},"end":{"line":2859,"column":49}},"1236":{"start":{"line":2859,"column":12},"end":{"line":2859,"column":49}},"1237":{"start":{"line":2860,"column":4},"end":{"line":2860,"column":76}},"1238":{"start":{"line":2860,"column":30},"end":{"line":2860,"column":76}},"1239":{"start":{"line":2863,"column":4},"end":{"line":2863,"column":40}},"1240":{"start":{"line":2867,"column":0},"end":{"line":2867,"column":62}},"1241":{"start":{"line":2883,"column":0},"end":{"line":2901,"column":1}},"1242":{"start":{"line":2884,"column":2},"end":{"line":2884,"column":18}},"1243":{"start":{"line":2885,"column":2},"end":{"line":2885,"column":54}},"1244":{"start":{"line":2886,"column":2},"end":{"line":2886,"column":24}},"1245":{"start":{"line":2887,"column":2},"end":{"line":2887,"column":56}},"1246":{"start":{"line":2887,"column":36},"end":{"line":2887,"column":56}},"1247":{"start":{"line":2889,"column":2},"end":{"line":2889,"column":50}},"1248":{"start":{"line":2892,"column":2},"end":{"line":2892,"column":92}},"1249":{"start":{"line":2892,"column":36},"end":{"line":2892,"column":92}},"1250":{"start":{"line":2895,"column":2},"end":{"line":2900,"column":5}},"1251":{"start":{"line":2896,"column":4},"end":{"line":2899,"column":7}},"1252":{"start":{"line":2897,"column":6},"end":{"line":2897,"column":33}},"1253":{"start":{"line":2897,"column":14},"end":{"line":2897,"column":33}},"1254":{"start":{"line":2898,"column":6},"end":{"line":2898,"column":17}},"1255":{"start":{"line":2903,"column":0},"end":{"line":2930,"column":1}},"1256":{"start":{"line":2905,"column":2},"end":{"line":2908,"column":3}},"1257":{"start":{"line":2911,"column":2},"end":{"line":2911,"column":82}},"1258":{"start":{"line":2913,"column":2},"end":{"line":2913,"column":34}},"1259":{"start":{"line":2915,"column":2},"end":{"line":2915,"column":62}},"1260":{"start":{"line":2918,"column":2},"end":{"line":2920,"column":3}},"1261":{"start":{"line":2919,"column":4},"end":{"line":2919,"column":51}},"1262":{"start":{"line":2923,"column":2},"end":{"line":2929,"column":5}},"1263":{"start":{"line":2924,"column":4},"end":{"line":2924,"column":49}},"1264":{"start":{"line":2924,"column":12},"end":{"line":2924,"column":49}},"1265":{"start":{"line":2925,"column":4},"end":{"line":2925,"column":69}},"1266":{"start":{"line":2925,"column":30},"end":{"line":2925,"column":69}},"1267":{"start":{"line":2928,"column":4},"end":{"line":2928,"column":40}},"1268":{"start":{"line":2932,"column":0},"end":{"line":2932,"column":72}},"1269":{"start":{"line":2965,"column":0},"end":{"line":2965,"column":514}},"1270":{"start":{"line":2982,"column":0},"end":{"line":3023,"column":1}},"1271":{"start":{"line":2983,"column":2},"end":{"line":2983,"column":18}},"1272":{"start":{"line":2984,"column":2},"end":{"line":2984,"column":54}},"1273":{"start":{"line":2985,"column":2},"end":{"line":2985,"column":24}},"1274":{"start":{"line":2986,"column":2},"end":{"line":2986,"column":56}},"1275":{"start":{"line":2986,"column":36},"end":{"line":2986,"column":56}},"1276":{"start":{"line":2988,"column":2},"end":{"line":2988,"column":45}},"1277":{"start":{"line":2989,"column":2},"end":{"line":2989,"column":47}},"1278":{"start":{"line":2990,"column":2},"end":{"line":2990,"column":46}},"1279":{"start":{"line":2991,"column":2},"end":{"line":2991,"column":50}},"1280":{"start":{"line":2994,"column":2},"end":{"line":2997,"column":3}},"1281":{"start":{"line":2995,"column":4},"end":{"line":2995,"column":23}},"1282":{"start":{"line":2996,"column":4},"end":{"line":2996,"column":20}},"1283":{"start":{"line":2999,"column":2},"end":{"line":3001,"column":3}},"1284":{"start":{"line":3000,"column":4},"end":{"line":3000,"column":29}},"1285":{"start":{"line":3003,"column":2},"end":{"line":3005,"column":3}},"1286":{"start":{"line":3004,"column":4},"end":{"line":3004,"column":31}},"1287":{"start":{"line":3007,"column":2},"end":{"line":3009,"column":3}},"1288":{"start":{"line":3008,"column":4},"end":{"line":3008,"column":35}},"1289":{"start":{"line":3012,"column":2},"end":{"line":3012,"column":45}},"1290":{"start":{"line":3015,"column":2},"end":{"line":3015,"column":127}},"1291":{"start":{"line":3015,"column":36},"end":{"line":3015,"column":127}},"1292":{"start":{"line":3017,"column":2},"end":{"line":3022,"column":5}},"1293":{"start":{"line":3018,"column":4},"end":{"line":3021,"column":7}},"1294":{"start":{"line":3019,"column":6},"end":{"line":3019,"column":33}},"1295":{"start":{"line":3019,"column":14},"end":{"line":3019,"column":33}},"1296":{"start":{"line":3020,"column":6},"end":{"line":3020,"column":17}},"1297":{"start":{"line":3025,"column":0},"end":{"line":3093,"column":1}},"1298":{"start":{"line":3027,"column":2},"end":{"line":3092,"column":3}},"1299":{"start":{"line":3028,"column":4},"end":{"line":3030,"column":27}},"1300":{"start":{"line":3032,"column":4},"end":{"line":3040,"column":6}},"1301":{"start":{"line":3043,"column":4},"end":{"line":3043,"column":63}},"1302":{"start":{"line":3043,"column":25},"end":{"line":3043,"column":63}},"1303":{"start":{"line":3045,"column":4},"end":{"line":3055,"column":5}},"1304":{"start":{"line":3046,"column":6},"end":{"line":3048,"column":25}},"1305":{"start":{"line":3050,"column":6},"end":{"line":3050,"column":20}},"1306":{"start":{"line":3051,"column":6},"end":{"line":3053,"column":9}},"1307":{"start":{"line":3052,"column":8},"end":{"line":3052,"column":22}},"1308":{"start":{"line":3054,"column":6},"end":{"line":3054,"column":32}},"1309":{"start":{"line":3057,"column":4},"end":{"line":3057,"column":36}},"1310":{"start":{"line":3059,"column":4},"end":{"line":3059,"column":64}},"1311":{"start":{"line":3062,"column":4},"end":{"line":3064,"column":5}},"1312":{"start":{"line":3063,"column":6},"end":{"line":3063,"column":48}},"1313":{"start":{"line":3067,"column":4},"end":{"line":3067,"column":51}},"1314":{"start":{"line":3070,"column":4},"end":{"line":3073,"column":7}},"1315":{"start":{"line":3071,"column":6},"end":{"line":3071,"column":57}},"1316":{"start":{"line":3071,"column":14},"end":{"line":3071,"column":57}},"1317":{"start":{"line":3072,"column":6},"end":{"line":3072,"column":52}},"1318":{"start":{"line":3076,"column":4},"end":{"line":3078,"column":11}},"1319":{"start":{"line":3080,"column":4},"end":{"line":3080,"column":27}},"1320":{"start":{"line":3081,"column":4},"end":{"line":3081,"column":22}},"1321":{"start":{"line":3082,"column":4},"end":{"line":3082,"column":32}},"1322":{"start":{"line":3083,"column":4},"end":{"line":3083,"column":28}},"1323":{"start":{"line":3086,"column":4},"end":{"line":3086,"column":77}},"1324":{"start":{"line":3088,"column":4},"end":{"line":3091,"column":7}},"1325":{"start":{"line":3089,"column":6},"end":{"line":3089,"column":58}},"1326":{"start":{"line":3089,"column":15},"end":{"line":3089,"column":58}},"1327":{"start":{"line":3090,"column":6},"end":{"line":3090,"column":64}},"1328":{"start":{"line":3095,"column":0},"end":{"line":3095,"column":60}},"1329":{"start":{"line":3102,"column":0},"end":{"line":3122,"column":1}},"1330":{"start":{"line":3103,"column":2},"end":{"line":3105,"column":3}},"1331":{"start":{"line":3104,"column":4},"end":{"line":3104,"column":17}},"1332":{"start":{"line":3107,"column":2},"end":{"line":3107,"column":32}},"1333":{"start":{"line":3108,"column":2},"end":{"line":3108,"column":22}},"1334":{"start":{"line":3109,"column":2},"end":{"line":3109,"column":10}},"1335":{"start":{"line":3110,"column":2},"end":{"line":3110,"column":21}},"1336":{"start":{"line":3112,"column":2},"end":{"line":3119,"column":3}},"1337":{"start":{"line":3113,"column":4},"end":{"line":3113,"column":18}},"1338":{"start":{"line":3114,"column":4},"end":{"line":3118,"column":5}},"1339":{"start":{"line":3115,"column":6},"end":{"line":3115,"column":52}},"1340":{"start":{"line":3117,"column":6},"end":{"line":3117,"column":48}},"1341":{"start":{"line":3121,"column":2},"end":{"line":3121,"column":19}},"1342":{"start":{"line":3146,"column":0},"end":{"line":3177,"column":1}},"1343":{"start":{"line":3147,"column":2},"end":{"line":3147,"column":18}},"1344":{"start":{"line":3148,"column":2},"end":{"line":3148,"column":69}},"1345":{"start":{"line":3148,"column":36},"end":{"line":3148,"column":69}},"1346":{"start":{"line":3150,"column":2},"end":{"line":3152,"column":3}},"1347":{"start":{"line":3151,"column":4},"end":{"line":3151,"column":102}},"1348":{"start":{"line":3154,"column":2},"end":{"line":3156,"column":3}},"1349":{"start":{"line":3155,"column":4},"end":{"line":3155,"column":25}},"1350":{"start":{"line":3158,"column":2},"end":{"line":3160,"column":3}},"1351":{"start":{"line":3159,"column":4},"end":{"line":3159,"column":31}},"1352":{"start":{"line":3162,"column":2},"end":{"line":3164,"column":3}},"1353":{"start":{"line":3163,"column":4},"end":{"line":3163,"column":51}},"1354":{"start":{"line":3167,"column":2},"end":{"line":3167,"column":91}},"1355":{"start":{"line":3167,"column":36},"end":{"line":3167,"column":91}},"1356":{"start":{"line":3170,"column":2},"end":{"line":3176,"column":5}},"1357":{"start":{"line":3171,"column":4},"end":{"line":3175,"column":7}},"1358":{"start":{"line":3172,"column":6},"end":{"line":3172,"column":33}},"1359":{"start":{"line":3172,"column":14},"end":{"line":3172,"column":33}},"1360":{"start":{"line":3173,"column":6},"end":{"line":3173,"column":32}},"1361":{"start":{"line":3173,"column":14},"end":{"line":3173,"column":32}},"1362":{"start":{"line":3174,"column":6},"end":{"line":3174,"column":39}},"1363":{"start":{"line":3179,"column":0},"end":{"line":3269,"column":1}},"1364":{"start":{"line":3180,"column":2},"end":{"line":3184,"column":4}},"1365":{"start":{"line":3187,"column":2},"end":{"line":3187,"column":41}},"1366":{"start":{"line":3190,"column":2},"end":{"line":3199,"column":3}},"1367":{"start":{"line":3191,"column":4},"end":{"line":3198,"column":5}},"1368":{"start":{"line":3192,"column":6},"end":{"line":3192,"column":51}},"1369":{"start":{"line":3195,"column":6},"end":{"line":3197,"column":7}},"1370":{"start":{"line":3196,"column":8},"end":{"line":3196,"column":39}},"1371":{"start":{"line":3201,"column":2},"end":{"line":3201,"column":34}},"1372":{"start":{"line":3204,"column":2},"end":{"line":3204,"column":62}},"1373":{"start":{"line":3207,"column":2},"end":{"line":3215,"column":3}},"1374":{"start":{"line":3210,"column":6},"end":{"line":3210,"column":41}},"1375":{"start":{"line":3212,"column":6},"end":{"line":3212,"column":62}},"1376":{"start":{"line":3213,"column":9},"end":{"line":3215,"column":3}},"1377":{"start":{"line":3214,"column":4},"end":{"line":3214,"column":52}},"1378":{"start":{"line":3218,"column":2},"end":{"line":3220,"column":3}},"1379":{"start":{"line":3219,"column":4},"end":{"line":3219,"column":79}},"1380":{"start":{"line":3223,"column":2},"end":{"line":3223,"column":55}},"1381":{"start":{"line":3226,"column":2},"end":{"line":3268,"column":5}},"1382":{"start":{"line":3227,"column":4},"end":{"line":3227,"column":49}},"1383":{"start":{"line":3227,"column":12},"end":{"line":3227,"column":49}},"1384":{"start":{"line":3229,"column":4},"end":{"line":3231,"column":5}},"1385":{"start":{"line":3230,"column":6},"end":{"line":3230,"column":55}},"1386":{"start":{"line":3234,"column":4},"end":{"line":3234,"column":19}},"1387":{"start":{"line":3235,"column":4},"end":{"line":3235,"column":67}},"1388":{"start":{"line":3235,"column":26},"end":{"line":3235,"column":67}},"1389":{"start":{"line":3236,"column":4},"end":{"line":3236,"column":54}},"1390":{"start":{"line":3236,"column":22},"end":{"line":3236,"column":54}},"1391":{"start":{"line":3237,"column":4},"end":{"line":3237,"column":54}},"1392":{"start":{"line":3237,"column":22},"end":{"line":3237,"column":54}},"1393":{"start":{"line":3240,"column":4},"end":{"line":3247,"column":5}},"1394":{"start":{"line":3242,"column":6},"end":{"line":3244,"column":7}},"1395":{"start":{"line":3243,"column":8},"end":{"line":3243,"column":62}},"1396":{"start":{"line":3246,"column":6},"end":{"line":3246,"column":67}},"1397":{"start":{"line":3250,"column":4},"end":{"line":3250,"column":26}},"1398":{"start":{"line":3253,"column":4},"end":{"line":3259,"column":5}},"1399":{"start":{"line":3254,"column":6},"end":{"line":3254,"column":30}},"1400":{"start":{"line":3255,"column":6},"end":{"line":3255,"column":67}},"1401":{"start":{"line":3258,"column":6},"end":{"line":3258,"column":54}},"1402":{"start":{"line":3262,"column":4},"end":{"line":3264,"column":5}},"1403":{"start":{"line":3263,"column":6},"end":{"line":3263,"column":55}},"1404":{"start":{"line":3267,"column":4},"end":{"line":3267,"column":53}},"1405":{"start":{"line":3271,"column":0},"end":{"line":3271,"column":64}},"1406":{"start":{"line":3283,"column":0},"end":{"line":3287,"column":1}},"1407":{"start":{"line":3284,"column":2},"end":{"line":3284,"column":26}},"1408":{"start":{"line":3285,"column":2},"end":{"line":3285,"column":49}},"1409":{"start":{"line":3286,"column":2},"end":{"line":3286,"column":51}},"1410":{"start":{"line":3289,"column":0},"end":{"line":3289,"column":125}},"1411":{"start":{"line":3302,"column":0},"end":{"line":3306,"column":1}},"1412":{"start":{"line":3303,"column":2},"end":{"line":3303,"column":26}},"1413":{"start":{"line":3304,"column":2},"end":{"line":3304,"column":49}},"1414":{"start":{"line":3305,"column":2},"end":{"line":3305,"column":49}},"1415":{"start":{"line":3308,"column":0},"end":{"line":3308,"column":121}},"1416":{"start":{"line":3311,"column":0},"end":{"line":3326,"column":1}},"1417":{"start":{"line":3312,"column":2},"end":{"line":3323,"column":3}},"1418":{"start":{"line":3313,"column":4},"end":{"line":3313,"column":18}},"1419":{"start":{"line":3314,"column":4},"end":{"line":3314,"column":45}},"1420":{"start":{"line":3314,"column":26},"end":{"line":3314,"column":45}},"1421":{"start":{"line":3315,"column":4},"end":{"line":3315,"column":66}},"1422":{"start":{"line":3315,"column":33},"end":{"line":3315,"column":66}},"1423":{"start":{"line":3316,"column":4},"end":{"line":3316,"column":45}},"1424":{"start":{"line":3316,"column":26},"end":{"line":3316,"column":45}},"1425":{"start":{"line":3317,"column":4},"end":{"line":3317,"column":57}},"1426":{"start":{"line":3317,"column":30},"end":{"line":3317,"column":57}},"1427":{"start":{"line":3318,"column":4},"end":{"line":3318,"column":31}},"1428":{"start":{"line":3319,"column":9},"end":{"line":3323,"column":3}},"1429":{"start":{"line":3320,"column":4},"end":{"line":3320,"column":43}},"1430":{"start":{"line":3321,"column":9},"end":{"line":3323,"column":3}},"1431":{"start":{"line":3322,"column":4},"end":{"line":3322,"column":42}},"1432":{"start":{"line":3325,"column":2},"end":{"line":3325,"column":15}},"1433":{"start":{"line":3329,"column":0},"end":{"line":3351,"column":1}},"1434":{"start":{"line":3330,"column":2},"end":{"line":3330,"column":14}},"1435":{"start":{"line":3331,"column":2},"end":{"line":3337,"column":3}},"1436":{"start":{"line":3332,"column":4},"end":{"line":3332,"column":30}},"1437":{"start":{"line":3333,"column":9},"end":{"line":3337,"column":3}},"1438":{"start":{"line":3334,"column":4},"end":{"line":3334,"column":29}},"1439":{"start":{"line":3335,"column":9},"end":{"line":3337,"column":3}},"1440":{"start":{"line":3336,"column":4},"end":{"line":3336,"column":28}},"1441":{"start":{"line":3339,"column":2},"end":{"line":3348,"column":3}},"1442":{"start":{"line":3340,"column":4},"end":{"line":3340,"column":114}},"1443":{"start":{"line":3341,"column":9},"end":{"line":3348,"column":3}},"1444":{"start":{"line":3342,"column":4},"end":{"line":3342,"column":55}},"1445":{"start":{"line":3343,"column":9},"end":{"line":3348,"column":3}},"1446":{"start":{"line":3344,"column":4},"end":{"line":3344,"column":38}},"1447":{"start":{"line":3345,"column":4},"end":{"line":3347,"column":5}},"1448":{"start":{"line":3346,"column":6},"end":{"line":3346,"column":114}},"1449":{"start":{"line":3350,"column":2},"end":{"line":3350,"column":17}},"1450":{"start":{"line":3353,"column":0},"end":{"line":3358,"column":1}},"1451":{"start":{"line":3360,"column":0},"end":{"line":3360,"column":28}}},"branchMap":{"1":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":61},"end":{"line":65,"column":71}},{"start":{"line":65,"column":74},"end":{"line":65,"column":89}}]},"2":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":16},"end":{"line":65,"column":31}},{"start":{"line":65,"column":35},"end":{"line":65,"column":58}}]},"3":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":83},"end":{"line":66,"column":114}},{"start":{"line":66,"column":117},"end":{"line":66,"column":143}}]},"4":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":27},"end":{"line":66,"column":42}},{"start":{"line":66,"column":46},"end":{"line":66,"column":80}}]},"5":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":53},"end":{"line":67,"column":69}},{"start":{"line":67,"column":72},"end":{"line":67,"column":83}}]},"6":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":27}},{"start":{"line":67,"column":31},"end":{"line":67,"column":50}}]},"7":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":71},"end":{"line":68,"column":96}},{"start":{"line":68,"column":99},"end":{"line":68,"column":119}}]},"8":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":21},"end":{"line":68,"column":36}},{"start":{"line":68,"column":40},"end":{"line":68,"column":68}}]},"9":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":73},"end":{"line":69,"column":99}},{"start":{"line":69,"column":102},"end":{"line":69,"column":123}}]},"10":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":22},"end":{"line":69,"column":37}},{"start":{"line":69,"column":41},"end":{"line":69,"column":70}}]},"11":{"line":70,"type":"cond-expr","locations":[{"start":{"line":70,"column":75},"end":{"line":70,"column":102}},{"start":{"line":70,"column":105},"end":{"line":70,"column":127}}]},"12":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":23},"end":{"line":70,"column":38}},{"start":{"line":70,"column":42},"end":{"line":70,"column":72}}]},"13":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"14":{"line":80,"type":"cond-expr","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":20}},{"start":{"line":81,"column":23},"end":{"line":81,"column":53}}]},"15":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"16":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":5},"end":{"line":85,"column":12}},{"start":{"line":85,"column":16},"end":{"line":85,"column":38}}]},"17":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":9},"end":{"line":87,"column":9}},{"start":{"line":87,"column":9},"end":{"line":87,"column":9}}]},"18":{"line":92,"type":"cond-expr","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":14}},{"start":{"line":94,"column":6},"end":{"line":94,"column":15}}]},"19":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":63}},{"start":{"line":148,"column":67},"end":{"line":148,"column":83}}]},"20":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"21":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"22":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"23":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"24":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":32},"end":{"line":184,"column":42}},{"start":{"line":184,"column":46},"end":{"line":184,"column":86}}]},"25":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":67},"end":{"line":184,"column":79}},{"start":{"line":184,"column":82},"end":{"line":184,"column":86}}]},"26":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":28},"end":{"line":186,"column":35}},{"start":{"line":186,"column":38},"end":{"line":186,"column":40}}]},"27":{"line":187,"type":"cond-expr","locations":[{"start":{"line":187,"column":26},"end":{"line":187,"column":33}},{"start":{"line":187,"column":36},"end":{"line":187,"column":45}}]},"28":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"29":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":5},"end":{"line":189,"column":14}},{"start":{"line":189,"column":18},"end":{"line":189,"column":36}}]},"30":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"31":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":5},"end":{"line":195,"column":14}},{"start":{"line":195,"column":18},"end":{"line":195,"column":38}},{"start":{"line":195,"column":42},"end":{"line":195,"column":64}}]},"32":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":6},"end":{"line":200,"column":6}},{"start":{"line":200,"column":6},"end":{"line":200,"column":6}}]},"33":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"34":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":9},"end":{"line":212,"column":9}},{"start":{"line":212,"column":9},"end":{"line":212,"column":9}}]},"35":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":12},"end":{"line":212,"column":21}},{"start":{"line":212,"column":25},"end":{"line":212,"column":46}},{"start":{"line":212,"column":50},"end":{"line":212,"column":75}}]},"36":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"37":{"line":227,"type":"cond-expr","locations":[{"start":{"line":227,"column":32},"end":{"line":227,"column":34}},{"start":{"line":227,"column":37},"end":{"line":227,"column":45}}]},"38":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"39":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":232,"column":4}},{"start":{"line":232,"column":4},"end":{"line":232,"column":4}}]},"40":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"41":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"42":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"43":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":5},"end":{"line":251,"column":21}},{"start":{"line":251,"column":25},"end":{"line":251,"column":57}}]},"44":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"45":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":5},"end":{"line":257,"column":12}},{"start":{"line":257,"column":16},"end":{"line":257,"column":30}},{"start":{"line":257,"column":34},"end":{"line":257,"column":68}}]},"46":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"47":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"48":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"49":{"line":284,"type":"cond-expr","locations":[{"start":{"line":284,"column":30},"end":{"line":284,"column":37}},{"start":{"line":284,"column":40},"end":{"line":284,"column":71}}]},"50":{"line":284,"type":"cond-expr","locations":[{"start":{"line":284,"column":55},"end":{"line":284,"column":67}},{"start":{"line":284,"column":70},"end":{"line":284,"column":71}}]},"51":{"line":285,"type":"cond-expr","locations":[{"start":{"line":285,"column":31},"end":{"line":285,"column":38}},{"start":{"line":285,"column":41},"end":{"line":285,"column":74}}]},"52":{"line":285,"type":"cond-expr","locations":[{"start":{"line":285,"column":57},"end":{"line":285,"column":70}},{"start":{"line":285,"column":73},"end":{"line":285,"column":74}}]},"53":{"line":286,"type":"cond-expr","locations":[{"start":{"line":286,"column":77},"end":{"line":286,"column":88}},{"start":{"line":286,"column":91},"end":{"line":286,"column":101}}]},"54":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":19},"end":{"line":286,"column":38}},{"start":{"line":286,"column":42},"end":{"line":286,"column":74}}]},"55":{"line":287,"type":"cond-expr","locations":[{"start":{"line":287,"column":43},"end":{"line":287,"column":75}},{"start":{"line":287,"column":78},"end":{"line":287,"column":99}}]},"56":{"line":288,"type":"cond-expr","locations":[{"start":{"line":288,"column":34},"end":{"line":288,"column":41}},{"start":{"line":288,"column":44},"end":{"line":288,"column":112}}]},"57":{"line":288,"type":"cond-expr","locations":[{"start":{"line":288,"column":85},"end":{"line":288,"column":94}},{"start":{"line":288,"column":97},"end":{"line":288,"column":112}}]},"58":{"line":290,"type":"cond-expr","locations":[{"start":{"line":290,"column":49},"end":{"line":290,"column":64}},{"start":{"line":290,"column":67},"end":{"line":290,"column":84}}]},"59":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"60":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":5},"end":{"line":296,"column":38}},{"start":{"line":297,"column":8},"end":{"line":297,"column":46}},{"start":{"line":297,"column":50},"end":{"line":297,"column":93}}]},"61":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"62":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":5},"end":{"line":302,"column":21}},{"start":{"line":302,"column":25},"end":{"line":302,"column":52}}]},"63":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":2},"end":{"line":315,"column":2}},{"start":{"line":315,"column":2},"end":{"line":315,"column":2}}]},"64":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":2},"end":{"line":320,"column":2}},{"start":{"line":320,"column":2},"end":{"line":320,"column":2}}]},"65":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"66":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":4},"end":{"line":330,"column":4}},{"start":{"line":330,"column":4},"end":{"line":330,"column":4}}]},"67":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":8},"end":{"line":332,"column":8}},{"start":{"line":332,"column":8},"end":{"line":332,"column":8}}]},"68":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":2},"end":{"line":346,"column":2}},{"start":{"line":346,"column":2},"end":{"line":346,"column":2}}]},"69":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"70":{"line":355,"type":"binary-expr","locations":[{"start":{"line":355,"column":5},"end":{"line":355,"column":27}},{"start":{"line":355,"column":31},"end":{"line":355,"column":61}}]},"71":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"72":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":5},"end":{"line":357,"column":36}},{"start":{"line":357,"column":40},"end":{"line":357,"column":79}}]},"73":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":358,"column":2}},{"start":{"line":358,"column":2},"end":{"line":358,"column":2}}]},"74":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":5},"end":{"line":358,"column":37}},{"start":{"line":358,"column":41},"end":{"line":358,"column":81}}]},"75":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":2},"end":{"line":359,"column":2}},{"start":{"line":359,"column":2},"end":{"line":359,"column":2}}]},"76":{"line":359,"type":"binary-expr","locations":[{"start":{"line":359,"column":5},"end":{"line":359,"column":38}},{"start":{"line":359,"column":42},"end":{"line":359,"column":83}}]},"77":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"78":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":2},"end":{"line":367,"column":2}},{"start":{"line":367,"column":2},"end":{"line":367,"column":2}}]},"79":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":2},"end":{"line":375,"column":2}},{"start":{"line":375,"column":2},"end":{"line":375,"column":2}}]},"80":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":2},"end":{"line":400,"column":2}},{"start":{"line":400,"column":2},"end":{"line":400,"column":2}}]},"81":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":12},"end":{"line":401,"column":19}},{"start":{"line":401,"column":23},"end":{"line":401,"column":25}}]},"82":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":2},"end":{"line":402,"column":2}},{"start":{"line":402,"column":2},"end":{"line":402,"column":2}}]},"83":{"line":402,"type":"binary-expr","locations":[{"start":{"line":402,"column":5},"end":{"line":402,"column":23}},{"start":{"line":402,"column":27},"end":{"line":402,"column":56}}]},"84":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":9},"end":{"line":404,"column":9}},{"start":{"line":404,"column":9},"end":{"line":404,"column":9}}]},"85":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]},"86":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":2},"end":{"line":417,"column":2}},{"start":{"line":417,"column":2},"end":{"line":417,"column":2}}]},"87":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":6},"end":{"line":422,"column":6}},{"start":{"line":422,"column":6},"end":{"line":422,"column":6}}]},"88":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":4},"end":{"line":430,"column":4}},{"start":{"line":430,"column":4},"end":{"line":430,"column":4}}]},"89":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":4},"end":{"line":431,"column":4}},{"start":{"line":431,"column":4},"end":{"line":431,"column":4}}]},"90":{"line":431,"type":"binary-expr","locations":[{"start":{"line":431,"column":7},"end":{"line":431,"column":10}},{"start":{"line":431,"column":14},"end":{"line":431,"column":22}}]},"91":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":4},"end":{"line":433,"column":4}},{"start":{"line":433,"column":4},"end":{"line":433,"column":4}}]},"92":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":4},"end":{"line":437,"column":4}},{"start":{"line":437,"column":4},"end":{"line":437,"column":4}}]},"93":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":4},"end":{"line":447,"column":4}},{"start":{"line":447,"column":4},"end":{"line":447,"column":4}}]},"94":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":2},"end":{"line":459,"column":2}},{"start":{"line":459,"column":2},"end":{"line":459,"column":2}}]},"95":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":2},"end":{"line":488,"column":2}},{"start":{"line":488,"column":2},"end":{"line":488,"column":2}}]},"96":{"line":489,"type":"binary-expr","locations":[{"start":{"line":489,"column":12},"end":{"line":489,"column":19}},{"start":{"line":489,"column":23},"end":{"line":489,"column":37}}]},"97":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":2},"end":{"line":490,"column":2}},{"start":{"line":490,"column":2},"end":{"line":490,"column":2}}]},"98":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":5},"end":{"line":490,"column":25}},{"start":{"line":490,"column":29},"end":{"line":490,"column":58}}]},"99":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":9},"end":{"line":492,"column":9}},{"start":{"line":492,"column":9},"end":{"line":492,"column":9}}]},"100":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":2},"end":{"line":499,"column":2}},{"start":{"line":499,"column":2},"end":{"line":499,"column":2}}]},"101":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":34},"end":{"line":504,"column":63}},{"start":{"line":504,"column":67},"end":{"line":504,"column":92}}]},"102":{"line":507,"type":"cond-expr","locations":[{"start":{"line":508,"column":6},"end":{"line":508,"column":33}},{"start":{"line":508,"column":36},"end":{"line":508,"column":73}}]},"103":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":2},"end":{"line":511,"column":2}},{"start":{"line":511,"column":2},"end":{"line":511,"column":2}}]},"104":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":6},"end":{"line":514,"column":6}},{"start":{"line":514,"column":6},"end":{"line":514,"column":6}}]},"105":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":2},"end":{"line":524,"column":2}},{"start":{"line":524,"column":2},"end":{"line":524,"column":2}}]},"106":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":4},"end":{"line":525,"column":4}},{"start":{"line":525,"column":4},"end":{"line":525,"column":4}}]},"107":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":6},"end":{"line":532,"column":6}},{"start":{"line":532,"column":6},"end":{"line":532,"column":6}}]},"108":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":2},"end":{"line":594,"column":2}},{"start":{"line":594,"column":2},"end":{"line":594,"column":2}}]},"109":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":12},"end":{"line":595,"column":19}},{"start":{"line":595,"column":23},"end":{"line":595,"column":37}}]},"110":{"line":597,"type":"if","locations":[{"start":{"line":597,"column":2},"end":{"line":597,"column":2}},{"start":{"line":597,"column":2},"end":{"line":597,"column":2}}]},"111":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"112":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":6},"end":{"line":607,"column":6}},{"start":{"line":607,"column":6},"end":{"line":607,"column":6}}]},"113":{"line":607,"type":"binary-expr","locations":[{"start":{"line":607,"column":9},"end":{"line":607,"column":12}},{"start":{"line":607,"column":16},"end":{"line":607,"column":25}}]},"114":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":2},"end":{"line":615,"column":2}},{"start":{"line":615,"column":2},"end":{"line":615,"column":2}}]},"115":{"line":621,"type":"cond-expr","locations":[{"start":{"line":621,"column":66},"end":{"line":621,"column":103}},{"start":{"line":621,"column":106},"end":{"line":621,"column":145}}]},"116":{"line":621,"type":"binary-expr","locations":[{"start":{"line":621,"column":13},"end":{"line":621,"column":36}},{"start":{"line":621,"column":40},"end":{"line":621,"column":63}}]},"117":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":6},"end":{"line":632,"column":6}},{"start":{"line":632,"column":6},"end":{"line":632,"column":6}}]},"118":{"line":645,"type":"cond-expr","locations":[{"start":{"line":645,"column":45},"end":{"line":645,"column":70}},{"start":{"line":645,"column":73},"end":{"line":645,"column":75}}]},"119":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":2},"end":{"line":649,"column":2}},{"start":{"line":649,"column":2},"end":{"line":649,"column":2}}]},"120":{"line":649,"type":"binary-expr","locations":[{"start":{"line":649,"column":5},"end":{"line":649,"column":14}},{"start":{"line":649,"column":18},"end":{"line":649,"column":30}},{"start":{"line":649,"column":34},"end":{"line":649,"column":69}}]},"121":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":4},"end":{"line":656,"column":4}},{"start":{"line":656,"column":4},"end":{"line":656,"column":4}}]},"122":{"line":656,"type":"binary-expr","locations":[{"start":{"line":656,"column":7},"end":{"line":656,"column":9}},{"start":{"line":656,"column":13},"end":{"line":656,"column":16}}]},"123":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":4},"end":{"line":658,"column":4}},{"start":{"line":658,"column":4},"end":{"line":658,"column":4}}]},"124":{"line":658,"type":"binary-expr","locations":[{"start":{"line":658,"column":7},"end":{"line":658,"column":8}},{"start":{"line":658,"column":12},"end":{"line":658,"column":30}},{"start":{"line":658,"column":34},"end":{"line":658,"column":61}}]},"125":{"line":664,"type":"binary-expr","locations":[{"start":{"line":664,"column":22},"end":{"line":664,"column":33}},{"start":{"line":664,"column":37},"end":{"line":664,"column":38}}]},"126":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":4},"end":{"line":688,"column":4}},{"start":{"line":688,"column":4},"end":{"line":688,"column":4}}]},"127":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":4},"end":{"line":698,"column":4}},{"start":{"line":698,"column":4},"end":{"line":698,"column":4}}]},"128":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":2},"end":{"line":709,"column":2}},{"start":{"line":709,"column":2},"end":{"line":709,"column":2}}]},"129":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":12},"end":{"line":710,"column":19}},{"start":{"line":710,"column":23},"end":{"line":710,"column":25}}]},"130":{"line":712,"type":"cond-expr","locations":[{"start":{"line":712,"column":31},"end":{"line":712,"column":35}},{"start":{"line":712,"column":38},"end":{"line":712,"column":44}}]},"131":{"line":716,"type":"if","locations":[{"start":{"line":716,"column":2},"end":{"line":716,"column":2}},{"start":{"line":716,"column":2},"end":{"line":716,"column":2}}]},"132":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":2},"end":{"line":719,"column":2}},{"start":{"line":719,"column":2},"end":{"line":719,"column":2}}]},"133":{"line":720,"type":"binary-expr","locations":[{"start":{"line":720,"column":39},"end":{"line":720,"column":68}},{"start":{"line":720,"column":72},"end":{"line":720,"column":97}}]},"134":{"line":723,"type":"cond-expr","locations":[{"start":{"line":724,"column":6},"end":{"line":724,"column":33}},{"start":{"line":724,"column":36},"end":{"line":724,"column":73}}]},"135":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":2},"end":{"line":727,"column":2}},{"start":{"line":727,"column":2},"end":{"line":727,"column":2}}]},"136":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":6},"end":{"line":729,"column":6}},{"start":{"line":729,"column":6},"end":{"line":729,"column":6}}]},"137":{"line":735,"type":"if","locations":[{"start":{"line":735,"column":4},"end":{"line":735,"column":4}},{"start":{"line":735,"column":4},"end":{"line":735,"column":4}}]},"138":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":4},"end":{"line":736,"column":4}},{"start":{"line":736,"column":4},"end":{"line":736,"column":4}}]},"139":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":4},"end":{"line":737,"column":4}},{"start":{"line":737,"column":4},"end":{"line":737,"column":4}}]},"140":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":4},"end":{"line":738,"column":4}},{"start":{"line":738,"column":4},"end":{"line":738,"column":4}}]},"141":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":4},"end":{"line":739,"column":4}},{"start":{"line":739,"column":4},"end":{"line":739,"column":4}}]},"142":{"line":818,"type":"if","locations":[{"start":{"line":818,"column":2},"end":{"line":818,"column":2}},{"start":{"line":818,"column":2},"end":{"line":818,"column":2}}]},"143":{"line":819,"type":"binary-expr","locations":[{"start":{"line":819,"column":12},"end":{"line":819,"column":19}},{"start":{"line":819,"column":23},"end":{"line":819,"column":38}}]},"144":{"line":820,"type":"cond-expr","locations":[{"start":{"line":820,"column":32},"end":{"line":820,"column":38}},{"start":{"line":820,"column":41},"end":{"line":820,"column":45}}]},"145":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":2},"end":{"line":822,"column":2}},{"start":{"line":822,"column":2},"end":{"line":822,"column":2}}]},"146":{"line":868,"type":"if","locations":[{"start":{"line":868,"column":2},"end":{"line":868,"column":2}},{"start":{"line":868,"column":2},"end":{"line":868,"column":2}}]},"147":{"line":872,"type":"if","locations":[{"start":{"line":872,"column":2},"end":{"line":872,"column":2}},{"start":{"line":872,"column":2},"end":{"line":872,"column":2}}]},"148":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":2},"end":{"line":878,"column":2}},{"start":{"line":878,"column":2},"end":{"line":878,"column":2}}]},"149":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":6},"end":{"line":883,"column":6}},{"start":{"line":883,"column":6},"end":{"line":883,"column":6}}]},"150":{"line":894,"type":"if","locations":[{"start":{"line":894,"column":4},"end":{"line":894,"column":4}},{"start":{"line":894,"column":4},"end":{"line":894,"column":4}}]},"151":{"line":895,"type":"if","locations":[{"start":{"line":895,"column":4},"end":{"line":895,"column":4}},{"start":{"line":895,"column":4},"end":{"line":895,"column":4}}]},"152":{"line":895,"type":"binary-expr","locations":[{"start":{"line":895,"column":7},"end":{"line":895,"column":10}},{"start":{"line":895,"column":14},"end":{"line":895,"column":22}}]},"153":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":4},"end":{"line":896,"column":4}},{"start":{"line":896,"column":4},"end":{"line":896,"column":4}}]},"154":{"line":897,"type":"cond-expr","locations":[{"start":{"line":897,"column":51},"end":{"line":897,"column":69}},{"start":{"line":897,"column":72},"end":{"line":897,"column":82}}]},"155":{"line":898,"type":"cond-expr","locations":[{"start":{"line":898,"column":86},"end":{"line":898,"column":106}},{"start":{"line":898,"column":109},"end":{"line":898,"column":113}}]},"156":{"line":898,"type":"binary-expr","locations":[{"start":{"line":898,"column":19},"end":{"line":898,"column":51}},{"start":{"line":898,"column":55},"end":{"line":898,"column":83}}]},"157":{"line":899,"type":"cond-expr","locations":[{"start":{"line":899,"column":85},"end":{"line":899,"column":109}},{"start":{"line":899,"column":112},"end":{"line":899,"column":113}}]},"158":{"line":899,"type":"binary-expr","locations":[{"start":{"line":899,"column":22},"end":{"line":899,"column":54}},{"start":{"line":899,"column":58},"end":{"line":899,"column":82}}]},"159":{"line":900,"type":"cond-expr","locations":[{"start":{"line":900,"column":88},"end":{"line":900,"column":89}},{"start":{"line":900,"column":92},"end":{"line":900,"column":102}}]},"160":{"line":900,"type":"binary-expr","locations":[{"start":{"line":900,"column":21},"end":{"line":900,"column":53}},{"start":{"line":900,"column":57},"end":{"line":900,"column":85}}]},"161":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":4},"end":{"line":901,"column":4}},{"start":{"line":901,"column":4},"end":{"line":901,"column":4}}]},"162":{"line":923,"type":"if","locations":[{"start":{"line":923,"column":2},"end":{"line":923,"column":2}},{"start":{"line":923,"column":2},"end":{"line":923,"column":2}}]},"163":{"line":927,"type":"if","locations":[{"start":{"line":927,"column":2},"end":{"line":927,"column":2}},{"start":{"line":927,"column":2},"end":{"line":927,"column":2}}]},"164":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":2},"end":{"line":933,"column":2}},{"start":{"line":933,"column":2},"end":{"line":933,"column":2}}]},"165":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":6},"end":{"line":938,"column":6}},{"start":{"line":938,"column":6},"end":{"line":938,"column":6}}]},"166":{"line":950,"type":"if","locations":[{"start":{"line":950,"column":4},"end":{"line":950,"column":4}},{"start":{"line":950,"column":4},"end":{"line":950,"column":4}}]},"167":{"line":951,"type":"if","locations":[{"start":{"line":951,"column":4},"end":{"line":951,"column":4}},{"start":{"line":951,"column":4},"end":{"line":951,"column":4}}]},"168":{"line":951,"type":"binary-expr","locations":[{"start":{"line":951,"column":7},"end":{"line":951,"column":10}},{"start":{"line":951,"column":14},"end":{"line":951,"column":22}}]},"169":{"line":952,"type":"if","locations":[{"start":{"line":952,"column":4},"end":{"line":952,"column":4}},{"start":{"line":952,"column":4},"end":{"line":952,"column":4}}]},"170":{"line":954,"type":"cond-expr","locations":[{"start":{"line":954,"column":51},"end":{"line":954,"column":69}},{"start":{"line":954,"column":72},"end":{"line":954,"column":82}}]},"171":{"line":955,"type":"cond-expr","locations":[{"start":{"line":955,"column":86},"end":{"line":955,"column":106}},{"start":{"line":955,"column":109},"end":{"line":955,"column":113}}]},"172":{"line":955,"type":"binary-expr","locations":[{"start":{"line":955,"column":19},"end":{"line":955,"column":51}},{"start":{"line":955,"column":55},"end":{"line":955,"column":83}}]},"173":{"line":956,"type":"cond-expr","locations":[{"start":{"line":956,"column":85},"end":{"line":956,"column":109}},{"start":{"line":956,"column":112},"end":{"line":956,"column":113}}]},"174":{"line":956,"type":"binary-expr","locations":[{"start":{"line":956,"column":22},"end":{"line":956,"column":54}},{"start":{"line":956,"column":58},"end":{"line":956,"column":82}}]},"175":{"line":957,"type":"cond-expr","locations":[{"start":{"line":957,"column":88},"end":{"line":957,"column":89}},{"start":{"line":957,"column":92},"end":{"line":957,"column":102}}]},"176":{"line":957,"type":"binary-expr","locations":[{"start":{"line":957,"column":21},"end":{"line":957,"column":53}},{"start":{"line":957,"column":57},"end":{"line":957,"column":85}}]},"177":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":4},"end":{"line":959,"column":4}},{"start":{"line":959,"column":4},"end":{"line":959,"column":4}}]},"178":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":2},"end":{"line":980,"column":2}},{"start":{"line":980,"column":2},"end":{"line":980,"column":2}}]},"179":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":2},"end":{"line":984,"column":2}},{"start":{"line":984,"column":2},"end":{"line":984,"column":2}}]},"180":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":2},"end":{"line":990,"column":2}},{"start":{"line":990,"column":2},"end":{"line":990,"column":2}}]},"181":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":6},"end":{"line":995,"column":6}},{"start":{"line":995,"column":6},"end":{"line":995,"column":6}}]},"182":{"line":1006,"type":"if","locations":[{"start":{"line":1006,"column":4},"end":{"line":1006,"column":4}},{"start":{"line":1006,"column":4},"end":{"line":1006,"column":4}}]},"183":{"line":1007,"type":"if","locations":[{"start":{"line":1007,"column":4},"end":{"line":1007,"column":4}},{"start":{"line":1007,"column":4},"end":{"line":1007,"column":4}}]},"184":{"line":1007,"type":"binary-expr","locations":[{"start":{"line":1007,"column":7},"end":{"line":1007,"column":10}},{"start":{"line":1007,"column":14},"end":{"line":1007,"column":22}}]},"185":{"line":1008,"type":"if","locations":[{"start":{"line":1008,"column":4},"end":{"line":1008,"column":4}},{"start":{"line":1008,"column":4},"end":{"line":1008,"column":4}}]},"186":{"line":1009,"type":"cond-expr","locations":[{"start":{"line":1009,"column":51},"end":{"line":1009,"column":69}},{"start":{"line":1009,"column":72},"end":{"line":1009,"column":82}}]},"187":{"line":1010,"type":"cond-expr","locations":[{"start":{"line":1010,"column":86},"end":{"line":1010,"column":106}},{"start":{"line":1010,"column":109},"end":{"line":1010,"column":113}}]},"188":{"line":1010,"type":"binary-expr","locations":[{"start":{"line":1010,"column":19},"end":{"line":1010,"column":51}},{"start":{"line":1010,"column":55},"end":{"line":1010,"column":83}}]},"189":{"line":1011,"type":"cond-expr","locations":[{"start":{"line":1011,"column":85},"end":{"line":1011,"column":109}},{"start":{"line":1011,"column":112},"end":{"line":1011,"column":113}}]},"190":{"line":1011,"type":"binary-expr","locations":[{"start":{"line":1011,"column":22},"end":{"line":1011,"column":54}},{"start":{"line":1011,"column":58},"end":{"line":1011,"column":82}}]},"191":{"line":1012,"type":"cond-expr","locations":[{"start":{"line":1012,"column":88},"end":{"line":1012,"column":89}},{"start":{"line":1012,"column":92},"end":{"line":1012,"column":102}}]},"192":{"line":1012,"type":"binary-expr","locations":[{"start":{"line":1012,"column":21},"end":{"line":1012,"column":53}},{"start":{"line":1012,"column":57},"end":{"line":1012,"column":85}}]},"193":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}},{"start":{"line":1013,"column":4},"end":{"line":1013,"column":4}}]},"194":{"line":1020,"type":"if","locations":[{"start":{"line":1020,"column":2},"end":{"line":1020,"column":2}},{"start":{"line":1020,"column":2},"end":{"line":1020,"column":2}}]},"195":{"line":1021,"type":"if","locations":[{"start":{"line":1021,"column":2},"end":{"line":1021,"column":2}},{"start":{"line":1021,"column":2},"end":{"line":1021,"column":2}}]},"196":{"line":1022,"type":"if","locations":[{"start":{"line":1022,"column":2},"end":{"line":1022,"column":2}},{"start":{"line":1022,"column":2},"end":{"line":1022,"column":2}}]},"197":{"line":1025,"type":"if","locations":[{"start":{"line":1025,"column":2},"end":{"line":1025,"column":2}},{"start":{"line":1025,"column":2},"end":{"line":1025,"column":2}}]},"198":{"line":1025,"type":"binary-expr","locations":[{"start":{"line":1025,"column":5},"end":{"line":1025,"column":21}},{"start":{"line":1025,"column":25},"end":{"line":1025,"column":52}}]},"199":{"line":1026,"type":"if","locations":[{"start":{"line":1026,"column":2},"end":{"line":1026,"column":2}},{"start":{"line":1026,"column":2},"end":{"line":1026,"column":2}}]},"200":{"line":1026,"type":"binary-expr","locations":[{"start":{"line":1026,"column":5},"end":{"line":1026,"column":21}},{"start":{"line":1026,"column":25},"end":{"line":1026,"column":52}}]},"201":{"line":1034,"type":"binary-expr","locations":[{"start":{"line":1034,"column":39},"end":{"line":1034,"column":68}},{"start":{"line":1034,"column":72},"end":{"line":1034,"column":97}}]},"202":{"line":1038,"type":"cond-expr","locations":[{"start":{"line":1038,"column":51},"end":{"line":1038,"column":65}},{"start":{"line":1038,"column":68},"end":{"line":1038,"column":73}}]},"203":{"line":1039,"type":"cond-expr","locations":[{"start":{"line":1039,"column":49},"end":{"line":1039,"column":62}},{"start":{"line":1039,"column":65},"end":{"line":1039,"column":70}}]},"204":{"line":1046,"type":"if","locations":[{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}},{"start":{"line":1046,"column":4},"end":{"line":1046,"column":4}}]},"205":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}},{"start":{"line":1047,"column":4},"end":{"line":1047,"column":4}}]},"206":{"line":1048,"type":"if","locations":[{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}},{"start":{"line":1048,"column":4},"end":{"line":1048,"column":4}}]},"207":{"line":1049,"type":"if","locations":[{"start":{"line":1049,"column":4},"end":{"line":1049,"column":4}},{"start":{"line":1049,"column":4},"end":{"line":1049,"column":4}}]},"208":{"line":1050,"type":"if","locations":[{"start":{"line":1050,"column":4},"end":{"line":1050,"column":4}},{"start":{"line":1050,"column":4},"end":{"line":1050,"column":4}}]},"209":{"line":1078,"type":"if","locations":[{"start":{"line":1078,"column":2},"end":{"line":1078,"column":2}},{"start":{"line":1078,"column":2},"end":{"line":1078,"column":2}}]},"210":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":2},"end":{"line":1084,"column":2}},{"start":{"line":1084,"column":2},"end":{"line":1084,"column":2}}]},"211":{"line":1089,"type":"if","locations":[{"start":{"line":1089,"column":6},"end":{"line":1089,"column":6}},{"start":{"line":1089,"column":6},"end":{"line":1089,"column":6}}]},"212":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}},{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}}]},"213":{"line":1130,"type":"if","locations":[{"start":{"line":1130,"column":2},"end":{"line":1130,"column":2}},{"start":{"line":1130,"column":2},"end":{"line":1130,"column":2}}]},"214":{"line":1136,"type":"if","locations":[{"start":{"line":1136,"column":2},"end":{"line":1136,"column":2}},{"start":{"line":1136,"column":2},"end":{"line":1136,"column":2}}]},"215":{"line":1141,"type":"if","locations":[{"start":{"line":1141,"column":6},"end":{"line":1141,"column":6}},{"start":{"line":1141,"column":6},"end":{"line":1141,"column":6}}]},"216":{"line":1150,"type":"if","locations":[{"start":{"line":1150,"column":4},"end":{"line":1150,"column":4}},{"start":{"line":1150,"column":4},"end":{"line":1150,"column":4}}]},"217":{"line":1151,"type":"if","locations":[{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}},{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}}]},"218":{"line":1151,"type":"binary-expr","locations":[{"start":{"line":1151,"column":7},"end":{"line":1151,"column":10}},{"start":{"line":1151,"column":14},"end":{"line":1151,"column":22}}]},"219":{"line":1152,"type":"if","locations":[{"start":{"line":1152,"column":4},"end":{"line":1152,"column":4}},{"start":{"line":1152,"column":4},"end":{"line":1152,"column":4}}]},"220":{"line":1154,"type":"if","locations":[{"start":{"line":1154,"column":4},"end":{"line":1154,"column":4}},{"start":{"line":1154,"column":4},"end":{"line":1154,"column":4}}]},"221":{"line":1177,"type":"if","locations":[{"start":{"line":1177,"column":2},"end":{"line":1177,"column":2}},{"start":{"line":1177,"column":2},"end":{"line":1177,"column":2}}]},"222":{"line":1181,"type":"if","locations":[{"start":{"line":1181,"column":2},"end":{"line":1181,"column":2}},{"start":{"line":1181,"column":2},"end":{"line":1181,"column":2}}]},"223":{"line":1187,"type":"if","locations":[{"start":{"line":1187,"column":2},"end":{"line":1187,"column":2}},{"start":{"line":1187,"column":2},"end":{"line":1187,"column":2}}]},"224":{"line":1192,"type":"if","locations":[{"start":{"line":1192,"column":6},"end":{"line":1192,"column":6}},{"start":{"line":1192,"column":6},"end":{"line":1192,"column":6}}]},"225":{"line":1202,"type":"if","locations":[{"start":{"line":1202,"column":4},"end":{"line":1202,"column":4}},{"start":{"line":1202,"column":4},"end":{"line":1202,"column":4}}]},"226":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":4},"end":{"line":1203,"column":4}},{"start":{"line":1203,"column":4},"end":{"line":1203,"column":4}}]},"227":{"line":1203,"type":"binary-expr","locations":[{"start":{"line":1203,"column":7},"end":{"line":1203,"column":10}},{"start":{"line":1203,"column":14},"end":{"line":1203,"column":22}}]},"228":{"line":1204,"type":"if","locations":[{"start":{"line":1204,"column":4},"end":{"line":1204,"column":4}},{"start":{"line":1204,"column":4},"end":{"line":1204,"column":4}}]},"229":{"line":1206,"type":"if","locations":[{"start":{"line":1206,"column":4},"end":{"line":1206,"column":4}},{"start":{"line":1206,"column":4},"end":{"line":1206,"column":4}}]},"230":{"line":1211,"type":"if","locations":[{"start":{"line":1211,"column":2},"end":{"line":1211,"column":2}},{"start":{"line":1211,"column":2},"end":{"line":1211,"column":2}}]},"231":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":9},"end":{"line":1213,"column":9}},{"start":{"line":1213,"column":9},"end":{"line":1213,"column":9}}]},"232":{"line":1220,"type":"binary-expr","locations":[{"start":{"line":1220,"column":12},"end":{"line":1220,"column":19}},{"start":{"line":1220,"column":23},"end":{"line":1220,"column":25}}]},"233":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":2},"end":{"line":1226,"column":2}},{"start":{"line":1226,"column":2},"end":{"line":1226,"column":2}}]},"234":{"line":1230,"type":"if","locations":[{"start":{"line":1230,"column":2},"end":{"line":1230,"column":2}},{"start":{"line":1230,"column":2},"end":{"line":1230,"column":2}}]},"235":{"line":1237,"type":"if","locations":[{"start":{"line":1237,"column":4},"end":{"line":1237,"column":4}},{"start":{"line":1237,"column":4},"end":{"line":1237,"column":4}}]},"236":{"line":1238,"type":"if","locations":[{"start":{"line":1238,"column":4},"end":{"line":1238,"column":4}},{"start":{"line":1238,"column":4},"end":{"line":1238,"column":4}}]},"237":{"line":1239,"type":"if","locations":[{"start":{"line":1239,"column":4},"end":{"line":1239,"column":4}},{"start":{"line":1239,"column":4},"end":{"line":1239,"column":4}}]},"238":{"line":1240,"type":"if","locations":[{"start":{"line":1240,"column":4},"end":{"line":1240,"column":4}},{"start":{"line":1240,"column":4},"end":{"line":1240,"column":4}}]},"239":{"line":1241,"type":"if","locations":[{"start":{"line":1241,"column":4},"end":{"line":1241,"column":4}},{"start":{"line":1241,"column":4},"end":{"line":1241,"column":4}}]},"240":{"line":1270,"type":"if","locations":[{"start":{"line":1270,"column":2},"end":{"line":1270,"column":2}},{"start":{"line":1270,"column":2},"end":{"line":1270,"column":2}}]},"241":{"line":1276,"type":"if","locations":[{"start":{"line":1276,"column":2},"end":{"line":1276,"column":2}},{"start":{"line":1276,"column":2},"end":{"line":1276,"column":2}}]},"242":{"line":1281,"type":"if","locations":[{"start":{"line":1281,"column":6},"end":{"line":1281,"column":6}},{"start":{"line":1281,"column":6},"end":{"line":1281,"column":6}}]},"243":{"line":1304,"type":"if","locations":[{"start":{"line":1304,"column":2},"end":{"line":1304,"column":2}},{"start":{"line":1304,"column":2},"end":{"line":1304,"column":2}}]},"244":{"line":1305,"type":"binary-expr","locations":[{"start":{"line":1305,"column":12},"end":{"line":1305,"column":19}},{"start":{"line":1305,"column":23},"end":{"line":1305,"column":25}}]},"245":{"line":1308,"type":"if","locations":[{"start":{"line":1308,"column":2},"end":{"line":1308,"column":2}},{"start":{"line":1308,"column":2},"end":{"line":1308,"column":2}}]},"246":{"line":1314,"type":"if","locations":[{"start":{"line":1314,"column":2},"end":{"line":1314,"column":2}},{"start":{"line":1314,"column":2},"end":{"line":1314,"column":2}}]},"247":{"line":1319,"type":"if","locations":[{"start":{"line":1319,"column":6},"end":{"line":1319,"column":6}},{"start":{"line":1319,"column":6},"end":{"line":1319,"column":6}}]},"248":{"line":1329,"type":"if","locations":[{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}},{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}}]},"249":{"line":1336,"type":"if","locations":[{"start":{"line":1336,"column":4},"end":{"line":1336,"column":4}},{"start":{"line":1336,"column":4},"end":{"line":1336,"column":4}}]},"250":{"line":1337,"type":"if","locations":[{"start":{"line":1337,"column":4},"end":{"line":1337,"column":4}},{"start":{"line":1337,"column":4},"end":{"line":1337,"column":4}}]},"251":{"line":1338,"type":"if","locations":[{"start":{"line":1338,"column":4},"end":{"line":1338,"column":4}},{"start":{"line":1338,"column":4},"end":{"line":1338,"column":4}}]},"252":{"line":1388,"type":"if","locations":[{"start":{"line":1388,"column":2},"end":{"line":1388,"column":2}},{"start":{"line":1388,"column":2},"end":{"line":1388,"column":2}}]},"253":{"line":1391,"type":"if","locations":[{"start":{"line":1391,"column":2},"end":{"line":1391,"column":2}},{"start":{"line":1391,"column":2},"end":{"line":1391,"column":2}}]},"254":{"line":1396,"type":"if","locations":[{"start":{"line":1396,"column":6},"end":{"line":1396,"column":6}},{"start":{"line":1396,"column":6},"end":{"line":1396,"column":6}}]},"255":{"line":1406,"type":"if","locations":[{"start":{"line":1406,"column":4},"end":{"line":1406,"column":4}},{"start":{"line":1406,"column":4},"end":{"line":1406,"column":4}}]},"256":{"line":1432,"type":"if","locations":[{"start":{"line":1432,"column":2},"end":{"line":1432,"column":2}},{"start":{"line":1432,"column":2},"end":{"line":1432,"column":2}}]},"257":{"line":1436,"type":"if","locations":[{"start":{"line":1436,"column":2},"end":{"line":1436,"column":2}},{"start":{"line":1436,"column":2},"end":{"line":1436,"column":2}}]},"258":{"line":1441,"type":"if","locations":[{"start":{"line":1441,"column":6},"end":{"line":1441,"column":6}},{"start":{"line":1441,"column":6},"end":{"line":1441,"column":6}}]},"259":{"line":1453,"type":"cond-expr","locations":[{"start":{"line":1453,"column":56},"end":{"line":1453,"column":70}},{"start":{"line":1453,"column":73},"end":{"line":1453,"column":78}}]},"260":{"line":1461,"type":"if","locations":[{"start":{"line":1461,"column":4},"end":{"line":1461,"column":4}},{"start":{"line":1461,"column":4},"end":{"line":1461,"column":4}}]},"261":{"line":1463,"type":"if","locations":[{"start":{"line":1463,"column":4},"end":{"line":1463,"column":4}},{"start":{"line":1463,"column":4},"end":{"line":1463,"column":4}}]},"262":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":2},"end":{"line":1484,"column":2}},{"start":{"line":1484,"column":2},"end":{"line":1484,"column":2}}]},"263":{"line":1485,"type":"binary-expr","locations":[{"start":{"line":1485,"column":12},"end":{"line":1485,"column":19}},{"start":{"line":1485,"column":23},"end":{"line":1485,"column":25}}]},"264":{"line":1488,"type":"if","locations":[{"start":{"line":1488,"column":2},"end":{"line":1488,"column":2}},{"start":{"line":1488,"column":2},"end":{"line":1488,"column":2}}]},"265":{"line":1492,"type":"if","locations":[{"start":{"line":1492,"column":6},"end":{"line":1492,"column":6}},{"start":{"line":1492,"column":6},"end":{"line":1492,"column":6}}]},"266":{"line":1511,"type":"if","locations":[{"start":{"line":1511,"column":2},"end":{"line":1511,"column":2}},{"start":{"line":1511,"column":2},"end":{"line":1511,"column":2}}]},"267":{"line":1516,"type":"if","locations":[{"start":{"line":1516,"column":6},"end":{"line":1516,"column":6}},{"start":{"line":1516,"column":6},"end":{"line":1516,"column":6}}]},"268":{"line":1524,"type":"if","locations":[{"start":{"line":1524,"column":4},"end":{"line":1524,"column":4}},{"start":{"line":1524,"column":4},"end":{"line":1524,"column":4}}]},"269":{"line":1525,"type":"if","locations":[{"start":{"line":1525,"column":4},"end":{"line":1525,"column":4}},{"start":{"line":1525,"column":4},"end":{"line":1525,"column":4}}]},"270":{"line":1529,"type":"binary-expr","locations":[{"start":{"line":1529,"column":34},"end":{"line":1529,"column":56}},{"start":{"line":1529,"column":60},"end":{"line":1529,"column":64}}]},"271":{"line":1546,"type":"if","locations":[{"start":{"line":1546,"column":2},"end":{"line":1546,"column":2}},{"start":{"line":1546,"column":2},"end":{"line":1546,"column":2}}]},"272":{"line":1551,"type":"if","locations":[{"start":{"line":1551,"column":6},"end":{"line":1551,"column":6}},{"start":{"line":1551,"column":6},"end":{"line":1551,"column":6}}]},"273":{"line":1559,"type":"if","locations":[{"start":{"line":1559,"column":4},"end":{"line":1559,"column":4}},{"start":{"line":1559,"column":4},"end":{"line":1559,"column":4}}]},"274":{"line":1560,"type":"binary-expr","locations":[{"start":{"line":1560,"column":35},"end":{"line":1560,"column":43}},{"start":{"line":1560,"column":47},"end":{"line":1560,"column":62}}]},"275":{"line":1592,"type":"if","locations":[{"start":{"line":1592,"column":2},"end":{"line":1592,"column":2}},{"start":{"line":1592,"column":2},"end":{"line":1592,"column":2}}]},"276":{"line":1593,"type":"cond-expr","locations":[{"start":{"line":1593,"column":26},"end":{"line":1593,"column":44}},{"start":{"line":1593,"column":47},"end":{"line":1593,"column":49}}]},"277":{"line":1593,"type":"binary-expr","locations":[{"start":{"line":1593,"column":26},"end":{"line":1593,"column":38}},{"start":{"line":1593,"column":42},"end":{"line":1593,"column":44}}]},"278":{"line":1594,"type":"cond-expr","locations":[{"start":{"line":1594,"column":45},"end":{"line":1594,"column":52}},{"start":{"line":1594,"column":55},"end":{"line":1594,"column":63}}]},"279":{"line":1595,"type":"cond-expr","locations":[{"start":{"line":1595,"column":30},"end":{"line":1595,"column":32}},{"start":{"line":1595,"column":35},"end":{"line":1595,"column":42}}]},"280":{"line":1598,"type":"if","locations":[{"start":{"line":1598,"column":2},"end":{"line":1598,"column":2}},{"start":{"line":1598,"column":2},"end":{"line":1598,"column":2}}]},"281":{"line":1603,"type":"if","locations":[{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}},{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}}]},"282":{"line":1628,"type":"if","locations":[{"start":{"line":1628,"column":2},"end":{"line":1628,"column":2}},{"start":{"line":1628,"column":2},"end":{"line":1628,"column":2}}]},"283":{"line":1633,"type":"if","locations":[{"start":{"line":1633,"column":6},"end":{"line":1633,"column":6}},{"start":{"line":1633,"column":6},"end":{"line":1633,"column":6}}]},"284":{"line":1644,"type":"if","locations":[{"start":{"line":1644,"column":4},"end":{"line":1644,"column":4}},{"start":{"line":1644,"column":4},"end":{"line":1644,"column":4}}]},"285":{"line":1648,"type":"if","locations":[{"start":{"line":1648,"column":6},"end":{"line":1648,"column":6}},{"start":{"line":1648,"column":6},"end":{"line":1648,"column":6}}]},"286":{"line":1648,"type":"binary-expr","locations":[{"start":{"line":1648,"column":9},"end":{"line":1648,"column":32}},{"start":{"line":1648,"column":36},"end":{"line":1648,"column":48}},{"start":{"line":1648,"column":52},"end":{"line":1648,"column":87}}]},"287":{"line":1684,"type":"if","locations":[{"start":{"line":1684,"column":2},"end":{"line":1684,"column":2}},{"start":{"line":1684,"column":2},"end":{"line":1684,"column":2}}]},"288":{"line":1685,"type":"cond-expr","locations":[{"start":{"line":1685,"column":26},"end":{"line":1685,"column":44}},{"start":{"line":1685,"column":47},"end":{"line":1685,"column":49}}]},"289":{"line":1685,"type":"binary-expr","locations":[{"start":{"line":1685,"column":26},"end":{"line":1685,"column":38}},{"start":{"line":1685,"column":42},"end":{"line":1685,"column":44}}]},"290":{"line":1690,"type":"if","locations":[{"start":{"line":1690,"column":2},"end":{"line":1690,"column":2}},{"start":{"line":1690,"column":2},"end":{"line":1690,"column":2}}]},"291":{"line":1695,"type":"if","locations":[{"start":{"line":1695,"column":6},"end":{"line":1695,"column":6}},{"start":{"line":1695,"column":6},"end":{"line":1695,"column":6}}]},"292":{"line":1710,"type":"if","locations":[{"start":{"line":1710,"column":4},"end":{"line":1710,"column":4}},{"start":{"line":1710,"column":4},"end":{"line":1710,"column":4}}]},"293":{"line":1711,"type":"if","locations":[{"start":{"line":1711,"column":4},"end":{"line":1711,"column":4}},{"start":{"line":1711,"column":4},"end":{"line":1711,"column":4}}]},"294":{"line":1728,"type":"if","locations":[{"start":{"line":1728,"column":2},"end":{"line":1728,"column":2}},{"start":{"line":1728,"column":2},"end":{"line":1728,"column":2}}]},"295":{"line":1729,"type":"binary-expr","locations":[{"start":{"line":1729,"column":12},"end":{"line":1729,"column":19}},{"start":{"line":1729,"column":23},"end":{"line":1729,"column":25}}]},"296":{"line":1732,"type":"if","locations":[{"start":{"line":1732,"column":2},"end":{"line":1732,"column":2}},{"start":{"line":1732,"column":2},"end":{"line":1732,"column":2}}]},"297":{"line":1737,"type":"if","locations":[{"start":{"line":1737,"column":6},"end":{"line":1737,"column":6}},{"start":{"line":1737,"column":6},"end":{"line":1737,"column":6}}]},"298":{"line":1745,"type":"if","locations":[{"start":{"line":1745,"column":4},"end":{"line":1745,"column":4}},{"start":{"line":1745,"column":4},"end":{"line":1745,"column":4}}]},"299":{"line":1772,"type":"if","locations":[{"start":{"line":1772,"column":2},"end":{"line":1772,"column":2}},{"start":{"line":1772,"column":2},"end":{"line":1772,"column":2}}]},"300":{"line":1773,"type":"binary-expr","locations":[{"start":{"line":1773,"column":12},"end":{"line":1773,"column":19}},{"start":{"line":1773,"column":23},"end":{"line":1773,"column":25}}]},"301":{"line":1776,"type":"if","locations":[{"start":{"line":1776,"column":2},"end":{"line":1776,"column":2}},{"start":{"line":1776,"column":2},"end":{"line":1776,"column":2}}]},"302":{"line":1781,"type":"if","locations":[{"start":{"line":1781,"column":6},"end":{"line":1781,"column":6}},{"start":{"line":1781,"column":6},"end":{"line":1781,"column":6}}]},"303":{"line":1793,"type":"if","locations":[{"start":{"line":1793,"column":4},"end":{"line":1793,"column":4}},{"start":{"line":1793,"column":4},"end":{"line":1793,"column":4}}]},"304":{"line":1794,"type":"if","locations":[{"start":{"line":1794,"column":4},"end":{"line":1794,"column":4}},{"start":{"line":1794,"column":4},"end":{"line":1794,"column":4}}]},"305":{"line":1795,"type":"cond-expr","locations":[{"start":{"line":1795,"column":47},"end":{"line":1795,"column":51}},{"start":{"line":1795,"column":54},"end":{"line":1795,"column":59}}]},"306":{"line":1811,"type":"binary-expr","locations":[{"start":{"line":1811,"column":12},"end":{"line":1811,"column":19}},{"start":{"line":1811,"column":23},"end":{"line":1811,"column":25}}]},"307":{"line":1821,"type":"if","locations":[{"start":{"line":1821,"column":2},"end":{"line":1821,"column":2}},{"start":{"line":1821,"column":2},"end":{"line":1821,"column":2}}]},"308":{"line":1826,"type":"if","locations":[{"start":{"line":1826,"column":2},"end":{"line":1826,"column":2}},{"start":{"line":1826,"column":2},"end":{"line":1826,"column":2}}]},"309":{"line":1828,"type":"cond-expr","locations":[{"start":{"line":1828,"column":37},"end":{"line":1828,"column":67}},{"start":{"line":1828,"column":70},"end":{"line":1828,"column":72}}]},"310":{"line":1834,"type":"if","locations":[{"start":{"line":1834,"column":4},"end":{"line":1834,"column":4}},{"start":{"line":1834,"column":4},"end":{"line":1834,"column":4}}]},"311":{"line":1844,"type":"if","locations":[{"start":{"line":1844,"column":2},"end":{"line":1844,"column":2}},{"start":{"line":1844,"column":2},"end":{"line":1844,"column":2}}]},"312":{"line":1846,"type":"if","locations":[{"start":{"line":1846,"column":2},"end":{"line":1846,"column":2}},{"start":{"line":1846,"column":2},"end":{"line":1846,"column":2}}]},"313":{"line":1877,"type":"if","locations":[{"start":{"line":1877,"column":2},"end":{"line":1877,"column":2}},{"start":{"line":1877,"column":2},"end":{"line":1877,"column":2}}]},"314":{"line":1878,"type":"binary-expr","locations":[{"start":{"line":1878,"column":12},"end":{"line":1878,"column":19}},{"start":{"line":1878,"column":23},"end":{"line":1878,"column":25}}]},"315":{"line":1881,"type":"if","locations":[{"start":{"line":1881,"column":2},"end":{"line":1881,"column":2}},{"start":{"line":1881,"column":2},"end":{"line":1881,"column":2}}]},"316":{"line":1886,"type":"if","locations":[{"start":{"line":1886,"column":6},"end":{"line":1886,"column":6}},{"start":{"line":1886,"column":6},"end":{"line":1886,"column":6}}]},"317":{"line":1909,"type":"if","locations":[{"start":{"line":1909,"column":2},"end":{"line":1909,"column":2}},{"start":{"line":1909,"column":2},"end":{"line":1909,"column":2}}]},"318":{"line":1914,"type":"if","locations":[{"start":{"line":1914,"column":6},"end":{"line":1914,"column":6}},{"start":{"line":1914,"column":6},"end":{"line":1914,"column":6}}]},"319":{"line":1923,"type":"if","locations":[{"start":{"line":1923,"column":4},"end":{"line":1923,"column":4}},{"start":{"line":1923,"column":4},"end":{"line":1923,"column":4}}]},"320":{"line":1925,"type":"if","locations":[{"start":{"line":1925,"column":4},"end":{"line":1925,"column":4}},{"start":{"line":1925,"column":4},"end":{"line":1925,"column":4}}]},"321":{"line":1928,"type":"if","locations":[{"start":{"line":1928,"column":6},"end":{"line":1928,"column":6}},{"start":{"line":1928,"column":6},"end":{"line":1928,"column":6}}]},"322":{"line":1953,"type":"if","locations":[{"start":{"line":1953,"column":2},"end":{"line":1953,"column":2}},{"start":{"line":1953,"column":2},"end":{"line":1953,"column":2}}]},"323":{"line":1954,"type":"cond-expr","locations":[{"start":{"line":1954,"column":26},"end":{"line":1954,"column":44}},{"start":{"line":1954,"column":47},"end":{"line":1954,"column":49}}]},"324":{"line":1954,"type":"binary-expr","locations":[{"start":{"line":1954,"column":26},"end":{"line":1954,"column":38}},{"start":{"line":1954,"column":42},"end":{"line":1954,"column":44}}]},"325":{"line":1957,"type":"if","locations":[{"start":{"line":1957,"column":2},"end":{"line":1957,"column":2}},{"start":{"line":1957,"column":2},"end":{"line":1957,"column":2}}]},"326":{"line":1962,"type":"if","locations":[{"start":{"line":1962,"column":6},"end":{"line":1962,"column":6}},{"start":{"line":1962,"column":6},"end":{"line":1962,"column":6}}]},"327":{"line":1998,"type":"if","locations":[{"start":{"line":1998,"column":2},"end":{"line":1998,"column":2}},{"start":{"line":1998,"column":2},"end":{"line":1998,"column":2}}]},"328":{"line":1999,"type":"cond-expr","locations":[{"start":{"line":1999,"column":34},"end":{"line":1999,"column":52}},{"start":{"line":1999,"column":55},"end":{"line":1999,"column":57}}]},"329":{"line":1999,"type":"binary-expr","locations":[{"start":{"line":1999,"column":34},"end":{"line":1999,"column":46}},{"start":{"line":1999,"column":50},"end":{"line":1999,"column":52}}]},"330":{"line":2000,"type":"cond-expr","locations":[{"start":{"line":2000,"column":36},"end":{"line":2000,"column":54}},{"start":{"line":2000,"column":57},"end":{"line":2000,"column":59}}]},"331":{"line":2000,"type":"binary-expr","locations":[{"start":{"line":2000,"column":36},"end":{"line":2000,"column":48}},{"start":{"line":2000,"column":52},"end":{"line":2000,"column":54}}]},"332":{"line":2003,"type":"if","locations":[{"start":{"line":2003,"column":2},"end":{"line":2003,"column":2}},{"start":{"line":2003,"column":2},"end":{"line":2003,"column":2}}]},"333":{"line":2006,"type":"binary-expr","locations":[{"start":{"line":2006,"column":10},"end":{"line":2006,"column":15}},{"start":{"line":2006,"column":19},"end":{"line":2006,"column":21}}]},"334":{"line":2007,"type":"binary-expr","locations":[{"start":{"line":2007,"column":12},"end":{"line":2007,"column":19}},{"start":{"line":2007,"column":23},"end":{"line":2007,"column":25}}]},"335":{"line":2012,"type":"if","locations":[{"start":{"line":2012,"column":6},"end":{"line":2012,"column":6}},{"start":{"line":2012,"column":6},"end":{"line":2012,"column":6}}]},"336":{"line":2030,"type":"if","locations":[{"start":{"line":2030,"column":2},"end":{"line":2030,"column":2}},{"start":{"line":2030,"column":2},"end":{"line":2030,"column":2}}]},"337":{"line":2031,"type":"if","locations":[{"start":{"line":2031,"column":2},"end":{"line":2031,"column":2}},{"start":{"line":2031,"column":2},"end":{"line":2031,"column":2}}]},"338":{"line":2032,"type":"if","locations":[{"start":{"line":2032,"column":2},"end":{"line":2032,"column":2}},{"start":{"line":2032,"column":2},"end":{"line":2032,"column":2}}]},"339":{"line":2033,"type":"if","locations":[{"start":{"line":2033,"column":2},"end":{"line":2033,"column":2}},{"start":{"line":2033,"column":2},"end":{"line":2033,"column":2}}]},"340":{"line":2040,"type":"if","locations":[{"start":{"line":2040,"column":2},"end":{"line":2040,"column":2}},{"start":{"line":2040,"column":2},"end":{"line":2040,"column":2}}]},"341":{"line":2049,"type":"if","locations":[{"start":{"line":2049,"column":4},"end":{"line":2049,"column":4}},{"start":{"line":2049,"column":4},"end":{"line":2049,"column":4}}]},"342":{"line":2071,"type":"if","locations":[{"start":{"line":2071,"column":2},"end":{"line":2071,"column":2}},{"start":{"line":2071,"column":2},"end":{"line":2071,"column":2}}]},"343":{"line":2072,"type":"cond-expr","locations":[{"start":{"line":2072,"column":34},"end":{"line":2072,"column":52}},{"start":{"line":2072,"column":55},"end":{"line":2072,"column":57}}]},"344":{"line":2072,"type":"binary-expr","locations":[{"start":{"line":2072,"column":34},"end":{"line":2072,"column":46}},{"start":{"line":2072,"column":50},"end":{"line":2072,"column":52}}]},"345":{"line":2073,"type":"cond-expr","locations":[{"start":{"line":2073,"column":36},"end":{"line":2073,"column":54}},{"start":{"line":2073,"column":57},"end":{"line":2073,"column":59}}]},"346":{"line":2073,"type":"binary-expr","locations":[{"start":{"line":2073,"column":36},"end":{"line":2073,"column":48}},{"start":{"line":2073,"column":52},"end":{"line":2073,"column":54}}]},"347":{"line":2076,"type":"if","locations":[{"start":{"line":2076,"column":2},"end":{"line":2076,"column":2}},{"start":{"line":2076,"column":2},"end":{"line":2076,"column":2}}]},"348":{"line":2079,"type":"binary-expr","locations":[{"start":{"line":2079,"column":10},"end":{"line":2079,"column":15}},{"start":{"line":2079,"column":19},"end":{"line":2079,"column":21}}]},"349":{"line":2080,"type":"binary-expr","locations":[{"start":{"line":2080,"column":12},"end":{"line":2080,"column":19}},{"start":{"line":2080,"column":23},"end":{"line":2080,"column":25}}]},"350":{"line":2085,"type":"if","locations":[{"start":{"line":2085,"column":6},"end":{"line":2085,"column":6}},{"start":{"line":2085,"column":6},"end":{"line":2085,"column":6}}]},"351":{"line":2105,"type":"if","locations":[{"start":{"line":2105,"column":2},"end":{"line":2105,"column":2}},{"start":{"line":2105,"column":2},"end":{"line":2105,"column":2}}]},"352":{"line":2109,"type":"if","locations":[{"start":{"line":2109,"column":2},"end":{"line":2109,"column":2}},{"start":{"line":2109,"column":2},"end":{"line":2109,"column":2}}]},"353":{"line":2118,"type":"if","locations":[{"start":{"line":2118,"column":4},"end":{"line":2118,"column":4}},{"start":{"line":2118,"column":4},"end":{"line":2118,"column":4}}]},"354":{"line":2134,"type":"if","locations":[{"start":{"line":2134,"column":2},"end":{"line":2134,"column":2}},{"start":{"line":2134,"column":2},"end":{"line":2134,"column":2}}]},"355":{"line":2139,"type":"if","locations":[{"start":{"line":2139,"column":6},"end":{"line":2139,"column":6}},{"start":{"line":2139,"column":6},"end":{"line":2139,"column":6}}]},"356":{"line":2164,"type":"if","locations":[{"start":{"line":2164,"column":2},"end":{"line":2164,"column":2}},{"start":{"line":2164,"column":2},"end":{"line":2164,"column":2}}]},"357":{"line":2166,"type":"cond-expr","locations":[{"start":{"line":2166,"column":26},"end":{"line":2166,"column":44}},{"start":{"line":2166,"column":47},"end":{"line":2166,"column":49}}]},"358":{"line":2166,"type":"binary-expr","locations":[{"start":{"line":2166,"column":26},"end":{"line":2166,"column":38}},{"start":{"line":2166,"column":42},"end":{"line":2166,"column":44}}]},"359":{"line":2169,"type":"if","locations":[{"start":{"line":2169,"column":2},"end":{"line":2169,"column":2}},{"start":{"line":2169,"column":2},"end":{"line":2169,"column":2}}]},"360":{"line":2174,"type":"if","locations":[{"start":{"line":2174,"column":6},"end":{"line":2174,"column":6}},{"start":{"line":2174,"column":6},"end":{"line":2174,"column":6}}]},"361":{"line":2187,"type":"if","locations":[{"start":{"line":2187,"column":2},"end":{"line":2187,"column":2}},{"start":{"line":2187,"column":2},"end":{"line":2187,"column":2}}]},"362":{"line":2227,"type":"if","locations":[{"start":{"line":2227,"column":2},"end":{"line":2227,"column":2}},{"start":{"line":2227,"column":2},"end":{"line":2227,"column":2}}]},"363":{"line":2228,"type":"binary-expr","locations":[{"start":{"line":2228,"column":12},"end":{"line":2228,"column":19}},{"start":{"line":2228,"column":23},"end":{"line":2228,"column":25}}]},"364":{"line":2231,"type":"if","locations":[{"start":{"line":2231,"column":2},"end":{"line":2231,"column":2}},{"start":{"line":2231,"column":2},"end":{"line":2231,"column":2}}]},"365":{"line":2231,"type":"binary-expr","locations":[{"start":{"line":2231,"column":5},"end":{"line":2231,"column":19}},{"start":{"line":2231,"column":23},"end":{"line":2231,"column":48}}]},"366":{"line":2234,"type":"if","locations":[{"start":{"line":2234,"column":2},"end":{"line":2234,"column":2}},{"start":{"line":2234,"column":2},"end":{"line":2234,"column":2}}]},"367":{"line":2238,"type":"binary-expr","locations":[{"start":{"line":2238,"column":14},"end":{"line":2238,"column":21}},{"start":{"line":2238,"column":25},"end":{"line":2238,"column":27}}]},"368":{"line":2241,"type":"if","locations":[{"start":{"line":2241,"column":6},"end":{"line":2241,"column":6}},{"start":{"line":2241,"column":6},"end":{"line":2241,"column":6}}]},"369":{"line":2281,"type":"if","locations":[{"start":{"line":2281,"column":2},"end":{"line":2281,"column":2}},{"start":{"line":2281,"column":2},"end":{"line":2281,"column":2}}]},"370":{"line":2282,"type":"binary-expr","locations":[{"start":{"line":2282,"column":12},"end":{"line":2282,"column":19}},{"start":{"line":2282,"column":23},"end":{"line":2282,"column":25}}]},"371":{"line":2285,"type":"if","locations":[{"start":{"line":2285,"column":2},"end":{"line":2285,"column":2}},{"start":{"line":2285,"column":2},"end":{"line":2285,"column":2}}]},"372":{"line":2285,"type":"binary-expr","locations":[{"start":{"line":2285,"column":5},"end":{"line":2285,"column":19}},{"start":{"line":2285,"column":23},"end":{"line":2285,"column":48}}]},"373":{"line":2286,"type":"if","locations":[{"start":{"line":2286,"column":2},"end":{"line":2286,"column":2}},{"start":{"line":2286,"column":2},"end":{"line":2286,"column":2}}]},"374":{"line":2286,"type":"binary-expr","locations":[{"start":{"line":2286,"column":5},"end":{"line":2286,"column":24}},{"start":{"line":2286,"column":28},"end":{"line":2286,"column":58}}]},"375":{"line":2289,"type":"if","locations":[{"start":{"line":2289,"column":2},"end":{"line":2289,"column":2}},{"start":{"line":2289,"column":2},"end":{"line":2289,"column":2}}]},"376":{"line":2293,"type":"binary-expr","locations":[{"start":{"line":2293,"column":14},"end":{"line":2293,"column":21}},{"start":{"line":2293,"column":25},"end":{"line":2293,"column":27}}]},"377":{"line":2296,"type":"if","locations":[{"start":{"line":2296,"column":6},"end":{"line":2296,"column":6}},{"start":{"line":2296,"column":6},"end":{"line":2296,"column":6}}]},"378":{"line":2307,"type":"cond-expr","locations":[{"start":{"line":2307,"column":69},"end":{"line":2307,"column":92}},{"start":{"line":2307,"column":95},"end":{"line":2307,"column":100}}]},"379":{"line":2308,"type":"cond-expr","locations":[{"start":{"line":2308,"column":64},"end":{"line":2308,"column":78}},{"start":{"line":2308,"column":81},"end":{"line":2308,"column":86}}]},"380":{"line":2339,"type":"if","locations":[{"start":{"line":2339,"column":2},"end":{"line":2339,"column":2}},{"start":{"line":2339,"column":2},"end":{"line":2339,"column":2}}]},"381":{"line":2340,"type":"binary-expr","locations":[{"start":{"line":2340,"column":12},"end":{"line":2340,"column":19}},{"start":{"line":2340,"column":23},"end":{"line":2340,"column":25}}]},"382":{"line":2343,"type":"if","locations":[{"start":{"line":2343,"column":2},"end":{"line":2343,"column":2}},{"start":{"line":2343,"column":2},"end":{"line":2343,"column":2}}]},"383":{"line":2343,"type":"binary-expr","locations":[{"start":{"line":2343,"column":5},"end":{"line":2343,"column":19}},{"start":{"line":2343,"column":23},"end":{"line":2343,"column":48}}]},"384":{"line":2344,"type":"if","locations":[{"start":{"line":2344,"column":2},"end":{"line":2344,"column":2}},{"start":{"line":2344,"column":2},"end":{"line":2344,"column":2}}]},"385":{"line":2344,"type":"binary-expr","locations":[{"start":{"line":2344,"column":5},"end":{"line":2344,"column":19}},{"start":{"line":2344,"column":23},"end":{"line":2344,"column":48}}]},"386":{"line":2347,"type":"if","locations":[{"start":{"line":2347,"column":2},"end":{"line":2347,"column":2}},{"start":{"line":2347,"column":2},"end":{"line":2347,"column":2}}]},"387":{"line":2351,"type":"binary-expr","locations":[{"start":{"line":2351,"column":14},"end":{"line":2351,"column":21}},{"start":{"line":2351,"column":25},"end":{"line":2351,"column":27}}]},"388":{"line":2354,"type":"if","locations":[{"start":{"line":2354,"column":6},"end":{"line":2354,"column":6}},{"start":{"line":2354,"column":6},"end":{"line":2354,"column":6}}]},"389":{"line":2365,"type":"cond-expr","locations":[{"start":{"line":2365,"column":69},"end":{"line":2365,"column":92}},{"start":{"line":2365,"column":95},"end":{"line":2365,"column":100}}]},"390":{"line":2366,"type":"cond-expr","locations":[{"start":{"line":2366,"column":64},"end":{"line":2366,"column":78}},{"start":{"line":2366,"column":81},"end":{"line":2366,"column":86}}]},"391":{"line":2402,"type":"if","locations":[{"start":{"line":2402,"column":2},"end":{"line":2402,"column":2}},{"start":{"line":2402,"column":2},"end":{"line":2402,"column":2}}]},"392":{"line":2403,"type":"cond-expr","locations":[{"start":{"line":2403,"column":23},"end":{"line":2403,"column":41}},{"start":{"line":2403,"column":44},"end":{"line":2403,"column":46}}]},"393":{"line":2403,"type":"binary-expr","locations":[{"start":{"line":2403,"column":23},"end":{"line":2403,"column":35}},{"start":{"line":2403,"column":39},"end":{"line":2403,"column":41}}]},"394":{"line":2404,"type":"cond-expr","locations":[{"start":{"line":2404,"column":22},"end":{"line":2404,"column":34}},{"start":{"line":2404,"column":37},"end":{"line":2404,"column":41}}]},"395":{"line":2405,"type":"cond-expr","locations":[{"start":{"line":2405,"column":26},"end":{"line":2405,"column":44}},{"start":{"line":2405,"column":47},"end":{"line":2405,"column":49}}]},"396":{"line":2405,"type":"binary-expr","locations":[{"start":{"line":2405,"column":26},"end":{"line":2405,"column":38}},{"start":{"line":2405,"column":42},"end":{"line":2405,"column":44}}]},"397":{"line":2413,"type":"if","locations":[{"start":{"line":2413,"column":2},"end":{"line":2413,"column":2}},{"start":{"line":2413,"column":2},"end":{"line":2413,"column":2}}]},"398":{"line":2417,"type":"binary-expr","locations":[{"start":{"line":2417,"column":14},"end":{"line":2417,"column":21}},{"start":{"line":2417,"column":25},"end":{"line":2417,"column":27}}]},"399":{"line":2420,"type":"if","locations":[{"start":{"line":2420,"column":6},"end":{"line":2420,"column":6}},{"start":{"line":2420,"column":6},"end":{"line":2420,"column":6}}]},"400":{"line":2434,"type":"if","locations":[{"start":{"line":2434,"column":2},"end":{"line":2434,"column":2}},{"start":{"line":2434,"column":2},"end":{"line":2434,"column":2}}]},"401":{"line":2438,"type":"cond-expr","locations":[{"start":{"line":2438,"column":34},"end":{"line":2438,"column":38}},{"start":{"line":2438,"column":41},"end":{"line":2438,"column":46}}]},"402":{"line":2439,"type":"cond-expr","locations":[{"start":{"line":2439,"column":40},"end":{"line":2439,"column":44}},{"start":{"line":2439,"column":47},"end":{"line":2439,"column":52}}]},"403":{"line":2440,"type":"cond-expr","locations":[{"start":{"line":2440,"column":40},"end":{"line":2440,"column":44}},{"start":{"line":2440,"column":47},"end":{"line":2440,"column":52}}]},"404":{"line":2442,"type":"if","locations":[{"start":{"line":2442,"column":2},"end":{"line":2442,"column":2}},{"start":{"line":2442,"column":2},"end":{"line":2442,"column":2}}]},"405":{"line":2446,"type":"if","locations":[{"start":{"line":2446,"column":2},"end":{"line":2446,"column":2}},{"start":{"line":2446,"column":2},"end":{"line":2446,"column":2}}]},"406":{"line":2446,"type":"binary-expr","locations":[{"start":{"line":2446,"column":5},"end":{"line":2446,"column":8}},{"start":{"line":2446,"column":12},"end":{"line":2446,"column":27}}]},"407":{"line":2450,"type":"if","locations":[{"start":{"line":2450,"column":2},"end":{"line":2450,"column":2}},{"start":{"line":2450,"column":2},"end":{"line":2450,"column":2}}]},"408":{"line":2455,"type":"if","locations":[{"start":{"line":2455,"column":2},"end":{"line":2455,"column":2}},{"start":{"line":2455,"column":2},"end":{"line":2455,"column":2}}]},"409":{"line":2468,"type":"if","locations":[{"start":{"line":2468,"column":2},"end":{"line":2468,"column":2}},{"start":{"line":2468,"column":2},"end":{"line":2468,"column":2}}]},"410":{"line":2473,"type":"if","locations":[{"start":{"line":2473,"column":2},"end":{"line":2473,"column":2}},{"start":{"line":2473,"column":2},"end":{"line":2473,"column":2}}]},"411":{"line":2483,"type":"if","locations":[{"start":{"line":2483,"column":6},"end":{"line":2483,"column":6}},{"start":{"line":2483,"column":6},"end":{"line":2483,"column":6}}]},"412":{"line":2507,"type":"if","locations":[{"start":{"line":2507,"column":2},"end":{"line":2507,"column":2}},{"start":{"line":2507,"column":2},"end":{"line":2507,"column":2}}]},"413":{"line":2508,"type":"cond-expr","locations":[{"start":{"line":2508,"column":23},"end":{"line":2508,"column":41}},{"start":{"line":2508,"column":44},"end":{"line":2508,"column":46}}]},"414":{"line":2508,"type":"binary-expr","locations":[{"start":{"line":2508,"column":23},"end":{"line":2508,"column":35}},{"start":{"line":2508,"column":39},"end":{"line":2508,"column":41}}]},"415":{"line":2509,"type":"cond-expr","locations":[{"start":{"line":2509,"column":26},"end":{"line":2509,"column":44}},{"start":{"line":2509,"column":47},"end":{"line":2509,"column":49}}]},"416":{"line":2509,"type":"binary-expr","locations":[{"start":{"line":2509,"column":26},"end":{"line":2509,"column":38}},{"start":{"line":2509,"column":42},"end":{"line":2509,"column":44}}]},"417":{"line":2512,"type":"if","locations":[{"start":{"line":2512,"column":2},"end":{"line":2512,"column":2}},{"start":{"line":2512,"column":2},"end":{"line":2512,"column":2}}]},"418":{"line":2517,"type":"if","locations":[{"start":{"line":2517,"column":6},"end":{"line":2517,"column":6}},{"start":{"line":2517,"column":6},"end":{"line":2517,"column":6}}]},"419":{"line":2536,"type":"if","locations":[{"start":{"line":2536,"column":2},"end":{"line":2536,"column":2}},{"start":{"line":2536,"column":2},"end":{"line":2536,"column":2}}]},"420":{"line":2536,"type":"binary-expr","locations":[{"start":{"line":2536,"column":5},"end":{"line":2536,"column":17}},{"start":{"line":2536,"column":21},"end":{"line":2536,"column":58}}]},"421":{"line":2540,"type":"if","locations":[{"start":{"line":2540,"column":4},"end":{"line":2540,"column":4}},{"start":{"line":2540,"column":4},"end":{"line":2540,"column":4}}]},"422":{"line":2550,"type":"if","locations":[{"start":{"line":2550,"column":2},"end":{"line":2550,"column":2}},{"start":{"line":2550,"column":2},"end":{"line":2550,"column":2}}]},"423":{"line":2550,"type":"binary-expr","locations":[{"start":{"line":2550,"column":5},"end":{"line":2550,"column":17}},{"start":{"line":2550,"column":21},"end":{"line":2550,"column":55}}]},"424":{"line":2551,"type":"if","locations":[{"start":{"line":2551,"column":4},"end":{"line":2551,"column":4}},{"start":{"line":2551,"column":4},"end":{"line":2551,"column":4}}]},"425":{"line":2551,"type":"binary-expr","locations":[{"start":{"line":2551,"column":7},"end":{"line":2551,"column":24}},{"start":{"line":2551,"column":28},"end":{"line":2551,"column":64}}]},"426":{"line":2580,"type":"if","locations":[{"start":{"line":2580,"column":2},"end":{"line":2580,"column":2}},{"start":{"line":2580,"column":2},"end":{"line":2580,"column":2}}]},"427":{"line":2582,"type":"if","locations":[{"start":{"line":2582,"column":4},"end":{"line":2582,"column":4}},{"start":{"line":2582,"column":4},"end":{"line":2582,"column":4}}]},"428":{"line":2589,"type":"if","locations":[{"start":{"line":2589,"column":4},"end":{"line":2589,"column":4}},{"start":{"line":2589,"column":4},"end":{"line":2589,"column":4}}]},"429":{"line":2589,"type":"binary-expr","locations":[{"start":{"line":2589,"column":7},"end":{"line":2589,"column":22}},{"start":{"line":2589,"column":26},"end":{"line":2589,"column":42}}]},"430":{"line":2600,"type":"cond-expr","locations":[{"start":{"line":2602,"column":48},"end":{"line":2602,"column":58}},{"start":{"line":2602,"column":61},"end":{"line":2602,"column":63}}]},"431":{"line":2600,"type":"binary-expr","locations":[{"start":{"line":2600,"column":14},"end":{"line":2600,"column":18}},{"start":{"line":2600,"column":23},"end":{"line":2600,"column":42}},{"start":{"line":2601,"column":9},"end":{"line":2601,"column":21}},{"start":{"line":2601,"column":25},"end":{"line":2601,"column":36}},{"start":{"line":2601,"column":40},"end":{"line":2601,"column":48}},{"start":{"line":2602,"column":9},"end":{"line":2602,"column":23}},{"start":{"line":2602,"column":27},"end":{"line":2602,"column":44}}]},"432":{"line":2614,"type":"if","locations":[{"start":{"line":2614,"column":2},"end":{"line":2614,"column":2}},{"start":{"line":2614,"column":2},"end":{"line":2614,"column":2}}]},"433":{"line":2618,"type":"if","locations":[{"start":{"line":2618,"column":9},"end":{"line":2618,"column":9}},{"start":{"line":2618,"column":9},"end":{"line":2618,"column":9}}]},"434":{"line":2618,"type":"binary-expr","locations":[{"start":{"line":2618,"column":12},"end":{"line":2618,"column":31}},{"start":{"line":2618,"column":35},"end":{"line":2618,"column":72}}]},"435":{"line":2623,"type":"if","locations":[{"start":{"line":2623,"column":2},"end":{"line":2623,"column":2}},{"start":{"line":2623,"column":2},"end":{"line":2623,"column":2}}]},"436":{"line":2623,"type":"binary-expr","locations":[{"start":{"line":2623,"column":5},"end":{"line":2623,"column":24}},{"start":{"line":2623,"column":28},"end":{"line":2623,"column":65}}]},"437":{"line":2631,"type":"if","locations":[{"start":{"line":2631,"column":2},"end":{"line":2631,"column":2}},{"start":{"line":2631,"column":2},"end":{"line":2631,"column":2}}]},"438":{"line":2636,"type":"if","locations":[{"start":{"line":2636,"column":2},"end":{"line":2636,"column":2}},{"start":{"line":2636,"column":2},"end":{"line":2636,"column":2}}]},"439":{"line":2636,"type":"binary-expr","locations":[{"start":{"line":2636,"column":5},"end":{"line":2636,"column":23}},{"start":{"line":2636,"column":27},"end":{"line":2636,"column":45}}]},"440":{"line":2641,"type":"if","locations":[{"start":{"line":2641,"column":2},"end":{"line":2641,"column":2}},{"start":{"line":2641,"column":2},"end":{"line":2641,"column":2}}]},"441":{"line":2642,"type":"if","locations":[{"start":{"line":2642,"column":2},"end":{"line":2642,"column":2}},{"start":{"line":2642,"column":2},"end":{"line":2642,"column":2}}]},"442":{"line":2649,"type":"if","locations":[{"start":{"line":2649,"column":2},"end":{"line":2649,"column":2}},{"start":{"line":2649,"column":2},"end":{"line":2649,"column":2}}]},"443":{"line":2652,"type":"if","locations":[{"start":{"line":2652,"column":2},"end":{"line":2652,"column":2}},{"start":{"line":2652,"column":2},"end":{"line":2652,"column":2}}]},"444":{"line":2652,"type":"binary-expr","locations":[{"start":{"line":2652,"column":5},"end":{"line":2652,"column":27}},{"start":{"line":2652,"column":31},"end":{"line":2652,"column":64}}]},"445":{"line":2661,"type":"if","locations":[{"start":{"line":2661,"column":2},"end":{"line":2661,"column":2}},{"start":{"line":2661,"column":2},"end":{"line":2661,"column":2}}]},"446":{"line":2662,"type":"if","locations":[{"start":{"line":2662,"column":4},"end":{"line":2662,"column":4}},{"start":{"line":2662,"column":4},"end":{"line":2662,"column":4}}]},"447":{"line":2666,"type":"if","locations":[{"start":{"line":2666,"column":4},"end":{"line":2666,"column":4}},{"start":{"line":2666,"column":4},"end":{"line":2666,"column":4}}]},"448":{"line":2667,"type":"binary-expr","locations":[{"start":{"line":2667,"column":23},"end":{"line":2667,"column":37}},{"start":{"line":2667,"column":41},"end":{"line":2667,"column":61}}]},"449":{"line":2672,"type":"if","locations":[{"start":{"line":2672,"column":4},"end":{"line":2672,"column":4}},{"start":{"line":2672,"column":4},"end":{"line":2672,"column":4}}]},"450":{"line":2673,"type":"if","locations":[{"start":{"line":2673,"column":4},"end":{"line":2673,"column":4}},{"start":{"line":2673,"column":4},"end":{"line":2673,"column":4}}]},"451":{"line":2680,"type":"if","locations":[{"start":{"line":2680,"column":2},"end":{"line":2680,"column":2}},{"start":{"line":2680,"column":2},"end":{"line":2680,"column":2}}]},"452":{"line":2686,"type":"if","locations":[{"start":{"line":2686,"column":4},"end":{"line":2686,"column":4}},{"start":{"line":2686,"column":4},"end":{"line":2686,"column":4}}]},"453":{"line":2688,"type":"if","locations":[{"start":{"line":2688,"column":11},"end":{"line":2688,"column":11}},{"start":{"line":2688,"column":11},"end":{"line":2688,"column":11}}]},"454":{"line":2688,"type":"binary-expr","locations":[{"start":{"line":2688,"column":14},"end":{"line":2688,"column":27}},{"start":{"line":2688,"column":31},"end":{"line":2688,"column":47}}]},"455":{"line":2690,"type":"if","locations":[{"start":{"line":2690,"column":11},"end":{"line":2690,"column":11}},{"start":{"line":2690,"column":11},"end":{"line":2690,"column":11}}]},"456":{"line":2690,"type":"binary-expr","locations":[{"start":{"line":2690,"column":14},"end":{"line":2690,"column":39}},{"start":{"line":2690,"column":43},"end":{"line":2690,"column":67}}]},"457":{"line":2692,"type":"if","locations":[{"start":{"line":2692,"column":11},"end":{"line":2692,"column":11}},{"start":{"line":2692,"column":11},"end":{"line":2692,"column":11}}]},"458":{"line":2692,"type":"binary-expr","locations":[{"start":{"line":2692,"column":14},"end":{"line":2692,"column":39}},{"start":{"line":2692,"column":43},"end":{"line":2692,"column":59}}]},"459":{"line":2723,"type":"if","locations":[{"start":{"line":2723,"column":2},"end":{"line":2723,"column":2}},{"start":{"line":2723,"column":2},"end":{"line":2723,"column":2}}]},"460":{"line":2725,"type":"binary-expr","locations":[{"start":{"line":2725,"column":23},"end":{"line":2725,"column":41}},{"start":{"line":2725,"column":45},"end":{"line":2725,"column":46}}]},"461":{"line":2726,"type":"binary-expr","locations":[{"start":{"line":2726,"column":22},"end":{"line":2726,"column":39}},{"start":{"line":2726,"column":43},"end":{"line":2726,"column":47}}]},"462":{"line":2736,"type":"if","locations":[{"start":{"line":2736,"column":2},"end":{"line":2736,"column":2}},{"start":{"line":2736,"column":2},"end":{"line":2736,"column":2}}]},"463":{"line":2741,"type":"if","locations":[{"start":{"line":2741,"column":6},"end":{"line":2741,"column":6}},{"start":{"line":2741,"column":6},"end":{"line":2741,"column":6}}]},"464":{"line":2755,"type":"if","locations":[{"start":{"line":2755,"column":2},"end":{"line":2755,"column":2}},{"start":{"line":2755,"column":2},"end":{"line":2755,"column":2}}]},"465":{"line":2765,"type":"if","locations":[{"start":{"line":2765,"column":4},"end":{"line":2765,"column":4}},{"start":{"line":2765,"column":4},"end":{"line":2765,"column":4}}]},"466":{"line":2766,"type":"if","locations":[{"start":{"line":2766,"column":4},"end":{"line":2766,"column":4}},{"start":{"line":2766,"column":4},"end":{"line":2766,"column":4}}]},"467":{"line":2770,"type":"if","locations":[{"start":{"line":2770,"column":4},"end":{"line":2770,"column":4}},{"start":{"line":2770,"column":4},"end":{"line":2770,"column":4}}]},"468":{"line":2775,"type":"cond-expr","locations":[{"start":{"line":2775,"column":48},"end":{"line":2775,"column":70}},{"start":{"line":2775,"column":73},"end":{"line":2775,"column":78}}]},"469":{"line":2807,"type":"binary-expr","locations":[{"start":{"line":2807,"column":14},"end":{"line":2807,"column":35}},{"start":{"line":2807,"column":39},"end":{"line":2807,"column":40}}]},"470":{"line":2808,"type":"cond-expr","locations":[{"start":{"line":2808,"column":57},"end":{"line":2808,"column":58}},{"start":{"line":2808,"column":59},"end":{"line":2808,"column":60}}]},"471":{"line":2811,"type":"if","locations":[{"start":{"line":2811,"column":2},"end":{"line":2811,"column":2}},{"start":{"line":2811,"column":2},"end":{"line":2811,"column":2}}]},"472":{"line":2813,"type":"cond-expr","locations":[{"start":{"line":2813,"column":26},"end":{"line":2813,"column":44}},{"start":{"line":2813,"column":47},"end":{"line":2813,"column":49}}]},"473":{"line":2813,"type":"binary-expr","locations":[{"start":{"line":2813,"column":26},"end":{"line":2813,"column":38}},{"start":{"line":2813,"column":42},"end":{"line":2813,"column":44}}]},"474":{"line":2816,"type":"if","locations":[{"start":{"line":2816,"column":2},"end":{"line":2816,"column":2}},{"start":{"line":2816,"column":2},"end":{"line":2816,"column":2}}]},"475":{"line":2821,"type":"if","locations":[{"start":{"line":2821,"column":6},"end":{"line":2821,"column":6}},{"start":{"line":2821,"column":6},"end":{"line":2821,"column":6}}]},"476":{"line":2831,"type":"binary-expr","locations":[{"start":{"line":2831,"column":10},"end":{"line":2831,"column":15}},{"start":{"line":2831,"column":19},"end":{"line":2831,"column":25}}]},"477":{"line":2850,"type":"if","locations":[{"start":{"line":2850,"column":2},"end":{"line":2850,"column":2}},{"start":{"line":2850,"column":2},"end":{"line":2850,"column":2}}]},"478":{"line":2859,"type":"if","locations":[{"start":{"line":2859,"column":4},"end":{"line":2859,"column":4}},{"start":{"line":2859,"column":4},"end":{"line":2859,"column":4}}]},"479":{"line":2860,"type":"if","locations":[{"start":{"line":2860,"column":4},"end":{"line":2860,"column":4}},{"start":{"line":2860,"column":4},"end":{"line":2860,"column":4}}]},"480":{"line":2860,"type":"binary-expr","locations":[{"start":{"line":2860,"column":7},"end":{"line":2860,"column":14}},{"start":{"line":2860,"column":18},"end":{"line":2860,"column":28}}]},"481":{"line":2887,"type":"if","locations":[{"start":{"line":2887,"column":2},"end":{"line":2887,"column":2}},{"start":{"line":2887,"column":2},"end":{"line":2887,"column":2}}]},"482":{"line":2889,"type":"cond-expr","locations":[{"start":{"line":2889,"column":26},"end":{"line":2889,"column":44}},{"start":{"line":2889,"column":47},"end":{"line":2889,"column":49}}]},"483":{"line":2889,"type":"binary-expr","locations":[{"start":{"line":2889,"column":26},"end":{"line":2889,"column":38}},{"start":{"line":2889,"column":42},"end":{"line":2889,"column":44}}]},"484":{"line":2892,"type":"if","locations":[{"start":{"line":2892,"column":2},"end":{"line":2892,"column":2}},{"start":{"line":2892,"column":2},"end":{"line":2892,"column":2}}]},"485":{"line":2897,"type":"if","locations":[{"start":{"line":2897,"column":6},"end":{"line":2897,"column":6}},{"start":{"line":2897,"column":6},"end":{"line":2897,"column":6}}]},"486":{"line":2918,"type":"if","locations":[{"start":{"line":2918,"column":2},"end":{"line":2918,"column":2}},{"start":{"line":2918,"column":2},"end":{"line":2918,"column":2}}]},"487":{"line":2924,"type":"if","locations":[{"start":{"line":2924,"column":4},"end":{"line":2924,"column":4}},{"start":{"line":2924,"column":4},"end":{"line":2924,"column":4}}]},"488":{"line":2925,"type":"if","locations":[{"start":{"line":2925,"column":4},"end":{"line":2925,"column":4}},{"start":{"line":2925,"column":4},"end":{"line":2925,"column":4}}]},"489":{"line":2925,"type":"binary-expr","locations":[{"start":{"line":2925,"column":7},"end":{"line":2925,"column":14}},{"start":{"line":2925,"column":18},"end":{"line":2925,"column":28}}]},"490":{"line":2986,"type":"if","locations":[{"start":{"line":2986,"column":2},"end":{"line":2986,"column":2}},{"start":{"line":2986,"column":2},"end":{"line":2986,"column":2}}]},"491":{"line":2988,"type":"cond-expr","locations":[{"start":{"line":2988,"column":25},"end":{"line":2988,"column":37}},{"start":{"line":2988,"column":40},"end":{"line":2988,"column":44}}]},"492":{"line":2989,"type":"cond-expr","locations":[{"start":{"line":2989,"column":27},"end":{"line":2989,"column":39}},{"start":{"line":2989,"column":42},"end":{"line":2989,"column":46}}]},"493":{"line":2990,"type":"cond-expr","locations":[{"start":{"line":2990,"column":26},"end":{"line":2990,"column":38}},{"start":{"line":2990,"column":41},"end":{"line":2990,"column":45}}]},"494":{"line":2991,"type":"cond-expr","locations":[{"start":{"line":2991,"column":26},"end":{"line":2991,"column":44}},{"start":{"line":2991,"column":47},"end":{"line":2991,"column":49}}]},"495":{"line":2991,"type":"binary-expr","locations":[{"start":{"line":2991,"column":26},"end":{"line":2991,"column":38}},{"start":{"line":2991,"column":42},"end":{"line":2991,"column":44}}]},"496":{"line":2994,"type":"if","locations":[{"start":{"line":2994,"column":2},"end":{"line":2994,"column":2}},{"start":{"line":2994,"column":2},"end":{"line":2994,"column":2}}]},"497":{"line":2999,"type":"if","locations":[{"start":{"line":2999,"column":2},"end":{"line":2999,"column":2}},{"start":{"line":2999,"column":2},"end":{"line":2999,"column":2}}]},"498":{"line":2999,"type":"binary-expr","locations":[{"start":{"line":2999,"column":6},"end":{"line":2999,"column":26}},{"start":{"line":2999,"column":30},"end":{"line":2999,"column":52}},{"start":{"line":2999,"column":56},"end":{"line":2999,"column":83}},{"start":{"line":2999,"column":87},"end":{"line":2999,"column":114}}]},"499":{"line":3003,"type":"if","locations":[{"start":{"line":3003,"column":2},"end":{"line":3003,"column":2}},{"start":{"line":3003,"column":2},"end":{"line":3003,"column":2}}]},"500":{"line":3007,"type":"if","locations":[{"start":{"line":3007,"column":2},"end":{"line":3007,"column":2}},{"start":{"line":3007,"column":2},"end":{"line":3007,"column":2}}]},"501":{"line":3012,"type":"cond-expr","locations":[{"start":{"line":3012,"column":30},"end":{"line":3012,"column":34}},{"start":{"line":3012,"column":37},"end":{"line":3012,"column":44}}]},"502":{"line":3015,"type":"if","locations":[{"start":{"line":3015,"column":2},"end":{"line":3015,"column":2}},{"start":{"line":3015,"column":2},"end":{"line":3015,"column":2}}]},"503":{"line":3019,"type":"if","locations":[{"start":{"line":3019,"column":6},"end":{"line":3019,"column":6}},{"start":{"line":3019,"column":6},"end":{"line":3019,"column":6}}]},"504":{"line":3027,"type":"if","locations":[{"start":{"line":3027,"column":2},"end":{"line":3027,"column":2}},{"start":{"line":3027,"column":2},"end":{"line":3027,"column":2}}]},"505":{"line":3028,"type":"cond-expr","locations":[{"start":{"line":3029,"column":10},"end":{"line":3029,"column":16}},{"start":{"line":3030,"column":10},"end":{"line":3030,"column":26}}]},"506":{"line":3028,"type":"binary-expr","locations":[{"start":{"line":3028,"column":25},"end":{"line":3028,"column":31}},{"start":{"line":3028,"column":35},"end":{"line":3028,"column":61}}]},"507":{"line":3043,"type":"if","locations":[{"start":{"line":3043,"column":4},"end":{"line":3043,"column":4}},{"start":{"line":3043,"column":4},"end":{"line":3043,"column":4}}]},"508":{"line":3045,"type":"if","locations":[{"start":{"line":3045,"column":4},"end":{"line":3045,"column":4}},{"start":{"line":3045,"column":4},"end":{"line":3045,"column":4}}]},"509":{"line":3045,"type":"binary-expr","locations":[{"start":{"line":3045,"column":8},"end":{"line":3045,"column":34}},{"start":{"line":3045,"column":39},"end":{"line":3045,"column":43}},{"start":{"line":3045,"column":47},"end":{"line":3045,"column":71}}]},"510":{"line":3046,"type":"cond-expr","locations":[{"start":{"line":3047,"column":10},"end":{"line":3047,"column":14}},{"start":{"line":3048,"column":10},"end":{"line":3048,"column":24}}]},"511":{"line":3046,"type":"binary-expr","locations":[{"start":{"line":3046,"column":29},"end":{"line":3046,"column":33}},{"start":{"line":3046,"column":37},"end":{"line":3046,"column":61}}]},"512":{"line":3062,"type":"if","locations":[{"start":{"line":3062,"column":4},"end":{"line":3062,"column":4}},{"start":{"line":3062,"column":4},"end":{"line":3062,"column":4}}]},"513":{"line":3071,"type":"if","locations":[{"start":{"line":3071,"column":6},"end":{"line":3071,"column":6}},{"start":{"line":3071,"column":6},"end":{"line":3071,"column":6}}]},"514":{"line":3076,"type":"cond-expr","locations":[{"start":{"line":3077,"column":8},"end":{"line":3077,"column":20}},{"start":{"line":3078,"column":8},"end":{"line":3078,"column":10}}]},"515":{"line":3076,"type":"binary-expr","locations":[{"start":{"line":3076,"column":16},"end":{"line":3076,"column":30}},{"start":{"line":3076,"column":34},"end":{"line":3076,"column":60}}]},"516":{"line":3089,"type":"if","locations":[{"start":{"line":3089,"column":6},"end":{"line":3089,"column":6}},{"start":{"line":3089,"column":6},"end":{"line":3089,"column":6}}]},"517":{"line":3090,"type":"binary-expr","locations":[{"start":{"line":3090,"column":37},"end":{"line":3090,"column":51}},{"start":{"line":3090,"column":55},"end":{"line":3090,"column":62}}]},"518":{"line":3103,"type":"if","locations":[{"start":{"line":3103,"column":2},"end":{"line":3103,"column":2}},{"start":{"line":3103,"column":2},"end":{"line":3103,"column":2}}]},"519":{"line":3103,"type":"binary-expr","locations":[{"start":{"line":3103,"column":5},"end":{"line":3103,"column":21}},{"start":{"line":3103,"column":25},"end":{"line":3103,"column":54}}]},"520":{"line":3114,"type":"if","locations":[{"start":{"line":3114,"column":4},"end":{"line":3114,"column":4}},{"start":{"line":3114,"column":4},"end":{"line":3114,"column":4}}]},"521":{"line":3148,"type":"if","locations":[{"start":{"line":3148,"column":2},"end":{"line":3148,"column":2}},{"start":{"line":3148,"column":2},"end":{"line":3148,"column":2}}]},"522":{"line":3150,"type":"if","locations":[{"start":{"line":3150,"column":2},"end":{"line":3150,"column":2}},{"start":{"line":3150,"column":2},"end":{"line":3150,"column":2}}]},"523":{"line":3154,"type":"if","locations":[{"start":{"line":3154,"column":2},"end":{"line":3154,"column":2}},{"start":{"line":3154,"column":2},"end":{"line":3154,"column":2}}]},"524":{"line":3158,"type":"if","locations":[{"start":{"line":3158,"column":2},"end":{"line":3158,"column":2}},{"start":{"line":3158,"column":2},"end":{"line":3158,"column":2}}]},"525":{"line":3162,"type":"if","locations":[{"start":{"line":3162,"column":2},"end":{"line":3162,"column":2}},{"start":{"line":3162,"column":2},"end":{"line":3162,"column":2}}]},"526":{"line":3167,"type":"if","locations":[{"start":{"line":3167,"column":2},"end":{"line":3167,"column":2}},{"start":{"line":3167,"column":2},"end":{"line":3167,"column":2}}]},"527":{"line":3172,"type":"if","locations":[{"start":{"line":3172,"column":6},"end":{"line":3172,"column":6}},{"start":{"line":3172,"column":6},"end":{"line":3172,"column":6}}]},"528":{"line":3173,"type":"if","locations":[{"start":{"line":3173,"column":6},"end":{"line":3173,"column":6}},{"start":{"line":3173,"column":6},"end":{"line":3173,"column":6}}]},"529":{"line":3191,"type":"if","locations":[{"start":{"line":3191,"column":4},"end":{"line":3191,"column":4}},{"start":{"line":3191,"column":4},"end":{"line":3191,"column":4}}]},"530":{"line":3195,"type":"if","locations":[{"start":{"line":3195,"column":6},"end":{"line":3195,"column":6}},{"start":{"line":3195,"column":6},"end":{"line":3195,"column":6}}]},"531":{"line":3207,"type":"if","locations":[{"start":{"line":3207,"column":2},"end":{"line":3207,"column":2}},{"start":{"line":3207,"column":2},"end":{"line":3207,"column":2}}]},"532":{"line":3207,"type":"binary-expr","locations":[{"start":{"line":3207,"column":6},"end":{"line":3207,"column":37}},{"start":{"line":3207,"column":41},"end":{"line":3207,"column":76}},{"start":{"line":3208,"column":7},"end":{"line":3208,"column":21}},{"start":{"line":3208,"column":26},"end":{"line":3208,"column":52}},{"start":{"line":3208,"column":56},"end":{"line":3208,"column":82}}]},"533":{"line":3213,"type":"if","locations":[{"start":{"line":3213,"column":9},"end":{"line":3213,"column":9}},{"start":{"line":3213,"column":9},"end":{"line":3213,"column":9}}]},"534":{"line":3218,"type":"if","locations":[{"start":{"line":3218,"column":2},"end":{"line":3218,"column":2}},{"start":{"line":3218,"column":2},"end":{"line":3218,"column":2}}]},"535":{"line":3227,"type":"if","locations":[{"start":{"line":3227,"column":4},"end":{"line":3227,"column":4}},{"start":{"line":3227,"column":4},"end":{"line":3227,"column":4}}]},"536":{"line":3229,"type":"if","locations":[{"start":{"line":3229,"column":4},"end":{"line":3229,"column":4}},{"start":{"line":3229,"column":4},"end":{"line":3229,"column":4}}]},"537":{"line":3229,"type":"binary-expr","locations":[{"start":{"line":3229,"column":7},"end":{"line":3229,"column":21}},{"start":{"line":3229,"column":25},"end":{"line":3229,"column":35}},{"start":{"line":3229,"column":39},"end":{"line":3229,"column":52}}]},"538":{"line":3235,"type":"if","locations":[{"start":{"line":3235,"column":4},"end":{"line":3235,"column":4}},{"start":{"line":3235,"column":4},"end":{"line":3235,"column":4}}]},"539":{"line":3236,"type":"if","locations":[{"start":{"line":3236,"column":4},"end":{"line":3236,"column":4}},{"start":{"line":3236,"column":4},"end":{"line":3236,"column":4}}]},"540":{"line":3237,"type":"if","locations":[{"start":{"line":3237,"column":4},"end":{"line":3237,"column":4}},{"start":{"line":3237,"column":4},"end":{"line":3237,"column":4}}]},"541":{"line":3240,"type":"if","locations":[{"start":{"line":3240,"column":4},"end":{"line":3240,"column":4}},{"start":{"line":3240,"column":4},"end":{"line":3240,"column":4}}]},"542":{"line":3242,"type":"if","locations":[{"start":{"line":3242,"column":6},"end":{"line":3242,"column":6}},{"start":{"line":3242,"column":6},"end":{"line":3242,"column":6}}]},"543":{"line":3242,"type":"binary-expr","locations":[{"start":{"line":3242,"column":9},"end":{"line":3242,"column":35}},{"start":{"line":3242,"column":39},"end":{"line":3242,"column":58}}]},"544":{"line":3253,"type":"if","locations":[{"start":{"line":3253,"column":4},"end":{"line":3253,"column":4}},{"start":{"line":3253,"column":4},"end":{"line":3253,"column":4}}]},"545":{"line":3253,"type":"binary-expr","locations":[{"start":{"line":3253,"column":7},"end":{"line":3253,"column":28}},{"start":{"line":3253,"column":32},"end":{"line":3253,"column":64}}]},"546":{"line":3262,"type":"if","locations":[{"start":{"line":3262,"column":4},"end":{"line":3262,"column":4}},{"start":{"line":3262,"column":4},"end":{"line":3262,"column":4}}]},"547":{"line":3262,"type":"binary-expr","locations":[{"start":{"line":3262,"column":7},"end":{"line":3262,"column":33}},{"start":{"line":3262,"column":37},"end":{"line":3262,"column":56}}]},"548":{"line":3284,"type":"binary-expr","locations":[{"start":{"line":3284,"column":12},"end":{"line":3284,"column":19}},{"start":{"line":3284,"column":23},"end":{"line":3284,"column":25}}]},"549":{"line":3303,"type":"binary-expr","locations":[{"start":{"line":3303,"column":12},"end":{"line":3303,"column":19}},{"start":{"line":3303,"column":23},"end":{"line":3303,"column":25}}]},"550":{"line":3312,"type":"if","locations":[{"start":{"line":3312,"column":2},"end":{"line":3312,"column":2}},{"start":{"line":3312,"column":2},"end":{"line":3312,"column":2}}]},"551":{"line":3312,"type":"binary-expr","locations":[{"start":{"line":3312,"column":5},"end":{"line":3312,"column":22}},{"start":{"line":3312,"column":26},"end":{"line":3312,"column":43}},{"start":{"line":3312,"column":47},"end":{"line":3312,"column":68}}]},"552":{"line":3314,"type":"if","locations":[{"start":{"line":3314,"column":4},"end":{"line":3314,"column":4}},{"start":{"line":3314,"column":4},"end":{"line":3314,"column":4}}]},"553":{"line":3315,"type":"if","locations":[{"start":{"line":3315,"column":4},"end":{"line":3315,"column":4}},{"start":{"line":3315,"column":4},"end":{"line":3315,"column":4}}]},"554":{"line":3316,"type":"if","locations":[{"start":{"line":3316,"column":4},"end":{"line":3316,"column":4}},{"start":{"line":3316,"column":4},"end":{"line":3316,"column":4}}]},"555":{"line":3317,"type":"if","locations":[{"start":{"line":3317,"column":4},"end":{"line":3317,"column":4}},{"start":{"line":3317,"column":4},"end":{"line":3317,"column":4}}]},"556":{"line":3319,"type":"if","locations":[{"start":{"line":3319,"column":9},"end":{"line":3319,"column":9}},{"start":{"line":3319,"column":9},"end":{"line":3319,"column":9}}]},"557":{"line":3319,"type":"binary-expr","locations":[{"start":{"line":3319,"column":12},"end":{"line":3319,"column":38}},{"start":{"line":3319,"column":42},"end":{"line":3319,"column":68}},{"start":{"line":3319,"column":72},"end":{"line":3319,"column":102}}]},"558":{"line":3321,"type":"if","locations":[{"start":{"line":3321,"column":9},"end":{"line":3321,"column":9}},{"start":{"line":3321,"column":9},"end":{"line":3321,"column":9}}]},"559":{"line":3321,"type":"binary-expr","locations":[{"start":{"line":3321,"column":12},"end":{"line":3321,"column":37}},{"start":{"line":3321,"column":41},"end":{"line":3321,"column":66}},{"start":{"line":3321,"column":70},"end":{"line":3321,"column":99}}]},"560":{"line":3331,"type":"if","locations":[{"start":{"line":3331,"column":2},"end":{"line":3331,"column":2}},{"start":{"line":3331,"column":2},"end":{"line":3331,"column":2}}]},"561":{"line":3333,"type":"if","locations":[{"start":{"line":3333,"column":9},"end":{"line":3333,"column":9}},{"start":{"line":3333,"column":9},"end":{"line":3333,"column":9}}]},"562":{"line":3335,"type":"if","locations":[{"start":{"line":3335,"column":9},"end":{"line":3335,"column":9}},{"start":{"line":3335,"column":9},"end":{"line":3335,"column":9}}]},"563":{"line":3339,"type":"if","locations":[{"start":{"line":3339,"column":2},"end":{"line":3339,"column":2}},{"start":{"line":3339,"column":2},"end":{"line":3339,"column":2}}]},"564":{"line":3341,"type":"if","locations":[{"start":{"line":3341,"column":9},"end":{"line":3341,"column":9}},{"start":{"line":3341,"column":9},"end":{"line":3341,"column":9}}]},"565":{"line":3343,"type":"if","locations":[{"start":{"line":3343,"column":9},"end":{"line":3343,"column":9}},{"start":{"line":3343,"column":9},"end":{"line":3343,"column":9}}]},"566":{"line":3343,"type":"binary-expr","locations":[{"start":{"line":3343,"column":12},"end":{"line":3343,"column":13}},{"start":{"line":3343,"column":17},"end":{"line":3343,"column":47}},{"start":{"line":3343,"column":51},"end":{"line":3343,"column":71}}]},"567":{"line":3344,"type":"binary-expr","locations":[{"start":{"line":3344,"column":15},"end":{"line":3344,"column":21}},{"start":{"line":3344,"column":25},"end":{"line":3344,"column":37}}]},"568":{"line":3345,"type":"if","locations":[{"start":{"line":3345,"column":4},"end":{"line":3345,"column":4}},{"start":{"line":3345,"column":4},"end":{"line":3345,"column":4}}]},"569":{"line":3345,"type":"binary-expr","locations":[{"start":{"line":3345,"column":8},"end":{"line":3345,"column":12}},{"start":{"line":3345,"column":16},"end":{"line":3345,"column":39}}]}},"code":["\"use strict\";","","var checkCollectionName = require('./utils').checkCollectionName","  , ObjectID = require('mongodb-core').BSON.ObjectID","  , Long = require('mongodb-core').BSON.Long","  , Code = require('mongodb-core').BSON.Code","  , f = require('util').format","  , AggregationCursor = require('./aggregation_cursor')","  , MongoError = require('mongodb-core').MongoError","  , shallowClone = require('./utils').shallowClone","  , isObject = require('./utils').isObject","  , toError = require('./utils').toError","  , normalizeHintField = require('./utils').normalizeHintField","  , handleCallback = require('./utils').handleCallback","  , decorateCommand = require('./utils').decorateCommand","  , formattedOrderClause = require('./utils').formattedOrderClause","  , ReadPreference = require('./read_preference')","  , CoreReadPreference = require('mongodb-core').ReadPreference","  , CommandCursor = require('./command_cursor')","  , Define = require('./metadata')","  , Cursor = require('./cursor')","  , unordered = require('./bulk/unordered')","  , ordered = require('./bulk/ordered')","  , assign = require('./utils').assign","  , mergeOptions = require('./utils').mergeOptions;","","/**"," * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection"," * allowing for insert/update/remove/find and other command operation on that MongoDB collection."," *"," * **COLLECTION Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Create a collection we want to drop later"," *   var col = db.collection('createIndexExample1');"," *   // Show that duplicate records got dropped"," *   col.find({}).toArray(function(err, items) {"," *     test.equal(null, err);"," *     test.equal(4, items.length);"," *     db.close();"," *   });"," * });"," */","","/**"," * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @property {string} collectionName Get the collection name."," * @property {string} namespace Get the full collection namespace."," * @property {object} writeConcern The current write concern values."," * @property {object} readConcern The current read concern values."," * @property {object} hint Get current index hint for collection."," * @return {Collection} a Collection instance."," */","var Collection = function(db, topology, dbName, name, pkFactory, options) {","  checkCollectionName(name);","","  // Unpack variables","  var internalHint = null;","  var slaveOk = options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk;","  var serializeFunctions = options == null || options.serializeFunctions == null ? db.s.options.serializeFunctions : options.serializeFunctions;","  var raw = options == null || options.raw == null ? db.s.options.raw : options.raw;","  var promoteLongs = options == null || options.promoteLongs == null ? db.s.options.promoteLongs : options.promoteLongs;","  var promoteValues = options == null || options.promoteValues == null ? db.s.options.promoteValues : options.promoteValues;","  var promoteBuffers = options == null || options.promoteBuffers == null ? db.s.options.promoteBuffers : options.promoteBuffers;","  var readPreference = null;","  var collectionHint = null;","  var namespace = f(\"%s.%s\", dbName, name);","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Assign the right collection level readPreference","  if(options && options.readPreference) {","    readPreference = options.readPreference;","  } else if(db.options.readPreference) {","    readPreference = db.options.readPreference;","  }","","  // Set custom primary key factory if provided","  pkFactory = pkFactory == null","    ? ObjectID","    : pkFactory;","","  // Internal state","  this.s = {","    // Set custom primary key factory if provided","      pkFactory: pkFactory","    // Db","    , db: db","    // Topology","    , topology: topology","    // dbName","    , dbName: dbName","    // Options","    , options: options","    // Namespace","    , namespace: namespace","    // Read preference","    , readPreference: readPreference","    // SlaveOK","    , slaveOk: slaveOk","    // Serialize functions","    , serializeFunctions: serializeFunctions","    // Raw","    , raw: raw","    // promoteLongs","    , promoteLongs: promoteLongs","    // promoteValues","    , promoteValues: promoteValues","    // promoteBuffers","    , promoteBuffers: promoteBuffers","    // internalHint","    , internalHint: internalHint","    // collectionHint","    , collectionHint: collectionHint","    // Name","    , name: name","    // Promise library","    , promiseLibrary: promiseLibrary","    // Read Concern","    , readConcern: options.readConcern","  }","}","","var define = Collection.define = new Define('Collection', Collection, false);","","Object.defineProperty(Collection.prototype, 'collectionName', {","  enumerable: true, get: function() { return this.s.name; }","});","","Object.defineProperty(Collection.prototype, 'namespace', {","  enumerable: true, get: function() { return this.s.namespace; }","});","","Object.defineProperty(Collection.prototype, 'readConcern', {","  enumerable: true, get: function() { return this.s.readConcern || {level: 'local'}; }","});","","Object.defineProperty(Collection.prototype, 'writeConcern', {","  enumerable:true,","  get: function() {","    var ops = {};","    if(this.s.options.w != null) ops.w = this.s.options.w;","    if(this.s.options.j != null) ops.j = this.s.options.j;","    if(this.s.options.fsync != null) ops.fsync = this.s.options.fsync;","    if(this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;","    return ops;","  }","});","","/**"," * @ignore"," */","Object.defineProperty(Collection.prototype, \"hint\", {","    enumerable: true","  , get: function () { return this.s.collectionHint; }","  , set: function (v) { this.s.collectionHint = normalizeHintField(v); }","});","","/**"," * Creates a cursor for a query that can be used to iterate over results from MongoDB"," * @method"," * @param {object} query The cursor query object."," * @throws {MongoError}"," * @return {Cursor}"," */","Collection.prototype.find = function() {","  var options","    , args = Array.prototype.slice.call(arguments, 0)","    , has_callback = typeof args[args.length - 1] === 'function'","    , has_weird_callback = typeof args[0] === 'function'","    , callback = has_callback ? args.pop() : (has_weird_callback ? args.shift() : null)","    , len = args.length","    , selector = len >= 1 ? args[0] : {}","    , fields = len >= 2 ? args[1] : undefined;","","  if(len === 1 && has_weird_callback) {","    // backwards compat for callback?, options case","    selector = {};","    options = args[0];","  }","","  if(len === 2 && fields !== undefined && !Array.isArray(fields)) {","    var fieldKeys = Object.keys(fields);","    var is_option = false;","","    for(var i = 0; i < fieldKeys.length; i++) {","      if(testForFields[fieldKeys[i]] != null) {","        is_option = true;","        break;","      }","    }","","    if(is_option) {","      options = fields;","      fields = undefined;","    } else {","      options = {};","    }","  } else if(len === 2 && Array.isArray(fields) && !Array.isArray(fields[0])) {","    var newFields = {};","    // Rewrite the array","    for(i = 0; i < fields.length; i++) {","      newFields[fields[i]] = 1;","    }","    // Set the fields","    fields = newFields;","  }","","  if(3 === len) {","    options = args[2];","  }","","  // Ensure selector is not null","  selector = selector == null ? {} : selector;","  // Validate correctness off the selector","  var object = selector;","  if(Buffer.isBuffer(object)) {","    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;","    if(object_size != object.length)  {","      var error = new Error(\"query selector raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");","      error.name = 'MongoError';","      throw error;","    }","  }","","  // Validate correctness of the field selector","  object = fields;","  if(Buffer.isBuffer(object)) {","    object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;","    if(object_size != object.length)  {","      error = new Error(\"query fields raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");","      error.name = 'MongoError';","      throw error;","    }","  }","","  // Check special case where we are using an objectId","  if(selector != null && selector._bsontype == 'ObjectID') {","    selector = {_id:selector};","  }","","  // If it's a serialized fields field we need to just let it through","  // user be warned it better be good","  if(options && options.fields && !(Buffer.isBuffer(options.fields))) {","    fields = {};","","    if(Array.isArray(options.fields)) {","      if(!options.fields.length) {","        fields['_id'] = 1;","      } else {","        var l = options.fields.length;","","        for (i = 0; i < l; i++) {","          fields[options.fields[i]] = 1;","        }","      }","    } else {","      fields = options.fields;","    }","  }","","  if (!options) options = {};","","  var newOptions = {};","  // Make a shallow copy of options","  for (var key in options) {","    newOptions[key] = options[key];","  }","","  // Unpack options","  newOptions.skip = len > 3 ? args[2] : options.skip ? options.skip : 0;","  newOptions.limit = len > 3 ? args[3] : options.limit ? options.limit : 0;","  newOptions.raw = options.raw != null && typeof options.raw === 'boolean' ? options.raw : this.s.raw;","  newOptions.hint = options.hint != null ? normalizeHintField(options.hint) : this.s.collectionHint;","  newOptions.timeout = len == 5 ? args[4] : typeof options.timeout === 'undefined' ? undefined : options.timeout;","  // // If we have overridden slaveOk otherwise use the default db setting","  newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;","","  // Add read preference if needed","  newOptions = getReadPreference(this, newOptions, this.s.db, this);","","  // Set slave ok to true if read preference different from primary","  if(newOptions.readPreference != null","    && (newOptions.readPreference != 'primary' || newOptions.readPreference.mode != 'primary')) {","    newOptions.slaveOk = true;","  }","","  // Ensure the query is an object","  if(selector != null && typeof selector != 'object') {","    throw MongoError.create({message: \"query selector must be an object\", driver:true });","  }","","  // Build the find command","  var findCommand = {","      find: this.s.namespace","    , limit: newOptions.limit","    , skip: newOptions.skip","    , query: selector","  }","","  // Ensure we use the right await data option","  if(typeof newOptions.awaitdata == 'boolean')  {","    newOptions.awaitData = newOptions.awaitdata","  }","","  // Translate to new command option noCursorTimeout","  if(typeof newOptions.timeout == 'boolean') newOptions.noCursorTimeout = newOptions.timeout;","","  // Merge in options to command","  for(var name in newOptions) {","    if(newOptions[name] != null) findCommand[name] = newOptions[name];","  }","","  // Format the fields","  var formatFields = function(fields) {","    var object = {};","    if(Array.isArray(fields)) {","      for(var i = 0; i < fields.length; i++) {","        if(Array.isArray(fields[i])) {","          object[fields[i][0]] = fields[i][1];","        } else {","          object[fields[i][0]] = 1;","        }","      }","    } else {","      object = fields;","    }","","    return object;","  }","","  // Special treatment for the fields selector","  if(fields) findCommand.fields = formatFields(fields);","","  // Add db object to the new options","  newOptions.db = this.s.db;","","  // Add the promise library","  newOptions.promiseLibrary = this.s.promiseLibrary;","","  // Set raw if available at collection level","  if(newOptions.raw == null && typeof this.s.raw == 'boolean') newOptions.raw = this.s.raw;","  // Set promoteLongs if available at collection level","  if(newOptions.promoteLongs == null && typeof this.s.promoteLongs == 'boolean') newOptions.promoteLongs = this.s.promoteLongs;","  if(newOptions.promoteValues == null && typeof this.s.promoteValues == 'boolean') newOptions.promoteValues = this.s.promoteValues;","  if(newOptions.promoteBuffers == null && typeof this.s.promoteBuffers == 'boolean') newOptions.promoteBuffers = this.s.promoteBuffers;","","  // Sort options","  if(findCommand.sort) {","    findCommand.sort = formattedOrderClause(findCommand.sort);","  }","","  // Set the readConcern","  if(this.s.readConcern) {","    findCommand.readConcern = this.s.readConcern;","  }","","  // Decorate find command with collation options","  decorateWithCollation(findCommand, this, options);","","  // Create the cursor","  if(typeof callback == 'function') return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, findCommand, newOptions));","  return this.s.topology.cursor(this.s.namespace, findCommand, newOptions);","}","","define.classMethod('find', {callback: false, promise:false, returns: [Cursor]});","","/**"," * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {object} doc Document to insert."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.insertOne = function(doc, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","  if(Array.isArray(doc) && typeof callback == 'function') {","    return callback(MongoError.create({message: 'doc parameter must be an object', driver:true }));","  } else if(Array.isArray(doc)) {","    return new this.s.promiseLibrary(function(resolve, reject) {","      reject(MongoError.create({message: 'doc parameter must be an object', driver:true }));","    });","  }","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return insertOne(self, doc, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    insertOne(self, doc, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var insertOne = function(self, doc, options, callback) {","  insertDocuments(self, [doc], options, function(err, r) {","    if(callback == null) return;","    if(err && callback) return callback(err);","    // Workaround for pre 2.6 servers","    if(r == null) return callback(null, {result: {ok:1}});","    // Add values to top level to ensure crud spec compatibility","    r.insertedCount = r.result.n;","    r.insertedId = doc._id;","    if(callback) callback(null, r);","  });","}","","var mapInserManyResults = function(docs, r) {","  var ids = r.getInsertedIds();","  var keys = Object.keys(ids);","  var finalIds = new Array(keys.length);","","  for(var i = 0; i < keys.length; i++) {","    if(ids[keys[i]]._id) {","      finalIds[ids[keys[i]].index] = ids[keys[i]]._id;","    }","  }","","  var finalResult = {","    result: {ok: 1, n: r.insertedCount},","    ops: docs,","    insertedCount: r.insertedCount,","    insertedIds: finalIds","  };","","  if(r.getLastOp()) {","    finalResult.result.opTime = r.getLastOp();","  }","","  return finalResult;","}","","define.classMethod('insertOne', {callback: true, promise:true});","","/**"," * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {object[]} docs Documents to insert."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {boolean} [options.ordered=true] If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails."," * @param {Collection~insertWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.insertMany = function(docs, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {ordered:true};","  if(!Array.isArray(docs) && typeof callback == 'function') {","    return callback(MongoError.create({message: 'docs parameter must be an array of documents', driver:true }));","  } else if(!Array.isArray(docs)) {","    return new this.s.promiseLibrary(function(resolve, reject) {","      reject(MongoError.create({message: 'docs parameter must be an array of documents', driver:true }));","    });","  }","","  // Get the write concern options","  if(typeof options.checkKeys != 'boolean') {","    options.checkKeys = true;","  }","","  // If keep going set unordered","  options['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;","","  // Set up the force server object id","  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'","    ? options.forceServerObjectId : self.s.db.options.forceServerObjectId;","","  // Do we want to force the server to assign the _id key","  if(forceServerObjectId !== true) {","    // Add _id if not specified","    for(var i = 0; i < docs.length; i++) {","      if(docs[i]._id == null) docs[i]._id = self.s.pkFactory.createPk();","    }","  }","","  // Generate the bulk write operations","  var operations = [{","    insertMany: docs","  }];","","  // Execute using callback","  if(typeof callback == 'function') return bulkWrite(self, operations, options, function(err, r) {","    if(err) return callback(err, r);","    callback(null, mapInserManyResults(docs, r));","  });","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    bulkWrite(self, operations, options, function(err, r) {","      if(err) return reject(err);","      resolve(mapInserManyResults(docs, r));","    });","  });","}","","define.classMethod('insertMany', {callback: true, promise:true});","","/**"," * @typedef {Object} Collection~BulkWriteOpResult"," * @property {number} insertedCount Number of documents inserted."," * @property {number} matchedCount Number of documents matched for update."," * @property {number} modifiedCount Number of documents modified."," * @property {number} deletedCount Number of documents deleted."," * @property {number} upsertedCount Number of documents upserted."," * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation"," * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation"," * @property {object} result The command result object."," */","","/**"," * The callback format for inserts"," * @callback Collection~bulkWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Perform a bulkWrite operation without a fluent API"," *"," * Legal operation types are"," *"," *  { insertOne: { document: { a: 1 } } }"," *"," *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }"," *"," *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }"," *"," *  { deleteOne: { filter: {c:1} } }"," *"," *  { deleteMany: { filter: {c:1} } }"," *"," *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}"," *"," * If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {object[]} operations Bulk operations to perform."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.ordered=true] Execute write operation in ordered or unordered fashion."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~bulkWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.bulkWrite = function(operations, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {ordered:true};","","  if(!Array.isArray(operations)) {","    throw MongoError.create({message: \"operations must be an array of documents\", driver:true });","  }","","  // Execute using callback","  if(typeof callback == 'function') return bulkWrite(self, operations, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    bulkWrite(self, operations, options, function(err, r) {","      if(err && r == null) return reject(err);","      resolve(r);","    });","  });","}","","var bulkWrite = function(self, operations, options, callback) {","  // Add ignoreUndfined","  if(self.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = self.s.options.ignoreUndefined;","  }","","  // Create the bulk operation","  var bulk = options.ordered == true || options.ordered == null ? self.initializeOrderedBulkOp(options) : self.initializeUnorderedBulkOp(options);","","  // Do we have a collation","  var collation = false;","","  // for each op go through and add to the bulk","  try {","    for(var i = 0; i < operations.length; i++) {","      // Get the operation type","      var key = Object.keys(operations[i])[0];","      // Check if we have a collation","      if(operations[i][key].collation) {","        collation = true;","      }","","      // Pass to the raw bulk","      bulk.raw(operations[i]);","    }","  } catch(err) {","    return callback(err, null);","  }","","  // Final options for write concern","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  var writeCon = finalOptions.writeConcern ? finalOptions.writeConcern : {};","  var capabilities = self.s.topology.capabilities();","","  // Did the user pass in a collation, check if our write server supports it","  if(collation && capabilities && !capabilities.commandsTakeCollation) {","    return callback(new MongoError(f('server/primary/mongos does not support collation')));","  }","","  // Execute the bulk","  bulk.execute(writeCon, function(err, r) {","    // We have connection level error","    if(!r && err) return callback(err, null);","    // We have single error","    if(r && r.hasWriteErrors() && r.getWriteErrorCount() == 1) {","      return callback(toError(r.getWriteErrorAt(0)), r);","    }","","    r.insertedCount = r.nInserted;","    r.matchedCount = r.nMatched;","    r.modifiedCount = r.nModified || 0;","    r.deletedCount = r.nRemoved;","    r.upsertedCount = r.getUpsertedIds().length;","    r.upsertedIds = {};","    r.insertedIds = {};","","    // Update the n","    r.n = r.insertedCount;","","    // Inserted documents","    var inserted = r.getInsertedIds();","    // Map inserted ids","    for(var i = 0; i < inserted.length; i++) {","      r.insertedIds[inserted[i].index] = inserted[i]._id;","    }","","    // Upserted documents","    var upserted = r.getUpsertedIds();","    // Map upserted ids","    for(i = 0; i < upserted.length; i++) {","      r.upsertedIds[upserted[i].index] = upserted[i]._id;","    }","","    // Check if we have write errors","    if(r.hasWriteErrors()) {","      // Get all the errors","      var errors = r.getWriteErrors();","      // Return the MongoError object","      return callback(toError({","        message: 'write operation failed', code: errors[0].code, writeErrors: errors","      }), r);","    }","","    // Check if we have a writeConcern error","    if(r.getWriteConcernError()) {","      // Return the MongoError object","      return callback(toError(r.getWriteConcernError()), r);","    }","","    // Return the results","    callback(null, r);","  });","}","","var insertDocuments = function(self, docs, options, callback) {","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","  // Ensure we are operating on an array op docs","  docs = Array.isArray(docs) ? docs : [docs];","","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  if(typeof finalOptions.checkKeys != 'boolean') finalOptions.checkKeys = true;","","  // If keep going set unordered","  if(finalOptions.keepGoing == true) finalOptions.ordered = false;","  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;","","  // Set up the force server object id","  var forceServerObjectId = typeof options.forceServerObjectId == 'boolean'","    ? options.forceServerObjectId : self.s.db.options.forceServerObjectId;","","  // Add _id if not specified","  if(forceServerObjectId !== true){","    for(var i = 0; i < docs.length; i++) {","      if(docs[i]._id == null) docs[i]._id = self.s.pkFactory.createPk();","    }","  }","","  // File inserts","  self.s.topology.insert(self.s.namespace, docs, finalOptions, function(err, result) {","    if(callback == null) return;","    if(err) return handleCallback(callback, err);","    if(result == null) return handleCallback(callback, null, null);","    if(result.result.code) return handleCallback(callback, toError(result.result));","    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));","    // Add docs to the list","    result.ops = docs;","    // Return the results","    handleCallback(callback, null, result);","  });","}","","define.classMethod('bulkWrite', {callback: true, promise:true});","","/**"," * @typedef {Object} Collection~WriteOpResult"," * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany"," * @property {object} connection The connection object used for the operation."," * @property {object} result The command result object."," */","","/**"," * The callback format for inserts"," * @callback Collection~writeOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~WriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * @typedef {Object} Collection~insertWriteOpResult"," * @property {Number} insertedCount The total amount of documents inserted."," * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany"," * @property {ObjectId[]} insertedIds All the generated _id's for the inserted documents."," * @property {object} connection The connection object used for the operation."," * @property {object} result The raw command result object returned from MongoDB (content might vary by server version)."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents inserted."," */","","/**"," * @typedef {Object} Collection~insertOneWriteOpResult"," * @property {Number} insertedCount The total amount of documents inserted."," * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany"," * @property {ObjectId} insertedId The driver generated ObjectId for the insert operation."," * @property {object} connection The connection object used for the operation."," * @property {object} result The raw command result object returned from MongoDB (content might vary by server version)."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents inserted."," */","","/**"," * The callback format for inserts"," * @callback Collection~insertWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~insertWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * The callback format for inserts"," * @callback Collection~insertOneWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~insertOneWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,"," * one will be added to each of the documents missing it by the driver, mutating the document. This behavior"," * can be overridden by setting the **forceServerObjectId** flag."," *"," * @method"," * @param {(object|object[])} docs Documents to insert."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~insertWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated Use insertOne, insertMany or bulkWrite"," */","Collection.prototype.insert = function(docs, options, callback) {","  if(typeof options == 'function') callback = options, options = {};","  options = options || {ordered:false};","  docs = !Array.isArray(docs) ? [docs] : docs;","","  if(options.keepGoing == true) {","    options.ordered = false;","  }","","  return this.insertMany(docs, options, callback);","}","","define.classMethod('insert', {callback: true, promise:true});","","/**"," * @typedef {Object} Collection~updateWriteOpResult"," * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents scanned."," * @property {Number} result.nModified The total count of documents modified."," * @property {Object} connection The connection object used for the operation."," * @property {Number} matchedCount The number of documents that matched the filter."," * @property {Number} modifiedCount The number of documents that were modified."," * @property {Number} upsertedCount The number of documents upserted."," * @property {Object} upsertedId The upserted id."," * @property {ObjectId} upsertedId._id The upserted _id returned from the server."," */","","/**"," * The callback format for inserts"," * @callback Collection~updateWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~updateWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Update a single document on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to update"," * @param {object} update The update operations to be applied to the document"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~updateWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.updateOne = function(filter, update, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = shallowClone(options)","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return updateOne(self, filter, update, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    updateOne(self, filter, update, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var updateOne = function(self, filter, update, options, callback) {","  // Set single document update","  options.multi = false;","  // Execute update","  updateDocuments(self, filter, update, options, function(err, r) {","    if(callback == null) return;","    if(err && callback) return callback(err);","    if(r == null) return callback(null, {result: {ok:1}});","    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;","    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;","    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;","    r.matchedCount = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;","    if(callback) callback(null, r);","  });","}","","define.classMethod('updateOne', {callback: true, promise:true});","","/**"," * Replace a document on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to update"," * @param {object} doc The Document that replaces the matching document"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~updateWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.replaceOne = function(filter, doc, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = shallowClone(options)","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return replaceOne(self, filter, doc, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    replaceOne(self, filter, doc, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var replaceOne = function(self, filter, doc, options, callback) {","  // Set single document update","  options.multi = false;","","  // Execute update","  updateDocuments(self, filter, doc, options, function(err, r) {","    if(callback == null) return;","    if(err && callback) return callback(err);","    if(r == null) return callback(null, {result: {ok:1}});","","    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;","    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;","    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;","    r.matchedCount = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;","    r.ops = [doc];","    if(callback) callback(null, r);","  });","}","","define.classMethod('replaceOne', {callback: true, promise:true});","","/**"," * Update multiple documents on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to update"," * @param {object} update The update operations to be applied to the document"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~updateWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.updateMany = function(filter, update, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = shallowClone(options)","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return updateMany(self, filter, update, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    updateMany(self, filter, update, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var updateMany = function(self, filter, update, options, callback) {","  // Set single document update","  options.multi = true;","  // Execute update","  updateDocuments(self, filter, update, options, function(err, r) {","    if(callback == null) return;","    if(err && callback) return callback(err);","    if(r == null) return callback(null, {result: {ok:1}});","    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;","    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;","    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;","    r.matchedCount = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;","    if(callback) callback(null, r);","  });","}","","define.classMethod('updateMany', {callback: true, promise:true});","","var updateDocuments = function(self, selector, document, options, callback) {","  if('function' === typeof options) callback = options, options = null;","  if(options == null) options = {};","  if(!('function' === typeof callback)) callback = null;","","  // If we are not providing a selector or document throw","  if(selector == null || typeof selector != 'object') return callback(toError(\"selector must be a valid JavaScript object\"));","  if(document == null || typeof document != 'object') return callback(toError(\"document must be a valid JavaScript object\"));","","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","","  // Do we return the actual result document","  // Either use override on the function, or go back to default on either the collection","  // level or db","  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;","","  // Execute the operation","  var op = {q: selector, u: document};","  op.upsert = typeof options.upsert == 'boolean' ? options.upsert : false;","  op.multi = typeof options.multi == 'boolean' ? options.multi : false;","","  // Have we specified collation","  decorateWithCollation(finalOptions, self, options);","","  // Update options","  self.s.topology.update(self.s.namespace, [op], finalOptions, function(err, result) {","    if(callback == null) return;","    if(err) return handleCallback(callback, err, null);","    if(result == null) return handleCallback(callback, null, null);","    if(result.result.code) return handleCallback(callback, toError(result.result));","    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));","    // Return the results","    handleCallback(callback, null, result);","  });","}","","/**"," * Updates documents."," * @method"," * @param {object} selector The selector for the update operation."," * @param {object} document The update document."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.upsert=false] Update operation is an upsert."," * @param {boolean} [options.multi=false] Update one/all documents with operation."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields)."," * @param {Collection~writeOpCallback} [callback] The command result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use updateOne, updateMany or bulkWrite"," */","Collection.prototype.update = function(selector, document, options, callback) {","  var self = this;","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return updateDocuments(self, selector, document, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    updateDocuments(self, selector, document, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('update', {callback: true, promise:true});","","/**"," * @typedef {Object} Collection~deleteWriteOpResult"," * @property {Object} result The raw result returned from MongoDB, field will vary depending on server version."," * @property {Number} result.ok Is 1 if the command executed correctly."," * @property {Number} result.n The total count of documents deleted."," * @property {Object} connection The connection object used for the operation."," * @property {Number} deletedCount The number of documents deleted."," */","","/**"," * The callback format for inserts"," * @callback Collection~deleteWriteOpCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~deleteWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Delete a document on MongoDB"," * @method"," * @param {object} filter The Filter used to select the document to remove"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~deleteWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.deleteOne = function(filter, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = shallowClone(options);","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return deleteOne(self, filter, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    deleteOne(self, filter, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var deleteOne = function(self, filter, options, callback) {","  options.single = true;","  removeDocuments(self, filter, options, function(err, r) {","    if(callback == null) return;","    if(err && callback) return callback(err);","    if(r == null) return callback(null, {result: {ok:1}});","    r.deletedCount = r.result.n;","    if(callback) callback(null, r);","  });","}","","define.classMethod('deleteOne', {callback: true, promise:true});","","Collection.prototype.removeOne = Collection.prototype.deleteOne;","","define.classMethod('removeOne', {callback: true, promise:true});","","/**"," * Delete multiple documents on MongoDB"," * @method"," * @param {object} filter The Filter used to select the documents to remove"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~deleteWriteOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.deleteMany = function(filter, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = shallowClone(options);","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return deleteMany(self, filter, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    deleteMany(self, filter, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var deleteMany = function(self, filter, options, callback) {","  options.single = false;","","  removeDocuments(self, filter, options, function(err, r) {","    if(callback == null) return;","    if(err && callback) return callback(err);","    if(r == null) return callback(null, {result: {ok:1}});","    r.deletedCount = r.result.n;","    if(callback) callback(null, r);","  });","}","","var removeDocuments = function(self, selector, options, callback) {","  if(typeof options == 'function') {","    callback = options, options = {};","  } else if (typeof selector === 'function') {","    callback = selector;","    options = {};","    selector = {};","  }","","  // Create an empty options object if the provided one is null","  options = options || {};","","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","","  // If selector is null set empty","  if(selector == null) selector = {};","","  // Build the op","  var op = {q: selector, limit: 0};","  if(options.single) op.limit = 1;","","  // Have we specified collation","  decorateWithCollation(finalOptions, self, options);","","  // Execute the remove","  self.s.topology.remove(self.s.namespace, [op], finalOptions, function(err, result) {","    if(callback == null) return;","    if(err) return handleCallback(callback, err, null);","    if(result == null) return handleCallback(callback, null, null);","    if(result.result.code) return handleCallback(callback, toError(result.result));","    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));","    // Return the results","    handleCallback(callback, null, result);","  });","}","","define.classMethod('deleteMany', {callback: true, promise:true});","","Collection.prototype.removeMany = Collection.prototype.deleteMany;","","define.classMethod('removeMany', {callback: true, promise:true});","","/**"," * Remove documents."," * @method"," * @param {object} selector The selector for the update operation."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.single=false] Removes the first document found."," * @param {Collection~writeOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use deleteOne, deleteMany or bulkWrite"," */","Collection.prototype.remove = function(selector, options, callback) {","  var self = this;","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return removeDocuments(self, selector, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    removeDocuments(self, selector, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('remove', {callback: true, promise:true});","","/**"," * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic"," * operators and update instead for more efficient operations."," * @method"," * @param {object} doc Document to save"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~writeOpCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use insertOne, insertMany, updateOne or updateMany"," */","Collection.prototype.save = function(doc, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Add ignoreUndfined","  if(this.s.options.ignoreUndefined) {","    options = shallowClone(options);","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute using callback","  if(typeof callback == 'function') return save(self, doc, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    save(self, doc, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var save = function(self, doc, options, callback) {","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","  // Establish if we need to perform an insert or update","  if(doc._id != null) {","    finalOptions.upsert = true;","    return updateDocuments(self, {_id: doc._id}, doc, finalOptions, callback);","  }","","  // Insert the document","  insertDocuments(self, [doc], options, function(err, r) {","    if(callback == null) return;","    if(doc == null) return handleCallback(callback, null, null);","    if(err) return handleCallback(callback, err, null);","    handleCallback(callback, null, r);","  });","}","","define.classMethod('save', {callback: true, promise:true});","","/**"," * The callback format for results"," * @callback Collection~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result object if the command was executed successfully."," */","","/**"," * Fetches the first document that matches the query"," * @method"," * @param {object} query Query for find Operation"," * @param {object} [options=null] Optional settings."," * @param {number} [options.limit=0] Sets the limit of documents returned in the query."," * @param {(array|object)} [options.sort=null] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc."," * @param {object} [options.fields=null] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}"," * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination)."," * @param {Object} [options.hint=null] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}"," * @param {boolean} [options.explain=false] Explain the query instead of returning the data."," * @param {boolean} [options.snapshot=false] Snapshot query."," * @param {boolean} [options.timeout=false] Specify if the cursor can timeout."," * @param {boolean} [options.tailable=false] Specify if the cursor is tailable."," * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results."," * @param {boolean} [options.returnKey=false] Only return the index key."," * @param {number} [options.maxScan=null] Limit the number of items to scan."," * @param {number} [options.min=null] Set index bounds."," * @param {number} [options.max=null] Set index bounds."," * @param {boolean} [options.showDiskLoc=false] Show disk location of results."," * @param {string} [options.comment=null] You can put a $comment field on a query to make looking in the profiler logs simpler."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution."," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system"," * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query."," * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields)."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.findOne = function() {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  var callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","","  // Execute using callback","  if(typeof callback == 'function') return findOne(self, args, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    findOne(self, args, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var findOne = function(self, args, callback) {","  var cursor = self.find.apply(self, args).limit(-1).batchSize(1);","  // Return the item","  cursor.next(function(err, item) {","    if(err != null) return handleCallback(callback, toError(err), null);","    handleCallback(callback, null, item);","  });","}","","define.classMethod('findOne', {callback: true, promise:true});","","/**"," * The callback format for the collection method, must be used if strict is specified"," * @callback Collection~collectionResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection} collection The collection instance."," */","","/**"," * Rename the collection."," *"," * @method"," * @param {string} newName New name of of the collection."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists."," * @param {Collection~collectionResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.rename = function(newName, opt, callback) {","  var self = this;","  if(typeof opt == 'function') callback = opt, opt = {};","  opt = assign({}, opt, {readPreference: ReadPreference.PRIMARY});","","  // Execute using callback","  if(typeof callback == 'function') return rename(self, newName, opt, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    rename(self, newName, opt, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var rename = function(self, newName, opt, callback) {","  // Check the collection name","  checkCollectionName(newName);","  // Build the command","  var renameCollection = f(\"%s.%s\", self.s.dbName, self.s.name);","  var toCollection =  f(\"%s.%s\", self.s.dbName, newName);","  var dropTarget = typeof opt.dropTarget == 'boolean' ? opt.dropTarget : false;","  var cmd = {'renameCollection':renameCollection, 'to':toCollection, 'dropTarget':dropTarget};","","  // Decorate command with writeConcern if supported","  decorateWithWriteConcern(cmd, self, opt);","","  // Execute against admin","  self.s.db.admin().command(cmd, opt, function(err, doc) {","    if(err) return handleCallback(callback, err, null);","    // We have an error","    if(doc.errmsg) return handleCallback(callback, toError(doc), null);","    try {","      return handleCallback(callback, null, new Collection(self.s.db, self.s.topology, self.s.dbName, newName, self.s.pkFactory, self.s.options));","    } catch(err) {","      return handleCallback(callback, toError(err), null);","    }","  });","}","","define.classMethod('rename', {callback: true, promise:true});","","/**"," * Drop the collection from the database, removing it permanently. New accesses will create a new collection."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {Collection~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.drop = function(options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Execute using callback","  if(typeof callback == 'function') return self.s.db.dropCollection(self.s.name, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.dropCollection(self.s.name, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('drop', {callback: true, promise:true});","","/**"," * Returns the options of the collection."," *"," * @method"," * @param {Collection~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.options = function(callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return options(self, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    options(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var options = function(self, callback) {","  self.s.db.listCollections({name: self.s.name}).toArray(function(err, collections) {","    if(err) return handleCallback(callback, err);","    if(collections.length == 0) {","      return handleCallback(callback, MongoError.create({message: f(\"collection %s not found\", self.s.namespace), driver:true }));","    }","","    handleCallback(callback, err, collections[0].options || null);","  });","}","","define.classMethod('options', {callback: true, promise:true});","","/**"," * Returns if the collection is a capped collection"," *"," * @method"," * @param {Collection~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.isCapped = function(callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return isCapped(self, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    isCapped(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var isCapped = function(self, callback) {","  self.options(function(err, document) {","    if(err) return handleCallback(callback, err);","    handleCallback(callback, null, document && document.capped);","  });","}","","define.classMethod('isCapped', {callback: true, promise:true});","","/**"," * Creates an index on the db and collection collection."," * @method"," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {string} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)"," * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields)."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.createIndex = function(fieldOrSpec, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() || {} : {};","  options = typeof callback === 'function' ? options : callback;","  options = options == null ? {} : options;","","  // Execute using callback","  if(typeof callback == 'function') return createIndex(self, fieldOrSpec, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    createIndex(self, fieldOrSpec, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var createIndex = function(self, fieldOrSpec, options, callback) {","  self.s.db.createIndex(self.s.name, fieldOrSpec, options, callback);","}","","define.classMethod('createIndex', {callback: true, promise:true});","","/**"," * Creates multiple indexes in the collection, this method is only supported for"," * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported"," * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/."," * @method"," * @param {array} indexSpecs An array of index specifications to be created"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.createIndexes = function(indexSpecs, callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return createIndexes(self, indexSpecs, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    createIndexes(self, indexSpecs, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var createIndexes = function(self, indexSpecs, callback) {","  var capabilities = self.s.topology.capabilities();","","  // Ensure we generate the correct name if the parameter is not set","  for(var i = 0; i < indexSpecs.length; i++) {","    if(indexSpecs[i].name == null) {","      var keys = [];","","      // Did the user pass in a collation, check if our write server supports it","      if(indexSpecs[i].collation && capabilities && !capabilities.commandsTakeCollation) {","        return callback(new MongoError(f('server/primary/mongos does not support collation')));","      }","","      for(var name in indexSpecs[i].key) {","        keys.push(f('%s_%s', name, indexSpecs[i].key[name]));","      }","","      // Set the name","      indexSpecs[i].name = keys.join('_');","    }","  }","","  // Execute the index","  self.s.db.command({","    createIndexes: self.s.name, indexes: indexSpecs","  }, { readPreference: ReadPreference.PRIMARY }, callback);","}","","define.classMethod('createIndexes', {callback: true, promise:true});","","/**"," * Drops an index from this collection."," * @method"," * @param {string} indexName Name of the index to drop."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.dropIndex = function(indexName, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() || {} : {};","  // Run only against primary","  options.readPreference = ReadPreference.PRIMARY;","","  // Execute using callback","  if(typeof callback == 'function') return dropIndex(self, indexName, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    dropIndex(self, indexName, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var dropIndex = function(self, indexName, options, callback) {","  // Delete index command","  var cmd = {'dropIndexes':self.s.name, 'index':indexName};","","  // Decorate command with writeConcern if supported","  decorateWithWriteConcern(cmd, self, options);","","  // Execute command","  self.s.db.command(cmd, options, function(err, result) {","    if(typeof callback != 'function') return;","    if(err) return handleCallback(callback, err, null);","    handleCallback(callback, null, result);","  });","}","","define.classMethod('dropIndex', {callback: true, promise:true});","","/**"," * Drops all indexes from this collection."," * @method"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.dropIndexes = function(options, callback) {","  var self = this;","","  // Do we have options","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Execute using callback","  if(typeof callback == 'function') return dropIndexes(self, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    dropIndexes(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var dropIndexes = function(self, options, callback) {","  self.dropIndex('*', options, function(err) {","    if(err) return handleCallback(callback, err, false);","    handleCallback(callback, null, true);","  });","}","","define.classMethod('dropIndexes', {callback: true, promise:true});","","/**"," * Drops all indexes from this collection."," * @method"," * @deprecated use dropIndexes"," * @param {Collection~resultCallback} callback The command result callback"," * @return {Promise} returns Promise if no [callback] passed"," */","Collection.prototype.dropAllIndexes = Collection.prototype.dropIndexes;","","define.classMethod('dropAllIndexes', {callback: true, promise:true});","","/**"," * Reindex all indexes on the collection"," * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections."," * @method"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.reIndex = function(options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Execute using callback","  if(typeof callback == 'function') return reIndex(self, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    reIndex(self, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var reIndex = function(self, options, callback) {","  // Reindex","  var cmd = {'reIndex':self.s.name};","","  // Execute the command","  self.s.db.command(cmd, options, function(err, result) {","    if(callback == null) return;","    if(err) return handleCallback(callback, err, null);","    handleCallback(callback, null, result.ok ? true : false);","  });","}","","define.classMethod('reIndex', {callback: true, promise:true});","","/**"," * Get the list of all indexes information for the collection."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection"," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @return {CommandCursor}"," */","Collection.prototype.listIndexes = function(options) {","  options = options || {};","  // Clone the options","  options = shallowClone(options);","  // Determine the read preference in the options.","  options = getReadPreference(this, options, this.s.db, this);","  // Set the CommandCursor constructor","  options.cursorFactory = CommandCursor;","  // Set the promiseLibrary","  options.promiseLibrary = this.s.promiseLibrary;","","  if(!this.s.topology.capabilities()) {","    throw new MongoError('cannot connect to server');","  }","","  // We have a list collections command","  if(this.s.topology.capabilities().hasListIndexesCommand) {","    // Cursor options","    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}","    // Build the command","    var command = { listIndexes: this.s.name, cursor: cursor };","    // Execute the cursor","    cursor = this.s.topology.cursor(f('%s.$cmd', this.s.dbName), command, options);","    // Do we have a readPreference, apply it","    if(options.readPreference) cursor.setReadPreference(options.readPreference);","    // Return the cursor","    return cursor;","  }","","  // Get the namespace","  var ns = f('%s.system.indexes', this.s.dbName);","  // Get the query","  cursor = this.s.topology.cursor(ns, {find: ns, query: {ns: this.s.namespace}}, options);","  // Do we have a readPreference, apply it","  if(options.readPreference) cursor.setReadPreference(options.readPreference);","  // Set the passed in batch size if one was provided","  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);","  // Return the cursor","  return cursor;","};","","define.classMethod('listIndexes', {callback: false, promise:false, returns: [CommandCursor]});","","/**"," * Ensures that an index exists, if it does not it creates it"," * @method"," * @deprecated use createIndexes instead"," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields)."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.ensureIndex = function(fieldOrSpec, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Execute using callback","  if(typeof callback == 'function') return ensureIndex(self, fieldOrSpec, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    ensureIndex(self, fieldOrSpec, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var ensureIndex = function(self, fieldOrSpec, options, callback) {","  self.s.db.ensureIndex(self.s.name, fieldOrSpec, options, callback);","}","","define.classMethod('ensureIndex', {callback: true, promise:true});","","/**"," * Checks if one or more indexes exist on the collection, fails on first non-existing index"," * @method"," * @param {(string|array)} indexes One or more index names to check."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.indexExists = function(indexes, callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return indexExists(self, indexes, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    indexExists(self, indexes, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var indexExists = function(self, indexes, callback) {","  self.indexInformation(function(err, indexInformation) {","    // If we have an error return","    if(err != null) return handleCallback(callback, err, null);","    // Let's check for the index names","    if(!Array.isArray(indexes)) return handleCallback(callback, null, indexInformation[indexes] != null);","    // Check in list of indexes","    for(var i = 0; i < indexes.length; i++) {","      if(indexInformation[indexes[i]] == null) {","        return handleCallback(callback, null, false);","      }","    }","","    // All keys found return true","    return handleCallback(callback, null, true);","  });","}","","define.classMethod('indexExists', {callback: true, promise:true});","","/**"," * Retrieves this collections index info."," * @method"," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.full=false] Returns the full raw index information."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.indexInformation = function(options, callback) {","  var self = this;","  // Unpack calls","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() || {} : {};","","  // Execute using callback","  if(typeof callback == 'function') return indexInformation(self, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    indexInformation(self, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var indexInformation = function(self, options, callback) {","  self.s.db.indexInformation(self.s.name, options, callback);","}","","define.classMethod('indexInformation', {callback: true, promise:true});","","/**"," * The callback format for results"," * @callback Collection~countCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {number} result The count of documents that matched the query."," */","","/**"," * Count number of matching documents in the db to a query."," * @method"," * @param {object} query The query for the count."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.limit=null] The limit of documents to count."," * @param {boolean} [options.skip=null] The number of documents to skip for the count."," * @param {string} [options.hint=null] An index name hint for the query."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query."," * @param {Collection~countCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.count = function(query, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  var queryOption = args.length ? args.shift() || {} : {};","  var optionsOption = args.length ? args.shift() || {} : {};","","  // Execute using callback","  if(typeof callback == 'function') return count(self, queryOption, optionsOption, callback);","","  // Check if query is empty","  query = query || {};","  options = options || {};","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    count(self, query, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var count = function(self, query, options, callback) {","  var skip = options.skip;","  var limit = options.limit;","  var hint = options.hint;","  var maxTimeMS = options.maxTimeMS;","","  // Final query","  var cmd = {","    'count': self.s.name, 'query': query","  };","","  // Add limit, skip and maxTimeMS if defined","  if(typeof skip == 'number') cmd.skip = skip;","  if(typeof limit == 'number') cmd.limit = limit;","  if(typeof maxTimeMS == 'number') cmd.maxTimeMS = maxTimeMS;","  if(hint) options.hint = hint;","","  options = shallowClone(options);","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","","  // Do we have a readConcern specified","  if(self.s.readConcern) {","    cmd.readConcern = self.s.readConcern;","  }","","  // Have we specified collation","  decorateWithCollation(cmd, self, options);","","  // Execute command","  self.s.db.command(cmd, options, function(err, result) {","    if(err) return handleCallback(callback, err);","    handleCallback(callback, null, result.n);","  });","}","","define.classMethod('count', {callback: true, promise:true});","","/**"," * The distinct command returns returns a list of distinct values for the given key across a collection."," * @method"," * @param {string} key Field of the document to find distinct values for."," * @param {object} query The query for filtering the set of documents to which we apply the distinct filter."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.distinct = function(key, query, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  var queryOption = args.length ? args.shift() || {} : {};","  var optionsOption = args.length ? args.shift() || {} : {};","","  // Execute using callback","  if(typeof callback == 'function') return distinct(self, key, queryOption, optionsOption, callback);","","  // Ensure the query and options are set","  query = query || {};","  options = options || {};","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    distinct(self, key, query, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var distinct = function(self, key, query, options, callback) {","  // maxTimeMS option","  var maxTimeMS = options.maxTimeMS;","","  // Distinct command","  var cmd = {","    'distinct': self.s.name, 'key': key, 'query': query","  };","","  options = shallowClone(options);","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","","  // Add maxTimeMS if defined","  if(typeof maxTimeMS == 'number')","    cmd.maxTimeMS = maxTimeMS;","","  // Do we have a readConcern specified","  if(self.s.readConcern) {","    cmd.readConcern = self.s.readConcern;","  }","","  // Have we specified collation","  decorateWithCollation(cmd, self, options);","","  // Execute the command","  self.s.db.command(cmd, options, function(err, result) {","    if(err) return handleCallback(callback, err);","    handleCallback(callback, null, result.values);","  });","}","","define.classMethod('distinct', {callback: true, promise:true});","","/**"," * Retrieve all the indexes on the collection."," * @method"," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.indexes = function(callback) {","  var self = this;","  // Execute using callback","  if(typeof callback == 'function') return indexes(self, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    indexes(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var indexes = function(self, callback) {","  self.s.db.indexInformation(self.s.name, {full:true}, callback);","}","","define.classMethod('indexes', {callback: true, promise:true});","","/**"," * Get all the collection statistics."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {number} [options.scale=null] Divide the returned sizes by scale value."," * @param {Collection~resultCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.stats = function(options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  // Fetch all commands","  options = args.length ? args.shift() || {} : {};","","  // Execute using callback","  if(typeof callback == 'function') return stats(self, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    stats(self, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var stats = function(self, options, callback) {","  // Build command object","  var commandObject = {","    collStats:self.s.name","  }","","  // Check if we have the scale value","  if(options['scale'] != null) commandObject['scale'] = options['scale'];","","  options = shallowClone(options);","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","","  // Execute the command","  self.s.db.command(commandObject, options, callback);","}","","define.classMethod('stats', {callback: true, promise:true});","","/**"," * @typedef {Object} Collection~findAndModifyWriteOpResult"," * @property {object} value Document returned from findAndModify command."," * @property {object} lastErrorObject The raw lastErrorObject returned from the command."," * @property {Number} ok Is 1 if the command executed correctly."," */","","/**"," * The callback format for inserts"," * @callback Collection~findAndModifyCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection~findAndModifyWriteOpResult} result The result object if the command was executed successfully."," */","","/**"," * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation."," *"," * @method"," * @param {object} filter Document selection filter."," * @param {object} [options=null] Optional settings."," * @param {object} [options.projection=null] Limits the fields to return for all matching documents."," * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents."," * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run."," * @param {Collection~findAndModifyCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.findOneAndDelete = function(filter, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Basic validation","  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');","","  // Execute using callback","  if(typeof callback == 'function') return findOneAndDelete(self, filter, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    options = options || {};","","    findOneAndDelete(self, filter, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var findOneAndDelete = function(self, filter, options, callback) {","  // Final options","  var finalOptions = shallowClone(options);","  finalOptions['fields'] = options.projection;","  finalOptions['remove'] = true;","  // Execute find and Modify","  self.findAndModify(","      filter","    , options.sort","    , null","    , finalOptions","    , callback","  );","}","","define.classMethod('findOneAndDelete', {callback: true, promise:true});","","/**"," * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation."," *"," * @method"," * @param {object} filter Document selection filter."," * @param {object} replacement Document replacing the matching document."," * @param {object} [options=null] Optional settings."," * @param {object} [options.projection=null] Limits the fields to return for all matching documents."," * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents."," * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run."," * @param {boolean} [options.upsert=false] Upsert the document if it does not exist."," * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true."," * @param {Collection~findAndModifyCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Basic validation","  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');","  if(replacement == null || typeof replacement != 'object') throw toError('replacement parameter must be an object');","","  // Execute using callback","  if(typeof callback == 'function') return findOneAndReplace(self, filter, replacement, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    options = options || {};","","    findOneAndReplace(self, filter, replacement, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var findOneAndReplace = function(self, filter, replacement, options, callback) {","  // Final options","  var finalOptions = shallowClone(options);","  finalOptions['fields'] = options.projection;","  finalOptions['update'] = true;","  finalOptions['new'] = typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false;","  finalOptions['upsert'] = typeof options.upsert == 'boolean' ? options.upsert : false;","","  // Execute findAndModify","  self.findAndModify(","      filter","    , options.sort","    , replacement","    , finalOptions","    , callback","  );","}","","define.classMethod('findOneAndReplace', {callback: true, promise:true});","","/**"," * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation."," *"," * @method"," * @param {object} filter Document selection filter."," * @param {object} update Update operations to be performed on the document"," * @param {object} [options=null] Optional settings."," * @param {object} [options.projection=null] Limits the fields to return for all matching documents."," * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents."," * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run."," * @param {boolean} [options.upsert=false] Upsert the document if it does not exist."," * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true."," * @param {Collection~findAndModifyCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.findOneAndUpdate = function(filter, update, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Basic validation","  if(filter == null || typeof filter != 'object') throw toError('filter parameter must be an object');","  if(update == null || typeof update != 'object') throw toError('update parameter must be an object');","","  // Execute using callback","  if(typeof callback == 'function') return findOneAndUpdate(self, filter, update, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    options = options || {};","","    findOneAndUpdate(self, filter, update, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var findOneAndUpdate = function(self, filter, update, options, callback) {","  // Final options","  var finalOptions = shallowClone(options);","  finalOptions['fields'] = options.projection;","  finalOptions['update'] = true;","  finalOptions['new'] = typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false;","  finalOptions['upsert'] = typeof options.upsert == 'boolean' ? options.upsert : false;","","  // Execute findAndModify","  self.findAndModify(","      filter","    , options.sort","    , update","    , finalOptions","    , callback","  );","}","","define.classMethod('findOneAndUpdate', {callback: true, promise:true});","","/**"," * Find and update a document."," * @method"," * @param {object} query Query object to locate the object to modify."," * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate."," * @param {object} doc The fields/vals to be updated."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.remove=false] Set to true to remove the object before returning."," * @param {boolean} [options.upsert=false] Perform an upsert operation."," * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove."," * @param {object} [options.fields=null] Object containing the field projection for the result returned from the operation."," * @param {Collection~findAndModifyCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead"," */","Collection.prototype.findAndModify = function(query, sort, doc, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  sort = args.length ? args.shift() || [] : [];","  doc = args.length ? args.shift() : null;","  options = args.length ? args.shift() || {} : {};","","  // Clone options","  options = shallowClone(options);","  // Force read preference primary","  options.readPreference = ReadPreference.PRIMARY;","","  // Execute using callback","  if(typeof callback == 'function') return findAndModify(self, query, sort, doc, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    options = options || {};","","    findAndModify(self, query, sort, doc, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var findAndModify = function(self, query, sort, doc, options, callback) {","  // Create findAndModify command object","  var queryObject = {","     'findandmodify': self.s.name","   , 'query': query","  };","","  sort = formattedOrderClause(sort);","  if(sort) {","    queryObject.sort = sort;","  }","","  queryObject.new = options.new ? true : false;","  queryObject.remove = options.remove ? true : false;","  queryObject.upsert = options.upsert ? true : false;","","  if(options.fields) {","    queryObject.fields = options.fields;","  }","","  if(doc && !options.remove) {","    queryObject.update = doc;","  }","","  if(options.maxTimeMS)","    queryObject.maxTimeMS = options.maxTimeMS;","","  // Either use override on the function, or go back to default on either the collection","  // level or db","  if(options['serializeFunctions'] != null) {","    options['serializeFunctions'] = options['serializeFunctions'];","  } else {","    options['serializeFunctions'] = self.s.serializeFunctions;","  }","","  // No check on the documents","  options.checkKeys = false;","","  // Get the write concern settings","  var finalOptions = writeConcern(options, self.s.db, self, options);","","  // Decorate the findAndModify command with the write Concern","  if(finalOptions.writeConcern) {","    queryObject.writeConcern = finalOptions.writeConcern;","  }","","  // Have we specified bypassDocumentValidation","  if(typeof finalOptions.bypassDocumentValidation == 'boolean') {","    queryObject.bypassDocumentValidation = finalOptions.bypassDocumentValidation;","  }","","  // Have we specified collation","  decorateWithCollation(queryObject, self, options);","","  // Execute the command","  self.s.db.command(queryObject","    , options, function(err, result) {","      if(err) return handleCallback(callback, err, null);","      return handleCallback(callback, null, result);","  });","}","","define.classMethod('findAndModify', {callback: true, promise:true});","","/**"," * Find and remove a document."," * @method"," * @param {object} query Query object to locate the object to modify."," * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," * @deprecated use findOneAndDelete instead"," */","Collection.prototype.findAndRemove = function(query, sort, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  sort = args.length ? args.shift() || [] : [];","  options = args.length ? args.shift() || {} : {};","","  // Execute using callback","  if(typeof callback == 'function') return findAndRemove(self, query, sort, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    findAndRemove(self, query, sort, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var findAndRemove = function(self, query, sort, options, callback) {","  // Add the remove option","  options['remove'] = true;","  // Execute the callback","  self.findAndModify(query, sort, null, options, callback);","}","","define.classMethod('findAndRemove', {callback: true, promise:true});","","function decorateWithWriteConcern(command, self, options) {","  // Do we support collation 3.4 and higher","  var capabilities = self.s.topology.capabilities();","  // Do we support write concerns 3.4 and higher","  if(capabilities && capabilities.commandsTakeWriteConcern) {","    // Get the write concern settings","    var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);","    // Add the write concern to the command","    if(finalOptions.writeConcern) {","      command.writeConcern = finalOptions.writeConcern;","    }","  }","}","","function decorateWithCollation(command, self, options) {","  // Do we support collation 3.4 and higher","  var capabilities = self.s.topology.capabilities();","  // Do we support write concerns 3.4 and higher","  if(capabilities && capabilities.commandsTakeCollation) {","    if(options.collation && typeof options.collation == 'object') {","      command.collation = options.collation;","    }","  }","}","","/**"," * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2"," * @method"," * @param {object} pipeline Array containing all the aggregation framework commands for the execution."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.cursor=null] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor."," * @param {number} [options.cursor.batchSize=null] The batchSize for the cursor"," * @param {boolean} [options.explain=false] Explain returns the aggregation execution plan (requires mongodb 2.6 >)."," * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >)."," * @param {number} [options.maxTimeMS=null] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution."," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields)."," * @param {Collection~resultCallback} callback The command result callback"," * @return {(null|AggregationCursor)}"," */","Collection.prototype.aggregate = function(pipeline, options, callback) {","  var self = this;","","  if(Array.isArray(pipeline)) {","    // Set up callback if one is provided","    if(typeof options == 'function') {","      callback = options;","      options = {};","    }","","    // If we have no options or callback we are doing","    // a cursor based aggregation","    if(options == null && callback == null) {","      options = {};","    }","  } else {","    // Aggregation pipeline passed as arguments on the method","    var args = Array.prototype.slice.call(arguments, 0);","    // Get the callback","    callback = args.pop();","    // Get the possible options object","    var opts = args[args.length - 1];","    // If it contains any of the admissible options pop it of the args","    options = opts && (opts.readPreference","      || opts.explain || opts.cursor || opts.out","      || opts.maxTimeMS || opts.allowDiskUse) ? args.pop() : {};","      // Left over arguments is the pipeline","    pipeline = args;","  }","","  // Ignore readConcern option","  var ignoreReadConcern = false;","","  // Build the command","  var command = { aggregate : this.s.name, pipeline : pipeline};","","  // If out was specified","  if(typeof options.out == 'string') {","    pipeline.push({$out: options.out});","    // Ignore read concern","    ignoreReadConcern = true;","  } else if(pipeline.length > 0 && pipeline[pipeline.length - 1]['$out']) {","    ignoreReadConcern = true;","  }","","  // Decorate command with writeConcern if out has been specified","  if(pipeline.length > 0 && pipeline[pipeline.length - 1]['$out']) {","    decorateWithWriteConcern(command, self, options);","  }","","  // Have we specified collation","  decorateWithCollation(command, self, options);","","  // If we have bypassDocumentValidation set","  if(typeof options.bypassDocumentValidation == 'boolean') {","    command.bypassDocumentValidation = options.bypassDocumentValidation;","  }","","  // Do we have a readConcern specified","  if(!ignoreReadConcern && this.s.readConcern) {","    command.readConcern = this.s.readConcern;","  }","","  // If we have allowDiskUse defined","  if(options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;","  if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;","","  options = shallowClone(options);","  // Ensure we have the right read preference inheritance","  options = getReadPreference(this, options, this.s.db, this);","","  // If explain has been specified add it","  if(options.explain) command.explain = options.explain;","","  // Validate that cursor options is valid","  if(options.cursor != null && typeof options.cursor != 'object') {","    throw toError('cursor options must be an object');","  }","","  // promiseLibrary","  options.promiseLibrary = this.s.promiseLibrary;","","  // Set the AggregationCursor constructor","  options.cursorFactory = AggregationCursor;","  if(typeof callback != 'function') {","    if(!this.s.topology.capabilities()) {","      throw new MongoError('cannot connect to server');","    }","","    if(this.s.topology.capabilities().hasAggregationCursor) {","      options.cursor = options.cursor || { batchSize : 1000 };","      command.cursor = options.cursor;","    }","","    // Allow disk usage command","    if(typeof options.allowDiskUse == 'boolean') command.allowDiskUse = options.allowDiskUse;","    if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;","","    // Execute the cursor","    return this.s.topology.cursor(this.s.namespace, command, options);","  }","","  // We do not allow cursor","  if(options.cursor) {","    return this.s.topology.cursor(this.s.namespace, command, options);","  }","","  // Execute the command","  this.s.db.command(command, options, function(err, result) {","    if(err) {","      handleCallback(callback, err);","    } else if(result['err'] || result['errmsg']) {","      handleCallback(callback, toError(result));","    } else if(typeof result == 'object' && result['serverPipeline']) {","      handleCallback(callback, null, result['serverPipeline']);","    } else if(typeof result == 'object' && result['stages']) {","      handleCallback(callback, null, result['stages']);","    } else {","      handleCallback(callback, null, result.result);","    }","  });","}","","define.classMethod('aggregate', {callback: true, promise:false});","","/**"," * The callback format for results"," * @callback Collection~parallelCollectionScanCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection."," */","","/**"," * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are"," * no ordering guarantees for returned results."," * @method"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.batchSize=null] Set the batchSize for the getMoreCommand when iterating over the query results."," * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)"," * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents."," * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.parallelCollectionScan = function(options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {numCursors: 1};","  // Set number of cursors to 1","  options.numCursors = options.numCursors || 1;","  options.batchSize = options.batchSize || 1000;","","  options = shallowClone(options);","  // Ensure we have the right read preference inheritance","  options = getReadPreference(this, options, this.s.db, this);","","  // Add a promiseLibrary","  options.promiseLibrary = this.s.promiseLibrary;","","  // Execute using callback","  if(typeof callback == 'function') return parallelCollectionScan(self, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    parallelCollectionScan(self, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var parallelCollectionScan = function(self, options, callback) {","  // Create command object","  var commandObject = {","      parallelCollectionScan: self.s.name","    , numCursors: options.numCursors","  }","","  // Do we have a readConcern specified","  if(self.s.readConcern) {","    commandObject.readConcern = self.s.readConcern;","  }","","  // Store the raw value","  var raw = options.raw;","  delete options['raw'];","","  // Execute the command","  self.s.db.command(commandObject, options, function(err, result) {","    if(err) return handleCallback(callback, err, null);","    if(result == null) return handleCallback(callback, new Error(\"no result returned for parallelCollectionScan\"), null);","","    var cursors = [];","    // Add the raw back to the option","    if(raw) options.raw = raw;","    // Create command cursors for each item","    for(var i = 0; i < result.cursors.length; i++) {","      var rawId = result.cursors[i].cursor.id","      // Convert cursorId to Long if needed","      var cursorId = typeof rawId == 'number' ? Long.fromNumber(rawId) : rawId;","      // Add a command cursor","      cursors.push(self.s.topology.cursor(self.s.namespace, cursorId, options));","    }","","    handleCallback(callback, null, cursors);","  });","}","","define.classMethod('parallelCollectionScan', {callback: true, promise:true});","","/**"," * Execute the geoNear command to search for items in the collection"," *"," * @method"," * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order."," * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.num=null] Max number of results to return."," * @param {number} [options.minDistance=null] Include results starting at minDistance from a point (2.6 or higher)"," * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point."," * @param {number} [options.distanceMultiplier=null] Include a value to multiply the distances with allowing for range conversions."," * @param {object} [options.query=null] Filter the results by a query."," * @param {boolean} [options.spherical=false] Perform query using a spherical model."," * @param {boolean} [options.uniqueDocs=false] The closest location in a document to the center of the search region will always be returned MongoDB > 2.X."," * @param {boolean} [options.includeLocs=false] Include the location data fields in the top level of the results MongoDB > 2.X."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.geoNear = function(x, y, options, callback) {","  var self = this;","  var point = typeof(x) == 'object' && x","    , args = Array.prototype.slice.call(arguments, point?1:2);","","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  // Fetch all commands","  options = args.length ? args.shift() || {} : {};","","  // Execute using callback","  if(typeof callback == 'function') return geoNear(self, x, y, point, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    geoNear(self, x, y, point, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var geoNear = function(self, x, y, point, options, callback) {","  // Build command object","  var commandObject = {","    geoNear:self.s.name,","    near: point || [x, y]","  }","","  options = shallowClone(options);","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","","  // Exclude readPreference and existing options to prevent user from","  // shooting themselves in the foot","  var exclude = {","    readPreference: true,","    geoNear: true,","    near: true","  };","","  // Filter out any excluded objects","  commandObject = decorateCommand(commandObject, options, exclude);","","  // Do we have a readConcern specified","  if(self.s.readConcern) {","    commandObject.readConcern = self.s.readConcern;","  }","","  // Have we specified collation","  decorateWithCollation(commandObject, self, options);","","  // Execute the command","  self.s.db.command(commandObject, options, function (err, res) {","    if(err) return handleCallback(callback, err);","    if(res.err || res.errmsg) return handleCallback(callback, toError(res));","    // should we only be returning res.results here? Not sure if the user","    // should see the other return information","    handleCallback(callback, null, res);","  });","}","","define.classMethod('geoNear', {callback: true, promise:true});","","/**"," * Execute a geo search using a geo haystack index on a collection."," *"," * @method"," * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order."," * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point."," * @param {object} [options.search=null] Filter the results by a query."," * @param {number} [options.limit=false] Max number of results to return."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.geoHaystackSearch = function(x, y, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  // Fetch all commands","  options = args.length ? args.shift() || {} : {};","","  // Execute using callback","  if(typeof callback == 'function') return geoHaystackSearch(self, x, y, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    geoHaystackSearch(self, x, y, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var geoHaystackSearch = function(self, x, y, options, callback) {","  // Build command object","  var commandObject = {","    geoSearch: self.s.name,","    near: [x, y]","  }","","  // Remove read preference from hash if it exists","  commandObject = decorateCommand(commandObject, options, {readPreference: true});","","  options = shallowClone(options);","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","","  // Do we have a readConcern specified","  if(self.s.readConcern) {","    commandObject.readConcern = self.s.readConcern;","  }","","  // Execute the command","  self.s.db.command(commandObject, options, function (err, res) {","    if(err) return handleCallback(callback, err);","    if(res.err || res.errmsg) handleCallback(callback, toError(res));","    // should we only be returning res.results here? Not sure if the user","    // should see the other return information","    handleCallback(callback, null, res);","  });","}","","define.classMethod('geoHaystackSearch', {callback: true, promise:true});","","/**"," * Group function helper"," * @ignore"," */","// var groupFunction = function () {","//   var c = db[ns].find(condition);","//   var map = new Map();","//   var reduce_function = reduce;","//","//   while (c.hasNext()) {","//     var obj = c.next();","//     var key = {};","//","//     for (var i = 0, len = keys.length; i < len; ++i) {","//       var k = keys[i];","//       key[k] = obj[k];","//     }","//","//     var aggObj = map.get(key);","//","//     if (aggObj == null) {","//       var newObj = Object.extend({}, key);","//       aggObj = Object.extend(newObj, initial);","//       map.put(key, aggObj);","//     }","//","//     reduce_function(obj, aggObj);","//   }","//","//   return { \"result\": map.values() };","// }.toString();","var groupFunction = 'function () {\\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i < len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';","","/**"," * Run a group command across a collection"," *"," * @method"," * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by."," * @param {object} condition An optional condition that must be true for a row to be considered."," * @param {object} initial Initial value of the aggregation counter object."," * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated"," * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned."," * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Collection~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.group = function(keys, condition, initial, reduce, finalize, command, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 3);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  // Fetch all commands","  reduce = args.length ? args.shift() : null;","  finalize = args.length ? args.shift() : null;","  command = args.length ? args.shift() : null;","  options = args.length ? args.shift() || {} : {};","","  // Make sure we are backward compatible","  if(!(typeof finalize == 'function')) {","    command = finalize;","    finalize = null;","  }","","  if (!Array.isArray(keys) && keys instanceof Object && typeof(keys) !== 'function' && !(keys._bsontype == 'Code')) {","    keys = Object.keys(keys);","  }","","  if(typeof reduce === 'function') {","    reduce = reduce.toString();","  }","","  if(typeof finalize === 'function') {","    finalize = finalize.toString();","  }","","  // Set up the command as default","  command = command == null ? true : command;","","  // Execute using callback","  if(typeof callback == 'function') return group(self, keys, condition, initial, reduce, finalize, command, options, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    group(self, keys, condition, initial, reduce, finalize, command, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","var group = function(self, keys, condition, initial, reduce, finalize, command, options, callback) {","  // Execute using the command","  if(command) {","    var reduceFunction = reduce && reduce._bsontype == 'Code'","        ? reduce","        : new Code(reduce);","","    var selector = {","      group: {","          'ns': self.s.name","        , '$reduce': reduceFunction","        , 'cond': condition","        , 'initial': initial","        , 'out': \"inline\"","      }","    };","","    // if finalize is defined","    if(finalize != null) selector.group['finalize'] = finalize;","    // Set up group selector","    if ('function' === typeof keys || (keys && keys._bsontype == 'Code')) {","      selector.group.$keyf = keys && keys._bsontype == 'Code'","        ? keys","        : new Code(keys);","    } else {","      var hash = {};","      keys.forEach(function (key) {","        hash[key] = 1;","      });","      selector.group.key = hash;","    }","","    options = shallowClone(options);","    // Ensure we have the right read preference inheritance","    options = getReadPreference(self, options, self.s.db, self);","","    // Do we have a readConcern specified","    if(self.s.readConcern) {","      selector.readConcern = self.s.readConcern;","    }","","    // Have we specified collation","    decorateWithCollation(selector, self, options);","","    // Execute command","    self.s.db.command(selector, options, function(err, result) {","      if(err) return handleCallback(callback, err, null);","      handleCallback(callback, null, result.retval);","    });","  } else {","    // Create execution scope","    var scope = reduce != null && reduce._bsontype == 'Code'","      ? reduce.scope","      : {};","","    scope.ns = self.s.name;","    scope.keys = keys;","    scope.condition = condition;","    scope.initial = initial;","","    // Pass in the function text to execute within mongodb.","    var groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');","","    self.s.db.eval(new Code(groupfn, scope), function (err, results) {","      if (err) return handleCallback(callback, err, null);","      handleCallback(callback, null, results.result || results);","    });","  }","}","","define.classMethod('group', {callback: true, promise:true});","","/**"," * Functions that are passed as scope args must"," * be converted to Code instances."," * @ignore"," */","function processScope (scope) {","  if(!isObject(scope) || scope._bsontype == 'ObjectID') {","    return scope;","  }","","  var keys = Object.keys(scope);","  var i = keys.length;","  var key;","  var new_scope = {};","","  while (i--) {","    key = keys[i];","    if ('function' == typeof scope[key]) {","      new_scope[key] = new Code(String(scope[key]));","    } else {","      new_scope[key] = processScope(scope[key]);","    }","  }","","  return new_scope;","}","","/**"," * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection."," *"," * @method"," * @param {(function|string)} map The mapping function."," * @param {(function|string)} reduce The reduce function."," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.out=null] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*"," * @param {object} [options.query=null] Query filter object."," * @param {object} [options.sort=null] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces."," * @param {number} [options.limit=null] Number of objects to return from collection."," * @param {boolean} [options.keeptemp=false] Keep temporary data."," * @param {(function|string)} [options.finalize=null] Finalize function."," * @param {object} [options.scope=null] Can pass in variables that can be access from map/reduce/finalize."," * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X."," * @param {boolean} [options.verbose=false] Provide statistics on job execution time."," * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher."," * @param {Collection~resultCallback} [callback] The command result callback"," * @throws {MongoError}"," * @return {Promise} returns Promise if no callback passed"," */","Collection.prototype.mapReduce = function(map, reduce, options, callback) {","  var self = this;","  if('function' === typeof options) callback = options, options = {};","  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)","  if(null == options.out) {","    throw new Error(\"the out option parameter must be defined, see mongodb docs for possible values\");","  }","","  if('function' === typeof map) {","    map = map.toString();","  }","","  if('function' === typeof reduce) {","    reduce = reduce.toString();","  }","","  if('function' === typeof options.finalize) {","    options.finalize = options.finalize.toString();","  }","","  // Execute using callback","  if(typeof callback == 'function') return mapReduce(self, map, reduce, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    mapReduce(self, map, reduce, options, function(err, r, r1) {","      if(err) return reject(err);","      if(!r1) return resolve(r);","      resolve({results: r, stats: r1});","    });","  });","}","","var mapReduce = function(self, map, reduce, options, callback) {","  var mapCommandHash = {","      mapreduce: self.s.name","    , map: map","    , reduce: reduce","  };","","  // Exclusion list","  var exclusionList = ['readPreference'];","","  // Add any other options passed in","  for(var n in options) {","    if('scope' == n) {","      mapCommandHash[n] = processScope(options[n]);","    } else {","      // Only include if not in exclusion list","      if(exclusionList.indexOf(n) == -1) {","        mapCommandHash[n] = options[n];","      }","    }","  }","","  options = shallowClone(options);","","  // Ensure we have the right read preference inheritance","  options = getReadPreference(self, options, self.s.db, self);","","  // If we have a read preference and inline is not set as output fail hard","  if((options.readPreference != false && options.readPreference != 'primary')","    && options['out'] && (options['out'].inline != 1 && options['out'] != 'inline')) {","      // Force readPreference to primary","      options.readPreference = 'primary';","      // Decorate command with writeConcern if supported","      decorateWithWriteConcern(mapCommandHash, self, options);","  } else if(self.s.readConcern) {","    mapCommandHash.readConcern = self.s.readConcern;","  }","","  // Is bypassDocumentValidation specified","  if(typeof options.bypassDocumentValidation == 'boolean') {","    mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;","  }","","  // Have we specified collation","  decorateWithCollation(mapCommandHash, self, options);","","  // Execute command","  self.s.db.command(mapCommandHash, {readPreference:options.readPreference}, function (err, result) {","    if(err) return handleCallback(callback, err);","    // Check if we have an error","    if(1 != result.ok || result.err || result.errmsg) {","      return handleCallback(callback, toError(result));","    }","","    // Create statistics value","    var stats = {};","    if(result.timeMillis) stats['processtime'] = result.timeMillis;","    if(result.counts) stats['counts'] = result.counts;","    if(result.timing) stats['timing'] = result.timing;","","    // invoked with inline?","    if(result.results) {","      // If we wish for no verbosity","      if(options['verbose'] == null || !options['verbose']) {","        return handleCallback(callback, null, result.results);","      }","","      return handleCallback(callback, null, result.results, stats);","    }","","    // The returned collection","    var collection = null;","","    // If we have an object it's a different db","    if(result.result != null && typeof result.result == 'object') {","      var doc = result.result;","      collection = self.s.db.db(doc.db).collection(doc.collection);","    } else {","      // Create a collection object that wraps the result collection","      collection = self.s.db.collection(result.result)","    }","","    // If we wish for no verbosity","    if(options['verbose'] == null || !options['verbose']) {","      return handleCallback(callback, err, collection);","    }","","    // Return stats as third set of values","    handleCallback(callback, err, collection, stats);","  });","}","","define.classMethod('mapReduce', {callback: true, promise:true});","","/**"," * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @return {UnorderedBulkOperation}"," */","Collection.prototype.initializeUnorderedBulkOp = function(options) {","  options = options || {};","  options.promiseLibrary = this.s.promiseLibrary;","  return unordered(this.s.topology, this, options);","}","","define.classMethod('initializeUnorderedBulkOp', {callback: false, promise:false, returns: [ordered.UnorderedBulkOperation]});","","/**"," * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {OrderedBulkOperation} callback The command result callback"," * @return {null}"," */","Collection.prototype.initializeOrderedBulkOp = function(options) {","  options = options || {};","  options.promiseLibrary = this.s.promiseLibrary;","  return ordered(this.s.topology, this, options);","}","","define.classMethod('initializeOrderedBulkOp', {callback: false, promise:false, returns: [ordered.OrderedBulkOperation]});","","// Get write concern","var writeConcern = function(target, db, col, options) {","  if(options.w != null || options.j != null || options.fsync != null) {","    var opts = {};","    if(options.w != null) opts.w = options.w;","    if(options.wtimeout != null) opts.wtimeout = options.wtimeout;","    if(options.j != null) opts.j = options.j;","    if(options.fsync != null) opts.fsync = options.fsync;","    target.writeConcern = opts;","  } else if(col.writeConcern.w != null || col.writeConcern.j != null || col.writeConcern.fsync != null) {","    target.writeConcern = col.writeConcern;","  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {","    target.writeConcern = db.writeConcern;","  }","","  return target","}","","// Figure out the read preference","var getReadPreference = function(self, options, db) {","  var r = null","  if(options.readPreference) {","    r = options.readPreference","  } else if(self.s.readPreference) {","    r = self.s.readPreference","  } else if(db.s.readPreference) {","    r = db.s.readPreference;","  }","","  if(r instanceof ReadPreference) {","    options.readPreference = new CoreReadPreference(r.mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});","  } else if(typeof r == 'string') {","    options.readPreference = new CoreReadPreference(r);","  } else if(r && !(r instanceof ReadPreference) && typeof r == 'object') {","    var mode = r.mode || r.preference;","    if (mode && typeof mode == 'string') {","      options.readPreference = new CoreReadPreference(mode, r.tags, {maxStalenessSeconds: r.maxStalenessSeconds});","    }","  }","","  return options;","}","","var testForFields = {","    limit: 1, sort: 1, fields:1, skip: 1, hint: 1, explain: 1, snapshot: 1, timeout: 1, tailable: 1, tailableRetryInterval: 1","  , numberOfRetries: 1, awaitdata: 1, awaitData: 1, exhaust: 1, batchSize: 1, returnKey: 1, maxScan: 1, min: 1, max: 1, showDiskLoc: 1","  , comment: 1, raw: 1, readPreference: 1, partial: 1, read: 1, dbName: 1, oplogReplay: 1, connection: 1, maxTimeMS: 1, transforms: 1","  , collation: 1","}","","module.exports = Collection;",""],"l":{"3":1,"60":1,"61":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"76":0,"79":0,"80":0,"85":0,"86":0,"87":0,"88":0,"92":0,"97":0,"137":1,"139":1,"140":0,"143":1,"144":0,"147":1,"148":0,"151":1,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"166":1,"168":0,"169":0,"179":1,"180":0,"189":0,"191":0,"192":0,"195":0,"196":0,"197":0,"199":0,"200":0,"201":0,"202":0,"206":0,"207":0,"208":0,"210":0,"212":0,"213":0,"215":0,"216":0,"219":0,"222":0,"223":0,"227":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"251":0,"252":0,"257":0,"258":0,"260":0,"261":0,"262":0,"264":0,"266":0,"267":0,"271":0,"275":0,"277":0,"279":0,"280":0,"284":0,"285":0,"286":0,"287":0,"288":0,"290":0,"293":0,"296":0,"298":0,"302":0,"303":0,"307":0,"315":0,"316":0,"320":0,"323":0,"324":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"335":0,"339":0,"342":0,"346":0,"349":0,"352":0,"355":0,"357":0,"358":0,"359":0,"362":0,"363":0,"367":0,"368":0,"372":0,"375":0,"376":0,"379":1,"398":1,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"411":0,"412":0,"413":0,"417":0,"420":0,"421":0,"422":0,"423":0,"428":1,"429":0,"430":0,"431":0,"433":0,"435":0,"436":0,"437":0,"441":1,"442":0,"443":0,"444":0,"446":0,"447":0,"448":0,"452":0,"459":0,"460":0,"463":0,"466":1,"486":1,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"499":0,"500":0,"504":0,"507":0,"511":0,"513":0,"514":0,"519":0,"524":0,"525":0,"526":0,"530":0,"531":0,"532":0,"533":0,"538":1,"592":1,"593":0,"594":0,"595":0,"597":0,"598":0,"602":0,"605":0,"606":0,"607":0,"608":0,"613":1,"615":0,"616":0,"617":0,"621":0,"624":0,"627":0,"628":0,"630":0,"632":0,"633":0,"637":0,"640":0,"644":0,"645":0,"646":0,"649":0,"650":0,"654":0,"656":0,"658":0,"659":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"671":0,"674":0,"676":0,"677":0,"681":0,"683":0,"684":0,"688":0,"690":0,"692":0,"698":0,"700":0,"704":0,"708":1,"709":0,"710":0,"712":0,"715":0,"716":0,"719":0,"720":0,"723":0,"727":0,"728":0,"729":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"741":0,"743":0,"747":1,"817":1,"818":0,"819":0,"820":0,"822":0,"823":0,"826":0,"829":1,"866":1,"867":0,"868":0,"869":0,"872":0,"873":0,"874":0,"878":0,"881":0,"882":0,"883":0,"884":0,"889":1,"891":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"905":1,"921":1,"922":0,"923":0,"924":0,"927":0,"928":0,"929":0,"933":0,"936":0,"937":0,"938":0,"939":0,"944":1,"946":0,"949":0,"950":0,"951":0,"952":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"963":1,"978":1,"979":0,"980":0,"981":0,"984":0,"985":0,"986":0,"990":0,"993":0,"994":0,"995":0,"996":0,"1001":1,"1003":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1017":1,"1019":1,"1020":0,"1021":0,"1022":0,"1025":0,"1026":0,"1029":0,"1034":0,"1037":0,"1038":0,"1039":0,"1042":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1052":0,"1074":1,"1075":0,"1078":0,"1079":0,"1080":0,"1084":0,"1087":0,"1088":0,"1089":0,"1090":0,"1095":1,"1124":1,"1125":0,"1126":0,"1127":0,"1130":0,"1131":0,"1132":0,"1136":0,"1139":0,"1140":0,"1141":0,"1142":0,"1147":1,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1158":1,"1160":1,"1162":1,"1175":1,"1176":0,"1177":0,"1178":0,"1181":0,"1182":0,"1183":0,"1187":0,"1190":0,"1191":0,"1192":0,"1193":0,"1198":1,"1199":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1210":1,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1220":0,"1223":0,"1226":0,"1229":0,"1230":0,"1233":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1243":0,"1247":1,"1249":1,"1251":1,"1266":1,"1267":0,"1270":0,"1271":0,"1272":0,"1276":0,"1279":0,"1280":0,"1281":0,"1282":0,"1287":1,"1302":1,"1303":0,"1304":0,"1305":0,"1308":0,"1309":0,"1310":0,"1314":0,"1317":0,"1318":0,"1319":0,"1320":0,"1325":1,"1327":0,"1329":0,"1330":0,"1331":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1343":1,"1384":1,"1385":0,"1386":0,"1387":0,"1388":0,"1391":0,"1394":0,"1395":0,"1396":0,"1397":0,"1402":1,"1403":0,"1405":0,"1406":0,"1407":0,"1411":1,"1430":1,"1431":0,"1432":0,"1433":0,"1436":0,"1439":0,"1440":0,"1441":0,"1442":0,"1447":1,"1449":0,"1451":0,"1452":0,"1453":0,"1454":0,"1457":0,"1460":0,"1461":0,"1463":0,"1464":0,"1465":0,"1467":0,"1472":1,"1482":1,"1483":0,"1484":0,"1485":0,"1488":0,"1490":0,"1491":0,"1492":0,"1493":0,"1498":1,"1507":1,"1508":0,"1511":0,"1514":0,"1515":0,"1516":0,"1517":0,"1522":1,"1523":0,"1524":0,"1525":0,"1526":0,"1529":0,"1533":1,"1542":1,"1543":0,"1546":0,"1549":0,"1550":0,"1551":0,"1552":0,"1557":1,"1558":0,"1559":0,"1560":0,"1564":1,"1588":1,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1598":0,"1601":0,"1602":0,"1603":0,"1604":0,"1609":1,"1610":0,"1613":1,"1624":1,"1625":0,"1628":0,"1631":0,"1632":0,"1633":0,"1634":0,"1639":1,"1640":0,"1643":0,"1644":0,"1645":0,"1648":0,"1649":0,"1652":0,"1653":0,"1657":0,"1662":0,"1667":1,"1680":1,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1687":0,"1690":0,"1693":0,"1694":0,"1695":0,"1696":0,"1701":1,"1703":0,"1706":0,"1709":0,"1710":0,"1711":0,"1712":0,"1716":1,"1724":1,"1725":0,"1728":0,"1729":0,"1732":0,"1735":0,"1736":0,"1737":0,"1738":0,"1743":1,"1744":0,"1745":0,"1746":0,"1750":1,"1759":1,"1761":1,"1770":1,"1771":0,"1772":0,"1773":0,"1776":0,"1779":0,"1780":0,"1781":0,"1782":0,"1787":1,"1789":0,"1792":0,"1793":0,"1794":0,"1795":0,"1799":1,"1810":1,"1811":0,"1813":0,"1815":0,"1817":0,"1819":0,"1821":0,"1822":0,"1826":0,"1828":0,"1830":0,"1832":0,"1834":0,"1836":0,"1840":0,"1842":0,"1844":0,"1846":0,"1848":0,"1851":1,"1875":1,"1876":0,"1877":0,"1878":0,"1881":0,"1884":0,"1885":0,"1886":0,"1887":0,"1892":1,"1893":0,"1896":1,"1905":1,"1906":0,"1909":0,"1912":0,"1913":0,"1914":0,"1915":0,"1920":1,"1921":0,"1923":0,"1925":0,"1927":0,"1928":0,"1929":0,"1934":0,"1938":1,"1948":1,"1949":0,"1951":0,"1952":0,"1953":0,"1954":0,"1957":0,"1960":0,"1961":0,"1962":0,"1963":0,"1968":1,"1969":0,"1972":1,"1994":1,"1995":0,"1996":0,"1997":0,"1998":0,"1999":0,"2000":0,"2003":0,"2006":0,"2007":0,"2010":0,"2011":0,"2012":0,"2013":0,"2018":1,"2019":0,"2020":0,"2021":0,"2022":0,"2025":0,"2030":0,"2031":0,"2032":0,"2033":0,"2035":0,"2037":0,"2040":0,"2041":0,"2045":0,"2048":0,"2049":0,"2050":0,"2054":1,"2067":1,"2068":0,"2069":0,"2070":0,"2071":0,"2072":0,"2073":0,"2076":0,"2079":0,"2080":0,"2083":0,"2084":0,"2085":0,"2086":0,"2091":1,"2093":0,"2096":0,"2100":0,"2102":0,"2105":0,"2106":0,"2109":0,"2110":0,"2114":0,"2117":0,"2118":0,"2119":0,"2123":1,"2131":1,"2132":0,"2134":0,"2137":0,"2138":0,"2139":0,"2140":0,"2145":1,"2146":0,"2149":1,"2160":1,"2161":0,"2162":0,"2163":0,"2164":0,"2166":0,"2169":0,"2172":0,"2173":0,"2174":0,"2175":0,"2180":1,"2182":0,"2187":0,"2189":0,"2191":0,"2194":0,"2197":1,"2225":1,"2226":0,"2227":0,"2228":0,"2231":0,"2234":0,"2237":0,"2238":0,"2240":0,"2241":0,"2242":0,"2247":1,"2249":0,"2250":0,"2251":0,"2253":0,"2262":1,"2279":1,"2280":0,"2281":0,"2282":0,"2285":0,"2286":0,"2289":0,"2292":0,"2293":0,"2295":0,"2296":0,"2297":0,"2302":1,"2304":0,"2305":0,"2306":0,"2307":0,"2308":0,"2311":0,"2320":1,"2337":1,"2338":0,"2339":0,"2340":0,"2343":0,"2344":0,"2347":0,"2350":0,"2351":0,"2353":0,"2354":0,"2355":0,"2360":1,"2362":0,"2363":0,"2364":0,"2365":0,"2366":0,"2369":0,"2378":1,"2398":1,"2399":0,"2400":0,"2401":0,"2402":0,"2403":0,"2404":0,"2405":0,"2408":0,"2410":0,"2413":0,"2416":0,"2417":0,"2419":0,"2420":0,"2421":0,"2426":1,"2428":0,"2433":0,"2434":0,"2435":0,"2438":0,"2439":0,"2440":0,"2442":0,"2443":0,"2446":0,"2447":0,"2450":0,"2451":0,"2455":0,"2456":0,"2458":0,"2462":0,"2465":0,"2468":0,"2469":0,"2473":0,"2474":0,"2478":0,"2481":0,"2483":0,"2484":0,"2488":1,"2503":1,"2504":0,"2505":0,"2506":0,"2507":0,"2508":0,"2509":0,"2512":0,"2515":0,"2516":0,"2517":0,"2518":0,"2523":1,"2525":0,"2527":0,"2530":1,"2532":1,"2534":0,"2536":0,"2538":0,"2540":0,"2541":0,"2546":1,"2548":0,"2550":0,"2551":0,"2552":0,"2577":1,"2578":0,"2580":0,"2582":0,"2583":0,"2584":0,"2589":0,"2590":0,"2594":0,"2596":0,"2598":0,"2600":0,"2604":0,"2608":0,"2611":0,"2614":0,"2615":0,"2617":0,"2618":0,"2619":0,"2623":0,"2624":0,"2628":0,"2631":0,"2632":0,"2636":0,"2637":0,"2641":0,"2642":0,"2644":0,"2646":0,"2649":0,"2652":0,"2653":0,"2657":0,"2660":0,"2661":0,"2662":0,"2663":0,"2666":0,"2667":0,"2668":0,"2672":0,"2673":0,"2676":0,"2680":0,"2681":0,"2685":0,"2686":0,"2687":0,"2688":0,"2689":0,"2690":0,"2691":0,"2692":0,"2693":0,"2695":0,"2700":1,"2721":1,"2722":0,"2723":0,"2725":0,"2726":0,"2728":0,"2730":0,"2733":0,"2736":0,"2739":0,"2740":0,"2741":0,"2742":0,"2747":1,"2749":0,"2755":0,"2756":0,"2760":0,"2761":0,"2764":0,"2765":0,"2766":0,"2768":0,"2770":0,"2772":0,"2773":0,"2775":0,"2777":0,"2780":0,"2784":1,"2805":1,"2806":0,"2807":0,"2810":0,"2811":0,"2813":0,"2816":0,"2819":0,"2820":0,"2821":0,"2822":0,"2827":1,"2829":0,"2834":0,"2836":0,"2840":0,"2847":0,"2850":0,"2851":0,"2855":0,"2858":0,"2859":0,"2860":0,"2863":0,"2867":1,"2883":1,"2884":0,"2885":0,"2886":0,"2887":0,"2889":0,"2892":0,"2895":0,"2896":0,"2897":0,"2898":0,"2903":1,"2905":0,"2911":0,"2913":0,"2915":0,"2918":0,"2919":0,"2923":0,"2924":0,"2925":0,"2928":0,"2932":1,"2965":1,"2982":1,"2983":0,"2984":0,"2985":0,"2986":0,"2988":0,"2989":0,"2990":0,"2991":0,"2994":0,"2995":0,"2996":0,"2999":0,"3000":0,"3003":0,"3004":0,"3007":0,"3008":0,"3012":0,"3015":0,"3017":0,"3018":0,"3019":0,"3020":0,"3025":1,"3027":0,"3028":0,"3032":0,"3043":0,"3045":0,"3046":0,"3050":0,"3051":0,"3052":0,"3054":0,"3057":0,"3059":0,"3062":0,"3063":0,"3067":0,"3070":0,"3071":0,"3072":0,"3076":0,"3080":0,"3081":0,"3082":0,"3083":0,"3086":0,"3088":0,"3089":0,"3090":0,"3095":1,"3102":1,"3103":0,"3104":0,"3107":0,"3108":0,"3109":0,"3110":0,"3112":0,"3113":0,"3114":0,"3115":0,"3117":0,"3121":0,"3146":1,"3147":0,"3148":0,"3150":0,"3151":0,"3154":0,"3155":0,"3158":0,"3159":0,"3162":0,"3163":0,"3167":0,"3170":0,"3171":0,"3172":0,"3173":0,"3174":0,"3179":1,"3180":0,"3187":0,"3190":0,"3191":0,"3192":0,"3195":0,"3196":0,"3201":0,"3204":0,"3207":0,"3210":0,"3212":0,"3213":0,"3214":0,"3218":0,"3219":0,"3223":0,"3226":0,"3227":0,"3229":0,"3230":0,"3234":0,"3235":0,"3236":0,"3237":0,"3240":0,"3242":0,"3243":0,"3246":0,"3250":0,"3253":0,"3254":0,"3255":0,"3258":0,"3262":0,"3263":0,"3267":0,"3271":1,"3283":1,"3284":0,"3285":0,"3286":0,"3289":1,"3302":1,"3303":0,"3304":0,"3305":0,"3308":1,"3311":1,"3312":0,"3313":0,"3314":0,"3315":0,"3316":0,"3317":0,"3318":0,"3319":0,"3320":0,"3321":0,"3322":0,"3325":0,"3329":1,"3330":0,"3331":0,"3332":0,"3333":0,"3334":0,"3335":0,"3336":0,"3339":0,"3340":0,"3341":0,"3342":0,"3343":0,"3344":0,"3345":0,"3346":0,"3350":0,"3353":1,"3360":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/db.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/db.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":1,"36":0,"37":1,"38":0,"39":1,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":1,"134":0,"135":1,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":1,"168":1,"169":0,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":1,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":1,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":1,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":1,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":1,"318":1,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":1,"347":1,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":1,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":1,"392":1,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":1,"414":1,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":1,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":1,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":1,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":1,"483":1,"484":0,"485":0,"486":0,"487":1,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":1,"501":1,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":1,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":1,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":1,"581":1,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":1,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":1,"617":1,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":1,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":1,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":1,"704":1,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":1,"722":1,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":1,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":1,"755":1,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":1,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":1,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":1,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":1,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":1,"831":0,"832":1,"833":1,"834":1,"835":1,"836":1,"837":1,"838":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0,0],"106":[0,0],"107":[0,0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0,0,0,0,0],"277":[0,0],"278":[0,0],"279":[0,0,0],"280":[0,0],"281":[0,0],"282":[0,0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0,0],"326":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0},"fnMap":{"1":{"name":"(anonymous_1)","line":96,"loc":{"start":{"line":96,"column":9},"end":{"line":96,"column":51}}},"2":{"name":"(anonymous_2)","line":183,"loc":{"start":{"line":183,"column":7},"end":{"line":183,"column":18}}},"3":{"name":"(anonymous_3)","line":189,"loc":{"start":{"line":189,"column":7},"end":{"line":189,"column":18}}},"4":{"name":"(anonymous_4)","line":195,"loc":{"start":{"line":195,"column":7},"end":{"line":195,"column":18}}},"5":{"name":"(anonymous_5)","line":207,"loc":{"start":{"line":207,"column":7},"end":{"line":207,"column":18}}},"6":{"name":"(anonymous_6)","line":225,"loc":{"start":{"line":225,"column":11},"end":{"line":225,"column":36}}},"7":{"name":"(anonymous_7)","line":226,"loc":{"start":{"line":226,"column":48},"end":{"line":226,"column":62}}},"8":{"name":"(anonymous_8)","line":246,"loc":{"start":{"line":246,"column":20},"end":{"line":246,"column":39}}},"9":{"name":"(anonymous_9)","line":251,"loc":{"start":{"line":251,"column":35},"end":{"line":251,"column":61}}},"10":{"name":"(anonymous_10)","line":252,"loc":{"start":{"line":252,"column":15},"end":{"line":252,"column":33}}},"11":{"name":"(anonymous_11)","line":266,"loc":{"start":{"line":266,"column":28},"end":{"line":266,"column":53}}},"12":{"name":"(anonymous_12)","line":287,"loc":{"start":{"line":287,"column":21},"end":{"line":287,"column":64}}},"13":{"name":"(anonymous_13)","line":310,"loc":{"start":{"line":310,"column":66},"end":{"line":310,"column":88}}},"14":{"name":"(anonymous_14)","line":326,"loc":{"start":{"line":326,"column":23},"end":{"line":326,"column":60}}},"15":{"name":"(anonymous_15)","line":336,"loc":{"start":{"line":336,"column":35},"end":{"line":336,"column":61}}},"16":{"name":"(anonymous_16)","line":337,"loc":{"start":{"line":337,"column":43},"end":{"line":337,"column":60}}},"17":{"name":"(anonymous_17)","line":360,"loc":{"start":{"line":360,"column":21},"end":{"line":360,"column":47}}},"18":{"name":"(anonymous_18)","line":384,"loc":{"start":{"line":384,"column":60},"end":{"line":384,"column":71}}},"19":{"name":"(anonymous_19)","line":389,"loc":{"start":{"line":389,"column":35},"end":{"line":389,"column":53}}},"20":{"name":"(anonymous_20)","line":401,"loc":{"start":{"line":401,"column":21},"end":{"line":401,"column":32}}},"21":{"name":"(anonymous_21)","line":434,"loc":{"start":{"line":434,"column":26},"end":{"line":434,"column":60}}},"22":{"name":"(anonymous_22)","line":473,"loc":{"start":{"line":473,"column":44},"end":{"line":473,"column":71}}},"23":{"name":"decorateWithWriteConcern","line":487,"loc":{"start":{"line":487,"column":0},"end":{"line":487,"column":58}}},"24":{"name":"(anonymous_24)","line":499,"loc":{"start":{"line":499,"column":23},"end":{"line":499,"column":63}}},"25":{"name":"(anonymous_25)","line":507,"loc":{"start":{"line":507,"column":13},"end":{"line":507,"column":40}}},"26":{"name":"(anonymous_26)","line":533,"loc":{"start":{"line":533,"column":38},"end":{"line":533,"column":52}}},"27":{"name":"(anonymous_27)","line":571,"loc":{"start":{"line":571,"column":32},"end":{"line":571,"column":66}}},"28":{"name":"(anonymous_28)","line":587,"loc":{"start":{"line":587,"column":35},"end":{"line":587,"column":61}}},"29":{"name":"(anonymous_29)","line":588,"loc":{"start":{"line":588,"column":42},"end":{"line":588,"column":59}}},"30":{"name":"(anonymous_30)","line":606,"loc":{"start":{"line":606,"column":21},"end":{"line":606,"column":49}}},"31":{"name":"(anonymous_31)","line":626,"loc":{"start":{"line":626,"column":31},"end":{"line":626,"column":54}}},"32":{"name":"(anonymous_32)","line":630,"loc":{"start":{"line":630,"column":9},"end":{"line":630,"column":23}}},"33":{"name":"(anonymous_33)","line":652,"loc":{"start":{"line":652,"column":31},"end":{"line":652,"column":57}}},"34":{"name":"(anonymous_34)","line":719,"loc":{"start":{"line":719,"column":15},"end":{"line":719,"column":67}}},"35":{"name":"(anonymous_35)","line":746,"loc":{"start":{"line":746,"column":29},"end":{"line":746,"column":51}}},"36":{"name":"(anonymous_36)","line":766,"loc":{"start":{"line":766,"column":20},"end":{"line":766,"column":66}}},"37":{"name":"(anonymous_37)","line":777,"loc":{"start":{"line":777,"column":35},"end":{"line":777,"column":61}}},"38":{"name":"(anonymous_38)","line":778,"loc":{"start":{"line":778,"column":46},"end":{"line":778,"column":63}}},"39":{"name":"(anonymous_39)","line":798,"loc":{"start":{"line":798,"column":32},"end":{"line":798,"column":90}}},"40":{"name":"(anonymous_40)","line":811,"loc":{"start":{"line":811,"column":35},"end":{"line":811,"column":61}}},"41":{"name":"(anonymous_41)","line":812,"loc":{"start":{"line":812,"column":66},"end":{"line":812,"column":83}}},"42":{"name":"(anonymous_42)","line":829,"loc":{"start":{"line":829,"column":30},"end":{"line":829,"column":64}}},"43":{"name":"(anonymous_43)","line":844,"loc":{"start":{"line":844,"column":70},"end":{"line":844,"column":92}}},"44":{"name":"(anonymous_44)","line":858,"loc":{"start":{"line":858,"column":35},"end":{"line":858,"column":61}}},"45":{"name":"(anonymous_45)","line":860,"loc":{"start":{"line":860,"column":31},"end":{"line":860,"column":53}}},"46":{"name":"(anonymous_46)","line":879,"loc":{"start":{"line":879,"column":28},"end":{"line":879,"column":56}}},"47":{"name":"(anonymous_47)","line":893,"loc":{"start":{"line":893,"column":70},"end":{"line":893,"column":92}}},"48":{"name":"(anonymous_48)","line":902,"loc":{"start":{"line":902,"column":35},"end":{"line":902,"column":61}}},"49":{"name":"(anonymous_49)","line":904,"loc":{"start":{"line":904,"column":31},"end":{"line":904,"column":53}}},"50":{"name":"(anonymous_50)","line":922,"loc":{"start":{"line":922,"column":18},"end":{"line":922,"column":43}}},"51":{"name":"(anonymous_51)","line":924,"loc":{"start":{"line":924,"column":33},"end":{"line":924,"column":58}}},"52":{"name":"(anonymous_52)","line":927,"loc":{"start":{"line":927,"column":33},"end":{"line":927,"column":47}}},"53":{"name":"(anonymous_53)","line":932,"loc":{"start":{"line":932,"column":49},"end":{"line":932,"column":61}}},"54":{"name":"(anonymous_54)","line":945,"loc":{"start":{"line":945,"column":27},"end":{"line":945,"column":46}}},"55":{"name":"(anonymous_55)","line":951,"loc":{"start":{"line":951,"column":35},"end":{"line":951,"column":61}}},"56":{"name":"(anonymous_56)","line":952,"loc":{"start":{"line":952,"column":22},"end":{"line":952,"column":39}}},"57":{"name":"(anonymous_57)","line":970,"loc":{"start":{"line":970,"column":37},"end":{"line":970,"column":75}}},"58":{"name":"(anonymous_58)","line":982,"loc":{"start":{"line":982,"column":68},"end":{"line":982,"column":90}}},"59":{"name":"(anonymous_59)","line":991,"loc":{"start":{"line":991,"column":35},"end":{"line":991,"column":61}}},"60":{"name":"(anonymous_60)","line":992,"loc":{"start":{"line":992,"column":61},"end":{"line":992,"column":83}}},"61":{"name":"(anonymous_61)","line":1025,"loc":{"start":{"line":1025,"column":27},"end":{"line":1025,"column":74}}},"62":{"name":"(anonymous_62)","line":1039,"loc":{"start":{"line":1039,"column":35},"end":{"line":1039,"column":61}}},"63":{"name":"(anonymous_63)","line":1040,"loc":{"start":{"line":1040,"column":50},"end":{"line":1040,"column":67}}},"64":{"name":"(anonymous_64)","line":1047,"loc":{"start":{"line":1047,"column":18},"end":{"line":1047,"column":71}}},"65":{"name":"(anonymous_65)","line":1062,"loc":{"start":{"line":1062,"column":66},"end":{"line":1062,"column":88}}},"66":{"name":"(anonymous_66)","line":1079,"loc":{"start":{"line":1079,"column":107},"end":{"line":1079,"column":129}}},"67":{"name":"(anonymous_67)","line":1113,"loc":{"start":{"line":1113,"column":27},"end":{"line":1113,"column":74}}},"68":{"name":"(anonymous_68)","line":1122,"loc":{"start":{"line":1122,"column":35},"end":{"line":1122,"column":61}}},"69":{"name":"(anonymous_69)","line":1123,"loc":{"start":{"line":1123,"column":50},"end":{"line":1123,"column":67}}},"70":{"name":"(anonymous_70)","line":1130,"loc":{"start":{"line":1130,"column":18},"end":{"line":1130,"column":71}}},"71":{"name":"(anonymous_71)","line":1144,"loc":{"start":{"line":1144,"column":44},"end":{"line":1144,"column":76}}},"72":{"name":"(anonymous_72)","line":1157,"loc":{"start":{"line":1157,"column":24},"end":{"line":1157,"column":37}}},"73":{"name":"(anonymous_73)","line":1175,"loc":{"start":{"line":1175,"column":18},"end":{"line":1175,"column":44}}},"74":{"name":"(anonymous_74)","line":1210,"loc":{"start":{"line":1210,"column":36},"end":{"line":1210,"column":90}}},"75":{"name":"(anonymous_75)","line":1279,"loc":{"start":{"line":1279,"column":40},"end":{"line":1279,"column":62}}},"76":{"name":"(anonymous_76)","line":1287,"loc":{"start":{"line":1287,"column":14},"end":{"line":1287,"column":68}}},"77":{"name":"(anonymous_77)","line":1291,"loc":{"start":{"line":1291,"column":67},"end":{"line":1291,"column":84}}},"78":{"name":"(anonymous_78)","line":1308,"loc":{"start":{"line":1308,"column":27},"end":{"line":1308,"column":48}}},"79":{"name":"(anonymous_79)","line":1312,"loc":{"start":{"line":1312,"column":79},"end":{"line":1312,"column":93}}},"80":{"name":"(anonymous_80)","line":1319,"loc":{"start":{"line":1319,"column":104},"end":{"line":1319,"column":118}}},"81":{"name":"(anonymous_81)","line":1349,"loc":{"start":{"line":1349,"column":23},"end":{"line":1349,"column":71}}},"82":{"name":"(anonymous_82)","line":1361,"loc":{"start":{"line":1361,"column":35},"end":{"line":1361,"column":61}}},"83":{"name":"(anonymous_83)","line":1362,"loc":{"start":{"line":1362,"column":47},"end":{"line":1362,"column":64}}},"84":{"name":"(anonymous_84)","line":1371,"loc":{"start":{"line":1371,"column":36},"end":{"line":1371,"column":80}}},"85":{"name":"(anonymous_85)","line":1397,"loc":{"start":{"line":1397,"column":40},"end":{"line":1397,"column":62}}},"86":{"name":"(anonymous_86)","line":1404,"loc":{"start":{"line":1404,"column":17},"end":{"line":1404,"column":61}}},"87":{"name":"(anonymous_87)","line":1406,"loc":{"start":{"line":1406,"column":57},"end":{"line":1406,"column":79}}},"88":{"name":"(anonymous_88)","line":1416,"loc":{"start":{"line":1416,"column":47},"end":{"line":1416,"column":67}}},"89":{"name":"(anonymous_89)","line":1418,"loc":{"start":{"line":1418,"column":58},"end":{"line":1418,"column":72}}},"90":{"name":"(anonymous_90)","line":1444,"loc":{"start":{"line":1444,"column":26},"end":{"line":1444,"column":64}}},"91":{"name":"(anonymous_91)","line":1456,"loc":{"start":{"line":1456,"column":35},"end":{"line":1456,"column":61}}},"92":{"name":"(anonymous_92)","line":1457,"loc":{"start":{"line":1457,"column":40},"end":{"line":1457,"column":57}}},"93":{"name":"(anonymous_93)","line":1464,"loc":{"start":{"line":1464,"column":19},"end":{"line":1464,"column":73}}},"94":{"name":"(anonymous_94)","line":1476,"loc":{"start":{"line":1476,"column":18},"end":{"line":1476,"column":40}}},"95":{"name":"(anonymous_95)","line":1491,"loc":{"start":{"line":1491,"column":64},"end":{"line":1491,"column":78}}},"96":{"name":"(anonymous_96)","line":1496,"loc":{"start":{"line":1496,"column":62},"end":{"line":1496,"column":76}}},"97":{"name":"(anonymous_97)","line":1501,"loc":{"start":{"line":1501,"column":61},"end":{"line":1501,"column":75}}},"98":{"name":"(anonymous_98)","line":1506,"loc":{"start":{"line":1506,"column":68},"end":{"line":1506,"column":82}}},"99":{"name":"(anonymous_99)","line":1512,"loc":{"start":{"line":1512,"column":72},"end":{"line":1512,"column":86}}},"100":{"name":"(anonymous_100)","line":1517,"loc":{"start":{"line":1517,"column":74},"end":{"line":1517,"column":88}}},"101":{"name":"(anonymous_101)","line":1523,"loc":{"start":{"line":1523,"column":64},"end":{"line":1523,"column":78}}},"102":{"name":"(anonymous_102)","line":1542,"loc":{"start":{"line":1542,"column":28},"end":{"line":1542,"column":76}}},"103":{"name":"(anonymous_103)","line":1561,"loc":{"start":{"line":1561,"column":91},"end":{"line":1561,"column":108}}},"104":{"name":"(anonymous_104)","line":1570,"loc":{"start":{"line":1570,"column":35},"end":{"line":1570,"column":61}}},"105":{"name":"(anonymous_105)","line":1571,"loc":{"start":{"line":1571,"column":52},"end":{"line":1571,"column":69}}},"106":{"name":"(anonymous_106)","line":1591,"loc":{"start":{"line":1591,"column":22},"end":{"line":1591,"column":50}}},"107":{"name":"(anonymous_107)","line":1602,"loc":{"start":{"line":1602,"column":42},"end":{"line":1602,"column":56}}},"108":{"name":"(anonymous_108)","line":1609,"loc":{"start":{"line":1609,"column":35},"end":{"line":1609,"column":61}}},"109":{"name":"(anonymous_109)","line":1610,"loc":{"start":{"line":1610,"column":35},"end":{"line":1610,"column":49}}},"110":{"name":"(anonymous_110)","line":1629,"loc":{"start":{"line":1629,"column":32},"end":{"line":1629,"column":66}}},"111":{"name":"(anonymous_111)","line":1638,"loc":{"start":{"line":1638,"column":35},"end":{"line":1638,"column":61}}},"112":{"name":"(anonymous_112)","line":1639,"loc":{"start":{"line":1639,"column":42},"end":{"line":1639,"column":59}}},"113":{"name":"(anonymous_113)","line":1646,"loc":{"start":{"line":1646,"column":23},"end":{"line":1646,"column":63}}},"114":{"name":"(anonymous_114)","line":1653,"loc":{"start":{"line":1653,"column":23},"end":{"line":1653,"column":41}}},"115":{"name":"(anonymous_115)","line":1670,"loc":{"start":{"line":1670,"column":53},"end":{"line":1670,"column":76}}},"116":{"name":"(anonymous_116)","line":1680,"loc":{"start":{"line":1680,"column":31},"end":{"line":1680,"column":72}}},"117":{"name":"(anonymous_117)","line":1715,"loc":{"start":{"line":1715,"column":36},"end":{"line":1715,"column":89}}},"118":{"name":"(anonymous_118)","line":1758,"loc":{"start":{"line":1758,"column":29},"end":{"line":1758,"column":51}}},"119":{"name":"(anonymous_119)","line":1767,"loc":{"start":{"line":1767,"column":27},"end":{"line":1767,"column":50}}},"120":{"name":"(anonymous_120)","line":1779,"loc":{"start":{"line":1779,"column":19},"end":{"line":1779,"column":49}}},"121":{"name":"(anonymous_121)","line":1795,"loc":{"start":{"line":1795,"column":21},"end":{"line":1795,"column":47}}},"122":{"name":"(anonymous_122)","line":1796,"loc":{"start":{"line":1796,"column":17},"end":{"line":1796,"column":31}}},"123":{"name":"(anonymous_123)","line":1814,"loc":{"start":{"line":1814,"column":21},"end":{"line":1814,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":24,"column":39}},"2":{"start":{"line":26,"column":0},"end":{"line":28,"column":79}},"3":{"start":{"line":31,"column":0},"end":{"line":32,"column":74}},"4":{"start":{"line":51,"column":0},"end":{"line":54,"column":106}},"5":{"start":{"line":96,"column":0},"end":{"line":174,"column":1}},"6":{"start":{"line":97,"column":2},"end":{"line":97,"column":26}},"7":{"start":{"line":98,"column":2},"end":{"line":98,"column":75}},"8":{"start":{"line":98,"column":28},"end":{"line":98,"column":75}},"9":{"start":{"line":99,"column":2},"end":{"line":99,"column":26}},"10":{"start":{"line":100,"column":2},"end":{"line":100,"column":18}},"11":{"start":{"line":103,"column":2},"end":{"line":103,"column":46}},"12":{"start":{"line":106,"column":2},"end":{"line":109,"column":3}},"13":{"start":{"line":107,"column":4},"end":{"line":108,"column":54}},"14":{"start":{"line":112,"column":2},"end":{"line":112,"column":53}},"15":{"start":{"line":115,"column":2},"end":{"line":115,"column":42}},"16":{"start":{"line":118,"column":2},"end":{"line":151,"column":3}},"17":{"start":{"line":154,"column":2},"end":{"line":154,"column":44}},"18":{"start":{"line":157,"column":2},"end":{"line":157,"column":59}},"19":{"start":{"line":158,"column":2},"end":{"line":158,"column":71}},"20":{"start":{"line":159,"column":2},"end":{"line":159,"column":63}},"21":{"start":{"line":162,"column":2},"end":{"line":162,"column":30}},"22":{"start":{"line":162,"column":23},"end":{"line":162,"column":30}},"23":{"start":{"line":163,"column":2},"end":{"line":163,"column":31}},"24":{"start":{"line":163,"column":24},"end":{"line":163,"column":31}},"25":{"start":{"line":166,"column":2},"end":{"line":166,"column":60}},"26":{"start":{"line":167,"column":2},"end":{"line":167,"column":64}},"27":{"start":{"line":168,"column":2},"end":{"line":168,"column":60}},"28":{"start":{"line":169,"column":2},"end":{"line":169,"column":70}},"29":{"start":{"line":170,"column":2},"end":{"line":170,"column":60}},"30":{"start":{"line":171,"column":2},"end":{"line":171,"column":70}},"31":{"start":{"line":172,"column":2},"end":{"line":172,"column":58}},"32":{"start":{"line":173,"column":2},"end":{"line":173,"column":68}},"33":{"start":{"line":176,"column":0},"end":{"line":176,"column":27}},"34":{"start":{"line":178,"column":0},"end":{"line":178,"column":53}},"35":{"start":{"line":181,"column":0},"end":{"line":184,"column":3}},"36":{"start":{"line":183,"column":20},"end":{"line":183,"column":43}},"37":{"start":{"line":187,"column":0},"end":{"line":190,"column":3}},"38":{"start":{"line":189,"column":20},"end":{"line":189,"column":42}},"39":{"start":{"line":193,"column":0},"end":{"line":202,"column":3}},"40":{"start":{"line":196,"column":4},"end":{"line":199,"column":5}},"41":{"start":{"line":198,"column":6},"end":{"line":198,"column":18}},"42":{"start":{"line":200,"column":4},"end":{"line":200,"column":17}},"43":{"start":{"line":205,"column":0},"end":{"line":215,"column":3}},"44":{"start":{"line":208,"column":4},"end":{"line":208,"column":17}},"45":{"start":{"line":209,"column":4},"end":{"line":209,"column":58}},"46":{"start":{"line":209,"column":33},"end":{"line":209,"column":58}},"47":{"start":{"line":210,"column":4},"end":{"line":210,"column":58}},"48":{"start":{"line":210,"column":33},"end":{"line":210,"column":58}},"49":{"start":{"line":211,"column":4},"end":{"line":211,"column":70}},"50":{"start":{"line":211,"column":37},"end":{"line":211,"column":70}},"51":{"start":{"line":212,"column":4},"end":{"line":212,"column":79}},"52":{"start":{"line":212,"column":40},"end":{"line":212,"column":79}},"53":{"start":{"line":213,"column":4},"end":{"line":213,"column":15}},"54":{"start":{"line":225,"column":0},"end":{"line":238,"column":1}},"55":{"start":{"line":226,"column":2},"end":{"line":237,"column":5}},"56":{"start":{"line":227,"column":4},"end":{"line":227,"column":32}},"57":{"start":{"line":227,"column":25},"end":{"line":227,"column":32}},"58":{"start":{"line":228,"column":4},"end":{"line":228,"column":36}},"59":{"start":{"line":229,"column":4},"end":{"line":229,"column":21}},"60":{"start":{"line":231,"column":4},"end":{"line":234,"column":5}},"61":{"start":{"line":232,"column":6},"end":{"line":232,"column":19}},"62":{"start":{"line":233,"column":6},"end":{"line":233,"column":35}},"63":{"start":{"line":236,"column":4},"end":{"line":236,"column":33}},"64":{"start":{"line":246,"column":0},"end":{"line":257,"column":1}},"65":{"start":{"line":247,"column":2},"end":{"line":247,"column":18}},"66":{"start":{"line":249,"column":2},"end":{"line":249,"column":64}},"67":{"start":{"line":249,"column":36},"end":{"line":249,"column":64}},"68":{"start":{"line":251,"column":2},"end":{"line":256,"column":5}},"69":{"start":{"line":252,"column":4},"end":{"line":255,"column":6}},"70":{"start":{"line":253,"column":6},"end":{"line":253,"column":33}},"71":{"start":{"line":253,"column":14},"end":{"line":253,"column":33}},"72":{"start":{"line":254,"column":6},"end":{"line":254,"column":18}},"73":{"start":{"line":259,"column":0},"end":{"line":259,"column":59}},"74":{"start":{"line":266,"column":0},"end":{"line":278,"column":1}},"75":{"start":{"line":267,"column":2},"end":{"line":276,"column":3}},"76":{"start":{"line":268,"column":4},"end":{"line":268,"column":50}},"77":{"start":{"line":269,"column":9},"end":{"line":276,"column":3}},"78":{"start":{"line":270,"column":4},"end":{"line":270,"column":135}},"79":{"start":{"line":271,"column":9},"end":{"line":276,"column":3}},"80":{"start":{"line":272,"column":4},"end":{"line":272,"column":64}},"81":{"start":{"line":273,"column":4},"end":{"line":275,"column":5}},"82":{"start":{"line":274,"column":6},"end":{"line":274,"column":132}},"83":{"start":{"line":277,"column":2},"end":{"line":277,"column":24}},"84":{"start":{"line":287,"column":0},"end":{"line":315,"column":1}},"85":{"start":{"line":289,"column":2},"end":{"line":289,"column":117}},"86":{"start":{"line":289,"column":59},"end":{"line":289,"column":117}},"87":{"start":{"line":291,"column":2},"end":{"line":291,"column":71}},"88":{"start":{"line":294,"column":2},"end":{"line":296,"column":3}},"89":{"start":{"line":295,"column":4},"end":{"line":295,"column":51}},"90":{"start":{"line":299,"column":2},"end":{"line":303,"column":3}},"91":{"start":{"line":300,"column":4},"end":{"line":300,"column":75}},"92":{"start":{"line":302,"column":4},"end":{"line":302,"column":56}},"93":{"start":{"line":306,"column":2},"end":{"line":307,"column":106}},"94":{"start":{"line":306,"column":30},"end":{"line":307,"column":106}},"95":{"start":{"line":310,"column":2},"end":{"line":314,"column":5}},"96":{"start":{"line":311,"column":4},"end":{"line":311,"column":49}},"97":{"start":{"line":311,"column":12},"end":{"line":311,"column":49}},"98":{"start":{"line":312,"column":4},"end":{"line":312,"column":67}},"99":{"start":{"line":312,"column":21},"end":{"line":312,"column":67}},"100":{"start":{"line":313,"column":4},"end":{"line":313,"column":50}},"101":{"start":{"line":326,"column":0},"end":{"line":342,"column":1}},"102":{"start":{"line":327,"column":2},"end":{"line":327,"column":18}},"103":{"start":{"line":329,"column":2},"end":{"line":329,"column":68}},"104":{"start":{"line":329,"column":35},"end":{"line":329,"column":68}},"105":{"start":{"line":331,"column":2},"end":{"line":331,"column":34}},"106":{"start":{"line":334,"column":2},"end":{"line":334,"column":92}},"107":{"start":{"line":334,"column":36},"end":{"line":334,"column":92}},"108":{"start":{"line":336,"column":2},"end":{"line":341,"column":5}},"109":{"start":{"line":337,"column":4},"end":{"line":340,"column":7}},"110":{"start":{"line":338,"column":6},"end":{"line":338,"column":33}},"111":{"start":{"line":338,"column":14},"end":{"line":338,"column":33}},"112":{"start":{"line":339,"column":6},"end":{"line":339,"column":17}},"113":{"start":{"line":344,"column":0},"end":{"line":344,"column":62}},"114":{"start":{"line":360,"column":0},"end":{"line":392,"column":1}},"115":{"start":{"line":361,"column":2},"end":{"line":361,"column":65}},"116":{"start":{"line":361,"column":33},"end":{"line":361,"column":65}},"117":{"start":{"line":362,"column":2},"end":{"line":362,"column":31}},"118":{"start":{"line":363,"column":2},"end":{"line":363,"column":18}},"119":{"start":{"line":366,"column":2},"end":{"line":379,"column":3}},"120":{"start":{"line":367,"column":4},"end":{"line":367,"column":23}},"121":{"start":{"line":370,"column":4},"end":{"line":375,"column":5}},"122":{"start":{"line":372,"column":6},"end":{"line":374,"column":7}},"123":{"start":{"line":373,"column":8},"end":{"line":373,"column":41}},"124":{"start":{"line":378,"column":4},"end":{"line":378,"column":37}},"125":{"start":{"line":382,"column":2},"end":{"line":382,"column":46}},"126":{"start":{"line":382,"column":22},"end":{"line":382,"column":46}},"127":{"start":{"line":384,"column":2},"end":{"line":386,"column":4}},"128":{"start":{"line":384,"column":36},"end":{"line":386,"column":4}},"129":{"start":{"line":385,"column":4},"end":{"line":385,"column":35}},"130":{"start":{"line":389,"column":2},"end":{"line":391,"column":5}},"131":{"start":{"line":390,"column":4},"end":{"line":390,"column":14}},"132":{"start":{"line":394,"column":0},"end":{"line":394,"column":60}},"133":{"start":{"line":401,"column":0},"end":{"line":403,"column":2}},"134":{"start":{"line":402,"column":2},"end":{"line":402,"column":65}},"135":{"start":{"line":405,"column":0},"end":{"line":405,"column":80}},"136":{"start":{"line":434,"column":0},"end":{"line":483,"column":1}},"137":{"start":{"line":435,"column":2},"end":{"line":435,"column":18}},"138":{"start":{"line":436,"column":2},"end":{"line":436,"column":68}},"139":{"start":{"line":436,"column":35},"end":{"line":436,"column":68}},"140":{"start":{"line":437,"column":2},"end":{"line":437,"column":26}},"141":{"start":{"line":438,"column":2},"end":{"line":438,"column":34}},"142":{"start":{"line":440,"column":2},"end":{"line":440,"column":49}},"143":{"start":{"line":443,"column":2},"end":{"line":443,"column":66}},"144":{"start":{"line":446,"column":2},"end":{"line":448,"column":3}},"145":{"start":{"line":447,"column":4},"end":{"line":447,"column":61}},"146":{"start":{"line":451,"column":2},"end":{"line":460,"column":3}},"147":{"start":{"line":452,"column":4},"end":{"line":459,"column":5}},"148":{"start":{"line":453,"column":6},"end":{"line":453,"column":115}},"149":{"start":{"line":454,"column":6},"end":{"line":454,"column":46}},"150":{"start":{"line":454,"column":19},"end":{"line":454,"column":46}},"151":{"start":{"line":455,"column":6},"end":{"line":455,"column":24}},"152":{"start":{"line":457,"column":6},"end":{"line":457,"column":40}},"153":{"start":{"line":457,"column":19},"end":{"line":457,"column":40}},"154":{"start":{"line":458,"column":6},"end":{"line":458,"column":16}},"155":{"start":{"line":463,"column":2},"end":{"line":465,"column":3}},"156":{"start":{"line":464,"column":4},"end":{"line":464,"column":98}},"157":{"start":{"line":468,"column":2},"end":{"line":470,"column":3}},"158":{"start":{"line":469,"column":4},"end":{"line":469,"column":62}},"159":{"start":{"line":473,"column":2},"end":{"line":482,"column":5}},"160":{"start":{"line":474,"column":4},"end":{"line":474,"column":63}},"161":{"start":{"line":474,"column":20},"end":{"line":474,"column":63}},"162":{"start":{"line":475,"column":4},"end":{"line":475,"column":147}},"163":{"start":{"line":475,"column":32},"end":{"line":475,"column":147}},"164":{"start":{"line":477,"column":4},"end":{"line":481,"column":5}},"165":{"start":{"line":478,"column":6},"end":{"line":478,"column":137}},"166":{"start":{"line":480,"column":6},"end":{"line":480,"column":49}},"167":{"start":{"line":485,"column":0},"end":{"line":485,"column":89}},"168":{"start":{"line":487,"column":0},"end":{"line":497,"column":1}},"169":{"start":{"line":489,"column":2},"end":{"line":496,"column":3}},"170":{"start":{"line":491,"column":4},"end":{"line":491,"column":74}},"171":{"start":{"line":493,"column":4},"end":{"line":495,"column":5}},"172":{"start":{"line":494,"column":6},"end":{"line":494,"column":55}},"173":{"start":{"line":499,"column":0},"end":{"line":538,"column":1}},"174":{"start":{"line":501,"column":2},"end":{"line":501,"column":72}},"175":{"start":{"line":503,"column":2},"end":{"line":503,"column":117}},"176":{"start":{"line":503,"column":59},"end":{"line":503,"column":117}},"177":{"start":{"line":505,"column":2},"end":{"line":537,"column":5}},"178":{"start":{"line":508,"column":6},"end":{"line":508,"column":65}},"179":{"start":{"line":508,"column":22},"end":{"line":508,"column":65}},"180":{"start":{"line":509,"column":6},"end":{"line":514,"column":7}},"181":{"start":{"line":510,"column":8},"end":{"line":510,"column":157}},"182":{"start":{"line":511,"column":13},"end":{"line":514,"column":7}},"183":{"start":{"line":512,"column":8},"end":{"line":513,"column":60}},"184":{"start":{"line":512,"column":14},"end":{"line":512,"column":145}},"185":{"start":{"line":513,"column":21},"end":{"line":513,"column":58}},"186":{"start":{"line":517,"column":6},"end":{"line":517,"column":32}},"187":{"start":{"line":520,"column":6},"end":{"line":520,"column":51}},"188":{"start":{"line":522,"column":6},"end":{"line":527,"column":7}},"189":{"start":{"line":523,"column":8},"end":{"line":526,"column":9}},"190":{"start":{"line":525,"column":12},"end":{"line":525,"column":32}},"191":{"start":{"line":530,"column":6},"end":{"line":530,"column":59}},"192":{"start":{"line":533,"column":6},"end":{"line":536,"column":9}},"193":{"start":{"line":534,"column":8},"end":{"line":534,"column":53}},"194":{"start":{"line":534,"column":16},"end":{"line":534,"column":53}},"195":{"start":{"line":535,"column":8},"end":{"line":535,"column":132}},"196":{"start":{"line":571,"column":0},"end":{"line":593,"column":1}},"197":{"start":{"line":572,"column":2},"end":{"line":572,"column":18}},"198":{"start":{"line":573,"column":2},"end":{"line":573,"column":54}},"199":{"start":{"line":574,"column":2},"end":{"line":574,"column":24}},"200":{"start":{"line":575,"column":2},"end":{"line":575,"column":56}},"201":{"start":{"line":575,"column":36},"end":{"line":575,"column":56}},"202":{"start":{"line":576,"column":2},"end":{"line":576,"column":43}},"203":{"start":{"line":577,"column":2},"end":{"line":577,"column":50}},"204":{"start":{"line":580,"column":2},"end":{"line":580,"column":75}},"205":{"start":{"line":583,"column":2},"end":{"line":583,"column":50}},"206":{"start":{"line":583,"column":34},"end":{"line":583,"column":50}},"207":{"start":{"line":586,"column":2},"end":{"line":586,"column":91}},"208":{"start":{"line":586,"column":36},"end":{"line":586,"column":91}},"209":{"start":{"line":587,"column":2},"end":{"line":592,"column":5}},"210":{"start":{"line":588,"column":4},"end":{"line":591,"column":7}},"211":{"start":{"line":589,"column":6},"end":{"line":589,"column":33}},"212":{"start":{"line":589,"column":14},"end":{"line":589,"column":33}},"213":{"start":{"line":590,"column":6},"end":{"line":590,"column":17}},"214":{"start":{"line":595,"column":0},"end":{"line":595,"column":71}},"215":{"start":{"line":606,"column":0},"end":{"line":621,"column":1}},"216":{"start":{"line":607,"column":2},"end":{"line":607,"column":68}},"217":{"start":{"line":607,"column":35},"end":{"line":607,"column":68}},"218":{"start":{"line":608,"column":2},"end":{"line":608,"column":26}},"219":{"start":{"line":610,"column":2},"end":{"line":610,"column":39}},"220":{"start":{"line":612,"column":2},"end":{"line":612,"column":73}},"221":{"start":{"line":612,"column":31},"end":{"line":612,"column":73}},"222":{"start":{"line":615,"column":2},"end":{"line":617,"column":3}},"223":{"start":{"line":616,"column":4},"end":{"line":616,"column":51}},"224":{"start":{"line":620,"column":2},"end":{"line":620,"column":56}},"225":{"start":{"line":623,"column":0},"end":{"line":623,"column":60}},"226":{"start":{"line":626,"column":0},"end":{"line":640,"column":1}},"227":{"start":{"line":627,"column":2},"end":{"line":627,"column":40}},"228":{"start":{"line":629,"column":2},"end":{"line":639,"column":3}},"229":{"start":{"line":631,"column":6},"end":{"line":631,"column":45}},"230":{"start":{"line":633,"column":6},"end":{"line":635,"column":7}},"231":{"start":{"line":634,"column":8},"end":{"line":634,"column":60}},"232":{"start":{"line":637,"column":6},"end":{"line":637,"column":17}},"233":{"start":{"line":652,"column":0},"end":{"line":715,"column":2}},"234":{"start":{"line":653,"column":2},"end":{"line":653,"column":24}},"235":{"start":{"line":654,"column":2},"end":{"line":654,"column":26}},"236":{"start":{"line":657,"column":2},"end":{"line":657,"column":34}},"237":{"start":{"line":659,"column":2},"end":{"line":659,"column":49}},"238":{"start":{"line":662,"column":2},"end":{"line":664,"column":3}},"239":{"start":{"line":663,"column":4},"end":{"line":663,"column":75}},"240":{"start":{"line":667,"column":2},"end":{"line":682,"column":3}},"241":{"start":{"line":669,"column":4},"end":{"line":669,"column":72}},"242":{"start":{"line":671,"column":4},"end":{"line":671,"column":77}},"243":{"start":{"line":673,"column":4},"end":{"line":673,"column":42}},"244":{"start":{"line":675,"column":4},"end":{"line":675,"column":89}},"245":{"start":{"line":677,"column":4},"end":{"line":679,"column":5}},"246":{"start":{"line":678,"column":6},"end":{"line":678,"column":55}},"247":{"start":{"line":681,"column":4},"end":{"line":681,"column":18}},"248":{"start":{"line":685,"column":2},"end":{"line":691,"column":3}},"249":{"start":{"line":687,"column":4},"end":{"line":690,"column":5}},"250":{"start":{"line":688,"column":6},"end":{"line":688,"column":36}},"251":{"start":{"line":689,"column":6},"end":{"line":689,"column":65}},"252":{"start":{"line":694,"column":2},"end":{"line":696,"column":3}},"253":{"start":{"line":695,"column":4},"end":{"line":695,"column":49}},"254":{"start":{"line":699,"column":2},"end":{"line":703,"column":3}},"255":{"start":{"line":700,"column":4},"end":{"line":700,"column":66}},"256":{"start":{"line":702,"column":4},"end":{"line":702,"column":35}},"257":{"start":{"line":706,"column":2},"end":{"line":706,"column":76}},"258":{"start":{"line":708,"column":2},"end":{"line":708,"column":82}},"259":{"start":{"line":710,"column":2},"end":{"line":710,"column":78}},"260":{"start":{"line":710,"column":29},"end":{"line":710,"column":78}},"261":{"start":{"line":712,"column":2},"end":{"line":712,"column":69}},"262":{"start":{"line":712,"column":24},"end":{"line":712,"column":69}},"263":{"start":{"line":714,"column":2},"end":{"line":714,"column":16}},"264":{"start":{"line":717,"column":0},"end":{"line":717,"column":98}},"265":{"start":{"line":719,"column":0},"end":{"line":752,"column":1}},"266":{"start":{"line":720,"column":2},"end":{"line":720,"column":23}},"267":{"start":{"line":721,"column":2},"end":{"line":721,"column":27}},"268":{"start":{"line":724,"column":2},"end":{"line":724,"column":117}},"269":{"start":{"line":724,"column":59},"end":{"line":724,"column":117}},"270":{"start":{"line":727,"column":2},"end":{"line":727,"column":84}},"271":{"start":{"line":727,"column":52},"end":{"line":727,"column":84}},"272":{"start":{"line":729,"column":2},"end":{"line":733,"column":3}},"273":{"start":{"line":730,"column":4},"end":{"line":730,"column":35}},"274":{"start":{"line":731,"column":9},"end":{"line":733,"column":3}},"275":{"start":{"line":732,"column":4},"end":{"line":732,"column":33}},"276":{"start":{"line":736,"column":2},"end":{"line":736,"column":56}},"277":{"start":{"line":738,"column":2},"end":{"line":740,"column":3}},"278":{"start":{"line":739,"column":4},"end":{"line":739,"column":38}},"279":{"start":{"line":743,"column":2},"end":{"line":743,"column":74}},"280":{"start":{"line":746,"column":2},"end":{"line":751,"column":5}},"281":{"start":{"line":747,"column":4},"end":{"line":747,"column":55}},"282":{"start":{"line":747,"column":12},"end":{"line":747,"column":55}},"283":{"start":{"line":748,"column":4},"end":{"line":748,"column":86}},"284":{"start":{"line":748,"column":33},"end":{"line":748,"column":86}},"285":{"start":{"line":749,"column":4},"end":{"line":749,"column":133}},"286":{"start":{"line":749,"column":15},"end":{"line":749,"column":133}},"287":{"start":{"line":750,"column":4},"end":{"line":750,"column":42}},"288":{"start":{"line":766,"column":0},"end":{"line":783,"column":2}},"289":{"start":{"line":767,"column":2},"end":{"line":767,"column":18}},"290":{"start":{"line":768,"column":2},"end":{"line":768,"column":54}},"291":{"start":{"line":769,"column":2},"end":{"line":769,"column":24}},"292":{"start":{"line":770,"column":2},"end":{"line":770,"column":56}},"293":{"start":{"line":770,"column":36},"end":{"line":770,"column":56}},"294":{"start":{"line":771,"column":2},"end":{"line":771,"column":55}},"295":{"start":{"line":772,"column":2},"end":{"line":772,"column":50}},"296":{"start":{"line":775,"column":2},"end":{"line":775,"column":95}},"297":{"start":{"line":775,"column":36},"end":{"line":775,"column":95}},"298":{"start":{"line":777,"column":2},"end":{"line":782,"column":5}},"299":{"start":{"line":778,"column":4},"end":{"line":781,"column":7}},"300":{"start":{"line":779,"column":6},"end":{"line":779,"column":33}},"301":{"start":{"line":779,"column":14},"end":{"line":779,"column":33}},"302":{"start":{"line":780,"column":6},"end":{"line":780,"column":17}},"303":{"start":{"line":785,"column":0},"end":{"line":785,"column":59}},"304":{"start":{"line":798,"column":0},"end":{"line":817,"column":2}},"305":{"start":{"line":799,"column":2},"end":{"line":799,"column":18}},"306":{"start":{"line":800,"column":2},"end":{"line":800,"column":68}},"307":{"start":{"line":800,"column":35},"end":{"line":800,"column":68}},"308":{"start":{"line":801,"column":2},"end":{"line":801,"column":26}},"309":{"start":{"line":803,"column":2},"end":{"line":803,"column":32}},"310":{"start":{"line":806,"column":2},"end":{"line":808,"column":3}},"311":{"start":{"line":807,"column":4},"end":{"line":807,"column":83}},"312":{"start":{"line":811,"column":2},"end":{"line":816,"column":5}},"313":{"start":{"line":812,"column":4},"end":{"line":815,"column":7}},"314":{"start":{"line":813,"column":6},"end":{"line":813,"column":33}},"315":{"start":{"line":813,"column":14},"end":{"line":813,"column":33}},"316":{"start":{"line":814,"column":6},"end":{"line":814,"column":17}},"317":{"start":{"line":819,"column":0},"end":{"line":819,"column":71}},"318":{"start":{"line":829,"column":0},"end":{"line":868,"column":2}},"319":{"start":{"line":830,"column":2},"end":{"line":830,"column":18}},"320":{"start":{"line":831,"column":2},"end":{"line":831,"column":68}},"321":{"start":{"line":831,"column":35},"end":{"line":831,"column":68}},"322":{"start":{"line":832,"column":2},"end":{"line":832,"column":26}},"323":{"start":{"line":835,"column":2},"end":{"line":835,"column":25}},"324":{"start":{"line":838,"column":2},"end":{"line":838,"column":47}},"325":{"start":{"line":841,"column":2},"end":{"line":841,"column":81}},"326":{"start":{"line":844,"column":2},"end":{"line":850,"column":5}},"327":{"start":{"line":844,"column":36},"end":{"line":850,"column":5}},"328":{"start":{"line":846,"column":4},"end":{"line":846,"column":119}},"329":{"start":{"line":846,"column":61},"end":{"line":846,"column":119}},"330":{"start":{"line":847,"column":4},"end":{"line":847,"column":49}},"331":{"start":{"line":847,"column":12},"end":{"line":847,"column":49}},"332":{"start":{"line":848,"column":4},"end":{"line":848,"column":62}},"333":{"start":{"line":848,"column":18},"end":{"line":848,"column":62}},"334":{"start":{"line":849,"column":4},"end":{"line":849,"column":42}},"335":{"start":{"line":853,"column":2},"end":{"line":853,"column":41}},"336":{"start":{"line":855,"column":2},"end":{"line":855,"column":50}},"337":{"start":{"line":858,"column":2},"end":{"line":867,"column":5}},"338":{"start":{"line":860,"column":4},"end":{"line":866,"column":7}},"339":{"start":{"line":862,"column":6},"end":{"line":862,"column":119}},"340":{"start":{"line":862,"column":63},"end":{"line":862,"column":119}},"341":{"start":{"line":863,"column":6},"end":{"line":863,"column":33}},"342":{"start":{"line":863,"column":14},"end":{"line":863,"column":33}},"343":{"start":{"line":864,"column":6},"end":{"line":864,"column":41}},"344":{"start":{"line":864,"column":20},"end":{"line":864,"column":41}},"345":{"start":{"line":865,"column":6},"end":{"line":865,"column":21}},"346":{"start":{"line":870,"column":0},"end":{"line":870,"column":69}},"347":{"start":{"line":879,"column":0},"end":{"line":912,"column":1}},"348":{"start":{"line":880,"column":2},"end":{"line":880,"column":18}},"349":{"start":{"line":881,"column":2},"end":{"line":881,"column":68}},"350":{"start":{"line":881,"column":35},"end":{"line":881,"column":68}},"351":{"start":{"line":882,"column":2},"end":{"line":882,"column":26}},"352":{"start":{"line":884,"column":2},"end":{"line":884,"column":31}},"353":{"start":{"line":887,"column":2},"end":{"line":887,"column":47}},"354":{"start":{"line":890,"column":2},"end":{"line":890,"column":81}},"355":{"start":{"line":893,"column":2},"end":{"line":899,"column":5}},"356":{"start":{"line":893,"column":36},"end":{"line":899,"column":5}},"357":{"start":{"line":895,"column":4},"end":{"line":895,"column":119}},"358":{"start":{"line":895,"column":61},"end":{"line":895,"column":119}},"359":{"start":{"line":896,"column":4},"end":{"line":896,"column":32}},"360":{"start":{"line":896,"column":25},"end":{"line":896,"column":32}},"361":{"start":{"line":897,"column":4},"end":{"line":897,"column":55}},"362":{"start":{"line":897,"column":12},"end":{"line":897,"column":55}},"363":{"start":{"line":898,"column":4},"end":{"line":898,"column":61}},"364":{"start":{"line":902,"column":2},"end":{"line":911,"column":5}},"365":{"start":{"line":904,"column":4},"end":{"line":910,"column":7}},"366":{"start":{"line":906,"column":6},"end":{"line":906,"column":119}},"367":{"start":{"line":906,"column":63},"end":{"line":906,"column":119}},"368":{"start":{"line":907,"column":6},"end":{"line":907,"column":33}},"369":{"start":{"line":907,"column":14},"end":{"line":907,"column":33}},"370":{"start":{"line":908,"column":6},"end":{"line":908,"column":41}},"371":{"start":{"line":908,"column":20},"end":{"line":908,"column":41}},"372":{"start":{"line":909,"column":6},"end":{"line":909,"column":21}},"373":{"start":{"line":914,"column":0},"end":{"line":914,"column":67}},"374":{"start":{"line":922,"column":0},"end":{"line":936,"column":1}},"375":{"start":{"line":924,"column":2},"end":{"line":935,"column":5}},"376":{"start":{"line":925,"column":4},"end":{"line":925,"column":63}},"377":{"start":{"line":925,"column":20},"end":{"line":925,"column":63}},"378":{"start":{"line":927,"column":4},"end":{"line":929,"column":7}},"379":{"start":{"line":928,"column":6},"end":{"line":928,"column":41}},"380":{"start":{"line":932,"column":4},"end":{"line":934,"column":8}},"381":{"start":{"line":933,"column":6},"end":{"line":933,"column":153}},"382":{"start":{"line":945,"column":0},"end":{"line":957,"column":2}},"383":{"start":{"line":946,"column":2},"end":{"line":946,"column":18}},"384":{"start":{"line":949,"column":2},"end":{"line":949,"column":71}},"385":{"start":{"line":949,"column":36},"end":{"line":949,"column":71}},"386":{"start":{"line":951,"column":2},"end":{"line":956,"column":5}},"387":{"start":{"line":952,"column":4},"end":{"line":955,"column":7}},"388":{"start":{"line":953,"column":6},"end":{"line":953,"column":33}},"389":{"start":{"line":953,"column":14},"end":{"line":953,"column":33}},"390":{"start":{"line":954,"column":6},"end":{"line":954,"column":17}},"391":{"start":{"line":959,"column":0},"end":{"line":959,"column":66}},"392":{"start":{"line":970,"column":0},"end":{"line":999,"column":2}},"393":{"start":{"line":971,"column":2},"end":{"line":971,"column":18}},"394":{"start":{"line":972,"column":2},"end":{"line":972,"column":68}},"395":{"start":{"line":972,"column":35},"end":{"line":972,"column":68}},"396":{"start":{"line":973,"column":2},"end":{"line":973,"column":26}},"397":{"start":{"line":976,"column":2},"end":{"line":988,"column":3}},"398":{"start":{"line":978,"column":4},"end":{"line":980,"column":5}},"399":{"start":{"line":979,"column":6},"end":{"line":979,"column":76}},"400":{"start":{"line":982,"column":4},"end":{"line":987,"column":7}},"401":{"start":{"line":984,"column":6},"end":{"line":984,"column":121}},"402":{"start":{"line":984,"column":63},"end":{"line":984,"column":121}},"403":{"start":{"line":985,"column":6},"end":{"line":985,"column":51}},"404":{"start":{"line":985,"column":14},"end":{"line":985,"column":51}},"405":{"start":{"line":986,"column":6},"end":{"line":986,"column":52}},"406":{"start":{"line":991,"column":2},"end":{"line":998,"column":5}},"407":{"start":{"line":992,"column":4},"end":{"line":997,"column":7}},"408":{"start":{"line":994,"column":6},"end":{"line":994,"column":119}},"409":{"start":{"line":994,"column":63},"end":{"line":994,"column":119}},"410":{"start":{"line":995,"column":6},"end":{"line":995,"column":33}},"411":{"start":{"line":995,"column":14},"end":{"line":995,"column":33}},"412":{"start":{"line":996,"column":6},"end":{"line":996,"column":29}},"413":{"start":{"line":1001,"column":0},"end":{"line":1001,"column":76}},"414":{"start":{"line":1025,"column":0},"end":{"line":1045,"column":2}},"415":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":18}},"416":{"start":{"line":1027,"column":2},"end":{"line":1027,"column":54}},"417":{"start":{"line":1028,"column":2},"end":{"line":1028,"column":24}},"418":{"start":{"line":1029,"column":2},"end":{"line":1029,"column":56}},"419":{"start":{"line":1029,"column":36},"end":{"line":1029,"column":56}},"420":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":50}},"421":{"start":{"line":1031,"column":2},"end":{"line":1031,"column":64}},"422":{"start":{"line":1032,"column":2},"end":{"line":1032,"column":43}},"423":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":34}},"424":{"start":{"line":1037,"column":2},"end":{"line":1037,"column":99}},"425":{"start":{"line":1037,"column":36},"end":{"line":1037,"column":99}},"426":{"start":{"line":1039,"column":2},"end":{"line":1044,"column":5}},"427":{"start":{"line":1040,"column":4},"end":{"line":1043,"column":7}},"428":{"start":{"line":1041,"column":6},"end":{"line":1041,"column":33}},"429":{"start":{"line":1041,"column":14},"end":{"line":1041,"column":33}},"430":{"start":{"line":1042,"column":6},"end":{"line":1042,"column":17}},"431":{"start":{"line":1047,"column":0},"end":{"line":1087,"column":1}},"432":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":97}},"433":{"start":{"line":1051,"column":2},"end":{"line":1053,"column":3}},"434":{"start":{"line":1052,"column":4},"end":{"line":1052,"column":109}},"435":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":50}},"436":{"start":{"line":1059,"column":2},"end":{"line":1059,"column":117}},"437":{"start":{"line":1059,"column":59},"end":{"line":1059,"column":117}},"438":{"start":{"line":1062,"column":2},"end":{"line":1086,"column":5}},"439":{"start":{"line":1063,"column":4},"end":{"line":1063,"column":65}},"440":{"start":{"line":1063,"column":20},"end":{"line":1063,"column":65}},"441":{"start":{"line":1070,"column":4},"end":{"line":1072,"column":5}},"442":{"start":{"line":1071,"column":6},"end":{"line":1071,"column":51}},"443":{"start":{"line":1075,"column":4},"end":{"line":1075,"column":73}},"444":{"start":{"line":1077,"column":4},"end":{"line":1077,"column":35}},"445":{"start":{"line":1079,"column":4},"end":{"line":1085,"column":7}},"446":{"start":{"line":1080,"column":6},"end":{"line":1080,"column":34}},"447":{"start":{"line":1080,"column":27},"end":{"line":1080,"column":34}},"448":{"start":{"line":1081,"column":6},"end":{"line":1081,"column":51}},"449":{"start":{"line":1081,"column":14},"end":{"line":1081,"column":51}},"450":{"start":{"line":1082,"column":6},"end":{"line":1082,"column":69}},"451":{"start":{"line":1082,"column":25},"end":{"line":1082,"column":69}},"452":{"start":{"line":1083,"column":6},"end":{"line":1083,"column":123}},"453":{"start":{"line":1083,"column":36},"end":{"line":1083,"column":123}},"454":{"start":{"line":1084,"column":6},"end":{"line":1084,"column":47}},"455":{"start":{"line":1089,"column":0},"end":{"line":1089,"column":66}},"456":{"start":{"line":1113,"column":0},"end":{"line":1128,"column":2}},"457":{"start":{"line":1114,"column":2},"end":{"line":1114,"column":18}},"458":{"start":{"line":1115,"column":2},"end":{"line":1115,"column":68}},"459":{"start":{"line":1115,"column":35},"end":{"line":1115,"column":68}},"460":{"start":{"line":1116,"column":2},"end":{"line":1116,"column":26}},"461":{"start":{"line":1119,"column":2},"end":{"line":1119,"column":99}},"462":{"start":{"line":1119,"column":36},"end":{"line":1119,"column":99}},"463":{"start":{"line":1122,"column":2},"end":{"line":1127,"column":5}},"464":{"start":{"line":1123,"column":4},"end":{"line":1126,"column":7}},"465":{"start":{"line":1124,"column":6},"end":{"line":1124,"column":33}},"466":{"start":{"line":1124,"column":14},"end":{"line":1124,"column":33}},"467":{"start":{"line":1125,"column":6},"end":{"line":1125,"column":17}},"468":{"start":{"line":1130,"column":0},"end":{"line":1153,"column":1}},"469":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":53}},"470":{"start":{"line":1134,"column":2},"end":{"line":1134,"column":76}},"471":{"start":{"line":1135,"column":2},"end":{"line":1135,"column":33}},"472":{"start":{"line":1138,"column":2},"end":{"line":1138,"column":117}},"473":{"start":{"line":1138,"column":59},"end":{"line":1138,"column":117}},"474":{"start":{"line":1141,"column":2},"end":{"line":1141,"column":54}},"475":{"start":{"line":1144,"column":2},"end":{"line":1152,"column":5}},"476":{"start":{"line":1145,"column":4},"end":{"line":1145,"column":81}},"477":{"start":{"line":1145,"column":38},"end":{"line":1145,"column":81}},"478":{"start":{"line":1147,"column":4},"end":{"line":1151,"column":5}},"479":{"start":{"line":1148,"column":6},"end":{"line":1148,"column":61}},"480":{"start":{"line":1150,"column":6},"end":{"line":1150,"column":91}},"481":{"start":{"line":1150,"column":41},"end":{"line":1150,"column":91}},"482":{"start":{"line":1155,"column":0},"end":{"line":1155,"column":66}},"483":{"start":{"line":1157,"column":0},"end":{"line":1160,"column":1}},"484":{"start":{"line":1158,"column":2},"end":{"line":1158,"column":58}},"485":{"start":{"line":1158,"column":22},"end":{"line":1158,"column":58}},"486":{"start":{"line":1159,"column":2},"end":{"line":1159,"column":27}},"487":{"start":{"line":1175,"column":0},"end":{"line":1206,"column":2}},"488":{"start":{"line":1176,"column":2},"end":{"line":1176,"column":26}},"489":{"start":{"line":1179,"column":2},"end":{"line":1179,"column":55}},"490":{"start":{"line":1182,"column":2},"end":{"line":1184,"column":3}},"491":{"start":{"line":1183,"column":4},"end":{"line":1183,"column":34}},"492":{"start":{"line":1187,"column":2},"end":{"line":1189,"column":3}},"493":{"start":{"line":1188,"column":4},"end":{"line":1188,"column":33}},"494":{"start":{"line":1192,"column":2},"end":{"line":1192,"column":54}},"495":{"start":{"line":1195,"column":2},"end":{"line":1195,"column":56}},"496":{"start":{"line":1198,"column":2},"end":{"line":1200,"column":3}},"497":{"start":{"line":1199,"column":4},"end":{"line":1199,"column":22}},"498":{"start":{"line":1203,"column":2},"end":{"line":1203,"column":30}},"499":{"start":{"line":1205,"column":2},"end":{"line":1205,"column":12}},"500":{"start":{"line":1208,"column":0},"end":{"line":1208,"column":74}},"501":{"start":{"line":1210,"column":0},"end":{"line":1285,"column":1}},"502":{"start":{"line":1212,"column":2},"end":{"line":1216,"column":3}},"503":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":23}},"504":{"start":{"line":1215,"column":4},"end":{"line":1215,"column":20}},"505":{"start":{"line":1219,"column":2},"end":{"line":1222,"column":3}},"506":{"start":{"line":1220,"column":4},"end":{"line":1220,"column":23}},"507":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":17}},"508":{"start":{"line":1225,"column":2},"end":{"line":1227,"column":3}},"509":{"start":{"line":1226,"column":4},"end":{"line":1226,"column":144}},"510":{"start":{"line":1230,"column":2},"end":{"line":1230,"column":72}},"511":{"start":{"line":1231,"column":2},"end":{"line":1231,"column":64}},"512":{"start":{"line":1232,"column":2},"end":{"line":1232,"column":82}},"513":{"start":{"line":1235,"column":2},"end":{"line":1237,"column":3}},"514":{"start":{"line":1236,"column":4},"end":{"line":1236,"column":81}},"515":{"start":{"line":1240,"column":2},"end":{"line":1240,"column":43}},"516":{"start":{"line":1241,"column":2},"end":{"line":1241,"column":66}},"517":{"start":{"line":1241,"column":24},"end":{"line":1241,"column":66}},"518":{"start":{"line":1244,"column":2},"end":{"line":1244,"column":61}},"519":{"start":{"line":1244,"column":24},"end":{"line":1244,"column":61}},"520":{"start":{"line":1247,"column":2},"end":{"line":1251,"column":3}},"521":{"start":{"line":1248,"column":4},"end":{"line":1248,"column":20}},"522":{"start":{"line":1249,"column":9},"end":{"line":1251,"column":3}},"523":{"start":{"line":1250,"column":4},"end":{"line":1250,"column":23}},"524":{"start":{"line":1254,"column":2},"end":{"line":1259,"column":3}},"525":{"start":{"line":1262,"column":2},"end":{"line":1262,"column":49}},"526":{"start":{"line":1265,"column":2},"end":{"line":1265,"column":37}},"527":{"start":{"line":1267,"column":2},"end":{"line":1267,"column":46}},"528":{"start":{"line":1268,"column":2},"end":{"line":1268,"column":39}},"529":{"start":{"line":1271,"column":2},"end":{"line":1273,"column":3}},"530":{"start":{"line":1272,"column":4},"end":{"line":1272,"column":31}},"531":{"start":{"line":1276,"column":2},"end":{"line":1276,"column":57}},"532":{"start":{"line":1279,"column":2},"end":{"line":1284,"column":4}},"533":{"start":{"line":1280,"column":4},"end":{"line":1280,"column":105}},"534":{"start":{"line":1280,"column":52},"end":{"line":1280,"column":105}},"535":{"start":{"line":1281,"column":4},"end":{"line":1281,"column":55}},"536":{"start":{"line":1281,"column":12},"end":{"line":1281,"column":55}},"537":{"start":{"line":1282,"column":4},"end":{"line":1283,"column":56}},"538":{"start":{"line":1287,"column":0},"end":{"line":1333,"column":1}},"539":{"start":{"line":1289,"column":2},"end":{"line":1289,"column":117}},"540":{"start":{"line":1289,"column":59},"end":{"line":1289,"column":117}},"541":{"start":{"line":1291,"column":2},"end":{"line":1332,"column":5}},"542":{"start":{"line":1293,"column":4},"end":{"line":1328,"column":5}},"543":{"start":{"line":1294,"column":6},"end":{"line":1294,"column":76}},"544":{"start":{"line":1296,"column":6},"end":{"line":1296,"column":41}},"545":{"start":{"line":1298,"column":6},"end":{"line":1298,"column":50}},"546":{"start":{"line":1299,"column":6},"end":{"line":1299,"column":43}},"547":{"start":{"line":1302,"column":6},"end":{"line":1302,"column":63}},"548":{"start":{"line":1305,"column":6},"end":{"line":1305,"column":64}},"549":{"start":{"line":1308,"column":6},"end":{"line":1325,"column":9}},"550":{"start":{"line":1310,"column":8},"end":{"line":1310,"column":67}},"551":{"start":{"line":1310,"column":24},"end":{"line":1310,"column":67}},"552":{"start":{"line":1312,"column":8},"end":{"line":1324,"column":11}},"553":{"start":{"line":1314,"column":10},"end":{"line":1314,"column":69}},"554":{"start":{"line":1314,"column":26},"end":{"line":1314,"column":69}},"555":{"start":{"line":1316,"column":10},"end":{"line":1316,"column":37}},"556":{"start":{"line":1319,"column":10},"end":{"line":1323,"column":13}},"557":{"start":{"line":1320,"column":12},"end":{"line":1320,"column":109}},"558":{"start":{"line":1320,"column":34},"end":{"line":1320,"column":109}},"559":{"start":{"line":1321,"column":12},"end":{"line":1321,"column":62}},"560":{"start":{"line":1321,"column":20},"end":{"line":1321,"column":62}},"561":{"start":{"line":1322,"column":12},"end":{"line":1322,"column":80}},"562":{"start":{"line":1327,"column":6},"end":{"line":1327,"column":13}},"563":{"start":{"line":1330,"column":4},"end":{"line":1330,"column":49}},"564":{"start":{"line":1330,"column":12},"end":{"line":1330,"column":49}},"565":{"start":{"line":1331,"column":4},"end":{"line":1331,"column":37}},"566":{"start":{"line":1349,"column":0},"end":{"line":1367,"column":2}},"567":{"start":{"line":1351,"column":2},"end":{"line":1351,"column":18}},"568":{"start":{"line":1352,"column":2},"end":{"line":1352,"column":54}},"569":{"start":{"line":1353,"column":2},"end":{"line":1353,"column":24}},"570":{"start":{"line":1354,"column":2},"end":{"line":1354,"column":56}},"571":{"start":{"line":1354,"column":36},"end":{"line":1354,"column":56}},"572":{"start":{"line":1355,"column":2},"end":{"line":1355,"column":50}},"573":{"start":{"line":1358,"column":2},"end":{"line":1358,"column":96}},"574":{"start":{"line":1358,"column":36},"end":{"line":1358,"column":96}},"575":{"start":{"line":1361,"column":2},"end":{"line":1366,"column":5}},"576":{"start":{"line":1362,"column":4},"end":{"line":1365,"column":7}},"577":{"start":{"line":1363,"column":6},"end":{"line":1363,"column":33}},"578":{"start":{"line":1363,"column":14},"end":{"line":1363,"column":33}},"579":{"start":{"line":1364,"column":6},"end":{"line":1364,"column":17}},"580":{"start":{"line":1369,"column":0},"end":{"line":1369,"column":62}},"581":{"start":{"line":1371,"column":0},"end":{"line":1402,"column":1}},"582":{"start":{"line":1372,"column":2},"end":{"line":1372,"column":68}},"583":{"start":{"line":1372,"column":35},"end":{"line":1372,"column":68}},"584":{"start":{"line":1374,"column":2},"end":{"line":1374,"column":117}},"585":{"start":{"line":1374,"column":59},"end":{"line":1374,"column":117}},"586":{"start":{"line":1376,"column":2},"end":{"line":1376,"column":43}},"587":{"start":{"line":1377,"column":2},"end":{"line":1377,"column":66}},"588":{"start":{"line":1377,"column":24},"end":{"line":1377,"column":66}},"589":{"start":{"line":1380,"column":2},"end":{"line":1380,"column":82}},"590":{"start":{"line":1383,"column":2},"end":{"line":1383,"column":61}},"591":{"start":{"line":1383,"column":24},"end":{"line":1383,"column":61}},"592":{"start":{"line":1386,"column":2},"end":{"line":1388,"column":3}},"593":{"start":{"line":1391,"column":2},"end":{"line":1391,"column":49}},"594":{"start":{"line":1394,"column":2},"end":{"line":1394,"column":57}},"595":{"start":{"line":1397,"column":2},"end":{"line":1401,"column":4}},"596":{"start":{"line":1398,"column":4},"end":{"line":1398,"column":95}},"597":{"start":{"line":1398,"column":48},"end":{"line":1398,"column":95}},"598":{"start":{"line":1399,"column":4},"end":{"line":1399,"column":55}},"599":{"start":{"line":1399,"column":12},"end":{"line":1399,"column":55}},"600":{"start":{"line":1400,"column":4},"end":{"line":1400,"column":61}},"601":{"start":{"line":1404,"column":0},"end":{"line":1429,"column":1}},"602":{"start":{"line":1406,"column":2},"end":{"line":1428,"column":5}},"603":{"start":{"line":1407,"column":4},"end":{"line":1424,"column":5}},"604":{"start":{"line":1408,"column":6},"end":{"line":1408,"column":76}},"605":{"start":{"line":1410,"column":6},"end":{"line":1410,"column":63}},"606":{"start":{"line":1413,"column":6},"end":{"line":1413,"column":64}},"607":{"start":{"line":1416,"column":6},"end":{"line":1421,"column":9}},"608":{"start":{"line":1417,"column":8},"end":{"line":1417,"column":69}},"609":{"start":{"line":1417,"column":25},"end":{"line":1417,"column":69}},"610":{"start":{"line":1418,"column":8},"end":{"line":1420,"column":11}},"611":{"start":{"line":1419,"column":10},"end":{"line":1419,"column":46}},"612":{"start":{"line":1423,"column":6},"end":{"line":1423,"column":13}},"613":{"start":{"line":1426,"column":4},"end":{"line":1426,"column":49}},"614":{"start":{"line":1426,"column":12},"end":{"line":1426,"column":49}},"615":{"start":{"line":1427,"column":4},"end":{"line":1427,"column":42}},"616":{"start":{"line":1431,"column":0},"end":{"line":1431,"column":65}},"617":{"start":{"line":1444,"column":0},"end":{"line":1462,"column":2}},"618":{"start":{"line":1446,"column":2},"end":{"line":1446,"column":18}},"619":{"start":{"line":1447,"column":2},"end":{"line":1447,"column":54}},"620":{"start":{"line":1448,"column":2},"end":{"line":1448,"column":24}},"621":{"start":{"line":1449,"column":2},"end":{"line":1449,"column":56}},"622":{"start":{"line":1449,"column":36},"end":{"line":1449,"column":56}},"623":{"start":{"line":1450,"column":2},"end":{"line":1450,"column":50}},"624":{"start":{"line":1453,"column":2},"end":{"line":1453,"column":89}},"625":{"start":{"line":1453,"column":36},"end":{"line":1453,"column":89}},"626":{"start":{"line":1456,"column":2},"end":{"line":1461,"column":5}},"627":{"start":{"line":1457,"column":4},"end":{"line":1460,"column":7}},"628":{"start":{"line":1458,"column":6},"end":{"line":1458,"column":33}},"629":{"start":{"line":1458,"column":14},"end":{"line":1458,"column":33}},"630":{"start":{"line":1459,"column":6},"end":{"line":1459,"column":17}},"631":{"start":{"line":1464,"column":0},"end":{"line":1530,"column":1}},"632":{"start":{"line":1466,"column":2},"end":{"line":1466,"column":117}},"633":{"start":{"line":1466,"column":59},"end":{"line":1466,"column":117}},"634":{"start":{"line":1470,"column":2},"end":{"line":1470,"column":67}},"635":{"start":{"line":1471,"column":2},"end":{"line":1471,"column":54}},"636":{"start":{"line":1472,"column":2},"end":{"line":1472,"column":52}},"637":{"start":{"line":1473,"column":2},"end":{"line":1473,"column":60}},"638":{"start":{"line":1476,"column":2},"end":{"line":1483,"column":3}},"639":{"start":{"line":1477,"column":4},"end":{"line":1479,"column":5}},"640":{"start":{"line":1478,"column":6},"end":{"line":1478,"column":46}},"641":{"start":{"line":1482,"column":4},"end":{"line":1482,"column":42}},"642":{"start":{"line":1486,"column":2},"end":{"line":1486,"column":50}},"643":{"start":{"line":1487,"column":2},"end":{"line":1487,"column":46}},"644":{"start":{"line":1490,"column":2},"end":{"line":1529,"column":3}},"645":{"start":{"line":1491,"column":4},"end":{"line":1494,"column":7}},"646":{"start":{"line":1492,"column":6},"end":{"line":1492,"column":58}},"647":{"start":{"line":1492,"column":14},"end":{"line":1492,"column":58}},"648":{"start":{"line":1493,"column":6},"end":{"line":1493,"column":28}},"649":{"start":{"line":1495,"column":9},"end":{"line":1529,"column":3}},"650":{"start":{"line":1496,"column":4},"end":{"line":1499,"column":7}},"651":{"start":{"line":1497,"column":6},"end":{"line":1497,"column":58}},"652":{"start":{"line":1497,"column":14},"end":{"line":1497,"column":58}},"653":{"start":{"line":1498,"column":6},"end":{"line":1498,"column":28}},"654":{"start":{"line":1500,"column":9},"end":{"line":1529,"column":3}},"655":{"start":{"line":1501,"column":4},"end":{"line":1504,"column":7}},"656":{"start":{"line":1502,"column":6},"end":{"line":1502,"column":58}},"657":{"start":{"line":1502,"column":14},"end":{"line":1502,"column":58}},"658":{"start":{"line":1503,"column":6},"end":{"line":1503,"column":28}},"659":{"start":{"line":1505,"column":9},"end":{"line":1529,"column":3}},"660":{"start":{"line":1506,"column":4},"end":{"line":1509,"column":7}},"661":{"start":{"line":1507,"column":6},"end":{"line":1507,"column":58}},"662":{"start":{"line":1507,"column":14},"end":{"line":1507,"column":58}},"663":{"start":{"line":1508,"column":6},"end":{"line":1508,"column":28}},"664":{"start":{"line":1510,"column":9},"end":{"line":1529,"column":3}},"665":{"start":{"line":1511,"column":4},"end":{"line":1521,"column":5}},"666":{"start":{"line":1512,"column":6},"end":{"line":1515,"column":9}},"667":{"start":{"line":1513,"column":8},"end":{"line":1513,"column":60}},"668":{"start":{"line":1513,"column":16},"end":{"line":1513,"column":60}},"669":{"start":{"line":1514,"column":8},"end":{"line":1514,"column":30}},"670":{"start":{"line":1517,"column":6},"end":{"line":1520,"column":9}},"671":{"start":{"line":1518,"column":8},"end":{"line":1518,"column":60}},"672":{"start":{"line":1518,"column":16},"end":{"line":1518,"column":60}},"673":{"start":{"line":1519,"column":8},"end":{"line":1519,"column":30}},"674":{"start":{"line":1522,"column":9},"end":{"line":1529,"column":3}},"675":{"start":{"line":1523,"column":4},"end":{"line":1526,"column":7}},"676":{"start":{"line":1524,"column":6},"end":{"line":1524,"column":58}},"677":{"start":{"line":1524,"column":14},"end":{"line":1524,"column":58}},"678":{"start":{"line":1525,"column":6},"end":{"line":1525,"column":28}},"679":{"start":{"line":1528,"column":4},"end":{"line":1528,"column":143}},"680":{"start":{"line":1542,"column":0},"end":{"line":1579,"column":2}},"681":{"start":{"line":1543,"column":2},"end":{"line":1543,"column":68}},"682":{"start":{"line":1543,"column":35},"end":{"line":1543,"column":68}},"683":{"start":{"line":1544,"column":2},"end":{"line":1544,"column":18}},"684":{"start":{"line":1546,"column":2},"end":{"line":1546,"column":34}},"685":{"start":{"line":1549,"column":2},"end":{"line":1558,"column":3}},"686":{"start":{"line":1550,"column":4},"end":{"line":1550,"column":38}},"687":{"start":{"line":1551,"column":9},"end":{"line":1558,"column":3}},"688":{"start":{"line":1557,"column":6},"end":{"line":1557,"column":183}},"689":{"start":{"line":1561,"column":2},"end":{"line":1567,"column":5}},"690":{"start":{"line":1561,"column":36},"end":{"line":1567,"column":5}},"691":{"start":{"line":1563,"column":4},"end":{"line":1563,"column":83}},"692":{"start":{"line":1563,"column":69},"end":{"line":1563,"column":83}},"693":{"start":{"line":1565,"column":4},"end":{"line":1565,"column":36}},"694":{"start":{"line":1565,"column":12},"end":{"line":1565,"column":36}},"695":{"start":{"line":1566,"column":4},"end":{"line":1566,"column":22}},"696":{"start":{"line":1570,"column":2},"end":{"line":1578,"column":5}},"697":{"start":{"line":1571,"column":4},"end":{"line":1577,"column":7}},"698":{"start":{"line":1573,"column":6},"end":{"line":1573,"column":85}},"699":{"start":{"line":1573,"column":71},"end":{"line":1573,"column":85}},"700":{"start":{"line":1575,"column":6},"end":{"line":1575,"column":33}},"701":{"start":{"line":1575,"column":14},"end":{"line":1575,"column":33}},"702":{"start":{"line":1576,"column":6},"end":{"line":1576,"column":17}},"703":{"start":{"line":1581,"column":0},"end":{"line":1581,"column":67}},"704":{"start":{"line":1591,"column":0},"end":{"line":1615,"column":1}},"705":{"start":{"line":1592,"column":2},"end":{"line":1592,"column":18}},"706":{"start":{"line":1593,"column":2},"end":{"line":1593,"column":68}},"707":{"start":{"line":1593,"column":35},"end":{"line":1593,"column":68}},"708":{"start":{"line":1594,"column":2},"end":{"line":1594,"column":26}},"709":{"start":{"line":1597,"column":2},"end":{"line":1597,"column":75}},"710":{"start":{"line":1598,"column":2},"end":{"line":1598,"column":52}},"711":{"start":{"line":1601,"column":2},"end":{"line":1606,"column":3}},"712":{"start":{"line":1602,"column":4},"end":{"line":1605,"column":7}},"713":{"start":{"line":1603,"column":6},"end":{"line":1603,"column":35}},"714":{"start":{"line":1603,"column":14},"end":{"line":1603,"column":35}},"715":{"start":{"line":1604,"column":6},"end":{"line":1604,"column":27}},"716":{"start":{"line":1609,"column":2},"end":{"line":1614,"column":5}},"717":{"start":{"line":1610,"column":4},"end":{"line":1613,"column":7}},"718":{"start":{"line":1611,"column":6},"end":{"line":1611,"column":33}},"719":{"start":{"line":1611,"column":14},"end":{"line":1611,"column":33}},"720":{"start":{"line":1612,"column":6},"end":{"line":1612,"column":20}},"721":{"start":{"line":1617,"column":0},"end":{"line":1617,"column":61}},"722":{"start":{"line":1629,"column":0},"end":{"line":1644,"column":2}},"723":{"start":{"line":1630,"column":2},"end":{"line":1630,"column":18}},"724":{"start":{"line":1631,"column":2},"end":{"line":1631,"column":68}},"725":{"start":{"line":1631,"column":35},"end":{"line":1631,"column":68}},"726":{"start":{"line":1632,"column":2},"end":{"line":1632,"column":26}},"727":{"start":{"line":1635,"column":2},"end":{"line":1635,"column":91}},"728":{"start":{"line":1635,"column":36},"end":{"line":1635,"column":91}},"729":{"start":{"line":1638,"column":2},"end":{"line":1643,"column":5}},"730":{"start":{"line":1639,"column":4},"end":{"line":1642,"column":7}},"731":{"start":{"line":1640,"column":6},"end":{"line":1640,"column":33}},"732":{"start":{"line":1640,"column":14},"end":{"line":1640,"column":33}},"733":{"start":{"line":1641,"column":6},"end":{"line":1641,"column":17}},"734":{"start":{"line":1646,"column":0},"end":{"line":1676,"column":1}},"735":{"start":{"line":1648,"column":2},"end":{"line":1648,"column":63}},"736":{"start":{"line":1651,"column":2},"end":{"line":1651,"column":117}},"737":{"start":{"line":1651,"column":59},"end":{"line":1651,"column":117}},"738":{"start":{"line":1653,"column":2},"end":{"line":1667,"column":3}},"739":{"start":{"line":1655,"column":4},"end":{"line":1655,"column":18}},"740":{"start":{"line":1657,"column":4},"end":{"line":1664,"column":5}},"741":{"start":{"line":1658,"column":6},"end":{"line":1658,"column":29}},"742":{"start":{"line":1660,"column":6},"end":{"line":1660,"column":28}},"743":{"start":{"line":1661,"column":6},"end":{"line":1663,"column":7}},"744":{"start":{"line":1662,"column":8},"end":{"line":1662,"column":55}},"745":{"start":{"line":1666,"column":4},"end":{"line":1666,"column":16}},"746":{"start":{"line":1670,"column":2},"end":{"line":1675,"column":5}},"747":{"start":{"line":1671,"column":4},"end":{"line":1671,"column":42}},"748":{"start":{"line":1671,"column":12},"end":{"line":1671,"column":42}},"749":{"start":{"line":1672,"column":4},"end":{"line":1672,"column":74}},"750":{"start":{"line":1672,"column":32},"end":{"line":1672,"column":74}},"751":{"start":{"line":1673,"column":4},"end":{"line":1673,"column":60}},"752":{"start":{"line":1673,"column":13},"end":{"line":1673,"column":60}},"753":{"start":{"line":1674,"column":4},"end":{"line":1674,"column":60}},"754":{"start":{"line":1678,"column":0},"end":{"line":1678,"column":71}},"755":{"start":{"line":1680,"column":0},"end":{"line":1713,"column":1}},"756":{"start":{"line":1681,"column":2},"end":{"line":1681,"column":55}},"757":{"start":{"line":1682,"column":2},"end":{"line":1682,"column":44}},"758":{"start":{"line":1685,"column":2},"end":{"line":1685,"column":88}},"759":{"start":{"line":1686,"column":2},"end":{"line":1688,"column":3}},"760":{"start":{"line":1691,"column":2},"end":{"line":1691,"column":85}},"761":{"start":{"line":1693,"column":2},"end":{"line":1693,"column":74}},"762":{"start":{"line":1696,"column":2},"end":{"line":1696,"column":41}},"763":{"start":{"line":1697,"column":2},"end":{"line":1701,"column":3}},"764":{"start":{"line":1698,"column":4},"end":{"line":1700,"column":5}},"765":{"start":{"line":1699,"column":6},"end":{"line":1699,"column":49}},"766":{"start":{"line":1703,"column":2},"end":{"line":1703,"column":66}},"767":{"start":{"line":1703,"column":33},"end":{"line":1703,"column":66}},"768":{"start":{"line":1706,"column":2},"end":{"line":1706,"column":69}},"769":{"start":{"line":1707,"column":2},"end":{"line":1709,"column":3}},"770":{"start":{"line":1708,"column":4},"end":{"line":1708,"column":35}},"771":{"start":{"line":1712,"column":2},"end":{"line":1712,"column":18}},"772":{"start":{"line":1715,"column":0},"end":{"line":1764,"column":1}},"773":{"start":{"line":1717,"column":2},"end":{"line":1717,"column":55}},"774":{"start":{"line":1719,"column":2},"end":{"line":1719,"column":88}},"775":{"start":{"line":1721,"column":2},"end":{"line":1721,"column":70}},"776":{"start":{"line":1723,"column":2},"end":{"line":1723,"column":43}},"777":{"start":{"line":1724,"column":2},"end":{"line":1734,"column":3}},"778":{"start":{"line":1725,"column":4},"end":{"line":1727,"column":5}},"779":{"start":{"line":1726,"column":6},"end":{"line":1726,"column":51}},"780":{"start":{"line":1730,"column":4},"end":{"line":1730,"column":71}},"781":{"start":{"line":1731,"column":4},"end":{"line":1733,"column":5}},"782":{"start":{"line":1732,"column":6},"end":{"line":1732,"column":39}},"783":{"start":{"line":1737,"column":2},"end":{"line":1737,"column":52}},"784":{"start":{"line":1740,"column":2},"end":{"line":1746,"column":3}},"785":{"start":{"line":1742,"column":4},"end":{"line":1742,"column":86}},"786":{"start":{"line":1743,"column":4},"end":{"line":1743,"column":20}},"787":{"start":{"line":1745,"column":4},"end":{"line":1745,"column":27}},"788":{"start":{"line":1749,"column":2},"end":{"line":1749,"column":81}},"789":{"start":{"line":1752,"column":2},"end":{"line":1752,"column":47}},"790":{"start":{"line":1755,"column":2},"end":{"line":1755,"column":50}},"791":{"start":{"line":1758,"column":2},"end":{"line":1763,"column":5}},"792":{"start":{"line":1759,"column":4},"end":{"line":1759,"column":55}},"793":{"start":{"line":1759,"column":12},"end":{"line":1759,"column":55}},"794":{"start":{"line":1760,"column":4},"end":{"line":1760,"column":78}},"795":{"start":{"line":1760,"column":23},"end":{"line":1760,"column":78}},"796":{"start":{"line":1762,"column":4},"end":{"line":1762,"column":46}},"797":{"start":{"line":1767,"column":0},"end":{"line":1776,"column":1}},"798":{"start":{"line":1768,"column":2},"end":{"line":1768,"column":121}},"799":{"start":{"line":1768,"column":39},"end":{"line":1768,"column":121}},"800":{"start":{"line":1769,"column":2},"end":{"line":1769,"column":124}},"801":{"start":{"line":1769,"column":32},"end":{"line":1769,"column":124}},"802":{"start":{"line":1770,"column":2},"end":{"line":1770,"column":41}},"803":{"start":{"line":1770,"column":34},"end":{"line":1770,"column":41}},"804":{"start":{"line":1772,"column":2},"end":{"line":1772,"column":48}},"805":{"start":{"line":1773,"column":2},"end":{"line":1775,"column":3}},"806":{"start":{"line":1774,"column":4},"end":{"line":1774,"column":173}},"807":{"start":{"line":1774,"column":52},"end":{"line":1774,"column":173}},"808":{"start":{"line":1779,"column":0},"end":{"line":1792,"column":1}},"809":{"start":{"line":1780,"column":2},"end":{"line":1789,"column":3}},"810":{"start":{"line":1781,"column":4},"end":{"line":1781,"column":18}},"811":{"start":{"line":1782,"column":4},"end":{"line":1782,"column":37}},"812":{"start":{"line":1782,"column":18},"end":{"line":1782,"column":37}},"813":{"start":{"line":1783,"column":4},"end":{"line":1783,"column":58}},"814":{"start":{"line":1783,"column":25},"end":{"line":1783,"column":58}},"815":{"start":{"line":1784,"column":4},"end":{"line":1784,"column":37}},"816":{"start":{"line":1784,"column":18},"end":{"line":1784,"column":37}},"817":{"start":{"line":1785,"column":4},"end":{"line":1785,"column":49}},"818":{"start":{"line":1785,"column":22},"end":{"line":1785,"column":49}},"819":{"start":{"line":1786,"column":4},"end":{"line":1786,"column":31}},"820":{"start":{"line":1787,"column":9},"end":{"line":1789,"column":3}},"821":{"start":{"line":1788,"column":4},"end":{"line":1788,"column":42}},"822":{"start":{"line":1791,"column":2},"end":{"line":1791,"column":15}},"823":{"start":{"line":1795,"column":0},"end":{"line":1807,"column":1}},"824":{"start":{"line":1796,"column":2},"end":{"line":1805,"column":3}},"825":{"start":{"line":1797,"column":4},"end":{"line":1804,"column":5}},"826":{"start":{"line":1798,"column":6},"end":{"line":1798,"column":32}},"827":{"start":{"line":1801,"column":6},"end":{"line":1803,"column":7}},"828":{"start":{"line":1802,"column":8},"end":{"line":1802,"column":60}},"829":{"start":{"line":1806,"column":2},"end":{"line":1806,"column":18}},"830":{"start":{"line":1814,"column":0},"end":{"line":1816,"column":1}},"831":{"start":{"line":1815,"column":2},"end":{"line":1815,"column":26}},"832":{"start":{"line":1886,"column":0},"end":{"line":1886,"column":53}},"833":{"start":{"line":1887,"column":0},"end":{"line":1887,"column":46}},"834":{"start":{"line":1888,"column":0},"end":{"line":1888,"column":48}},"835":{"start":{"line":1889,"column":0},"end":{"line":1889,"column":43}},"836":{"start":{"line":1890,"column":0},"end":{"line":1890,"column":38}},"837":{"start":{"line":1891,"column":0},"end":{"line":1891,"column":38}},"838":{"start":{"line":1893,"column":0},"end":{"line":1893,"column":20}}},"branchMap":{"1":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":12},"end":{"line":97,"column":19}},{"start":{"line":97,"column":23},"end":{"line":97,"column":25}}]},"2":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"3":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"4":{"line":107,"type":"cond-expr","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":20}},{"start":{"line":108,"column":23},"end":{"line":108,"column":53}}]},"5":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":23},"end":{"line":132,"column":36}},{"start":{"line":132,"column":39},"end":{"line":132,"column":43}}]},"6":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":70},"end":{"line":138,"column":94}},{"start":{"line":138,"column":97},"end":{"line":138,"column":99}}]},"7":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":16},"end":{"line":140,"column":32}},{"start":{"line":140,"column":36},"end":{"line":140,"column":40}}]},"8":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":17},"end":{"line":142,"column":34}},{"start":{"line":142,"column":38},"end":{"line":142,"column":46}}]},"9":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":20},"end":{"line":144,"column":40}},{"start":{"line":144,"column":44},"end":{"line":144,"column":65}}]},"10":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":59},"end":{"line":148,"column":77}},{"start":{"line":148,"column":80},"end":{"line":148,"column":85}}]},"11":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"12":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"13":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":196,"column":4}},{"start":{"line":196,"column":4},"end":{"line":196,"column":4}}]},"14":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":7},"end":{"line":196,"column":44}},{"start":{"line":197,"column":10},"end":{"line":197,"column":52}},{"start":{"line":197,"column":56},"end":{"line":197,"column":103}}]},"15":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"16":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"17":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"18":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"19":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"20":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"21":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"22":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":6}},{"start":{"line":253,"column":6},"end":{"line":253,"column":6}}]},"23":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]},"24":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":5},"end":{"line":267,"column":19}},{"start":{"line":267,"column":23},"end":{"line":267,"column":56}}]},"25":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":9},"end":{"line":269,"column":9}},{"start":{"line":269,"column":9},"end":{"line":269,"column":9}}]},"26":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":9},"end":{"line":271,"column":9}},{"start":{"line":271,"column":9},"end":{"line":271,"column":9}}]},"27":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":12},"end":{"line":271,"column":26}},{"start":{"line":271,"column":30},"end":{"line":271,"column":63}}]},"28":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":15},"end":{"line":272,"column":34}},{"start":{"line":272,"column":38},"end":{"line":272,"column":63}}]},"29":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":4},"end":{"line":273,"column":4}},{"start":{"line":273,"column":4},"end":{"line":273,"column":4}}]},"30":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":8},"end":{"line":273,"column":12}},{"start":{"line":273,"column":16},"end":{"line":273,"column":39}}]},"31":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":2},"end":{"line":289,"column":2}},{"start":{"line":289,"column":2},"end":{"line":289,"column":2}}]},"32":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":5},"end":{"line":289,"column":22}},{"start":{"line":289,"column":26},"end":{"line":289,"column":57}}]},"33":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":15},"end":{"line":291,"column":29}},{"start":{"line":291,"column":33},"end":{"line":291,"column":47}},{"start":{"line":291,"column":51},"end":{"line":291,"column":70}}]},"34":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":2},"end":{"line":294,"column":2}},{"start":{"line":294,"column":2},"end":{"line":294,"column":2}}]},"35":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":5},"end":{"line":294,"column":35}},{"start":{"line":294,"column":39},"end":{"line":294,"column":60}}]},"36":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":2},"end":{"line":299,"column":2}},{"start":{"line":299,"column":2},"end":{"line":299,"column":2}}]},"37":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":2},"end":{"line":306,"column":2}},{"start":{"line":306,"column":2},"end":{"line":306,"column":2}}]},"38":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"39":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"40":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":329,"column":2}},{"start":{"line":329,"column":2},"end":{"line":329,"column":2}}]},"41":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"42":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":6},"end":{"line":338,"column":6}},{"start":{"line":338,"column":6},"end":{"line":338,"column":6}}]},"43":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"44":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":2},"end":{"line":366,"column":2}},{"start":{"line":366,"column":2},"end":{"line":366,"column":2}}]},"45":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"46":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":2},"end":{"line":382,"column":2}},{"start":{"line":382,"column":2},"end":{"line":382,"column":2}}]},"47":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":2},"end":{"line":384,"column":2}},{"start":{"line":384,"column":2},"end":{"line":384,"column":2}}]},"48":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":2},"end":{"line":436,"column":2}},{"start":{"line":436,"column":2},"end":{"line":436,"column":2}}]},"49":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":12},"end":{"line":437,"column":19}},{"start":{"line":437,"column":23},"end":{"line":437,"column":25}}]},"50":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":24},"end":{"line":443,"column":43}},{"start":{"line":443,"column":47},"end":{"line":443,"column":65}}]},"51":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":2},"end":{"line":446,"column":2}},{"start":{"line":446,"column":2},"end":{"line":446,"column":2}}]},"52":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":2},"end":{"line":451,"column":2}},{"start":{"line":451,"column":2},"end":{"line":451,"column":2}}]},"53":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":5},"end":{"line":451,"column":20}},{"start":{"line":451,"column":24},"end":{"line":451,"column":39}}]},"54":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":6},"end":{"line":454,"column":6}},{"start":{"line":454,"column":6},"end":{"line":454,"column":6}}]},"55":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":6},"end":{"line":457,"column":6}},{"start":{"line":457,"column":6},"end":{"line":457,"column":6}}]},"56":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":2},"end":{"line":463,"column":2}},{"start":{"line":463,"column":2},"end":{"line":463,"column":2}}]},"57":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":2},"end":{"line":468,"column":2}},{"start":{"line":468,"column":2},"end":{"line":468,"column":2}}]},"58":{"line":468,"type":"binary-expr","locations":[{"start":{"line":468,"column":5},"end":{"line":468,"column":22}},{"start":{"line":468,"column":26},"end":{"line":468,"column":57}}]},"59":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":4},"end":{"line":474,"column":4}},{"start":{"line":474,"column":4},"end":{"line":474,"column":4}}]},"60":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":4},"end":{"line":475,"column":4}},{"start":{"line":475,"column":4},"end":{"line":475,"column":4}}]},"61":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":2},"end":{"line":489,"column":2}},{"start":{"line":489,"column":2},"end":{"line":489,"column":2}}]},"62":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]},"63":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"64":{"line":503,"type":"binary-expr","locations":[{"start":{"line":503,"column":5},"end":{"line":503,"column":22}},{"start":{"line":503,"column":26},"end":{"line":503,"column":57}}]},"65":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":6},"end":{"line":508,"column":6}},{"start":{"line":508,"column":6},"end":{"line":508,"column":6}}]},"66":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":6},"end":{"line":509,"column":6}},{"start":{"line":509,"column":6},"end":{"line":509,"column":6}}]},"67":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":9},"end":{"line":509,"column":31}},{"start":{"line":509,"column":35},"end":{"line":509,"column":54}}]},"68":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":13},"end":{"line":511,"column":13}},{"start":{"line":511,"column":13},"end":{"line":511,"column":13}}]},"69":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":8},"end":{"line":523,"column":8}},{"start":{"line":523,"column":8},"end":{"line":523,"column":8}}]},"70":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":11},"end":{"line":523,"column":29}},{"start":{"line":524,"column":13},"end":{"line":524,"column":44}},{"start":{"line":524,"column":48},"end":{"line":524,"column":85}}]},"71":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":8},"end":{"line":534,"column":8}},{"start":{"line":534,"column":8},"end":{"line":534,"column":8}}]},"72":{"line":575,"type":"if","locations":[{"start":{"line":575,"column":2},"end":{"line":575,"column":2}},{"start":{"line":575,"column":2},"end":{"line":575,"column":2}}]},"73":{"line":576,"type":"cond-expr","locations":[{"start":{"line":576,"column":23},"end":{"line":576,"column":35}},{"start":{"line":576,"column":38},"end":{"line":576,"column":42}}]},"74":{"line":577,"type":"cond-expr","locations":[{"start":{"line":577,"column":26},"end":{"line":577,"column":44}},{"start":{"line":577,"column":47},"end":{"line":577,"column":49}}]},"75":{"line":577,"type":"binary-expr","locations":[{"start":{"line":577,"column":26},"end":{"line":577,"column":38}},{"start":{"line":577,"column":42},"end":{"line":577,"column":44}}]},"76":{"line":580,"type":"binary-expr","locations":[{"start":{"line":580,"column":27},"end":{"line":580,"column":49}},{"start":{"line":580,"column":53},"end":{"line":580,"column":74}}]},"77":{"line":583,"type":"if","locations":[{"start":{"line":583,"column":2},"end":{"line":583,"column":2}},{"start":{"line":583,"column":2},"end":{"line":583,"column":2}}]},"78":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":2},"end":{"line":586,"column":2}},{"start":{"line":586,"column":2},"end":{"line":586,"column":2}}]},"79":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":6},"end":{"line":589,"column":6}},{"start":{"line":589,"column":6},"end":{"line":589,"column":6}}]},"80":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"81":{"line":608,"type":"binary-expr","locations":[{"start":{"line":608,"column":12},"end":{"line":608,"column":19}},{"start":{"line":608,"column":23},"end":{"line":608,"column":25}}]},"82":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":2},"end":{"line":612,"column":2}},{"start":{"line":612,"column":2},"end":{"line":612,"column":2}}]},"83":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":2},"end":{"line":615,"column":2}},{"start":{"line":615,"column":2},"end":{"line":615,"column":2}}]},"84":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":5},"end":{"line":615,"column":35}},{"start":{"line":615,"column":39},"end":{"line":615,"column":60}}]},"85":{"line":633,"type":"if","locations":[{"start":{"line":633,"column":6},"end":{"line":633,"column":6}},{"start":{"line":633,"column":6},"end":{"line":633,"column":6}}]},"86":{"line":633,"type":"binary-expr","locations":[{"start":{"line":633,"column":9},"end":{"line":633,"column":17}},{"start":{"line":633,"column":21},"end":{"line":633,"column":31}}]},"87":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":11},"end":{"line":653,"column":17}},{"start":{"line":653,"column":21},"end":{"line":653,"column":23}}]},"88":{"line":654,"type":"binary-expr","locations":[{"start":{"line":654,"column":12},"end":{"line":654,"column":19}},{"start":{"line":654,"column":23},"end":{"line":654,"column":25}}]},"89":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":2},"end":{"line":662,"column":2}},{"start":{"line":662,"column":2},"end":{"line":662,"column":2}}]},"90":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":2},"end":{"line":667,"column":2}},{"start":{"line":667,"column":2},"end":{"line":667,"column":2}}]},"91":{"line":669,"type":"cond-expr","locations":[{"start":{"line":669,"column":37},"end":{"line":669,"column":67}},{"start":{"line":669,"column":70},"end":{"line":669,"column":72}}]},"92":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":677,"column":4}},{"start":{"line":677,"column":4},"end":{"line":677,"column":4}}]},"93":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":2}},{"start":{"line":685,"column":2},"end":{"line":685,"column":2}}]},"94":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":4},"end":{"line":687,"column":4}},{"start":{"line":687,"column":4},"end":{"line":687,"column":4}}]},"95":{"line":687,"type":"binary-expr","locations":[{"start":{"line":687,"column":7},"end":{"line":687,"column":37}},{"start":{"line":687,"column":41},"end":{"line":687,"column":105}}]},"96":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":2},"end":{"line":694,"column":2}},{"start":{"line":694,"column":2},"end":{"line":694,"column":2}}]},"97":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":2},"end":{"line":699,"column":2}},{"start":{"line":699,"column":2},"end":{"line":699,"column":2}}]},"98":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":2},"end":{"line":710,"column":2}},{"start":{"line":710,"column":2},"end":{"line":710,"column":2}}]},"99":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":2},"end":{"line":712,"column":2}},{"start":{"line":712,"column":2},"end":{"line":712,"column":2}}]},"100":{"line":724,"type":"if","locations":[{"start":{"line":724,"column":2},"end":{"line":724,"column":2}},{"start":{"line":724,"column":2},"end":{"line":724,"column":2}}]},"101":{"line":724,"type":"binary-expr","locations":[{"start":{"line":724,"column":5},"end":{"line":724,"column":22}},{"start":{"line":724,"column":26},"end":{"line":724,"column":57}}]},"102":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":2},"end":{"line":727,"column":2}},{"start":{"line":727,"column":2},"end":{"line":727,"column":2}}]},"103":{"line":727,"type":"binary-expr","locations":[{"start":{"line":727,"column":7},"end":{"line":727,"column":16}},{"start":{"line":727,"column":20},"end":{"line":727,"column":49}}]},"104":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":2},"end":{"line":729,"column":2}},{"start":{"line":729,"column":2},"end":{"line":729,"column":2}}]},"105":{"line":729,"type":"binary-expr","locations":[{"start":{"line":729,"column":5},"end":{"line":729,"column":23}},{"start":{"line":729,"column":27},"end":{"line":729,"column":53}},{"start":{"line":729,"column":57},"end":{"line":729,"column":89}}]},"106":{"line":731,"type":"if","locations":[{"start":{"line":731,"column":9},"end":{"line":731,"column":9}},{"start":{"line":731,"column":9},"end":{"line":731,"column":9}}]},"107":{"line":731,"type":"binary-expr","locations":[{"start":{"line":731,"column":12},"end":{"line":731,"column":30}},{"start":{"line":731,"column":34},"end":{"line":731,"column":59}},{"start":{"line":731,"column":63},"end":{"line":731,"column":95}}]},"108":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":2},"end":{"line":738,"column":2}},{"start":{"line":738,"column":2},"end":{"line":738,"column":2}}]},"109":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":4},"end":{"line":747,"column":4}},{"start":{"line":747,"column":4},"end":{"line":747,"column":4}}]},"110":{"line":748,"type":"if","locations":[{"start":{"line":748,"column":4},"end":{"line":748,"column":4}},{"start":{"line":748,"column":4},"end":{"line":748,"column":4}}]},"111":{"line":748,"type":"binary-expr","locations":[{"start":{"line":748,"column":7},"end":{"line":748,"column":13}},{"start":{"line":748,"column":17},"end":{"line":748,"column":31}}]},"112":{"line":749,"type":"if","locations":[{"start":{"line":749,"column":4},"end":{"line":749,"column":4}},{"start":{"line":749,"column":4},"end":{"line":749,"column":4}}]},"113":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":2},"end":{"line":770,"column":2}},{"start":{"line":770,"column":2},"end":{"line":770,"column":2}}]},"114":{"line":771,"type":"cond-expr","locations":[{"start":{"line":771,"column":29},"end":{"line":771,"column":41}},{"start":{"line":771,"column":44},"end":{"line":771,"column":54}}]},"115":{"line":772,"type":"cond-expr","locations":[{"start":{"line":772,"column":26},"end":{"line":772,"column":44}},{"start":{"line":772,"column":47},"end":{"line":772,"column":49}}]},"116":{"line":772,"type":"binary-expr","locations":[{"start":{"line":772,"column":26},"end":{"line":772,"column":38}},{"start":{"line":772,"column":42},"end":{"line":772,"column":44}}]},"117":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":2},"end":{"line":775,"column":2}},{"start":{"line":775,"column":2},"end":{"line":775,"column":2}}]},"118":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":6},"end":{"line":779,"column":6}},{"start":{"line":779,"column":6},"end":{"line":779,"column":6}}]},"119":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":2},"end":{"line":800,"column":2}},{"start":{"line":800,"column":2},"end":{"line":800,"column":2}}]},"120":{"line":801,"type":"binary-expr","locations":[{"start":{"line":801,"column":12},"end":{"line":801,"column":19}},{"start":{"line":801,"column":23},"end":{"line":801,"column":25}}]},"121":{"line":806,"type":"if","locations":[{"start":{"line":806,"column":2},"end":{"line":806,"column":2}},{"start":{"line":806,"column":2},"end":{"line":806,"column":2}}]},"122":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":6},"end":{"line":813,"column":6}},{"start":{"line":813,"column":6},"end":{"line":813,"column":6}}]},"123":{"line":831,"type":"if","locations":[{"start":{"line":831,"column":2},"end":{"line":831,"column":2}},{"start":{"line":831,"column":2},"end":{"line":831,"column":2}}]},"124":{"line":832,"type":"binary-expr","locations":[{"start":{"line":832,"column":12},"end":{"line":832,"column":19}},{"start":{"line":832,"column":23},"end":{"line":832,"column":25}}]},"125":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":2},"end":{"line":844,"column":2}},{"start":{"line":844,"column":2},"end":{"line":844,"column":2}}]},"126":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":4},"end":{"line":846,"column":4}},{"start":{"line":846,"column":4},"end":{"line":846,"column":4}}]},"127":{"line":846,"type":"binary-expr","locations":[{"start":{"line":846,"column":7},"end":{"line":846,"column":24}},{"start":{"line":846,"column":28},"end":{"line":846,"column":59}}]},"128":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":4},"end":{"line":847,"column":4}},{"start":{"line":847,"column":4},"end":{"line":847,"column":4}}]},"129":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":4},"end":{"line":848,"column":4}},{"start":{"line":848,"column":4},"end":{"line":848,"column":4}}]},"130":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":6},"end":{"line":862,"column":6}},{"start":{"line":862,"column":6},"end":{"line":862,"column":6}}]},"131":{"line":862,"type":"binary-expr","locations":[{"start":{"line":862,"column":9},"end":{"line":862,"column":26}},{"start":{"line":862,"column":30},"end":{"line":862,"column":61}}]},"132":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":6},"end":{"line":863,"column":6}},{"start":{"line":863,"column":6},"end":{"line":863,"column":6}}]},"133":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":6},"end":{"line":864,"column":6}},{"start":{"line":864,"column":6},"end":{"line":864,"column":6}}]},"134":{"line":881,"type":"if","locations":[{"start":{"line":881,"column":2},"end":{"line":881,"column":2}},{"start":{"line":881,"column":2},"end":{"line":881,"column":2}}]},"135":{"line":882,"type":"binary-expr","locations":[{"start":{"line":882,"column":12},"end":{"line":882,"column":19}},{"start":{"line":882,"column":23},"end":{"line":882,"column":25}}]},"136":{"line":893,"type":"if","locations":[{"start":{"line":893,"column":2},"end":{"line":893,"column":2}},{"start":{"line":893,"column":2},"end":{"line":893,"column":2}}]},"137":{"line":895,"type":"if","locations":[{"start":{"line":895,"column":4},"end":{"line":895,"column":4}},{"start":{"line":895,"column":4},"end":{"line":895,"column":4}}]},"138":{"line":895,"type":"binary-expr","locations":[{"start":{"line":895,"column":7},"end":{"line":895,"column":24}},{"start":{"line":895,"column":28},"end":{"line":895,"column":59}}]},"139":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":4},"end":{"line":896,"column":4}},{"start":{"line":896,"column":4},"end":{"line":896,"column":4}}]},"140":{"line":897,"type":"if","locations":[{"start":{"line":897,"column":4},"end":{"line":897,"column":4}},{"start":{"line":897,"column":4},"end":{"line":897,"column":4}}]},"141":{"line":898,"type":"cond-expr","locations":[{"start":{"line":898,"column":47},"end":{"line":898,"column":51}},{"start":{"line":898,"column":54},"end":{"line":898,"column":59}}]},"142":{"line":906,"type":"if","locations":[{"start":{"line":906,"column":6},"end":{"line":906,"column":6}},{"start":{"line":906,"column":6},"end":{"line":906,"column":6}}]},"143":{"line":906,"type":"binary-expr","locations":[{"start":{"line":906,"column":9},"end":{"line":906,"column":26}},{"start":{"line":906,"column":30},"end":{"line":906,"column":61}}]},"144":{"line":907,"type":"if","locations":[{"start":{"line":907,"column":6},"end":{"line":907,"column":6}},{"start":{"line":907,"column":6},"end":{"line":907,"column":6}}]},"145":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":6},"end":{"line":908,"column":6}},{"start":{"line":908,"column":6},"end":{"line":908,"column":6}}]},"146":{"line":925,"type":"if","locations":[{"start":{"line":925,"column":4},"end":{"line":925,"column":4}},{"start":{"line":925,"column":4},"end":{"line":925,"column":4}}]},"147":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":2},"end":{"line":949,"column":2}},{"start":{"line":949,"column":2},"end":{"line":949,"column":2}}]},"148":{"line":953,"type":"if","locations":[{"start":{"line":953,"column":6},"end":{"line":953,"column":6}},{"start":{"line":953,"column":6},"end":{"line":953,"column":6}}]},"149":{"line":972,"type":"if","locations":[{"start":{"line":972,"column":2},"end":{"line":972,"column":2}},{"start":{"line":972,"column":2},"end":{"line":972,"column":2}}]},"150":{"line":973,"type":"binary-expr","locations":[{"start":{"line":973,"column":12},"end":{"line":973,"column":19}},{"start":{"line":973,"column":23},"end":{"line":973,"column":25}}]},"151":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":2},"end":{"line":976,"column":2}},{"start":{"line":976,"column":2},"end":{"line":976,"column":2}}]},"152":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":4},"end":{"line":978,"column":4}},{"start":{"line":978,"column":4},"end":{"line":978,"column":4}}]},"153":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":6},"end":{"line":984,"column":6}},{"start":{"line":984,"column":6},"end":{"line":984,"column":6}}]},"154":{"line":984,"type":"binary-expr","locations":[{"start":{"line":984,"column":9},"end":{"line":984,"column":26}},{"start":{"line":984,"column":30},"end":{"line":984,"column":61}}]},"155":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":6},"end":{"line":985,"column":6}},{"start":{"line":985,"column":6},"end":{"line":985,"column":6}}]},"156":{"line":994,"type":"if","locations":[{"start":{"line":994,"column":6},"end":{"line":994,"column":6}},{"start":{"line":994,"column":6},"end":{"line":994,"column":6}}]},"157":{"line":994,"type":"binary-expr","locations":[{"start":{"line":994,"column":9},"end":{"line":994,"column":26}},{"start":{"line":994,"column":30},"end":{"line":994,"column":61}}]},"158":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":6},"end":{"line":995,"column":6}},{"start":{"line":995,"column":6},"end":{"line":995,"column":6}}]},"159":{"line":1029,"type":"if","locations":[{"start":{"line":1029,"column":2},"end":{"line":1029,"column":2}},{"start":{"line":1029,"column":2},"end":{"line":1029,"column":2}}]},"160":{"line":1030,"type":"cond-expr","locations":[{"start":{"line":1030,"column":26},"end":{"line":1030,"column":44}},{"start":{"line":1030,"column":47},"end":{"line":1030,"column":49}}]},"161":{"line":1030,"type":"binary-expr","locations":[{"start":{"line":1030,"column":26},"end":{"line":1030,"column":38}},{"start":{"line":1030,"column":42},"end":{"line":1030,"column":44}}]},"162":{"line":1031,"type":"cond-expr","locations":[{"start":{"line":1031,"column":45},"end":{"line":1031,"column":52}},{"start":{"line":1031,"column":55},"end":{"line":1031,"column":63}}]},"163":{"line":1032,"type":"cond-expr","locations":[{"start":{"line":1032,"column":30},"end":{"line":1032,"column":32}},{"start":{"line":1032,"column":35},"end":{"line":1032,"column":42}}]},"164":{"line":1037,"type":"if","locations":[{"start":{"line":1037,"column":2},"end":{"line":1037,"column":2}},{"start":{"line":1037,"column":2},"end":{"line":1037,"column":2}}]},"165":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":6},"end":{"line":1041,"column":6}},{"start":{"line":1041,"column":6},"end":{"line":1041,"column":6}}]},"166":{"line":1051,"type":"if","locations":[{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}},{"start":{"line":1051,"column":2},"end":{"line":1051,"column":2}}]},"167":{"line":1051,"type":"binary-expr","locations":[{"start":{"line":1051,"column":5},"end":{"line":1051,"column":30}},{"start":{"line":1051,"column":34},"end":{"line":1051,"column":63}}]},"168":{"line":1059,"type":"if","locations":[{"start":{"line":1059,"column":2},"end":{"line":1059,"column":2}},{"start":{"line":1059,"column":2},"end":{"line":1059,"column":2}}]},"169":{"line":1059,"type":"binary-expr","locations":[{"start":{"line":1059,"column":5},"end":{"line":1059,"column":22}},{"start":{"line":1059,"column":26},"end":{"line":1059,"column":57}}]},"170":{"line":1063,"type":"if","locations":[{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}},{"start":{"line":1063,"column":4},"end":{"line":1063,"column":4}}]},"171":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}},{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}}]},"172":{"line":1070,"type":"binary-expr","locations":[{"start":{"line":1070,"column":7},"end":{"line":1070,"column":22}},{"start":{"line":1070,"column":26},"end":{"line":1070,"column":43}},{"start":{"line":1070,"column":47},"end":{"line":1070,"column":62}}]},"173":{"line":1080,"type":"if","locations":[{"start":{"line":1080,"column":6},"end":{"line":1080,"column":6}},{"start":{"line":1080,"column":6},"end":{"line":1080,"column":6}}]},"174":{"line":1081,"type":"if","locations":[{"start":{"line":1081,"column":6},"end":{"line":1081,"column":6}},{"start":{"line":1081,"column":6},"end":{"line":1081,"column":6}}]},"175":{"line":1082,"type":"if","locations":[{"start":{"line":1082,"column":6},"end":{"line":1082,"column":6}},{"start":{"line":1082,"column":6},"end":{"line":1082,"column":6}}]},"176":{"line":1083,"type":"if","locations":[{"start":{"line":1083,"column":6},"end":{"line":1083,"column":6}},{"start":{"line":1083,"column":6},"end":{"line":1083,"column":6}}]},"177":{"line":1115,"type":"if","locations":[{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}},{"start":{"line":1115,"column":2},"end":{"line":1115,"column":2}}]},"178":{"line":1116,"type":"binary-expr","locations":[{"start":{"line":1116,"column":12},"end":{"line":1116,"column":19}},{"start":{"line":1116,"column":23},"end":{"line":1116,"column":25}}]},"179":{"line":1119,"type":"if","locations":[{"start":{"line":1119,"column":2},"end":{"line":1119,"column":2}},{"start":{"line":1119,"column":2},"end":{"line":1119,"column":2}}]},"180":{"line":1124,"type":"if","locations":[{"start":{"line":1124,"column":6},"end":{"line":1124,"column":6}},{"start":{"line":1124,"column":6},"end":{"line":1124,"column":6}}]},"181":{"line":1138,"type":"if","locations":[{"start":{"line":1138,"column":2},"end":{"line":1138,"column":2}},{"start":{"line":1138,"column":2},"end":{"line":1138,"column":2}}]},"182":{"line":1138,"type":"binary-expr","locations":[{"start":{"line":1138,"column":5},"end":{"line":1138,"column":22}},{"start":{"line":1138,"column":26},"end":{"line":1138,"column":57}}]},"183":{"line":1145,"type":"if","locations":[{"start":{"line":1145,"column":4},"end":{"line":1145,"column":4}},{"start":{"line":1145,"column":4},"end":{"line":1145,"column":4}}]},"184":{"line":1145,"type":"binary-expr","locations":[{"start":{"line":1145,"column":7},"end":{"line":1145,"column":18}},{"start":{"line":1145,"column":22},"end":{"line":1145,"column":36}}]},"185":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":4},"end":{"line":1147,"column":4}},{"start":{"line":1147,"column":4},"end":{"line":1147,"column":4}}]},"186":{"line":1147,"type":"binary-expr","locations":[{"start":{"line":1147,"column":7},"end":{"line":1147,"column":31}},{"start":{"line":1147,"column":35},"end":{"line":1147,"column":64}}]},"187":{"line":1150,"type":"if","locations":[{"start":{"line":1150,"column":6},"end":{"line":1150,"column":6}},{"start":{"line":1150,"column":6},"end":{"line":1150,"column":6}}]},"188":{"line":1158,"type":"if","locations":[{"start":{"line":1158,"column":2},"end":{"line":1158,"column":2}},{"start":{"line":1158,"column":2},"end":{"line":1158,"column":2}}]},"189":{"line":1176,"type":"binary-expr","locations":[{"start":{"line":1176,"column":12},"end":{"line":1176,"column":19}},{"start":{"line":1176,"column":23},"end":{"line":1176,"column":25}}]},"190":{"line":1182,"type":"if","locations":[{"start":{"line":1182,"column":2},"end":{"line":1182,"column":2}},{"start":{"line":1182,"column":2},"end":{"line":1182,"column":2}}]},"191":{"line":1182,"type":"binary-expr","locations":[{"start":{"line":1182,"column":5},"end":{"line":1182,"column":27}},{"start":{"line":1182,"column":31},"end":{"line":1182,"column":76}}]},"192":{"line":1187,"type":"if","locations":[{"start":{"line":1187,"column":2},"end":{"line":1187,"column":2}},{"start":{"line":1187,"column":2},"end":{"line":1187,"column":2}}]},"193":{"line":1187,"type":"binary-expr","locations":[{"start":{"line":1187,"column":5},"end":{"line":1187,"column":36}},{"start":{"line":1187,"column":40},"end":{"line":1187,"column":72}}]},"194":{"line":1198,"type":"if","locations":[{"start":{"line":1198,"column":2},"end":{"line":1198,"column":2}},{"start":{"line":1198,"column":2},"end":{"line":1198,"column":2}}]},"195":{"line":1198,"type":"binary-expr","locations":[{"start":{"line":1198,"column":5},"end":{"line":1198,"column":36}},{"start":{"line":1198,"column":40},"end":{"line":1198,"column":72}}]},"196":{"line":1212,"type":"if","locations":[{"start":{"line":1212,"column":2},"end":{"line":1212,"column":2}},{"start":{"line":1212,"column":2},"end":{"line":1212,"column":2}}]},"197":{"line":1212,"type":"binary-expr","locations":[{"start":{"line":1212,"column":5},"end":{"line":1212,"column":32}},{"start":{"line":1213,"column":7},"end":{"line":1213,"column":23}},{"start":{"line":1213,"column":27},"end":{"line":1213,"column":54}}]},"198":{"line":1219,"type":"if","locations":[{"start":{"line":1219,"column":2},"end":{"line":1219,"column":2}},{"start":{"line":1219,"column":2},"end":{"line":1219,"column":2}}]},"199":{"line":1225,"type":"if","locations":[{"start":{"line":1225,"column":2},"end":{"line":1225,"column":2}},{"start":{"line":1225,"column":2},"end":{"line":1225,"column":2}}]},"200":{"line":1230,"type":"cond-expr","locations":[{"start":{"line":1230,"column":48},"end":{"line":1230,"column":66}},{"start":{"line":1230,"column":69},"end":{"line":1230,"column":71}}]},"201":{"line":1231,"type":"cond-expr","locations":[{"start":{"line":1231,"column":45},"end":{"line":1231,"column":58}},{"start":{"line":1231,"column":61},"end":{"line":1231,"column":63}}]},"202":{"line":1232,"type":"cond-expr","locations":[{"start":{"line":1232,"column":57},"end":{"line":1232,"column":74}},{"start":{"line":1232,"column":77},"end":{"line":1232,"column":81}}]},"203":{"line":1235,"type":"if","locations":[{"start":{"line":1235,"column":2},"end":{"line":1235,"column":2}},{"start":{"line":1235,"column":2},"end":{"line":1235,"column":2}}]},"204":{"line":1241,"type":"if","locations":[{"start":{"line":1241,"column":2},"end":{"line":1241,"column":2}},{"start":{"line":1241,"column":2},"end":{"line":1241,"column":2}}]},"205":{"line":1244,"type":"if","locations":[{"start":{"line":1244,"column":2},"end":{"line":1244,"column":2}},{"start":{"line":1244,"column":2},"end":{"line":1244,"column":2}}]},"206":{"line":1247,"type":"if","locations":[{"start":{"line":1247,"column":2},"end":{"line":1247,"column":2}},{"start":{"line":1247,"column":2},"end":{"line":1247,"column":2}}]},"207":{"line":1247,"type":"binary-expr","locations":[{"start":{"line":1247,"column":6},"end":{"line":1247,"column":48}},{"start":{"line":1247,"column":52},"end":{"line":1247,"column":77}},{"start":{"line":1247,"column":82},"end":{"line":1247,"column":111}}]},"208":{"line":1249,"type":"if","locations":[{"start":{"line":1249,"column":9},"end":{"line":1249,"column":9}},{"start":{"line":1249,"column":9},"end":{"line":1249,"column":9}}]},"209":{"line":1271,"type":"if","locations":[{"start":{"line":1271,"column":2},"end":{"line":1271,"column":2}},{"start":{"line":1271,"column":2},"end":{"line":1271,"column":2}}]},"210":{"line":1280,"type":"if","locations":[{"start":{"line":1280,"column":4},"end":{"line":1280,"column":4}},{"start":{"line":1280,"column":4},"end":{"line":1280,"column":4}}]},"211":{"line":1280,"type":"binary-expr","locations":[{"start":{"line":1280,"column":7},"end":{"line":1280,"column":10}},{"start":{"line":1280,"column":14},"end":{"line":1280,"column":25}},{"start":{"line":1280,"column":29},"end":{"line":1280,"column":50}}]},"212":{"line":1281,"type":"if","locations":[{"start":{"line":1281,"column":4},"end":{"line":1281,"column":4}},{"start":{"line":1281,"column":4},"end":{"line":1281,"column":4}}]},"213":{"line":1282,"type":"cond-expr","locations":[{"start":{"line":1282,"column":42},"end":{"line":1282,"column":57}},{"start":{"line":1282,"column":60},"end":{"line":1282,"column":64}}]},"214":{"line":1283,"type":"cond-expr","locations":[{"start":{"line":1283,"column":20},"end":{"line":1283,"column":47}},{"start":{"line":1283,"column":50},"end":{"line":1283,"column":54}}]},"215":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}},{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}}]},"216":{"line":1289,"type":"binary-expr","locations":[{"start":{"line":1289,"column":5},"end":{"line":1289,"column":22}},{"start":{"line":1289,"column":26},"end":{"line":1289,"column":57}}]},"217":{"line":1293,"type":"if","locations":[{"start":{"line":1293,"column":4},"end":{"line":1293,"column":4}},{"start":{"line":1293,"column":4},"end":{"line":1293,"column":4}}]},"218":{"line":1293,"type":"binary-expr","locations":[{"start":{"line":1293,"column":7},"end":{"line":1293,"column":10}},{"start":{"line":1293,"column":14},"end":{"line":1293,"column":31}}]},"219":{"line":1302,"type":"cond-expr","locations":[{"start":{"line":1302,"column":32},"end":{"line":1302,"column":55}},{"start":{"line":1302,"column":58},"end":{"line":1302,"column":62}}]},"220":{"line":1310,"type":"if","locations":[{"start":{"line":1310,"column":8},"end":{"line":1310,"column":8}},{"start":{"line":1310,"column":8},"end":{"line":1310,"column":8}}]},"221":{"line":1314,"type":"if","locations":[{"start":{"line":1314,"column":10},"end":{"line":1314,"column":10}},{"start":{"line":1314,"column":10},"end":{"line":1314,"column":10}}]},"222":{"line":1320,"type":"if","locations":[{"start":{"line":1320,"column":12},"end":{"line":1320,"column":12}},{"start":{"line":1320,"column":12},"end":{"line":1320,"column":12}}]},"223":{"line":1320,"type":"binary-expr","locations":[{"start":{"line":1320,"column":15},"end":{"line":1320,"column":25}},{"start":{"line":1320,"column":29},"end":{"line":1320,"column":32}}]},"224":{"line":1321,"type":"if","locations":[{"start":{"line":1321,"column":12},"end":{"line":1321,"column":12}},{"start":{"line":1321,"column":12},"end":{"line":1321,"column":12}}]},"225":{"line":1330,"type":"if","locations":[{"start":{"line":1330,"column":4},"end":{"line":1330,"column":4}},{"start":{"line":1330,"column":4},"end":{"line":1330,"column":4}}]},"226":{"line":1354,"type":"if","locations":[{"start":{"line":1354,"column":2},"end":{"line":1354,"column":2}},{"start":{"line":1354,"column":2},"end":{"line":1354,"column":2}}]},"227":{"line":1355,"type":"cond-expr","locations":[{"start":{"line":1355,"column":26},"end":{"line":1355,"column":44}},{"start":{"line":1355,"column":47},"end":{"line":1355,"column":49}}]},"228":{"line":1355,"type":"binary-expr","locations":[{"start":{"line":1355,"column":26},"end":{"line":1355,"column":38}},{"start":{"line":1355,"column":42},"end":{"line":1355,"column":44}}]},"229":{"line":1358,"type":"if","locations":[{"start":{"line":1358,"column":2},"end":{"line":1358,"column":2}},{"start":{"line":1358,"column":2},"end":{"line":1358,"column":2}}]},"230":{"line":1363,"type":"if","locations":[{"start":{"line":1363,"column":6},"end":{"line":1363,"column":6}},{"start":{"line":1363,"column":6},"end":{"line":1363,"column":6}}]},"231":{"line":1372,"type":"if","locations":[{"start":{"line":1372,"column":2},"end":{"line":1372,"column":2}},{"start":{"line":1372,"column":2},"end":{"line":1372,"column":2}}]},"232":{"line":1374,"type":"if","locations":[{"start":{"line":1374,"column":2},"end":{"line":1374,"column":2}},{"start":{"line":1374,"column":2},"end":{"line":1374,"column":2}}]},"233":{"line":1374,"type":"binary-expr","locations":[{"start":{"line":1374,"column":5},"end":{"line":1374,"column":22}},{"start":{"line":1374,"column":26},"end":{"line":1374,"column":57}}]},"234":{"line":1377,"type":"if","locations":[{"start":{"line":1377,"column":2},"end":{"line":1377,"column":2}},{"start":{"line":1377,"column":2},"end":{"line":1377,"column":2}}]},"235":{"line":1380,"type":"cond-expr","locations":[{"start":{"line":1380,"column":57},"end":{"line":1380,"column":74}},{"start":{"line":1380,"column":77},"end":{"line":1380,"column":81}}]},"236":{"line":1383,"type":"if","locations":[{"start":{"line":1383,"column":2},"end":{"line":1383,"column":2}},{"start":{"line":1383,"column":2},"end":{"line":1383,"column":2}}]},"237":{"line":1398,"type":"if","locations":[{"start":{"line":1398,"column":4},"end":{"line":1398,"column":4}},{"start":{"line":1398,"column":4},"end":{"line":1398,"column":4}}]},"238":{"line":1398,"type":"binary-expr","locations":[{"start":{"line":1398,"column":7},"end":{"line":1398,"column":10}},{"start":{"line":1398,"column":14},"end":{"line":1398,"column":21}},{"start":{"line":1398,"column":25},"end":{"line":1398,"column":46}}]},"239":{"line":1399,"type":"if","locations":[{"start":{"line":1399,"column":4},"end":{"line":1399,"column":4}},{"start":{"line":1399,"column":4},"end":{"line":1399,"column":4}}]},"240":{"line":1400,"type":"cond-expr","locations":[{"start":{"line":1400,"column":47},"end":{"line":1400,"column":51}},{"start":{"line":1400,"column":54},"end":{"line":1400,"column":59}}]},"241":{"line":1407,"type":"if","locations":[{"start":{"line":1407,"column":4},"end":{"line":1407,"column":4}},{"start":{"line":1407,"column":4},"end":{"line":1407,"column":4}}]},"242":{"line":1407,"type":"binary-expr","locations":[{"start":{"line":1407,"column":7},"end":{"line":1407,"column":10}},{"start":{"line":1407,"column":14},"end":{"line":1407,"column":31}}]},"243":{"line":1410,"type":"cond-expr","locations":[{"start":{"line":1410,"column":32},"end":{"line":1410,"column":55}},{"start":{"line":1410,"column":58},"end":{"line":1410,"column":62}}]},"244":{"line":1417,"type":"if","locations":[{"start":{"line":1417,"column":8},"end":{"line":1417,"column":8}},{"start":{"line":1417,"column":8},"end":{"line":1417,"column":8}}]},"245":{"line":1426,"type":"if","locations":[{"start":{"line":1426,"column":4},"end":{"line":1426,"column":4}},{"start":{"line":1426,"column":4},"end":{"line":1426,"column":4}}]},"246":{"line":1449,"type":"if","locations":[{"start":{"line":1449,"column":2},"end":{"line":1449,"column":2}},{"start":{"line":1449,"column":2},"end":{"line":1449,"column":2}}]},"247":{"line":1450,"type":"cond-expr","locations":[{"start":{"line":1450,"column":26},"end":{"line":1450,"column":44}},{"start":{"line":1450,"column":47},"end":{"line":1450,"column":49}}]},"248":{"line":1450,"type":"binary-expr","locations":[{"start":{"line":1450,"column":26},"end":{"line":1450,"column":38}},{"start":{"line":1450,"column":42},"end":{"line":1450,"column":44}}]},"249":{"line":1453,"type":"if","locations":[{"start":{"line":1453,"column":2},"end":{"line":1453,"column":2}},{"start":{"line":1453,"column":2},"end":{"line":1453,"column":2}}]},"250":{"line":1458,"type":"if","locations":[{"start":{"line":1458,"column":6},"end":{"line":1458,"column":6}},{"start":{"line":1458,"column":6},"end":{"line":1458,"column":6}}]},"251":{"line":1466,"type":"if","locations":[{"start":{"line":1466,"column":2},"end":{"line":1466,"column":2}},{"start":{"line":1466,"column":2},"end":{"line":1466,"column":2}}]},"252":{"line":1466,"type":"binary-expr","locations":[{"start":{"line":1466,"column":5},"end":{"line":1466,"column":22}},{"start":{"line":1466,"column":26},"end":{"line":1466,"column":57}}]},"253":{"line":1470,"type":"cond-expr","locations":[{"start":{"line":1470,"column":32},"end":{"line":1470,"column":46}},{"start":{"line":1470,"column":49},"end":{"line":1470,"column":66}}]},"254":{"line":1471,"type":"cond-expr","locations":[{"start":{"line":1471,"column":29},"end":{"line":1471,"column":44}},{"start":{"line":1471,"column":47},"end":{"line":1471,"column":53}}]},"255":{"line":1472,"type":"cond-expr","locations":[{"start":{"line":1472,"column":28},"end":{"line":1472,"column":42}},{"start":{"line":1472,"column":45},"end":{"line":1472,"column":51}}]},"256":{"line":1473,"type":"cond-expr","locations":[{"start":{"line":1473,"column":32},"end":{"line":1473,"column":50}},{"start":{"line":1473,"column":53},"end":{"line":1473,"column":59}}]},"257":{"line":1477,"type":"if","locations":[{"start":{"line":1477,"column":4},"end":{"line":1477,"column":4}},{"start":{"line":1477,"column":4},"end":{"line":1477,"column":4}}]},"258":{"line":1486,"type":"binary-expr","locations":[{"start":{"line":1486,"column":22},"end":{"line":1486,"column":43}},{"start":{"line":1486,"column":47},"end":{"line":1486,"column":49}}]},"259":{"line":1490,"type":"if","locations":[{"start":{"line":1490,"column":2},"end":{"line":1490,"column":2}},{"start":{"line":1490,"column":2},"end":{"line":1490,"column":2}}]},"260":{"line":1492,"type":"if","locations":[{"start":{"line":1492,"column":6},"end":{"line":1492,"column":6}},{"start":{"line":1492,"column":6},"end":{"line":1492,"column":6}}]},"261":{"line":1495,"type":"if","locations":[{"start":{"line":1495,"column":9},"end":{"line":1495,"column":9}},{"start":{"line":1495,"column":9},"end":{"line":1495,"column":9}}]},"262":{"line":1497,"type":"if","locations":[{"start":{"line":1497,"column":6},"end":{"line":1497,"column":6}},{"start":{"line":1497,"column":6},"end":{"line":1497,"column":6}}]},"263":{"line":1500,"type":"if","locations":[{"start":{"line":1500,"column":9},"end":{"line":1500,"column":9}},{"start":{"line":1500,"column":9},"end":{"line":1500,"column":9}}]},"264":{"line":1502,"type":"if","locations":[{"start":{"line":1502,"column":6},"end":{"line":1502,"column":6}},{"start":{"line":1502,"column":6},"end":{"line":1502,"column":6}}]},"265":{"line":1505,"type":"if","locations":[{"start":{"line":1505,"column":9},"end":{"line":1505,"column":9}},{"start":{"line":1505,"column":9},"end":{"line":1505,"column":9}}]},"266":{"line":1507,"type":"if","locations":[{"start":{"line":1507,"column":6},"end":{"line":1507,"column":6}},{"start":{"line":1507,"column":6},"end":{"line":1507,"column":6}}]},"267":{"line":1510,"type":"if","locations":[{"start":{"line":1510,"column":9},"end":{"line":1510,"column":9}},{"start":{"line":1510,"column":9},"end":{"line":1510,"column":9}}]},"268":{"line":1511,"type":"if","locations":[{"start":{"line":1511,"column":4},"end":{"line":1511,"column":4}},{"start":{"line":1511,"column":4},"end":{"line":1511,"column":4}}]},"269":{"line":1513,"type":"if","locations":[{"start":{"line":1513,"column":8},"end":{"line":1513,"column":8}},{"start":{"line":1513,"column":8},"end":{"line":1513,"column":8}}]},"270":{"line":1518,"type":"if","locations":[{"start":{"line":1518,"column":8},"end":{"line":1518,"column":8}},{"start":{"line":1518,"column":8},"end":{"line":1518,"column":8}}]},"271":{"line":1522,"type":"if","locations":[{"start":{"line":1522,"column":9},"end":{"line":1522,"column":9}},{"start":{"line":1522,"column":9},"end":{"line":1522,"column":9}}]},"272":{"line":1524,"type":"if","locations":[{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}},{"start":{"line":1524,"column":6},"end":{"line":1524,"column":6}}]},"273":{"line":1543,"type":"if","locations":[{"start":{"line":1543,"column":2},"end":{"line":1543,"column":2}},{"start":{"line":1543,"column":2},"end":{"line":1543,"column":2}}]},"274":{"line":1549,"type":"if","locations":[{"start":{"line":1549,"column":2},"end":{"line":1549,"column":2}},{"start":{"line":1549,"column":2},"end":{"line":1549,"column":2}}]},"275":{"line":1551,"type":"if","locations":[{"start":{"line":1551,"column":9},"end":{"line":1551,"column":9}},{"start":{"line":1551,"column":9},"end":{"line":1551,"column":9}}]},"276":{"line":1551,"type":"binary-expr","locations":[{"start":{"line":1551,"column":12},"end":{"line":1551,"column":45}},{"start":{"line":1552,"column":7},"end":{"line":1552,"column":41}},{"start":{"line":1553,"column":7},"end":{"line":1553,"column":44}},{"start":{"line":1554,"column":7},"end":{"line":1554,"column":46}},{"start":{"line":1555,"column":7},"end":{"line":1555,"column":45}},{"start":{"line":1556,"column":7},"end":{"line":1556,"column":39}}]},"277":{"line":1561,"type":"if","locations":[{"start":{"line":1561,"column":2},"end":{"line":1561,"column":2}},{"start":{"line":1561,"column":2},"end":{"line":1561,"column":2}}]},"278":{"line":1563,"type":"if","locations":[{"start":{"line":1563,"column":4},"end":{"line":1563,"column":4}},{"start":{"line":1563,"column":4},"end":{"line":1563,"column":4}}]},"279":{"line":1563,"type":"binary-expr","locations":[{"start":{"line":1563,"column":7},"end":{"line":1563,"column":10}},{"start":{"line":1563,"column":14},"end":{"line":1563,"column":25}},{"start":{"line":1563,"column":29},"end":{"line":1563,"column":67}}]},"280":{"line":1565,"type":"if","locations":[{"start":{"line":1565,"column":4},"end":{"line":1565,"column":4}},{"start":{"line":1565,"column":4},"end":{"line":1565,"column":4}}]},"281":{"line":1573,"type":"if","locations":[{"start":{"line":1573,"column":6},"end":{"line":1573,"column":6}},{"start":{"line":1573,"column":6},"end":{"line":1573,"column":6}}]},"282":{"line":1573,"type":"binary-expr","locations":[{"start":{"line":1573,"column":9},"end":{"line":1573,"column":12}},{"start":{"line":1573,"column":16},"end":{"line":1573,"column":27}},{"start":{"line":1573,"column":31},"end":{"line":1573,"column":69}}]},"283":{"line":1575,"type":"if","locations":[{"start":{"line":1575,"column":6},"end":{"line":1575,"column":6}},{"start":{"line":1575,"column":6},"end":{"line":1575,"column":6}}]},"284":{"line":1593,"type":"if","locations":[{"start":{"line":1593,"column":2},"end":{"line":1593,"column":2}},{"start":{"line":1593,"column":2},"end":{"line":1593,"column":2}}]},"285":{"line":1594,"type":"binary-expr","locations":[{"start":{"line":1594,"column":12},"end":{"line":1594,"column":19}},{"start":{"line":1594,"column":23},"end":{"line":1594,"column":25}}]},"286":{"line":1597,"type":"cond-expr","locations":[{"start":{"line":1597,"column":35},"end":{"line":1597,"column":52}},{"start":{"line":1597,"column":55},"end":{"line":1597,"column":74}}]},"287":{"line":1598,"type":"cond-expr","locations":[{"start":{"line":1598,"column":28},"end":{"line":1598,"column":42}},{"start":{"line":1598,"column":45},"end":{"line":1598,"column":51}}]},"288":{"line":1601,"type":"if","locations":[{"start":{"line":1601,"column":2},"end":{"line":1601,"column":2}},{"start":{"line":1601,"column":2},"end":{"line":1601,"column":2}}]},"289":{"line":1603,"type":"if","locations":[{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}},{"start":{"line":1603,"column":6},"end":{"line":1603,"column":6}}]},"290":{"line":1611,"type":"if","locations":[{"start":{"line":1611,"column":6},"end":{"line":1611,"column":6}},{"start":{"line":1611,"column":6},"end":{"line":1611,"column":6}}]},"291":{"line":1631,"type":"if","locations":[{"start":{"line":1631,"column":2},"end":{"line":1631,"column":2}},{"start":{"line":1631,"column":2},"end":{"line":1631,"column":2}}]},"292":{"line":1632,"type":"binary-expr","locations":[{"start":{"line":1632,"column":12},"end":{"line":1632,"column":19}},{"start":{"line":1632,"column":23},"end":{"line":1632,"column":25}}]},"293":{"line":1635,"type":"if","locations":[{"start":{"line":1635,"column":2},"end":{"line":1635,"column":2}},{"start":{"line":1635,"column":2},"end":{"line":1635,"column":2}}]},"294":{"line":1640,"type":"if","locations":[{"start":{"line":1640,"column":6},"end":{"line":1640,"column":6}},{"start":{"line":1640,"column":6},"end":{"line":1640,"column":6}}]},"295":{"line":1648,"type":"cond-expr","locations":[{"start":{"line":1648,"column":39},"end":{"line":1648,"column":44}},{"start":{"line":1648,"column":47},"end":{"line":1648,"column":62}}]},"296":{"line":1651,"type":"if","locations":[{"start":{"line":1651,"column":2},"end":{"line":1651,"column":2}},{"start":{"line":1651,"column":2},"end":{"line":1651,"column":2}}]},"297":{"line":1651,"type":"binary-expr","locations":[{"start":{"line":1651,"column":5},"end":{"line":1651,"column":22}},{"start":{"line":1651,"column":26},"end":{"line":1651,"column":57}}]},"298":{"line":1671,"type":"if","locations":[{"start":{"line":1671,"column":4},"end":{"line":1671,"column":4}},{"start":{"line":1671,"column":4},"end":{"line":1671,"column":4}}]},"299":{"line":1672,"type":"if","locations":[{"start":{"line":1672,"column":4},"end":{"line":1672,"column":4}},{"start":{"line":1672,"column":4},"end":{"line":1672,"column":4}}]},"300":{"line":1673,"type":"if","locations":[{"start":{"line":1673,"column":4},"end":{"line":1673,"column":4}},{"start":{"line":1673,"column":4},"end":{"line":1673,"column":4}}]},"301":{"line":1685,"type":"cond-expr","locations":[{"start":{"line":1685,"column":52},"end":{"line":1685,"column":64}},{"start":{"line":1685,"column":67},"end":{"line":1685,"column":87}}]},"302":{"line":1691,"type":"cond-expr","locations":[{"start":{"line":1691,"column":69},"end":{"line":1691,"column":74}},{"start":{"line":1691,"column":77},"end":{"line":1691,"column":84}}]},"303":{"line":1691,"type":"binary-expr","locations":[{"start":{"line":1691,"column":20},"end":{"line":1691,"column":35}},{"start":{"line":1691,"column":39},"end":{"line":1691,"column":66}}]},"304":{"line":1693,"type":"cond-expr","locations":[{"start":{"line":1693,"column":61},"end":{"line":1693,"column":63}},{"start":{"line":1693,"column":66},"end":{"line":1693,"column":73}}]},"305":{"line":1693,"type":"binary-expr","locations":[{"start":{"line":1693,"column":12},"end":{"line":1693,"column":27}},{"start":{"line":1693,"column":31},"end":{"line":1693,"column":58}}]},"306":{"line":1698,"type":"if","locations":[{"start":{"line":1698,"column":4},"end":{"line":1698,"column":4}},{"start":{"line":1698,"column":4},"end":{"line":1698,"column":4}}]},"307":{"line":1703,"type":"if","locations":[{"start":{"line":1703,"column":2},"end":{"line":1703,"column":2}},{"start":{"line":1703,"column":2},"end":{"line":1703,"column":2}}]},"308":{"line":1719,"type":"cond-expr","locations":[{"start":{"line":1719,"column":52},"end":{"line":1719,"column":64}},{"start":{"line":1719,"column":67},"end":{"line":1719,"column":87}}]},"309":{"line":1725,"type":"if","locations":[{"start":{"line":1725,"column":4},"end":{"line":1725,"column":4}},{"start":{"line":1725,"column":4},"end":{"line":1725,"column":4}}]},"310":{"line":1740,"type":"if","locations":[{"start":{"line":1740,"column":2},"end":{"line":1740,"column":2}},{"start":{"line":1740,"column":2},"end":{"line":1740,"column":2}}]},"311":{"line":1740,"type":"binary-expr","locations":[{"start":{"line":1740,"column":5},"end":{"line":1740,"column":25}},{"start":{"line":1740,"column":29},"end":{"line":1740,"column":41}},{"start":{"line":1740,"column":45},"end":{"line":1740,"column":80}}]},"312":{"line":1759,"type":"if","locations":[{"start":{"line":1759,"column":4},"end":{"line":1759,"column":4}},{"start":{"line":1759,"column":4},"end":{"line":1759,"column":4}}]},"313":{"line":1760,"type":"if","locations":[{"start":{"line":1760,"column":4},"end":{"line":1760,"column":4}},{"start":{"line":1760,"column":4},"end":{"line":1760,"column":4}}]},"314":{"line":1768,"type":"if","locations":[{"start":{"line":1768,"column":2},"end":{"line":1768,"column":2}},{"start":{"line":1768,"column":2},"end":{"line":1768,"column":2}}]},"315":{"line":1769,"type":"if","locations":[{"start":{"line":1769,"column":2},"end":{"line":1769,"column":2}},{"start":{"line":1769,"column":2},"end":{"line":1769,"column":2}}]},"316":{"line":1770,"type":"if","locations":[{"start":{"line":1770,"column":2},"end":{"line":1770,"column":2}},{"start":{"line":1770,"column":2},"end":{"line":1770,"column":2}}]},"317":{"line":1774,"type":"if","locations":[{"start":{"line":1774,"column":4},"end":{"line":1774,"column":4}},{"start":{"line":1774,"column":4},"end":{"line":1774,"column":4}}]},"318":{"line":1780,"type":"if","locations":[{"start":{"line":1780,"column":2},"end":{"line":1780,"column":2}},{"start":{"line":1780,"column":2},"end":{"line":1780,"column":2}}]},"319":{"line":1780,"type":"binary-expr","locations":[{"start":{"line":1780,"column":5},"end":{"line":1780,"column":22}},{"start":{"line":1780,"column":26},"end":{"line":1780,"column":43}},{"start":{"line":1780,"column":47},"end":{"line":1780,"column":68}}]},"320":{"line":1782,"type":"if","locations":[{"start":{"line":1782,"column":4},"end":{"line":1782,"column":4}},{"start":{"line":1782,"column":4},"end":{"line":1782,"column":4}}]},"321":{"line":1783,"type":"if","locations":[{"start":{"line":1783,"column":4},"end":{"line":1783,"column":4}},{"start":{"line":1783,"column":4},"end":{"line":1783,"column":4}}]},"322":{"line":1784,"type":"if","locations":[{"start":{"line":1784,"column":4},"end":{"line":1784,"column":4}},{"start":{"line":1784,"column":4},"end":{"line":1784,"column":4}}]},"323":{"line":1785,"type":"if","locations":[{"start":{"line":1785,"column":4},"end":{"line":1785,"column":4}},{"start":{"line":1785,"column":4},"end":{"line":1785,"column":4}}]},"324":{"line":1787,"type":"if","locations":[{"start":{"line":1787,"column":9},"end":{"line":1787,"column":9}},{"start":{"line":1787,"column":9},"end":{"line":1787,"column":9}}]},"325":{"line":1787,"type":"binary-expr","locations":[{"start":{"line":1787,"column":12},"end":{"line":1787,"column":37}},{"start":{"line":1787,"column":41},"end":{"line":1787,"column":66}},{"start":{"line":1787,"column":70},"end":{"line":1787,"column":99}}]},"326":{"line":1797,"type":"if","locations":[{"start":{"line":1797,"column":4},"end":{"line":1797,"column":4}},{"start":{"line":1797,"column":4},"end":{"line":1797,"column":4}}]}},"code":["\"use strict\";","","var EventEmitter = require('events').EventEmitter","  , inherits = require('util').inherits","  , getSingleProperty = require('./utils').getSingleProperty","  , shallowClone = require('./utils').shallowClone","  , parseIndexOptions = require('./utils').parseIndexOptions","  , debugOptions = require('./utils').debugOptions","  , CommandCursor = require('./command_cursor')","  , handleCallback = require('./utils').handleCallback","  , filterOptions = require('./utils').filterOptions","  , toError = require('./utils').toError","  , ReadPreference = require('./read_preference')","  , f = require('util').format","  , Admin = require('./admin')","  , Code = require('mongodb-core').BSON.Code","  , CoreReadPreference = require('mongodb-core').ReadPreference","  , MongoError = require('mongodb-core').MongoError","  , ObjectID = require('mongodb-core').ObjectID","  , Define = require('./metadata')","  , Logger = require('mongodb-core').Logger","  , Collection = require('./collection')","  , crypto = require('crypto')","  , assign = require('./utils').assign;","","var debugFields = ['authSource', 'w', 'wtimeout', 'j', 'native_parser', 'forceServerObjectId'","  , 'serializeFunctions', 'raw', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'bufferMaxEntries', 'numberOfRetries', 'retryMiliSeconds'","  , 'readPreference', 'pkFactory', 'parentDb', 'promiseLibrary', 'noListener'];","","// Filter out any write concern options","var illegalCommandFields = ['w', 'wtimeout', 'j', 'fsync', 'autoIndexId'","  , 'strict', 'serializeFunctions', 'pkFactory', 'raw', 'readPreference'];","","/**"," * @fileOverview The **Db** class is a class that represents a MongoDB Database."," *"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Get an additional db"," *   var testDb = db.db('test');"," *   db.close();"," * });"," */","","// Allowed parameters","var legalOptionNames = ['w', 'wtimeout', 'fsync', 'j', 'readPreference', 'readPreferenceTags', 'native_parser'","  , 'forceServerObjectId', 'pkFactory', 'serializeFunctions', 'raw', 'bufferMaxEntries', 'authSource'","  , 'ignoreUndefined', 'promoteLongs', 'promiseLibrary', 'readConcern', 'retryMiliSeconds', 'numberOfRetries'","  , 'parentDb', 'noListener', 'loggerLevel', 'logger', 'promoteBuffers', 'promoteLongs', 'promoteValues'];","","/**"," * Creates a new Db instance"," * @class"," * @param {string} databaseName The name of the database this instance represents."," * @param {(Server|ReplSet|Mongos)} topology The server topology for the database."," * @param {object} [options=null] Optional settings."," * @param {string} [options.authSource=null] If the database authentication is dependent on another databaseName."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)"," * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)"," * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology."," * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database"," * @property {string} databaseName The name of the database this instance represents."," * @property {object} options The options associated with the db instance."," * @property {boolean} native_parser The current value of the parameter native_parser."," * @property {boolean} slaveOk The current slaveOk value for the db instance."," * @property {object} writeConcern The current write concern values."," * @property {object} topology Access the topology object (single server, replicaset or mongos)."," * @fires Db#close"," * @fires Db#authenticated"," * @fires Db#reconnect"," * @fires Db#error"," * @fires Db#timeout"," * @fires Db#parseError"," * @fires Db#fullsetup"," * @return {Db} a Db instance."," */","var Db = function(databaseName, topology, options) {","  options = options || {};","  if(!(this instanceof Db)) return new Db(databaseName, topology, options);","  EventEmitter.call(this);","  var self = this;","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Filter the options","  options = filterOptions(options, legalOptionNames);","","  // Ensure we put the promiseLib in the options","  options.promiseLibrary = promiseLibrary;","","  // var self = this;  // Internal state of the db object","  this.s = {","    // Database name","      databaseName: databaseName","    // DbCache","    , dbCache: {}","    // Children db's","    , children: []","    // Topology","    , topology: topology","    // Options","    , options: options","    // Logger instance","    , logger: Logger('Db', options)","    // Get the bson parser","    , bson: topology ? topology.bson : null","    // Authsource if any","    , authSource: options.authSource","    // Unpack read preference","    , readPreference: options.readPreference","    // Set buffermaxEntries","    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : -1","    // Parent db (if chained)","    , parentDb: options.parentDb || null","    // Set up the primary key factory or fallback to ObjectID","    , pkFactory: options.pkFactory || ObjectID","    // Get native parser","    , nativeParser: options.nativeParser || options.native_parser","    // Promise library","    , promiseLibrary: promiseLibrary","    // No listener","    , noListener: typeof options.noListener == 'boolean' ? options.noListener : false","    // ReadConcern","    , readConcern: options.readConcern","  }","","  // Ensure we have a valid db name","  validateDatabaseName(self.s.databaseName);","","  // Add a read Only property","  getSingleProperty(this, 'serverConfig', self.s.topology);","  getSingleProperty(this, 'bufferMaxEntries', self.s.bufferMaxEntries);","  getSingleProperty(this, 'databaseName', self.s.databaseName);","","  // This is a child db, do not register any listeners","  if(options.parentDb) return;","  if(this.s.noListener) return;","","  // Add listeners","  topology.on('error', createListener(self, 'error', self));","  topology.on('timeout', createListener(self, 'timeout', self));","  topology.on('close', createListener(self, 'close', self));","  topology.on('parseError', createListener(self, 'parseError', self));","  topology.once('open', createListener(self, 'open', self));","  topology.once('fullsetup', createListener(self, 'fullsetup', self));","  topology.once('all', createListener(self, 'all', self));","  topology.on('reconnect', createListener(self, 'reconnect', self));","}","","inherits(Db, EventEmitter);","","var define = Db.define = new Define('Db', Db, false);","","// Topology","Object.defineProperty(Db.prototype, 'topology', {","  enumerable:true,","  get: function() { return this.s.topology; }","});","","// Options","Object.defineProperty(Db.prototype, 'options', {","  enumerable:true,","  get: function() { return this.s.options; }","});","","// slaveOk specified","Object.defineProperty(Db.prototype, 'slaveOk', {","  enumerable:true,","  get: function() {","    if(this.s.options.readPreference != null","      && (this.s.options.readPreference != 'primary' || this.s.options.readPreference.mode != 'primary')) {","      return true;","    }","    return false;","  }","});","","// get the write Concern","Object.defineProperty(Db.prototype, 'writeConcern', {","  enumerable:true,","  get: function() {","    var ops = {};","    if(this.s.options.w != null) ops.w = this.s.options.w;","    if(this.s.options.j != null) ops.j = this.s.options.j;","    if(this.s.options.fsync != null) ops.fsync = this.s.options.fsync;","    if(this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;","    return ops;","  }","});","","/**"," * The callback format for the Db.open method"," * @callback Db~openCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Db} db The Db instance if the open method was successful."," */","","// Internal method","var open = function(self, callback) {","  self.s.topology.connect(self, self.s.options, function(err) {","    if(callback == null) return;","    var internalCallback = callback;","    callback == null;","","    if(err) {","      self.close();","      return internalCallback(err);","    }","","    internalCallback(null, self);","  });","}","","/**"," * Open the database"," * @method"," * @param {Db~openCallback} [callback] Callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.open = function(callback) {","  var self = this;","  // We provided a callback leg","  if(typeof callback == 'function') return open(self, callback);","  // Return promise","  return new self.s.promiseLibrary(function(resolve, reject) {","    open(self, function(err, db) {","      if(err) return reject(err);","      resolve(db);","    })","  });","}","","define.classMethod('open', {callback: true, promise:true});","","/**"," * Converts provided read preference to CoreReadPreference"," * @param {(ReadPreference|string|object)} readPreference the user provided read preference"," * @return {CoreReadPreference}"," */","var convertReadPreference = function(readPreference) {","  if(readPreference && typeof readPreference == 'string') {","    return new CoreReadPreference(readPreference);","  } else if(readPreference instanceof ReadPreference) {","    return new CoreReadPreference(readPreference.mode, readPreference.tags, {maxStalenessSeconds: readPreference.maxStalenessSeconds});","  } else if(readPreference && typeof readPreference == 'object') {","    var mode = readPreference.mode || readPreference.preference;","    if (mode && typeof mode == 'string') {","      readPreference = new CoreReadPreference(mode, readPreference.tags, {maxStalenessSeconds: readPreference.maxStalenessSeconds});","    }","  }","  return readPreference;","}","","/**"," * The callback format for results"," * @callback Db~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result object if the command was executed successfully."," */","","var executeCommand = function(self, command, options, callback) {","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Get the db name we are executing against","  var dbName = options.dbName || options.authdb || self.s.databaseName;","","  // If we have a readPreference set","  if(options.readPreference == null && self.s.readPreference) {","    options.readPreference = self.s.readPreference;","  }","","  // Convert the readPreference if its not a write","  if(options.readPreference) {","    options.readPreference = convertReadPreference(options.readPreference);","  } else {","    options.readPreference = CoreReadPreference.primary;","  }","","  // Debug information","  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command %s against %s with options [%s]'","    , JSON.stringify(command), f('%s.$cmd', dbName), JSON.stringify(debugOptions(debugFields, options))));","","  // Execute command","  self.s.topology.command(f('%s.$cmd', dbName), command, options, function(err, result) {","    if(err) return handleCallback(callback, err);","    if(options.full) return handleCallback(callback, null, result);","    handleCallback(callback, null, result.result);","  });","}","","/**"," * Execute a command"," * @method"," * @param {object} command The command hash"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.command = function(command, options, callback) {","  var self = this;","  // Change the callback","  if(typeof options == 'function') callback = options, options = {};","  // Clone the options","  options = shallowClone(options);","","  // Do we have a callback","  if(typeof callback == 'function') return executeCommand(self, command, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    executeCommand(self, command, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('command', {callback: true, promise:true});","","/**"," * The callback format for results"," * @callback Db~noResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {null} result Is not set to a value"," */","","/**"," * Close the db and its underlying connections"," * @method"," * @param {boolean} force Force close, emitting no events"," * @param {Db~noResultCallback} [callback] The result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.close = function(force, callback) {","  if(typeof force == 'function') callback = force, force = false;","  this.s.topology.close(force);","  var self = this;","","  // Fire close event if any listeners","  if(this.listeners('close').length > 0) {","    this.emit('close');","","    // If it's the top level db emit close on all children","    if(this.parentDb == null) {","      // Fire close on all children","      for(var i = 0; i < this.s.children.length; i++) {","        this.s.children[i].emit('close');","      }","    }","","    // Remove listeners after emit","    self.removeAllListeners('close');","  }","","  // Close parent db if set","  if(this.s.parentDb) this.s.parentDb.close();","  // Callback after next event loop tick","  if(typeof callback == 'function') return process.nextTick(function() {","    handleCallback(callback, null);","  })","","  // Return dummy promise","  return new this.s.promiseLibrary(function(resolve) {","    resolve();","  });","}","","define.classMethod('close', {callback: true, promise:true});","","/**"," * Return the Admin db instance"," * @method"," * @return {Admin} return the new Admin db instance"," */","Db.prototype.admin = function() {","  return new Admin(this, this.s.topology, this.s.promiseLibrary);","};","","define.classMethod('admin', {callback: false, promise:false, returns: [Admin]});","","/**"," * The callback format for the collection method, must be used if strict is specified"," * @callback Db~collectionResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection} collection The collection instance."," */","","/**"," * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you can"," * can use it without a callback in the following way: `var collection = db.collection('mycollection');`"," *"," * @method"," * @param {string} name the collection name we wish to access."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.strict=false] Returns an error if the collection does not exist"," * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)"," * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)"," * @param {Db~collectionResultCallback} callback The collection result callback"," * @return {Collection} return the new Collection instance if not in strict mode"," */","Db.prototype.collection = function(name, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","  options = shallowClone(options);","  // Set the promise library","  options.promiseLibrary = this.s.promiseLibrary;","","  // If we have not set a collection level readConcern set the db level one","  options.readConcern = options.readConcern || this.s.readConcern;","","  // Do we have ignoreUndefined set","  if(this.s.options.ignoreUndefined) {","    options.ignoreUndefined = this.s.options.ignoreUndefined;","  }","","  // Execute","  if(options == null || !options.strict) {","    try {","      var collection = new Collection(this, this.s.topology, this.s.databaseName, name, this.s.pkFactory, options);","      if(callback) callback(null, collection);","      return collection;","    } catch(err) {","      if(callback) return callback(err);","      throw err;","    }","  }","","  // Strict mode","  if(typeof callback != 'function') {","    throw toError(f(\"A callback is required in strict mode. While getting collection %s.\", name));","  }","","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) {","    return callback(new MongoError('topology was destroyed'));","  }","","  // Strict mode","  this.listCollections({name:name}).toArray(function(err, collections) {","    if(err != null) return handleCallback(callback, err, null);","    if(collections.length == 0) return handleCallback(callback, toError(f(\"Collection %s does not exist. Currently in strict mode.\", name)), null);","","    try {","      return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));","    } catch(err) {","      return handleCallback(callback, err, null);","    }","  });","}","","define.classMethod('collection', {callback: true, promise:false, returns: [Collection]});","","function decorateWithWriteConcern(command, self, options) {","  // Do we support write concerns 3.4 and higher","  if(self.s.topology.capabilities().commandsTakeWriteConcern) {","    // Get the write concern settings","    var finalOptions = writeConcern(shallowClone(options), self, options);","    // Add the write concern to the command","    if(finalOptions.writeConcern) {","      command.writeConcern = finalOptions.writeConcern;","    }","  }","}","","var createCollection = function(self, name, options, callback) {","  // Get the write concern options","  var finalOptions = writeConcern(shallowClone(options), self, options);","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Check if we have the name","  self.listCollections({name: name})","    .setReadPreference(ReadPreference.PRIMARY)","    .toArray(function(err, collections) {","      if(err != null) return handleCallback(callback, err, null);","      if(collections.length > 0 && finalOptions.strict) {","        return handleCallback(callback, MongoError.create({message: f(\"Collection %s already exists. Currently in strict mode.\", name), driver:true}), null);","      } else if (collections.length > 0) {","        try { return handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options)); }","        catch(err) { return handleCallback(callback, err); }","      }","","      // Create collection command","      var cmd = {'create':name};","","      // Decorate command with writeConcern if supported","      decorateWithWriteConcern(cmd, self, options);","      // Add all optional parameters","      for(var n in options) {","        if(options[n] != null","          && typeof options[n] != 'function' && illegalCommandFields.indexOf(n) == -1) {","            cmd[n] = options[n];","        }","      }","","      // Force a primary read Preference","      finalOptions.readPreference = ReadPreference.PRIMARY;","","      // Execute command","      self.command(cmd, finalOptions, function(err) {","        if(err) return handleCallback(callback, err);","        handleCallback(callback, null, new Collection(self, self.s.topology, self.s.databaseName, name, self.s.pkFactory, options));","      });","  });","}","","/**"," * Create a new collection on a server with the specified options. Use this to create capped collections."," * More information about command options available at https://docs.mongodb.com/manual/reference/command/create/"," *"," * @method"," * @param {string} name the collection name we wish to access."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {boolean} [options.strict=false] Returns an error if the collection does not exist"," * @param {boolean} [options.capped=false] Create a capped collection."," * @param {boolean} [options.autoIndexId=true] Create an index on the _id field of the document, True by default on MongoDB 2.2 or higher off for version < 2.2."," * @param {number} [options.size=null] The size of the capped collection in bytes."," * @param {number} [options.max=null] The maximum number of documents in the capped collection."," * @param {number} [options.flags=null] Optional. Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag."," * @param {object} [options.storageEngine=null] Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher."," * @param {object} [options.validator=null] Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher."," * @param {string} [options.validationLevel=null] Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher."," * @param {string} [options.validationAction=null] Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher."," * @param {object} [options.indexOptionDefaults=null] Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher."," * @param {string} [options.viewOn=null] The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher."," * @param {array} [options.pipeline=null] An array that consists of the aggregation pipeline stage. create creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher."," * @param {object} [options.collation=null] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields)."," * @param {Db~collectionResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.createCollection = function(name, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  name = args.length ? args.shift() : null;","  options = args.length ? args.shift() || {} : {};","","  // Do we have a promisesLibrary","  options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;","","  // Check if the callback is in fact a string","  if(typeof callback == 'string') name = callback;","","  // Execute the fallback callback","  if(typeof callback == 'function') return createCollection(self, name, options, callback);","  return new this.s.promiseLibrary(function(resolve, reject) {","    createCollection(self, name, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('createCollection', {callback: true, promise:true});","","/**"," * Get all the db statistics."," *"," * @method"," * @param {object} [options=null] Optional settings."," * @param {number} [options.scale=null] Divide the returned sizes by scale value."," * @param {Db~resultCallback} [callback] The collection result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.stats = function(options, callback) {","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","  // Build command object","  var commandObject = { dbStats:true };","  // Check if we have the scale value","  if(options['scale'] != null) commandObject['scale'] = options['scale'];","","  // If we have a readPreference set","  if(options.readPreference == null && this.s.readPreference) {","    options.readPreference = this.s.readPreference;","  }","","  // Execute the command","  return this.command(commandObject, options, callback);","}","","define.classMethod('stats', {callback: true, promise:true});","","// Transformation methods for cursor results","var listCollectionsTranforms = function(databaseName) {","  var matching = f('%s.', databaseName);","","  return {","    doc: function(doc) {","      var index = doc.name.indexOf(matching);","      // Remove database name if available","      if(doc.name && index == 0) {","        doc.name = doc.name.substr(index + matching.length);","      }","","      return doc;","    }","  }","}","","/**"," * Get the list of all collection information for the specified db."," *"," * @method"," * @param {object} filter Query to filter collections by"," * @param {object} [options=null] Optional settings."," * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection"," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @return {CommandCursor}"," */","Db.prototype.listCollections = function(filter, options) {","  filter = filter || {};","  options = options || {};","","  // Shallow clone the object","  options = shallowClone(options);","  // Set the promise library","  options.promiseLibrary = this.s.promiseLibrary;","","  // Ensure valid readPreference","  if(options.readPreference) {","    options.readPreference = convertReadPreference(options.readPreference);","  }","","  // We have a list collections command","  if(this.serverConfig.capabilities().hasListCollectionsCommand) {","    // Cursor options","    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}","    // Build the command","    var command = { listCollections : true, filter: filter, cursor: cursor };","    // Set the AggregationCursor constructor","    options.cursorFactory = CommandCursor;","    // Create the cursor","    cursor = this.s.topology.cursor(f('%s.$cmd', this.s.databaseName), command, options);","    // Do we have a readPreference, apply it","    if(options.readPreference) {","      cursor.setReadPreference(options.readPreference);","    }","    // Return the cursor","    return cursor;","  }","","  // We cannot use the listCollectionsCommand","  if(!this.serverConfig.capabilities().hasListCollectionsCommand) {","    // If we have legacy mode and have not provided a full db name filter it","    if(typeof filter.name == 'string' && !(new RegExp('^' + this.databaseName + '\\\\.').test(filter.name))) {","      filter = shallowClone(filter);","      filter.name = f('%s.%s', this.s.databaseName, filter.name);","    }","  }","","  // No filter, filter by current database","  if(filter == null) {","    filter.name = f('/%s/', this.s.databaseName);","  }","","  // Rewrite the filter to use $and to filter out indexes","  if(filter.name) {","    filter = {$and: [{name: filter.name}, {name:/^((?!\\$).)*$/}]};","  } else {","    filter = {name:/^((?!\\$).)*$/};","  }","","  // Return options","  var _options = {transforms: listCollectionsTranforms(this.s.databaseName)}","  // Get the cursor","  cursor = this.collection(Db.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);","  // Do we have a readPreference, apply it","  if(options.readPreference) cursor.setReadPreference(options.readPreference);","  // Set the passed in batch size if one was provided","  if(options.batchSize) cursor = cursor.batchSize(options.batchSize);","  // We have a fallback mode using legacy systems collections","  return cursor;","};","","define.classMethod('listCollections', {callback: false, promise:false, returns: [CommandCursor]});","","var evaluate = function(self, code, parameters, options, callback) {","  var finalCode = code;","  var finalParameters = [];","","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","","  // If not a code object translate to one","  if(!(finalCode && finalCode._bsontype == 'Code')) finalCode = new Code(finalCode);","  // Ensure the parameters are correct","  if(parameters != null && !Array.isArray(parameters) && typeof parameters !== 'function') {","    finalParameters = [parameters];","  } else if(parameters != null && Array.isArray(parameters) && typeof parameters !== 'function') {","    finalParameters = parameters;","  }","","  // Create execution selector","  var cmd = {'$eval':finalCode, 'args':finalParameters};","  // Check if the nolock parameter is passed in","  if(options['nolock']) {","    cmd['nolock'] = options['nolock'];","  }","","  // Set primary read preference","  options.readPreference = new CoreReadPreference(ReadPreference.PRIMARY);","","  // Execute the command","  self.command(cmd, options, function(err, result) {","    if(err) return handleCallback(callback, err, null);","    if(result && result.ok == 1) return handleCallback(callback, null, result.retval);","    if(result) return handleCallback(callback, MongoError.create({message: f(\"eval failed: %s\", result.errmsg), driver:true}), null);","    handleCallback(callback, err, result);","  });","}","","/**"," * Evaluate JavaScript on the server"," *"," * @method"," * @param {Code} code JavaScript to execute on server."," * @param {(object|array)} parameters The parameters for the call."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaulation of the javascript."," * @param {Db~resultCallback} [callback] The results callback"," * @deprecated Eval is deprecated on MongoDB 3.2 and forward"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.eval = function(code, parameters, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  parameters = args.length ? args.shift() : parameters;","  options = args.length ? args.shift() || {} : {};","","  // Check if the callback is in fact a string","  if(typeof callback == 'function') return evaluate(self, code, parameters, options, callback);","  // Execute the command","  return new this.s.promiseLibrary(function(resolve, reject) {","    evaluate(self, code, parameters, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","define.classMethod('eval', {callback: true, promise:true});","","/**"," * Rename a collection."," *"," * @method"," * @param {string} fromCollection Name of current collection to rename."," * @param {string} toCollection New name of of the collection."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists."," * @param {Db~collectionResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","  // Add return new collection","  options.new_collection = true;","","  // Check if the callback is in fact a string","  if(typeof callback == 'function') {","    return this.collection(fromCollection).rename(toCollection, options, callback);","  }","","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.collection(fromCollection).rename(toCollection, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","define.classMethod('renameCollection', {callback: true, promise:true});","","/**"," * Drop a collection from the database, removing it permanently. New accesses will create a new collection."," *"," * @method"," * @param {string} name Name of collection to drop"," * @param {Db~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.dropCollection = function(name, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Command to execute","  var cmd = {'drop':name}","","  // Decorate with write concern","  decorateWithWriteConcern(cmd, self, options);","","  // options","  options = assign({}, this.s.options, {readPreference: ReadPreference.PRIMARY});","","  // Check if the callback is in fact a string","  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) {","    // Did the user destroy the topology","    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","    if(err) return handleCallback(callback, err);","    if(result.ok) return handleCallback(callback, null, true);","    handleCallback(callback, null, false);","  });","","  // Clone the options","  options = shallowClone(self.s.options);","  // Set readPreference PRIMARY","  options.readPreference = ReadPreference.PRIMARY;","","  // Execute the command","  return new this.s.promiseLibrary(function(resolve, reject) {","    // Execute command","    self.command(cmd, options, function(err, result) {","      // Did the user destroy the topology","      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));","      if(err) return reject(err);","      if(result.ok) return resolve(true);","      resolve(false);","    });","  });","};","","define.classMethod('dropCollection', {callback: true, promise:true});","","/**"," * Drop a database, removing it permanently from the server."," *"," * @method"," * @param {Db~resultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.dropDatabase = function(options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","  // Drop database command","  var cmd = {'dropDatabase':1};","","  // Decorate with write concern","  decorateWithWriteConcern(cmd, self, options);","","  // Ensure primary only","  options = assign({}, this.s.options, {readPreference: ReadPreference.PRIMARY});","","  // Check if the callback is in fact a string","  if(typeof callback == 'function') return this.command(cmd, options, function(err, result) {","    // Did the user destroy the topology","    if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","    if(callback == null) return;","    if(err) return handleCallback(callback, err, null);","    handleCallback(callback, null, result.ok ? true : false);","  });","","  // Execute the command","  return new this.s.promiseLibrary(function(resolve, reject) {","    // Execute command","    self.command(cmd, options, function(err, result) {","      // Did the user destroy the topology","      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));","      if(err) return reject(err);","      if(result.ok) return resolve(true);","      resolve(false);","    });","  });","}","","define.classMethod('dropDatabase', {callback: true, promise:true});","","/**"," * The callback format for the collections method."," * @callback Db~collectionsResultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {Collection[]} collections An array of all the collections objects for the db instance."," */","var collections = function(self, callback) {","  // Let's get the collection names","  self.listCollections().toArray(function(err, documents) {","    if(err != null) return handleCallback(callback, err, null);","    // Filter collections removing any illegal ones","    documents = documents.filter(function(doc) {","      return doc.name.indexOf('$') == -1;","    });","","    // Return the collection objects","    handleCallback(callback, null, documents.map(function(d) {","      return new Collection(self, self.s.topology, self.s.databaseName, d.name.replace(self.s.databaseName + \".\", ''), self.s.pkFactory, self.s.options);","    }));","  });","}","","/**"," * Fetch all collections for the current db."," *"," * @method"," * @param {Db~collectionsResultCallback} [callback] The results callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.collections = function(callback) {","  var self = this;","","  // Return the callback","  if(typeof callback == 'function') return collections(self, callback);","  // Return the promise","  return new self.s.promiseLibrary(function(resolve, reject) {","    collections(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","define.classMethod('collections', {callback: true, promise:true});","","/**"," * Runs a command on the database as admin."," * @method"," * @param {object} command The command hash"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.executeDbAdminCommand = function(selector, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Return the callback","  if(typeof callback == 'function') {","    // Convert read preference","    if(options.readPreference) {","      options.readPreference = convertReadPreference(options.readPreference)","    }","","    return self.s.topology.command('admin.$cmd', selector, options, function(err, result) {","      // Did the user destroy the topology","      if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","      if(err) return handleCallback(callback, err);","      handleCallback(callback, null, result.result);","    });","  }","","  // Return promise","  return new self.s.promiseLibrary(function(resolve, reject) {","    self.s.topology.command('admin.$cmd', selector, options, function(err, result) {","      // Did the user destroy the topology","      if(self.serverConfig && self.serverConfig.isDestroyed()) return reject(new MongoError('topology was destroyed'));","      if(err) return reject(err);","      resolve(result.result);","    });","  });","};","","define.classMethod('executeDbAdminCommand', {callback: true, promise:true});","","/**"," * Creates an index on the db and collection collection."," * @method"," * @param {string} name Name of the collection to create the index on."," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {object} [options.partialFilterExpression=null] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.createIndex = function(name, fieldOrSpec, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() || {} : {};","  options = typeof callback === 'function' ? options : callback;","  options = options == null ? {} : options;","  // Shallow clone the options","  options = shallowClone(options);","","  // If we have a callback fallback","  if(typeof callback == 'function') return createIndex(self, name, fieldOrSpec, options, callback);","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    createIndex(self, name, fieldOrSpec, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var createIndex = function(self, name, fieldOrSpec, options, callback) {","  // Get the write concern options","  var finalOptions = writeConcern({}, self, options, { readPreference: ReadPreference.PRIMARY });","  // Ensure we have a callback","  if(finalOptions.writeConcern && typeof callback != 'function') {","    throw MongoError.create({message: \"Cannot use a writeConcern without a provided callback\", driver:true});","  }","","  // Run only against primary","  options.readPreference = ReadPreference.PRIMARY;","","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","","  // Attempt to run using createIndexes command","  createIndexUsingCreateIndexes(self, name, fieldOrSpec, options, function(err, result) {","    if(err == null) return handleCallback(callback, err, result);","","    // 67 = 'CannotCreateIndex' (malformed index options)","    // 85 = 'IndexOptionsConflict' (index already exists with different options)","    // 11000 = 'DuplicateKey' (couldn't build unique index because of dupes)","    // These errors mean that the server recognized `createIndex` as a command","    // and so we don't need to fallback to an insert.","    if(err.code === 67 || err.code == 11000 || err.code === 85) {","      return handleCallback(callback, err, result);","    }","","    // Create command","    var doc = createCreateIndexCommand(self, name, fieldOrSpec, options);","    // Set no key checking","    finalOptions.checkKeys = false;","    // Insert document","    self.s.topology.insert(f(\"%s.%s\", self.s.databaseName, Db.SYSTEM_INDEX_COLLECTION), doc, finalOptions, function(err, result) {","      if(callback == null) return;","      if(err) return handleCallback(callback, err);","      if(result == null) return handleCallback(callback, null, null);","      if(result.result.writeErrors) return handleCallback(callback, MongoError.create(result.result.writeErrors[0]), null);","      handleCallback(callback, null, doc.name);","    });","  });","}","","define.classMethod('createIndex', {callback: true, promise:true});","","/**"," * Ensures that an index exists, if it does not it creates it"," * @method"," * @deprecated since version 2.0"," * @param {string} name The index name"," * @param {(string|object)} fieldOrSpec Defines the index."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.unique=false] Creates an unique index."," * @param {boolean} [options.sparse=false] Creates a sparse index."," * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible."," * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value"," * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates."," * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates."," * @param {number} [options.v=null] Specify the format version of the indexes."," * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)"," * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.ensureIndex = function(name, fieldOrSpec, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // If we have a callback fallback","  if(typeof callback == 'function') return ensureIndex(self, name, fieldOrSpec, options, callback);","","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    ensureIndex(self, name, fieldOrSpec, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var ensureIndex = function(self, name, fieldOrSpec, options, callback) {","  // Get the write concern options","  var finalOptions = writeConcern({}, self, options);","  // Create command","  var selector = createCreateIndexCommand(self, name, fieldOrSpec, options);","  var index_name = selector.name;","","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","","  // Merge primary readPreference","  finalOptions.readPreference = ReadPreference.PRIMARY","","  // Check if the index allready exists","  self.indexInformation(name, finalOptions, function(err, indexInformation) {","    if(err != null && err.code != 26) return handleCallback(callback, err, null);","    // If the index does not exist, create it","    if(indexInformation == null || !indexInformation[index_name])  {","      self.createIndex(name, fieldOrSpec, options, callback);","    } else {","      if(typeof callback === 'function') return handleCallback(callback, null, index_name);","    }","  });","}","","define.classMethod('ensureIndex', {callback: true, promise:true});","","Db.prototype.addChild = function(db) {","  if(this.s.parentDb) return this.s.parentDb.addChild(db);","  this.s.children.push(db);","}","","/**"," * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are"," * related in a parent-child relationship to the original instance so that events are correctly emitted on child"," * db instances. Child db instances are cached so performing db('db1') twice will return the same instance."," * You can control these behaviors with the options noListener and returnNonCachedInstance."," *"," * @method"," * @param {string} name The name of the database we want to use."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection."," * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created"," * @return {Db}"," */","Db.prototype.db = function(dbName, options) {","  options = options || {};","","  // Copy the options and add out internal override of the not shared flag","  var finalOptions = assign({}, this.options, options);","","  // Do we have the db in the cache already","  if(this.s.dbCache[dbName] && finalOptions.returnNonCachedInstance !== true) {","    return this.s.dbCache[dbName];","  }","","  // Add current db as parentDb","  if(finalOptions.noListener == null || finalOptions.noListener == false) {","    finalOptions.parentDb = this;","  }","","  // Add promiseLibrary","  finalOptions.promiseLibrary = this.s.promiseLibrary;","","  // Return the db object","  var db = new Db(dbName, this.s.topology, finalOptions)","","  // Add as child","  if(finalOptions.noListener == null || finalOptions.noListener == false) {","    this.addChild(db);","  }","","  // Add the db to the cache","  this.s.dbCache[dbName] = db;","  // Return the database","  return db;","};","","define.classMethod('db', {callback: false, promise:false, returns: [Db]});","","var _executeAuthCreateUserCommand = function(self, username, password, options, callback) {","  // Special case where there is no password ($external users)","  if(typeof username == 'string'","    && password != null && typeof password == 'object') {","    options = password;","    password = null;","  }","","  // Unpack all options","  if(typeof options == 'function') {","    callback = options;","    options = {};","  }","","  // Error out if we digestPassword set","  if(options.digestPassword != null) {","    throw toError(\"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\");","  }","","  // Get additional values","  var customData = options.customData != null ? options.customData : {};","  var roles = Array.isArray(options.roles) ? options.roles : [];","  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;","","  // If not roles defined print deprecated message","  if(roles.length == 0) {","    console.log(\"Creating a user without roles is deprecated in MongoDB >= 2.6\");","  }","","  // Get the error options","  var commandOptions = {writeCommand:true};","  if(options['dbName']) commandOptions.dbName = options['dbName'];","","  // Add maxTimeMS to options if set","  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;","","  // Check the db name and add roles if needed","  if((self.databaseName.toLowerCase() == 'admin' || options.dbName == 'admin') && !Array.isArray(options.roles)) {","    roles = ['root']","  } else if(!Array.isArray(options.roles)) {","    roles = ['dbOwner']","  }","","  // Build the command to execute","  var command = {","      createUser: username","    , customData: customData","    , roles: roles","    , digestPassword:false","  }","","  // Apply write concern to command","  command = writeConcern(command, self, options);","","  // Use node md5 generator","  var md5 = crypto.createHash('md5');","  // Generate keys used for authentication","  md5.update(username + \":mongo:\" + password);","  var userPassword = md5.digest('hex');","","  // No password","  if(typeof password == 'string') {","    command.pwd = userPassword;","  }","","  // Force write using primary","  commandOptions.readPreference = ReadPreference.primary;","","  // Execute the command","  self.command(command, commandOptions, function(err, result) {","    if(err && err.ok == 0 && err.code == undefined) return handleCallback(callback, {code: -5000}, null);","    if(err) return handleCallback(callback, err, null);","    handleCallback(callback, !result.ok ? toError(result) : null","      , result.ok ? [{user: username, pwd: ''}] : null);","  })","}","","var addUser = function(self, username, password, options, callback) {","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Attempt to execute auth command","  _executeAuthCreateUserCommand(self, username, password, options, function(err, r) {","    // We need to perform the backward compatible insert operation","    if(err && err.code == -5000) {","      var finalOptions = writeConcern(shallowClone(options), self, options);","      // Use node md5 generator","      var md5 = crypto.createHash('md5');","      // Generate keys used for authentication","      md5.update(username + \":mongo:\" + password);","      var userPassword = md5.digest('hex');","","      // If we have another db set","      var db = options.dbName ? self.db(options.dbName) : self;","","      // Fetch a user collection","      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);","","      // Check if we are inserting the first user","      collection.count({}, function(err, count) {","        // We got an error (f.ex not authorized)","        if(err != null) return handleCallback(callback, err, null);","        // Check if the user exists and update i","        collection.find({user: username}, {dbName: options['dbName']}).toArray(function(err) {","          // We got an error (f.ex not authorized)","          if(err != null) return handleCallback(callback, err, null);","          // Add command keys","          finalOptions.upsert = true;","","          // We have a user, let's update the password or upsert if not","          collection.update({user: username},{$set: {user: username, pwd: userPassword}}, finalOptions, function(err) {","            if(count == 0 && err) return handleCallback(callback, null, [{user:username, pwd:userPassword}]);","            if(err) return handleCallback(callback, err, null)","            handleCallback(callback, null, [{user:username, pwd:userPassword}]);","          });","        });","      });","","      return;","    }","","    if(err) return handleCallback(callback, err);","    handleCallback(callback, err, r);","  });","}","","/**"," * Add a user to the database."," * @method"," * @param {string} username The username."," * @param {string} password The password."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)"," * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.addUser = function(username, password, options, callback) {","  // Unpack the parameters","  var self = this;","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() || {} : {};","","  // If we have a callback fallback","  if(typeof callback == 'function') return addUser(self, username, password, options, callback);","","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    addUser(self, username, password, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","define.classMethod('addUser', {callback: true, promise:true});","","var _executeAuthRemoveUserCommand = function(self, username, options, callback) {","  if(typeof options == 'function') callback = options, options = {};","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Get the error options","  var commandOptions = {writeCommand:true};","  if(options['dbName']) commandOptions.dbName = options['dbName'];","","  // Get additional values","  var maxTimeMS = typeof options.maxTimeMS == 'number' ? options.maxTimeMS : null;","","  // Add maxTimeMS to options if set","  if(maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;","","  // Build the command to execute","  var command = {","    dropUser: username","  }","","  // Apply write concern to command","  command = writeConcern(command, self, options);","","  // Force write using primary","  commandOptions.readPreference = ReadPreference.primary;","","  // Execute the command","  self.command(command, commandOptions, function(err, result) {","    if(err && !err.ok && err.code == undefined) return handleCallback(callback, {code: -5000});","    if(err) return handleCallback(callback, err, null);","    handleCallback(callback, null, result.ok ? true : false);","  })","}","","var removeUser = function(self, username, options, callback) {","  // Attempt to execute command","  _executeAuthRemoveUserCommand(self, username, options, function(err, result) {","    if(err && err.code == -5000) {","      var finalOptions = writeConcern(shallowClone(options), self, options);","      // If we have another db set","      var db = options.dbName ? self.db(options.dbName) : self;","","      // Fetch a user collection","      var collection = db.collection(Db.SYSTEM_USER_COLLECTION);","","      // Locate the user","      collection.findOne({user: username}, {}, function(err, user) {","        if(user == null) return handleCallback(callback, err, false);","        collection.remove({user: username}, finalOptions, function(err) {","          handleCallback(callback, err, true);","        });","      });","","      return;","    }","","    if(err) return handleCallback(callback, err);","    handleCallback(callback, err, result);","  });","}","","define.classMethod('removeUser', {callback: true, promise:true});","","/**"," * Remove a user from a database"," * @method"," * @param {string} username The username."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.removeUser = function(username, options, callback) {","  // Unpack the parameters","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() || {} : {};","","  // If we have a callback fallback","  if(typeof callback == 'function') return removeUser(self, username, options, callback);","","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    removeUser(self, username, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var authenticate = function(self, username, password, options, callback) {","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","","  // the default db to authenticate against is 'self'","  // if authententicate is called from a retry context, it may be another one, like admin","  var authdb = options.dbName ? options.dbName : self.databaseName;","  authdb = self.authSource ? self.authSource : authdb;","  authdb = options.authdb ? options.authdb : authdb;","  authdb = options.authSource ? options.authSource : authdb;","","  // Callback","  var _callback = function(err, result) {","    if(self.listeners('authenticated').length > 0) {","      self.emit('authenticated', err, result);","    }","","    // Return to caller","    handleCallback(callback, err, result);","  }","","  // authMechanism","  var authMechanism = options.authMechanism || '';","  authMechanism = authMechanism.toUpperCase();","","  // If classic auth delegate to auth command","  if(authMechanism == 'MONGODB-CR') {","    self.s.topology.auth('mongocr', authdb, username, password, function(err) {","      if(err) return handleCallback(callback, err, false);","      _callback(null, true);","    });","  } else if(authMechanism == 'PLAIN') {","    self.s.topology.auth('plain', authdb, username, password, function(err) {","      if(err) return handleCallback(callback, err, false);","      _callback(null, true);","    });","  } else if(authMechanism == 'MONGODB-X509') {","    self.s.topology.auth('x509', authdb, username, password, function(err) {","      if(err) return handleCallback(callback, err, false);","      _callback(null, true);","    });","  } else if(authMechanism == 'SCRAM-SHA-1') {","    self.s.topology.auth('scram-sha-1', authdb, username, password, function(err) {","      if(err) return handleCallback(callback, err, false);","      _callback(null, true);","    });","  } else if(authMechanism == 'GSSAPI') {","    if(process.platform == 'win32') {","      self.s.topology.auth('sspi', authdb, username, password, options, function(err) {","        if(err) return handleCallback(callback, err, false);","        _callback(null, true);","      });","    } else {","      self.s.topology.auth('gssapi', authdb, username, password, options, function(err) {","        if(err) return handleCallback(callback, err, false);","        _callback(null, true);","      });","    }","  } else if(authMechanism == 'DEFAULT') {","    self.s.topology.auth('default', authdb, username, password, function(err) {","      if(err) return handleCallback(callback, err, false);","      _callback(null, true);","    });","  } else {","    handleCallback(callback, MongoError.create({message: f(\"authentication mechanism %s not supported\", options.authMechanism), driver:true}));","  }","}","","/**"," * Authenticate a user against the server."," * @method"," * @param {string} username The username."," * @param {string} [password] The password."," * @param {object} [options=null] Optional settings."," * @param {string} [options.authMechanism=MONGODB-CR] The authentication mechanism to use, GSSAPI, MONGODB-CR, MONGODB-X509, PLAIN"," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.authenticate = function(username, password, options, callback) {","  if(typeof options == 'function') callback = options, options = {};","  var self = this;","  // Shallow copy the options","  options = shallowClone(options);","","  // Set default mechanism","  if(!options.authMechanism) {","    options.authMechanism = 'DEFAULT';","  } else if(options.authMechanism != 'GSSAPI'","    && options.authMechanism != 'DEFAULT'","    && options.authMechanism != 'MONGODB-CR'","    && options.authMechanism != 'MONGODB-X509'","    && options.authMechanism != 'SCRAM-SHA-1'","    && options.authMechanism != 'PLAIN') {","      return handleCallback(callback, MongoError.create({message: \"only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\", driver:true}));","  }","","  // If we have a callback fallback","  if(typeof callback == 'function') return authenticate(self, username, password, options, function(err, r) {","    // Support failed auth method","    if(err && err.message && err.message.indexOf('saslStart') != -1) err.code = 59;","    // Reject error","    if(err) return callback(err, r);","    callback(null, r);","  });","","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    authenticate(self, username, password, options, function(err, r) {","      // Support failed auth method","      if(err && err.message && err.message.indexOf('saslStart') != -1) err.code = 59;","      // Reject error","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","define.classMethod('authenticate', {callback: true, promise:true});","","/**"," * Logout user from server, fire off on all connections and remove all auth info"," * @method"," * @param {object} [options=null] Optional settings."," * @param {string} [options.dbName=null] Logout against different database than current."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.logout = function(options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // Establish the correct database name","  var dbName = this.s.authSource ? this.s.authSource : this.s.databaseName;","  dbName = options.dbName ? options.dbName : dbName;","","  // If we have a callback","  if(typeof callback == 'function') {","    return self.s.topology.logout(dbName, function(err) {","      if(err) return callback(err);","      callback(null, true);","    });","  }","","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.topology.logout(dbName, function(err) {","      if(err) return reject(err);","      resolve(true);","    });","  });","}","","define.classMethod('logout', {callback: true, promise:true});","","/**"," * Retrieves this collections index info."," * @method"," * @param {string} name The name of the collection."," * @param {object} [options=null] Optional settings."," * @param {boolean} [options.full=false] Returns the full raw index information."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {Db~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Db.prototype.indexInformation = function(name, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = options || {};","","  // If we have a callback fallback","  if(typeof callback == 'function') return indexInformation(self, name, options, callback);","","  // Return a promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    indexInformation(self, name, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var indexInformation = function(self, name, options, callback) {","    // If we specified full information","  var full = options['full'] == null ? false : options['full'];","","  // Did the user destroy the topology","  if(self.serverConfig && self.serverConfig.isDestroyed()) return callback(new MongoError('topology was destroyed'));","  // Process all the results from the index command and collection","  var processResults = function(indexes) {","    // Contains all the information","    var info = {};","    // Process all the indexes","    for(var i = 0; i < indexes.length; i++) {","      var index = indexes[i];","      // Let's unpack the object","      info[index.name] = [];","      for(var name in index.key) {","        info[index.name].push([name, index.key[name]]);","      }","    }","","    return info;","  }","","  // Get the list of indexes of the specified collection","  self.collection(name).listIndexes(options).toArray(function(err, indexes) {","    if(err) return callback(toError(err));","    if(!Array.isArray(indexes)) return handleCallback(callback, null, []);","    if(full) return handleCallback(callback, null, indexes);","    handleCallback(callback, null, processResults(indexes));","  });","}","","define.classMethod('indexInformation', {callback: true, promise:true});","","var createCreateIndexCommand = function(db, name, fieldOrSpec, options) {","  var indexParameters = parseIndexOptions(fieldOrSpec);","  var fieldHash = indexParameters.fieldHash;","","  // Generate the index name","  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;","  var selector = {","    'ns': db.databaseName + \".\" + name, 'key': fieldHash, 'name': indexName","  }","","  // Ensure we have a correct finalUnique","  var finalUnique = options == null || 'object' === typeof options ? false : options;","  // Set up options","  options = options == null || typeof options == 'boolean' ? {} : options;","","  // Add all the options","  var keysToOmit = Object.keys(selector);","  for(var optionName in options) {","    if(keysToOmit.indexOf(optionName) == -1) {","      selector[optionName] = options[optionName];","    }","  }","","  if(selector['unique'] == null) selector['unique'] = finalUnique;","","  // Remove any write concern operations","  var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];","  for(var i = 0; i < removeKeys.length; i++) {","    delete selector[removeKeys[i]];","  }","","  // Return the command creation selector","  return selector;","}","","var createIndexUsingCreateIndexes = function(self, name, fieldOrSpec, options, callback) {","  // Build the index","  var indexParameters = parseIndexOptions(fieldOrSpec);","  // Generate the index name","  var indexName = typeof options.name == 'string' ? options.name : indexParameters.name;","  // Set up the index","  var indexes = [{ name: indexName, key: indexParameters.fieldHash }];","  // merge all the options","  var keysToOmit = Object.keys(indexes[0]);","  for(var optionName in options) {","    if(keysToOmit.indexOf(optionName) == -1) {","      indexes[0][optionName] = options[optionName];","    }","","    // Remove any write concern operations","    var removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference'];","    for(var i = 0; i < removeKeys.length; i++) {","      delete indexes[0][removeKeys[i]];","    }","  }","","  // Get capabilities","  var capabilities = self.s.topology.capabilities();","","  // Did the user pass in a collation, check if our write server supports it","  if(indexes[0].collation && capabilities && !capabilities.commandsTakeCollation) {","    // Create a new error","    var error = new MongoError(f('server/primary/mongos does not support collation'));","    error.code = 67;","    // Return the error","    return callback(error);","  }","","  // Create command, apply write concern to command","  var cmd = writeConcern({createIndexes: name, indexes: indexes}, self, options);","","  // Decorate command with writeConcern if supported","  decorateWithWriteConcern(cmd, self, options);","","  // ReadPreference primary","  options.readPreference = ReadPreference.PRIMARY;","","  // Build the command","  self.command(cmd, options, function(err, result) {","    if(err) return handleCallback(callback, err, null);","    if(result.ok == 0) return handleCallback(callback, toError(result), null);","    // Return the indexName for backward compatibility","    handleCallback(callback, null, indexName);","  });","}","","// Validate the database name","var validateDatabaseName = function(databaseName) {","  if(typeof databaseName !== 'string') throw MongoError.create({message: \"database name must be a string\", driver:true});","  if(databaseName.length === 0) throw MongoError.create({message: \"database name cannot be the empty string\", driver:true});","  if(databaseName == '$external') return;","","  var invalidChars = [\" \", \".\", \"$\", \"/\", \"\\\\\"];","  for(var i = 0; i < invalidChars.length; i++) {","    if(databaseName.indexOf(invalidChars[i]) != -1) throw MongoError.create({message: \"database names cannot contain the character '\" + invalidChars[i] + \"'\", driver:true});","  }","}","","// Get write concern","var writeConcern = function(target, db, options) {","  if(options.w != null || options.j != null || options.fsync != null) {","    var opts = {};","    if(options.w) opts.w = options.w;","    if(options.wtimeout) opts.wtimeout = options.wtimeout;","    if(options.j) opts.j = options.j;","    if(options.fsync) opts.fsync = options.fsync;","    target.writeConcern = opts;","  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {","    target.writeConcern = db.writeConcern;","  }","","  return target","}","","// Add listeners to topology","var createListener = function(self, e, object) {","  var listener = function(err) {","    if(object.listeners(e).length > 0) {","      object.emit(e, err, self);","","      // Emit on all associated db's if available","      for(var i = 0; i < self.s.children.length; i++) {","        self.s.children[i].emit(e, err, self.s.children[i]);","      }","    }","  }","  return listener;","}","","","/**"," * Unref all sockets"," * @method"," */","Db.prototype.unref = function() {","  this.s.topology.unref();","}","","/**"," * Db close event"," *"," * Emitted after a socket closed against a single server or mongos proxy."," *"," * @event Db#close"," * @type {MongoError}"," */","","/**"," * Db authenticated event"," *"," * Emitted after all server members in the topology (single server, replicaset or mongos) have successfully authenticated."," *"," * @event Db#authenticated"," * @type {object}"," */","","/**"," * Db reconnect event"," *"," *  * Server: Emitted when the driver has reconnected and re-authenticated."," *  * ReplicaSet: N/A"," *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos."," *"," * @event Db#reconnect"," * @type {object}"," */","","/**"," * Db error event"," *"," * Emitted after an error occurred against a single server or mongos proxy."," *"," * @event Db#error"," * @type {MongoError}"," */","","/**"," * Db timeout event"," *"," * Emitted after a socket timeout occurred against a single server or mongos proxy."," *"," * @event Db#timeout"," * @type {MongoError}"," */","","/**"," * Db parseError event"," *"," * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server."," *"," * @event Db#parseError"," * @type {MongoError}"," */","","/**"," * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time."," *"," * * Server: Emitted when the driver has connected to the single server and has authenticated."," * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members."," * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies."," *"," * @event Db#fullsetup"," * @type {Db}"," */","","// Constants","Db.SYSTEM_NAMESPACE_COLLECTION = \"system.namespaces\";","Db.SYSTEM_INDEX_COLLECTION = \"system.indexes\";","Db.SYSTEM_PROFILE_COLLECTION = \"system.profile\";","Db.SYSTEM_USER_COLLECTION = \"system.users\";","Db.SYSTEM_COMMAND_COLLECTION = \"$cmd\";","Db.SYSTEM_JS_COLLECTION = \"system.js\";","","module.exports = Db;",""],"l":{"3":1,"26":1,"31":1,"51":1,"96":1,"97":0,"98":0,"99":0,"100":0,"103":0,"106":0,"107":0,"112":0,"115":0,"118":0,"154":0,"157":0,"158":0,"159":0,"162":0,"163":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"176":1,"178":1,"181":1,"183":0,"187":1,"189":0,"193":1,"196":0,"198":0,"200":0,"205":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"225":1,"226":0,"227":0,"228":0,"229":0,"231":0,"232":0,"233":0,"236":0,"246":1,"247":0,"249":0,"251":0,"252":0,"253":0,"254":0,"259":1,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"277":0,"287":1,"289":0,"291":0,"294":0,"295":0,"299":0,"300":0,"302":0,"306":0,"310":0,"311":0,"312":0,"313":0,"326":1,"327":0,"329":0,"331":0,"334":0,"336":0,"337":0,"338":0,"339":0,"344":1,"360":1,"361":0,"362":0,"363":0,"366":0,"367":0,"370":0,"372":0,"373":0,"378":0,"382":0,"384":0,"385":0,"389":0,"390":0,"394":1,"401":1,"402":0,"405":1,"434":1,"435":0,"436":0,"437":0,"438":0,"440":0,"443":0,"446":0,"447":0,"451":0,"452":0,"453":0,"454":0,"455":0,"457":0,"458":0,"463":0,"464":0,"468":0,"469":0,"473":0,"474":0,"475":0,"477":0,"478":0,"480":0,"485":1,"487":1,"489":0,"491":0,"493":0,"494":0,"499":1,"501":0,"503":0,"505":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"517":0,"520":0,"522":0,"523":0,"525":0,"530":0,"533":0,"534":0,"535":0,"571":1,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"580":0,"583":0,"586":0,"587":0,"588":0,"589":0,"590":0,"595":1,"606":1,"607":0,"608":0,"610":0,"612":0,"615":0,"616":0,"620":0,"623":1,"626":1,"627":0,"629":0,"631":0,"633":0,"634":0,"637":0,"652":1,"653":0,"654":0,"657":0,"659":0,"662":0,"663":0,"667":0,"669":0,"671":0,"673":0,"675":0,"677":0,"678":0,"681":0,"685":0,"687":0,"688":0,"689":0,"694":0,"695":0,"699":0,"700":0,"702":0,"706":0,"708":0,"710":0,"712":0,"714":0,"717":1,"719":1,"720":0,"721":0,"724":0,"727":0,"729":0,"730":0,"731":0,"732":0,"736":0,"738":0,"739":0,"743":0,"746":0,"747":0,"748":0,"749":0,"750":0,"766":1,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"775":0,"777":0,"778":0,"779":0,"780":0,"785":1,"798":1,"799":0,"800":0,"801":0,"803":0,"806":0,"807":0,"811":0,"812":0,"813":0,"814":0,"819":1,"829":1,"830":0,"831":0,"832":0,"835":0,"838":0,"841":0,"844":0,"846":0,"847":0,"848":0,"849":0,"853":0,"855":0,"858":0,"860":0,"862":0,"863":0,"864":0,"865":0,"870":1,"879":1,"880":0,"881":0,"882":0,"884":0,"887":0,"890":0,"893":0,"895":0,"896":0,"897":0,"898":0,"902":0,"904":0,"906":0,"907":0,"908":0,"909":0,"914":1,"922":1,"924":0,"925":0,"927":0,"928":0,"932":0,"933":0,"945":1,"946":0,"949":0,"951":0,"952":0,"953":0,"954":0,"959":1,"970":1,"971":0,"972":0,"973":0,"976":0,"978":0,"979":0,"982":0,"984":0,"985":0,"986":0,"991":0,"992":0,"994":0,"995":0,"996":0,"1001":1,"1025":1,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1034":0,"1037":0,"1039":0,"1040":0,"1041":0,"1042":0,"1047":1,"1049":0,"1051":0,"1052":0,"1056":0,"1059":0,"1062":0,"1063":0,"1070":0,"1071":0,"1075":0,"1077":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1089":1,"1113":1,"1114":0,"1115":0,"1116":0,"1119":0,"1122":0,"1123":0,"1124":0,"1125":0,"1130":1,"1132":0,"1134":0,"1135":0,"1138":0,"1141":0,"1144":0,"1145":0,"1147":0,"1148":0,"1150":0,"1155":1,"1157":1,"1158":0,"1159":0,"1175":1,"1176":0,"1179":0,"1182":0,"1183":0,"1187":0,"1188":0,"1192":0,"1195":0,"1198":0,"1199":0,"1203":0,"1205":0,"1208":1,"1210":1,"1212":0,"1214":0,"1215":0,"1219":0,"1220":0,"1221":0,"1225":0,"1226":0,"1230":0,"1231":0,"1232":0,"1235":0,"1236":0,"1240":0,"1241":0,"1244":0,"1247":0,"1248":0,"1249":0,"1250":0,"1254":0,"1262":0,"1265":0,"1267":0,"1268":0,"1271":0,"1272":0,"1276":0,"1279":0,"1280":0,"1281":0,"1282":0,"1287":1,"1289":0,"1291":0,"1293":0,"1294":0,"1296":0,"1298":0,"1299":0,"1302":0,"1305":0,"1308":0,"1310":0,"1312":0,"1314":0,"1316":0,"1319":0,"1320":0,"1321":0,"1322":0,"1327":0,"1330":0,"1331":0,"1349":1,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1358":0,"1361":0,"1362":0,"1363":0,"1364":0,"1369":1,"1371":1,"1372":0,"1374":0,"1376":0,"1377":0,"1380":0,"1383":0,"1386":0,"1391":0,"1394":0,"1397":0,"1398":0,"1399":0,"1400":0,"1404":1,"1406":0,"1407":0,"1408":0,"1410":0,"1413":0,"1416":0,"1417":0,"1418":0,"1419":0,"1423":0,"1426":0,"1427":0,"1431":1,"1444":1,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1453":0,"1456":0,"1457":0,"1458":0,"1459":0,"1464":1,"1466":0,"1470":0,"1471":0,"1472":0,"1473":0,"1476":0,"1477":0,"1478":0,"1482":0,"1486":0,"1487":0,"1490":0,"1491":0,"1492":0,"1493":0,"1495":0,"1496":0,"1497":0,"1498":0,"1500":0,"1501":0,"1502":0,"1503":0,"1505":0,"1506":0,"1507":0,"1508":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1517":0,"1518":0,"1519":0,"1522":0,"1523":0,"1524":0,"1525":0,"1528":0,"1542":1,"1543":0,"1544":0,"1546":0,"1549":0,"1550":0,"1551":0,"1557":0,"1561":0,"1563":0,"1565":0,"1566":0,"1570":0,"1571":0,"1573":0,"1575":0,"1576":0,"1581":1,"1591":1,"1592":0,"1593":0,"1594":0,"1597":0,"1598":0,"1601":0,"1602":0,"1603":0,"1604":0,"1609":0,"1610":0,"1611":0,"1612":0,"1617":1,"1629":1,"1630":0,"1631":0,"1632":0,"1635":0,"1638":0,"1639":0,"1640":0,"1641":0,"1646":1,"1648":0,"1651":0,"1653":0,"1655":0,"1657":0,"1658":0,"1660":0,"1661":0,"1662":0,"1666":0,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1678":1,"1680":1,"1681":0,"1682":0,"1685":0,"1686":0,"1691":0,"1693":0,"1696":0,"1697":0,"1698":0,"1699":0,"1703":0,"1706":0,"1707":0,"1708":0,"1712":0,"1715":1,"1717":0,"1719":0,"1721":0,"1723":0,"1724":0,"1725":0,"1726":0,"1730":0,"1731":0,"1732":0,"1737":0,"1740":0,"1742":0,"1743":0,"1745":0,"1749":0,"1752":0,"1755":0,"1758":0,"1759":0,"1760":0,"1762":0,"1767":1,"1768":0,"1769":0,"1770":0,"1772":0,"1773":0,"1774":0,"1779":1,"1780":0,"1781":0,"1782":0,"1783":0,"1784":0,"1785":0,"1786":0,"1787":0,"1788":0,"1791":0,"1795":1,"1796":0,"1797":0,"1798":0,"1801":0,"1802":0,"1806":0,"1814":1,"1815":0,"1886":1,"1887":1,"1888":1,"1889":1,"1890":1,"1891":1,"1893":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/admin.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/admin.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":1,"155":1,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":1,"212":1,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":1,"246":1,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":1,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":51}}},"2":{"name":"(anonymous_2)","line":66,"loc":{"start":{"line":66,"column":26},"end":{"line":66,"column":63}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":93},"end":{"line":74,"column":112}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":35},"end":{"line":79,"column":61}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":54},"end":{"line":80,"column":73}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":28},"end":{"line":96,"column":47}}},"7":{"name":"(anonymous_7)","line":102,"loc":{"start":{"line":102,"column":35},"end":{"line":102,"column":61}}},"8":{"name":"(anonymous_8)","line":103,"loc":{"start":{"line":103,"column":20},"end":{"line":103,"column":37}}},"9":{"name":"(anonymous_9)","line":119,"loc":{"start":{"line":119,"column":29},"end":{"line":119,"column":48}}},"10":{"name":"(anonymous_10)","line":122,"loc":{"start":{"line":122,"column":90},"end":{"line":122,"column":109}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":35},"end":{"line":128,"column":61}}},"12":{"name":"(anonymous_12)","line":129,"loc":{"start":{"line":129,"column":51},"end":{"line":129,"column":70}}},"13":{"name":"(anonymous_13)","line":144,"loc":{"start":{"line":144,"column":31},"end":{"line":144,"column":50}}},"14":{"name":"(anonymous_14)","line":151,"loc":{"start":{"line":151,"column":35},"end":{"line":151,"column":61}}},"15":{"name":"(anonymous_15)","line":152,"loc":{"start":{"line":152,"column":23},"end":{"line":152,"column":40}}},"16":{"name":"(anonymous_16)","line":159,"loc":{"start":{"line":159,"column":19},"end":{"line":159,"column":44}}},"17":{"name":"(anonymous_17)","line":160,"loc":{"start":{"line":160,"column":53},"end":{"line":160,"column":72}}},"18":{"name":"(anonymous_18)","line":178,"loc":{"start":{"line":178,"column":33},"end":{"line":178,"column":52}}},"19":{"name":"(anonymous_19)","line":185,"loc":{"start":{"line":185,"column":35},"end":{"line":185,"column":61}}},"20":{"name":"(anonymous_20)","line":186,"loc":{"start":{"line":186,"column":25},"end":{"line":186,"column":42}}},"21":{"name":"(anonymous_21)","line":193,"loc":{"start":{"line":193,"column":21},"end":{"line":193,"column":46}}},"22":{"name":"(anonymous_22)","line":194,"loc":{"start":{"line":194,"column":48},"end":{"line":194,"column":67}}},"23":{"name":"(anonymous_23)","line":215,"loc":{"start":{"line":215,"column":23},"end":{"line":215,"column":51}}},"24":{"name":"(anonymous_24)","line":225,"loc":{"start":{"line":225,"column":35},"end":{"line":225,"column":61}}},"25":{"name":"(anonymous_25)","line":226,"loc":{"start":{"line":226,"column":47},"end":{"line":226,"column":64}}},"26":{"name":"(anonymous_26)","line":243,"loc":{"start":{"line":243,"column":31},"end":{"line":243,"column":79}}},"27":{"name":"(anonymous_27)","line":253,"loc":{"start":{"line":253,"column":35},"end":{"line":253,"column":61}}},"28":{"name":"(anonymous_28)","line":254,"loc":{"start":{"line":254,"column":56},"end":{"line":254,"column":73}}},"29":{"name":"(anonymous_29)","line":269,"loc":{"start":{"line":269,"column":25},"end":{"line":269,"column":44}}},"30":{"name":"(anonymous_30)","line":275,"loc":{"start":{"line":275,"column":35},"end":{"line":275,"column":61}}},"31":{"name":"(anonymous_31)","line":276,"loc":{"start":{"line":276,"column":40},"end":{"line":276,"column":54}}},"32":{"name":"(anonymous_32)","line":286,"loc":{"start":{"line":286,"column":19},"end":{"line":286,"column":41}}},"33":{"name":"(anonymous_33)","line":321,"loc":{"start":{"line":321,"column":26},"end":{"line":321,"column":74}}},"34":{"name":"(anonymous_34)","line":338,"loc":{"start":{"line":338,"column":35},"end":{"line":338,"column":61}}},"35":{"name":"(anonymous_35)","line":339,"loc":{"start":{"line":339,"column":51},"end":{"line":339,"column":68}}},"36":{"name":"(anonymous_36)","line":360,"loc":{"start":{"line":360,"column":29},"end":{"line":360,"column":67}}},"37":{"name":"(anonymous_37)","line":377,"loc":{"start":{"line":377,"column":35},"end":{"line":377,"column":61}}},"38":{"name":"(anonymous_38)","line":378,"loc":{"start":{"line":378,"column":44},"end":{"line":378,"column":61}}},"39":{"name":"(anonymous_39)","line":394,"loc":{"start":{"line":394,"column":36},"end":{"line":394,"column":62}}},"40":{"name":"(anonymous_40)","line":401,"loc":{"start":{"line":401,"column":35},"end":{"line":401,"column":61}}},"41":{"name":"(anonymous_41)","line":402,"loc":{"start":{"line":402,"column":35},"end":{"line":402,"column":52}}},"42":{"name":"(anonymous_42)","line":409,"loc":{"start":{"line":409,"column":24},"end":{"line":409,"column":56}}},"43":{"name":"(anonymous_43)","line":426,"loc":{"start":{"line":426,"column":43},"end":{"line":426,"column":62}}},"44":{"name":"(anonymous_44)","line":441,"loc":{"start":{"line":441,"column":32},"end":{"line":441,"column":51}}},"45":{"name":"(anonymous_45)","line":448,"loc":{"start":{"line":448,"column":35},"end":{"line":448,"column":61}}},"46":{"name":"(anonymous_46)","line":449,"loc":{"start":{"line":449,"column":24},"end":{"line":449,"column":41}}},"47":{"name":"(anonymous_47)","line":456,"loc":{"start":{"line":456,"column":20},"end":{"line":456,"column":45}}},"48":{"name":"(anonymous_48)","line":474,"loc":{"start":{"line":474,"column":37},"end":{"line":474,"column":81}}},"49":{"name":"(anonymous_49)","line":487,"loc":{"start":{"line":487,"column":35},"end":{"line":487,"column":61}}},"50":{"name":"(anonymous_50)","line":488,"loc":{"start":{"line":488,"column":54},"end":{"line":488,"column":71}}},"51":{"name":"(anonymous_51)","line":495,"loc":{"start":{"line":495,"column":25},"end":{"line":495,"column":75}}},"52":{"name":"(anonymous_52)","line":506,"loc":{"start":{"line":506,"column":29},"end":{"line":506,"column":48}}},"53":{"name":"(anonymous_53)","line":530,"loc":{"start":{"line":530,"column":32},"end":{"line":530,"column":51}}},"54":{"name":"(anonymous_54)","line":536,"loc":{"start":{"line":536,"column":35},"end":{"line":536,"column":61}}},"55":{"name":"(anonymous_55)","line":537,"loc":{"start":{"line":537,"column":59},"end":{"line":537,"column":76}}},"56":{"name":"(anonymous_56)","line":552,"loc":{"start":{"line":552,"column":35},"end":{"line":552,"column":54}}},"57":{"name":"(anonymous_57)","line":557,"loc":{"start":{"line":557,"column":35},"end":{"line":557,"column":61}}},"58":{"name":"(anonymous_58)","line":558,"loc":{"start":{"line":558,"column":27},"end":{"line":558,"column":44}}},"59":{"name":"(anonymous_59)","line":565,"loc":{"start":{"line":565,"column":23},"end":{"line":565,"column":48}}},"60":{"name":"(anonymous_60)","line":566,"loc":{"start":{"line":566,"column":56},"end":{"line":566,"column":75}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":49}},"2":{"start":{"line":36,"column":0},"end":{"line":45,"column":1}},"3":{"start":{"line":37,"column":2},"end":{"line":37,"column":62}},"4":{"start":{"line":37,"column":31},"end":{"line":37,"column":62}},"5":{"start":{"line":40,"column":2},"end":{"line":44,"column":3}},"6":{"start":{"line":47,"column":0},"end":{"line":47,"column":62}},"7":{"start":{"line":66,"column":0},"end":{"line":85,"column":1}},"8":{"start":{"line":67,"column":2},"end":{"line":67,"column":18}},"9":{"start":{"line":68,"column":2},"end":{"line":68,"column":54}},"10":{"start":{"line":69,"column":2},"end":{"line":69,"column":24}},"11":{"start":{"line":70,"column":2},"end":{"line":70,"column":56}},"12":{"start":{"line":70,"column":36},"end":{"line":70,"column":56}},"13":{"start":{"line":71,"column":2},"end":{"line":71,"column":44}},"14":{"start":{"line":74,"column":2},"end":{"line":76,"column":5}},"15":{"start":{"line":74,"column":36},"end":{"line":76,"column":5}},"16":{"start":{"line":75,"column":4},"end":{"line":75,"column":56}},"17":{"start":{"line":79,"column":2},"end":{"line":84,"column":5}},"18":{"start":{"line":80,"column":4},"end":{"line":83,"column":7}},"19":{"start":{"line":81,"column":6},"end":{"line":81,"column":33}},"20":{"start":{"line":81,"column":14},"end":{"line":81,"column":33}},"21":{"start":{"line":82,"column":6},"end":{"line":82,"column":19}},"22":{"start":{"line":87,"column":0},"end":{"line":87,"column":62}},"23":{"start":{"line":96,"column":0},"end":{"line":108,"column":1}},"24":{"start":{"line":97,"column":2},"end":{"line":97,"column":18}},"25":{"start":{"line":99,"column":2},"end":{"line":99,"column":69}},"26":{"start":{"line":99,"column":36},"end":{"line":99,"column":69}},"27":{"start":{"line":102,"column":2},"end":{"line":107,"column":5}},"28":{"start":{"line":103,"column":4},"end":{"line":106,"column":7}},"29":{"start":{"line":104,"column":6},"end":{"line":104,"column":33}},"30":{"start":{"line":104,"column":14},"end":{"line":104,"column":33}},"31":{"start":{"line":105,"column":6},"end":{"line":105,"column":17}},"32":{"start":{"line":110,"column":0},"end":{"line":110,"column":64}},"33":{"start":{"line":119,"column":0},"end":{"line":134,"column":1}},"34":{"start":{"line":120,"column":2},"end":{"line":120,"column":18}},"35":{"start":{"line":122,"column":2},"end":{"line":125,"column":5}},"36":{"start":{"line":122,"column":36},"end":{"line":125,"column":5}},"37":{"start":{"line":123,"column":4},"end":{"line":123,"column":47}},"38":{"start":{"line":123,"column":20},"end":{"line":123,"column":47}},"39":{"start":{"line":124,"column":4},"end":{"line":124,"column":24}},"40":{"start":{"line":128,"column":2},"end":{"line":133,"column":5}},"41":{"start":{"line":129,"column":4},"end":{"line":132,"column":7}},"42":{"start":{"line":130,"column":6},"end":{"line":130,"column":33}},"43":{"start":{"line":130,"column":14},"end":{"line":130,"column":33}},"44":{"start":{"line":131,"column":6},"end":{"line":131,"column":19}},"45":{"start":{"line":136,"column":0},"end":{"line":136,"column":65}},"46":{"start":{"line":144,"column":0},"end":{"line":157,"column":2}},"47":{"start":{"line":145,"column":2},"end":{"line":145,"column":18}},"48":{"start":{"line":148,"column":2},"end":{"line":148,"column":71}},"49":{"start":{"line":148,"column":36},"end":{"line":148,"column":71}},"50":{"start":{"line":151,"column":2},"end":{"line":156,"column":5}},"51":{"start":{"line":152,"column":4},"end":{"line":155,"column":7}},"52":{"start":{"line":153,"column":6},"end":{"line":153,"column":33}},"53":{"start":{"line":153,"column":14},"end":{"line":153,"column":33}},"54":{"start":{"line":154,"column":6},"end":{"line":154,"column":17}},"55":{"start":{"line":159,"column":0},"end":{"line":168,"column":1}},"56":{"start":{"line":160,"column":2},"end":{"line":167,"column":5}},"57":{"start":{"line":161,"column":4},"end":{"line":166,"column":5}},"58":{"start":{"line":162,"column":6},"end":{"line":162,"column":26}},"59":{"start":{"line":164,"column":6},"end":{"line":164,"column":42}},"60":{"start":{"line":164,"column":14},"end":{"line":164,"column":42}},"61":{"start":{"line":165,"column":6},"end":{"line":165,"column":43}},"62":{"start":{"line":170,"column":0},"end":{"line":170,"column":67}},"63":{"start":{"line":178,"column":0},"end":{"line":191,"column":2}},"64":{"start":{"line":179,"column":2},"end":{"line":179,"column":18}},"65":{"start":{"line":182,"column":2},"end":{"line":182,"column":73}},"66":{"start":{"line":182,"column":36},"end":{"line":182,"column":73}},"67":{"start":{"line":185,"column":2},"end":{"line":190,"column":5}},"68":{"start":{"line":186,"column":4},"end":{"line":189,"column":7}},"69":{"start":{"line":187,"column":6},"end":{"line":187,"column":33}},"70":{"start":{"line":187,"column":14},"end":{"line":187,"column":33}},"71":{"start":{"line":188,"column":6},"end":{"line":188,"column":17}},"72":{"start":{"line":193,"column":0},"end":{"line":205,"column":1}},"73":{"start":{"line":194,"column":2},"end":{"line":204,"column":5}},"74":{"start":{"line":195,"column":4},"end":{"line":203,"column":5}},"75":{"start":{"line":196,"column":6},"end":{"line":196,"column":24}},"76":{"start":{"line":197,"column":6},"end":{"line":197,"column":48}},"77":{"start":{"line":197,"column":19},"end":{"line":197,"column":48}},"78":{"start":{"line":198,"column":6},"end":{"line":198,"column":54}},"79":{"start":{"line":198,"column":19},"end":{"line":198,"column":54}},"80":{"start":{"line":199,"column":6},"end":{"line":199,"column":48}},"81":{"start":{"line":199,"column":19},"end":{"line":199,"column":48}},"82":{"start":{"line":200,"column":8},"end":{"line":200,"column":88}},"83":{"start":{"line":202,"column":6},"end":{"line":202,"column":98}},"84":{"start":{"line":207,"column":0},"end":{"line":207,"column":69}},"85":{"start":{"line":215,"column":0},"end":{"line":231,"column":1}},"86":{"start":{"line":216,"column":2},"end":{"line":216,"column":18}},"87":{"start":{"line":217,"column":2},"end":{"line":217,"column":54}},"88":{"start":{"line":218,"column":2},"end":{"line":218,"column":24}},"89":{"start":{"line":219,"column":2},"end":{"line":219,"column":56}},"90":{"start":{"line":219,"column":36},"end":{"line":219,"column":56}},"91":{"start":{"line":222,"column":2},"end":{"line":222,"column":96}},"92":{"start":{"line":222,"column":36},"end":{"line":222,"column":96}},"93":{"start":{"line":225,"column":2},"end":{"line":230,"column":5}},"94":{"start":{"line":226,"column":4},"end":{"line":229,"column":7}},"95":{"start":{"line":227,"column":6},"end":{"line":227,"column":33}},"96":{"start":{"line":227,"column":14},"end":{"line":227,"column":33}},"97":{"start":{"line":228,"column":6},"end":{"line":228,"column":17}},"98":{"start":{"line":233,"column":0},"end":{"line":233,"column":59}},"99":{"start":{"line":243,"column":0},"end":{"line":259,"column":1}},"100":{"start":{"line":244,"column":2},"end":{"line":244,"column":18}},"101":{"start":{"line":245,"column":2},"end":{"line":245,"column":68}},"102":{"start":{"line":245,"column":35},"end":{"line":245,"column":68}},"103":{"start":{"line":246,"column":2},"end":{"line":246,"column":34}},"104":{"start":{"line":247,"column":2},"end":{"line":247,"column":27}},"105":{"start":{"line":250,"column":2},"end":{"line":250,"column":105}},"106":{"start":{"line":250,"column":36},"end":{"line":250,"column":105}},"107":{"start":{"line":253,"column":2},"end":{"line":258,"column":5}},"108":{"start":{"line":254,"column":4},"end":{"line":257,"column":7}},"109":{"start":{"line":255,"column":6},"end":{"line":255,"column":33}},"110":{"start":{"line":255,"column":14},"end":{"line":255,"column":33}},"111":{"start":{"line":256,"column":6},"end":{"line":256,"column":17}},"112":{"start":{"line":261,"column":0},"end":{"line":261,"column":67}},"113":{"start":{"line":269,"column":0},"end":{"line":281,"column":1}},"114":{"start":{"line":270,"column":2},"end":{"line":270,"column":18}},"115":{"start":{"line":272,"column":2},"end":{"line":272,"column":89}},"116":{"start":{"line":272,"column":36},"end":{"line":272,"column":89}},"117":{"start":{"line":275,"column":2},"end":{"line":280,"column":5}},"118":{"start":{"line":276,"column":4},"end":{"line":279,"column":7}},"119":{"start":{"line":277,"column":6},"end":{"line":277,"column":33}},"120":{"start":{"line":277,"column":14},"end":{"line":277,"column":33}},"121":{"start":{"line":278,"column":6},"end":{"line":278,"column":20}},"122":{"start":{"line":283,"column":0},"end":{"line":283,"column":61}},"123":{"start":{"line":286,"column":0},"end":{"line":304,"column":1}},"124":{"start":{"line":287,"column":2},"end":{"line":287,"column":34}},"125":{"start":{"line":290,"column":2},"end":{"line":292,"column":3}},"126":{"start":{"line":291,"column":4},"end":{"line":291,"column":19}},"127":{"start":{"line":295,"column":2},"end":{"line":300,"column":3}},"128":{"start":{"line":296,"column":4},"end":{"line":296,"column":48}},"129":{"start":{"line":296,"column":18},"end":{"line":296,"column":48}},"130":{"start":{"line":297,"column":4},"end":{"line":297,"column":69}},"131":{"start":{"line":297,"column":25},"end":{"line":297,"column":69}},"132":{"start":{"line":298,"column":4},"end":{"line":298,"column":48}},"133":{"start":{"line":298,"column":18},"end":{"line":298,"column":48}},"134":{"start":{"line":299,"column":4},"end":{"line":299,"column":60}},"135":{"start":{"line":299,"column":22},"end":{"line":299,"column":60}},"136":{"start":{"line":303,"column":2},"end":{"line":303,"column":17}},"137":{"start":{"line":321,"column":0},"end":{"line":344,"column":1}},"138":{"start":{"line":322,"column":2},"end":{"line":322,"column":18}},"139":{"start":{"line":323,"column":2},"end":{"line":323,"column":54}},"140":{"start":{"line":324,"column":2},"end":{"line":324,"column":24}},"141":{"start":{"line":325,"column":2},"end":{"line":325,"column":56}},"142":{"start":{"line":325,"column":36},"end":{"line":325,"column":56}},"143":{"start":{"line":326,"column":2},"end":{"line":326,"column":44}},"144":{"start":{"line":327,"column":2},"end":{"line":327,"column":26}},"145":{"start":{"line":329,"column":2},"end":{"line":329,"column":44}},"146":{"start":{"line":331,"column":2},"end":{"line":331,"column":27}},"147":{"start":{"line":334,"column":2},"end":{"line":335,"column":68}},"148":{"start":{"line":335,"column":4},"end":{"line":335,"column":68}},"149":{"start":{"line":338,"column":2},"end":{"line":343,"column":5}},"150":{"start":{"line":339,"column":4},"end":{"line":342,"column":7}},"151":{"start":{"line":340,"column":6},"end":{"line":340,"column":33}},"152":{"start":{"line":340,"column":14},"end":{"line":340,"column":33}},"153":{"start":{"line":341,"column":6},"end":{"line":341,"column":17}},"154":{"start":{"line":346,"column":0},"end":{"line":346,"column":62}},"155":{"start":{"line":360,"column":0},"end":{"line":383,"column":1}},"156":{"start":{"line":361,"column":2},"end":{"line":361,"column":18}},"157":{"start":{"line":362,"column":2},"end":{"line":362,"column":54}},"158":{"start":{"line":363,"column":2},"end":{"line":363,"column":24}},"159":{"start":{"line":364,"column":2},"end":{"line":364,"column":56}},"160":{"start":{"line":364,"column":36},"end":{"line":364,"column":56}},"161":{"start":{"line":365,"column":2},"end":{"line":365,"column":44}},"162":{"start":{"line":366,"column":2},"end":{"line":366,"column":26}},"163":{"start":{"line":368,"column":2},"end":{"line":368,"column":44}},"164":{"start":{"line":370,"column":2},"end":{"line":370,"column":27}},"165":{"start":{"line":373,"column":2},"end":{"line":374,"column":61}},"166":{"start":{"line":374,"column":4},"end":{"line":374,"column":61}},"167":{"start":{"line":377,"column":2},"end":{"line":382,"column":5}},"168":{"start":{"line":378,"column":4},"end":{"line":381,"column":7}},"169":{"start":{"line":379,"column":6},"end":{"line":379,"column":33}},"170":{"start":{"line":379,"column":14},"end":{"line":379,"column":33}},"171":{"start":{"line":380,"column":6},"end":{"line":380,"column":17}},"172":{"start":{"line":385,"column":0},"end":{"line":385,"column":65}},"173":{"start":{"line":394,"column":0},"end":{"line":407,"column":2}},"174":{"start":{"line":395,"column":2},"end":{"line":395,"column":18}},"175":{"start":{"line":398,"column":2},"end":{"line":398,"column":84}},"176":{"start":{"line":398,"column":36},"end":{"line":398,"column":84}},"177":{"start":{"line":401,"column":2},"end":{"line":406,"column":5}},"178":{"start":{"line":402,"column":4},"end":{"line":405,"column":7}},"179":{"start":{"line":403,"column":6},"end":{"line":403,"column":33}},"180":{"start":{"line":403,"column":14},"end":{"line":403,"column":33}},"181":{"start":{"line":404,"column":6},"end":{"line":404,"column":17}},"182":{"start":{"line":409,"column":0},"end":{"line":431,"column":1}},"183":{"start":{"line":410,"column":2},"end":{"line":410,"column":19}},"184":{"start":{"line":411,"column":2},"end":{"line":411,"column":18}},"185":{"start":{"line":413,"column":2},"end":{"line":421,"column":3}},"186":{"start":{"line":414,"column":4},"end":{"line":414,"column":16}},"187":{"start":{"line":415,"column":9},"end":{"line":421,"column":3}},"188":{"start":{"line":416,"column":4},"end":{"line":416,"column":16}},"189":{"start":{"line":417,"column":9},"end":{"line":421,"column":3}},"190":{"start":{"line":418,"column":4},"end":{"line":418,"column":16}},"191":{"start":{"line":420,"column":4},"end":{"line":420,"column":80}},"192":{"start":{"line":424,"column":2},"end":{"line":424,"column":31}},"193":{"start":{"line":426,"column":2},"end":{"line":430,"column":5}},"194":{"start":{"line":427,"column":4},"end":{"line":428,"column":35}},"195":{"start":{"line":428,"column":6},"end":{"line":428,"column":35}},"196":{"start":{"line":429,"column":4},"end":{"line":429,"column":103}},"197":{"start":{"line":433,"column":0},"end":{"line":433,"column":72}},"198":{"start":{"line":441,"column":0},"end":{"line":454,"column":2}},"199":{"start":{"line":442,"column":2},"end":{"line":442,"column":18}},"200":{"start":{"line":445,"column":2},"end":{"line":445,"column":73}},"201":{"start":{"line":445,"column":36},"end":{"line":445,"column":73}},"202":{"start":{"line":448,"column":2},"end":{"line":453,"column":5}},"203":{"start":{"line":449,"column":4},"end":{"line":452,"column":7}},"204":{"start":{"line":450,"column":6},"end":{"line":450,"column":33}},"205":{"start":{"line":450,"column":14},"end":{"line":450,"column":33}},"206":{"start":{"line":451,"column":6},"end":{"line":451,"column":17}},"207":{"start":{"line":456,"column":0},"end":{"line":462,"column":1}},"208":{"start":{"line":457,"column":2},"end":{"line":461,"column":3}},"209":{"start":{"line":458,"column":4},"end":{"line":458,"column":111}},"210":{"start":{"line":460,"column":4},"end":{"line":460,"column":31}},"211":{"start":{"line":464,"column":0},"end":{"line":464,"column":69}},"212":{"start":{"line":474,"column":0},"end":{"line":493,"column":2}},"213":{"start":{"line":475,"column":2},"end":{"line":475,"column":18}},"214":{"start":{"line":476,"column":2},"end":{"line":476,"column":54}},"215":{"start":{"line":477,"column":2},"end":{"line":477,"column":24}},"216":{"start":{"line":478,"column":2},"end":{"line":478,"column":56}},"217":{"start":{"line":478,"column":36},"end":{"line":478,"column":56}},"218":{"start":{"line":479,"column":2},"end":{"line":479,"column":44}},"219":{"start":{"line":480,"column":2},"end":{"line":480,"column":26}},"220":{"start":{"line":483,"column":2},"end":{"line":484,"column":71}},"221":{"start":{"line":484,"column":4},"end":{"line":484,"column":71}},"222":{"start":{"line":487,"column":2},"end":{"line":492,"column":5}},"223":{"start":{"line":488,"column":4},"end":{"line":491,"column":7}},"224":{"start":{"line":489,"column":6},"end":{"line":489,"column":33}},"225":{"start":{"line":489,"column":14},"end":{"line":489,"column":33}},"226":{"start":{"line":490,"column":6},"end":{"line":490,"column":17}},"227":{"start":{"line":495,"column":0},"end":{"line":520,"column":1}},"228":{"start":{"line":496,"column":2},"end":{"line":496,"column":43}},"229":{"start":{"line":497,"column":2},"end":{"line":497,"column":34}},"230":{"start":{"line":500,"column":2},"end":{"line":504,"column":3}},"231":{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},"232":{"start":{"line":502,"column":6},"end":{"line":502,"column":42}},"233":{"start":{"line":506,"column":2},"end":{"line":519,"column":5}},"234":{"start":{"line":507,"column":4},"end":{"line":507,"column":47}},"235":{"start":{"line":507,"column":20},"end":{"line":507,"column":47}},"236":{"start":{"line":509,"column":4},"end":{"line":510,"column":70}},"237":{"start":{"line":510,"column":6},"end":{"line":510,"column":70}},"238":{"start":{"line":511,"column":4},"end":{"line":512,"column":69}},"239":{"start":{"line":512,"column":6},"end":{"line":512,"column":69}},"240":{"start":{"line":513,"column":4},"end":{"line":514,"column":86}},"241":{"start":{"line":514,"column":6},"end":{"line":514,"column":86}},"242":{"start":{"line":515,"column":4},"end":{"line":516,"column":86}},"243":{"start":{"line":516,"column":6},"end":{"line":516,"column":86}},"244":{"start":{"line":518,"column":4},"end":{"line":518,"column":31}},"245":{"start":{"line":522,"column":0},"end":{"line":522,"column":73}},"246":{"start":{"line":530,"column":0},"end":{"line":542,"column":1}},"247":{"start":{"line":531,"column":2},"end":{"line":531,"column":18}},"248":{"start":{"line":533,"column":2},"end":{"line":533,"column":108}},"249":{"start":{"line":533,"column":36},"end":{"line":533,"column":108}},"250":{"start":{"line":536,"column":2},"end":{"line":541,"column":5}},"251":{"start":{"line":537,"column":4},"end":{"line":540,"column":7}},"252":{"start":{"line":538,"column":6},"end":{"line":538,"column":33}},"253":{"start":{"line":538,"column":14},"end":{"line":538,"column":33}},"254":{"start":{"line":539,"column":6},"end":{"line":539,"column":17}},"255":{"start":{"line":544,"column":0},"end":{"line":544,"column":68}},"256":{"start":{"line":552,"column":0},"end":{"line":563,"column":2}},"257":{"start":{"line":553,"column":2},"end":{"line":553,"column":18}},"258":{"start":{"line":555,"column":2},"end":{"line":555,"column":76}},"259":{"start":{"line":555,"column":36},"end":{"line":555,"column":76}},"260":{"start":{"line":557,"column":2},"end":{"line":562,"column":5}},"261":{"start":{"line":558,"column":4},"end":{"line":561,"column":7}},"262":{"start":{"line":559,"column":6},"end":{"line":559,"column":33}},"263":{"start":{"line":559,"column":14},"end":{"line":559,"column":33}},"264":{"start":{"line":560,"column":6},"end":{"line":560,"column":17}},"265":{"start":{"line":565,"column":0},"end":{"line":572,"column":1}},"266":{"start":{"line":566,"column":2},"end":{"line":571,"column":5}},"267":{"start":{"line":567,"column":4},"end":{"line":568,"column":33}},"268":{"start":{"line":568,"column":6},"end":{"line":568,"column":33}},"269":{"start":{"line":569,"column":4},"end":{"line":569,"column":40}},"270":{"start":{"line":569,"column":12},"end":{"line":569,"column":40}},"271":{"start":{"line":570,"column":4},"end":{"line":570,"column":34}},"272":{"start":{"line":574,"column":0},"end":{"line":574,"column":71}},"273":{"start":{"line":576,"column":0},"end":{"line":576,"column":23}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"3":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":26},"end":{"line":71,"column":38}},{"start":{"line":71,"column":41},"end":{"line":71,"column":43}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"5":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":30},"end":{"line":75,"column":48}},{"start":{"line":75,"column":51},"end":{"line":75,"column":55}}]},"6":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"7":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"9":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"10":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"11":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"12":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"13":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":6}},{"start":{"line":153,"column":6},"end":{"line":153,"column":6}}]},"14":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"15":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":7},"end":{"line":161,"column":18}},{"start":{"line":161,"column":22},"end":{"line":161,"column":34}}]},"16":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"17":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"18":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":6},"end":{"line":187,"column":6}},{"start":{"line":187,"column":6},"end":{"line":187,"column":6}}]},"19":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"20":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":7},"end":{"line":195,"column":18}},{"start":{"line":195,"column":22},"end":{"line":195,"column":34}}]},"21":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":6},"end":{"line":197,"column":6}},{"start":{"line":197,"column":6},"end":{"line":197,"column":6}}]},"22":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":6}},{"start":{"line":198,"column":6},"end":{"line":198,"column":6}}]},"23":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"24":{"line":202,"type":"cond-expr","locations":[{"start":{"line":202,"column":20},"end":{"line":202,"column":39}},{"start":{"line":202,"column":42},"end":{"line":202,"column":97}}]},"25":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"26":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":2},"end":{"line":222,"column":2}},{"start":{"line":222,"column":2},"end":{"line":222,"column":2}}]},"27":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":6},"end":{"line":227,"column":6}},{"start":{"line":227,"column":6},"end":{"line":227,"column":6}}]},"28":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"29":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":2}},{"start":{"line":250,"column":2},"end":{"line":250,"column":2}}]},"30":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":6}},{"start":{"line":255,"column":6},"end":{"line":255,"column":6}}]},"31":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":2},"end":{"line":272,"column":2}},{"start":{"line":272,"column":2},"end":{"line":272,"column":2}}]},"32":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":6},"end":{"line":277,"column":6}},{"start":{"line":277,"column":6},"end":{"line":277,"column":6}}]},"33":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"34":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":5},"end":{"line":290,"column":14}},{"start":{"line":290,"column":18},"end":{"line":290,"column":34}},{"start":{"line":290,"column":38},"end":{"line":290,"column":47}},{"start":{"line":290,"column":51},"end":{"line":290,"column":64}}]},"35":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":295,"column":2}},{"start":{"line":295,"column":2},"end":{"line":295,"column":2}}]},"36":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"37":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":297,"column":4}},{"start":{"line":297,"column":4},"end":{"line":297,"column":4}}]},"38":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":4},"end":{"line":298,"column":4}},{"start":{"line":298,"column":4},"end":{"line":298,"column":4}}]},"39":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":4},"end":{"line":299,"column":4}},{"start":{"line":299,"column":4},"end":{"line":299,"column":4}}]},"40":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"41":{"line":326,"type":"cond-expr","locations":[{"start":{"line":326,"column":26},"end":{"line":326,"column":38}},{"start":{"line":326,"column":41},"end":{"line":326,"column":43}}]},"42":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":12},"end":{"line":327,"column":19}},{"start":{"line":327,"column":23},"end":{"line":327,"column":25}}]},"43":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"44":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":6},"end":{"line":340,"column":6}},{"start":{"line":340,"column":6},"end":{"line":340,"column":6}}]},"45":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":2},"end":{"line":364,"column":2}},{"start":{"line":364,"column":2},"end":{"line":364,"column":2}}]},"46":{"line":365,"type":"cond-expr","locations":[{"start":{"line":365,"column":26},"end":{"line":365,"column":38}},{"start":{"line":365,"column":41},"end":{"line":365,"column":43}}]},"47":{"line":366,"type":"binary-expr","locations":[{"start":{"line":366,"column":12},"end":{"line":366,"column":19}},{"start":{"line":366,"column":23},"end":{"line":366,"column":25}}]},"48":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":2},"end":{"line":373,"column":2}},{"start":{"line":373,"column":2},"end":{"line":373,"column":2}}]},"49":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":6},"end":{"line":379,"column":6}},{"start":{"line":379,"column":6},"end":{"line":379,"column":6}}]},"50":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"51":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":6},"end":{"line":403,"column":6}},{"start":{"line":403,"column":6},"end":{"line":403,"column":6}}]},"52":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":2},"end":{"line":413,"column":2}},{"start":{"line":413,"column":2},"end":{"line":413,"column":2}}]},"53":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":9},"end":{"line":415,"column":9}},{"start":{"line":415,"column":9},"end":{"line":415,"column":9}}]},"54":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":9},"end":{"line":417,"column":9}},{"start":{"line":417,"column":9},"end":{"line":417,"column":9}}]},"55":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":4},"end":{"line":427,"column":4}},{"start":{"line":427,"column":4},"end":{"line":427,"column":4}}]},"56":{"line":427,"type":"binary-expr","locations":[{"start":{"line":427,"column":7},"end":{"line":427,"column":18}},{"start":{"line":427,"column":22},"end":{"line":427,"column":34}}]},"57":{"line":429,"type":"cond-expr","locations":[{"start":{"line":429,"column":25},"end":{"line":429,"column":44}},{"start":{"line":429,"column":47},"end":{"line":429,"column":102}}]},"58":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":2},"end":{"line":445,"column":2}},{"start":{"line":445,"column":2},"end":{"line":445,"column":2}}]},"59":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":6},"end":{"line":450,"column":6}},{"start":{"line":450,"column":6},"end":{"line":450,"column":6}}]},"60":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":2},"end":{"line":478,"column":2}},{"start":{"line":478,"column":2},"end":{"line":478,"column":2}}]},"61":{"line":479,"type":"cond-expr","locations":[{"start":{"line":479,"column":26},"end":{"line":479,"column":38}},{"start":{"line":479,"column":41},"end":{"line":479,"column":43}}]},"62":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":12},"end":{"line":480,"column":19}},{"start":{"line":480,"column":23},"end":{"line":480,"column":25}}]},"63":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":2},"end":{"line":483,"column":2}},{"start":{"line":483,"column":2},"end":{"line":483,"column":2}}]},"64":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":6},"end":{"line":489,"column":6}},{"start":{"line":489,"column":6},"end":{"line":489,"column":6}}]},"65":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":4},"end":{"line":501,"column":4}},{"start":{"line":501,"column":4},"end":{"line":501,"column":4}}]},"66":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":4},"end":{"line":507,"column":4}},{"start":{"line":507,"column":4},"end":{"line":507,"column":4}}]},"67":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":4},"end":{"line":509,"column":4}},{"start":{"line":509,"column":4},"end":{"line":509,"column":4}}]},"68":{"line":511,"type":"if","locations":[{"start":{"line":511,"column":4},"end":{"line":511,"column":4}},{"start":{"line":511,"column":4},"end":{"line":511,"column":4}}]},"69":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":7},"end":{"line":511,"column":25}},{"start":{"line":511,"column":29},"end":{"line":511,"column":61}}]},"70":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":4},"end":{"line":513,"column":4}},{"start":{"line":513,"column":4},"end":{"line":513,"column":4}}]},"71":{"line":513,"type":"binary-expr","locations":[{"start":{"line":513,"column":7},"end":{"line":513,"column":25}},{"start":{"line":513,"column":29},"end":{"line":513,"column":74}}]},"72":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":4},"end":{"line":515,"column":4}},{"start":{"line":515,"column":4},"end":{"line":515,"column":4}}]},"73":{"line":515,"type":"binary-expr","locations":[{"start":{"line":515,"column":7},"end":{"line":515,"column":24}},{"start":{"line":515,"column":28},"end":{"line":515,"column":38}}]},"74":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":2},"end":{"line":533,"column":2}},{"start":{"line":533,"column":2},"end":{"line":533,"column":2}}]},"75":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":6},"end":{"line":538,"column":6}},{"start":{"line":538,"column":6},"end":{"line":538,"column":6}}]},"76":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":2},"end":{"line":555,"column":2}},{"start":{"line":555,"column":2},"end":{"line":555,"column":2}}]},"77":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":6},"end":{"line":559,"column":6}},{"start":{"line":559,"column":6},"end":{"line":559,"column":6}}]},"78":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":4},"end":{"line":567,"column":4}},{"start":{"line":567,"column":4},"end":{"line":567,"column":4}}]},"79":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":7},"end":{"line":567,"column":18}},{"start":{"line":567,"column":22},"end":{"line":567,"column":34}}]},"80":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":4},"end":{"line":569,"column":4}},{"start":{"line":569,"column":4},"end":{"line":569,"column":4}}]}},"code":["\"use strict\";","","var toError = require('./utils').toError,","  Define = require('./metadata'),","  shallowClone = require('./utils').shallowClone;","","/**"," * @fileOverview The **Admin** class is an internal class that allows convenient access to"," * the admin functionality and commands for MongoDB."," *"," * **ADMIN Cannot directly be instantiated**"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Use the admin database for the operation"," *   var adminDb = db.admin();"," *"," *   // List all the available databases"," *   adminDb.listDatabases(function(err, dbs) {"," *     test.equal(null, err);"," *     test.ok(dbs.databases.length > 0);"," *     db.close();"," *   });"," * });"," */","","/**"," * Create a new Admin instance (INTERNAL TYPE, do not instantiate directly)"," * @class"," * @return {Admin} a collection instance."," */","var Admin = function(db, topology, promiseLibrary) {","  if(!(this instanceof Admin)) return new Admin(db, topology);","","  // Internal state","  this.s = {","      db: db","    , topology: topology","    , promiseLibrary: promiseLibrary","  }","}","","var define = Admin.define = new Define('Admin', Admin, false);","","/**"," * The callback format for results"," * @callback Admin~resultCallback"," * @param {MongoError} error An error instance representing the error during the execution."," * @param {object} result The result object if the command was executed successfully."," */","","/**"," * Execute a command"," * @method"," * @param {object} command The command hash"," * @param {object} [options=null] Optional settings."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {number} [options.maxTimeMS=null] Number of milliseconds to wait before aborting the query."," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.command = function(command, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() : {};","","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand(command, options, function(err, doc) {","    return callback != null ? callback(err, doc) : null;","  });","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.executeDbAdminCommand(command, options, function(err, doc) {","      if(err) return reject(err);","      resolve(doc);","    });","  });","}","","define.classMethod('command', {callback: true, promise:true});","","/**"," * Retrieve the server information for the current"," * instance of the db client"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.buildInfo = function(callback) {","  var self = this;","  // Execute using callback","  if(typeof callback == 'function') return this.serverInfo(callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.serverInfo(function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('buildInfo', {callback: true, promise:true});","","/**"," * Retrieve the server information for the current"," * instance of the db client"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.serverInfo = function(callback) {","  var self = this;","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand({buildinfo:1}, function(err, doc) {","    if(err != null) return callback(err, null);","    callback(null, doc);","  });","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.executeDbAdminCommand({buildinfo:1}, function(err, doc) {","      if(err) return reject(err);","      resolve(doc);","    });","  });","}","","define.classMethod('serverInfo', {callback: true, promise:true});","","/**"," * Retrieve this db's server status."," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.serverStatus = function(callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return serverStatus(self, callback)","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    serverStatus(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var serverStatus = function(self, callback) {","  self.s.db.executeDbAdminCommand({serverStatus: 1}, function(err, doc) {","    if(err == null && doc.ok === 1) {","      callback(null, doc);","    } else {","      if(err) return callback(err, false);","      return callback(toError(doc), false);","    }","  });","}","","define.classMethod('serverStatus', {callback: true, promise:true});","","/**"," * Retrieve the current profiling Level for MongoDB"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.profilingLevel = function(callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return profilingLevel(self, callback)","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    profilingLevel(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var profilingLevel = function(self, callback) {","  self.s.db.executeDbAdminCommand({profile:-1}, function(err, doc) {","    if(err == null && doc.ok === 1) {","      var was = doc.was;","      if(was == 0) return callback(null, \"off\");","      if(was == 1) return callback(null, \"slow_only\");","      if(was == 2) return callback(null, \"all\");","        return callback(new Error(\"Error: illegal profiling level value \" + was), null);","    } else {","      err != null ? callback(err, null) : callback(new Error(\"Error with profile command\"), null);","    }","  });","}","","define.classMethod('profilingLevel', {callback: true, promise:true});","","/**"," * Ping the MongoDB server and retrieve results"," *"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.ping = function(options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 0);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.executeDbAdminCommand({ping: 1}, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.executeDbAdminCommand({ping: 1}, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('ping', {callback: true, promise:true});","","/**"," * Authenticate a user against the server."," * @method"," * @param {string} username The username."," * @param {string} [password] The password."," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.authenticate = function(username, password, options, callback) {","  var self = this;","  if(typeof options == 'function') callback = options, options = {};","  options = shallowClone(options);","  options.authdb = 'admin';","","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.authenticate(username, password, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.authenticate(username, password, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('authenticate', {callback: true, promise:true});","","/**"," * Logout user from server, fire off on all connections and remove all auth info"," * @method"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.logout = function(callback) {","  var self = this;","  // Execute using callback","  if(typeof callback == 'function') return this.s.db.logout({dbName: 'admin'}, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.logout({dbName: 'admin'}, function(err) {","      if(err) return reject(err);","      resolve(true);","    });","  });","}","","define.classMethod('logout', {callback: true, promise:true});","","// Get write concern","var writeConcern = function(options, db) {","  options = shallowClone(options);","","  // If options already contain write concerns return it","  if(options.w || options.wtimeout || options.j || options.fsync) {","    return options;","  }","","  // Set db write concern if available","  if(db.writeConcern) {","    if(options.w) options.w = db.writeConcern.w;","    if(options.wtimeout) options.wtimeout = db.writeConcern.wtimeout;","    if(options.j) options.j = db.writeConcern.j;","    if(options.fsync) options.fsync = db.writeConcern.fsync;","  }","","  // Return modified options","  return options;","}","","/**"," * Add a user to the database."," * @method"," * @param {string} username The username."," * @param {string} password The password."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {object} [options.customData=null] Custom data associated with the user (only Mongodb 2.6 or higher)"," * @param {object[]} [options.roles=null] Roles associated with the created user (only Mongodb 2.6 or higher)"," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.addUser = function(username, password, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 2);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() : {};","  options = options || {};","  // Get the options","  options = writeConcern(options, self.s.db)","  // Set the db name to admin","  options.dbName = 'admin';","","  // Execute using callback","  if(typeof callback == 'function')","    return self.s.db.addUser(username, password, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.addUser(username, password, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('addUser', {callback: true, promise:true});","","/**"," * Remove a user from a database"," * @method"," * @param {string} username The username."," * @param {object} [options=null] Optional settings."," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.fsync=false] Specify a file sync write concern."," * @param {Admin~resultCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.removeUser = function(username, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() : {};","  options = options || {};","  // Get the options","  options = writeConcern(options, self.s.db)","  // Set the db name","  options.dbName = 'admin';","","  // Execute using callback","  if(typeof callback == 'function')","    return self.s.db.removeUser(username, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.removeUser(username, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('removeUser', {callback: true, promise:true});","","/**"," * Set the current profiling level of MongoDB"," *"," * @param {string} level The new profiling level (off, slow_only, all)."," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.setProfilingLevel = function(level, callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return setProfilingLevel(self, level, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    setProfilingLevel(self, level, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var setProfilingLevel = function(self, level, callback) {","  var command = {};","  var profile = 0;","","  if(level == \"off\") {","    profile = 0;","  } else if(level == \"slow_only\") {","    profile = 1;","  } else if(level == \"all\") {","    profile = 2;","  } else {","    return callback(new Error(\"Error: illegal profiling level value \" + level));","  }","","  // Set up the profile number","  command['profile'] = profile;","","  self.s.db.executeDbAdminCommand(command, function(err, doc) {","    if(err == null && doc.ok === 1)","      return callback(null, level);","    return err != null ? callback(err, null) : callback(new Error(\"Error with profile command\"), null);","  });","}","","define.classMethod('setProfilingLevel', {callback: true, promise:true});","","/**"," * Retrive the current profiling information for MongoDB"," *"," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.profilingInfo = function(callback) {","  var self = this;","","  // Execute using callback","  if(typeof callback == 'function') return profilingInfo(self, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    profilingInfo(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var profilingInfo = function(self, callback) {","  try {","    self.s.topology.cursor(\"admin.system.profile\", { find: 'system.profile', query: {}}, {}).toArray(callback);","  } catch (err) {","    return callback(err, null);","  }","}","","define.classMethod('profilingLevel', {callback: true, promise:true});","","/**"," * Validate an existing collection"," *"," * @param {string} collectionName The name of the collection to validate."," * @param {object} [options=null] Optional settings."," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.validateCollection = function(collectionName, options, callback) {","  var self = this;","  var args = Array.prototype.slice.call(arguments, 1);","  callback = args.pop();","  if(typeof callback != 'function') args.push(callback);","  options = args.length ? args.shift() : {};","  options = options || {};","","  // Execute using callback","  if(typeof callback == 'function')","    return validateCollection(self, collectionName, options, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    validateCollection(self, collectionName, options, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var validateCollection = function(self, collectionName, options, callback) {","  var command = {validate: collectionName};","  var keys = Object.keys(options);","","  // Decorate command with extra options","  for(var i = 0; i < keys.length; i++) {","    if(options.hasOwnProperty(keys[i])) {","      command[keys[i]] = options[keys[i]];","    }","  }","","  self.s.db.command(command, function(err, doc) {","    if(err != null) return callback(err, null);","","    if(doc.ok === 0)","      return callback(new Error(\"Error with validate command\"), null);","    if(doc.result != null && doc.result.constructor != String)","      return callback(new Error(\"Error with validation data\"), null);","    if(doc.result != null && doc.result.match(/exception|corrupt/) != null)","      return callback(new Error(\"Error: invalid collection \" + collectionName), null);","    if(doc.valid != null && !doc.valid)","      return callback(new Error(\"Error: invalid collection \" + collectionName), null);","","    return callback(null, doc);","  });","}","","define.classMethod('validateCollection', {callback: true, promise:true});","","/**"," * List the available databases"," *"," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.listDatabases = function(callback) {","  var self = this;","  // Execute using callback","  if(typeof callback == 'function') return self.s.db.executeDbAdminCommand({listDatabases:1}, {}, callback);","","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    self.s.db.executeDbAdminCommand({listDatabases:1}, {}, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","}","","define.classMethod('listDatabases', {callback: true, promise:true});","","/**"," * Get ReplicaSet status"," *"," * @param {Admin~resultCallback} [callback] The command result callback."," * @return {Promise} returns Promise if no callback passed"," */","Admin.prototype.replSetGetStatus = function(callback) {","  var self = this;","  // Execute using callback","  if(typeof callback == 'function') return replSetGetStatus(self, callback);","  // Return a Promise","  return new this.s.promiseLibrary(function(resolve, reject) {","    replSetGetStatus(self, function(err, r) {","      if(err) return reject(err);","      resolve(r);","    });","  });","};","","var replSetGetStatus = function(self, callback) {","  self.s.db.executeDbAdminCommand({replSetGetStatus:1}, function(err, doc) {","    if(err == null && doc.ok === 1)","      return callback(null, doc);","    if(err) return callback(err, false);","    callback(toError(doc), false);","  });","}","","define.classMethod('replSetGetStatus', {callback: true, promise:true});","","module.exports = Admin;",""],"l":{"3":1,"36":1,"37":0,"40":0,"47":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"74":0,"75":0,"79":0,"80":0,"81":0,"82":0,"87":1,"96":1,"97":0,"99":0,"102":0,"103":0,"104":0,"105":0,"110":1,"119":1,"120":0,"122":0,"123":0,"124":0,"128":0,"129":0,"130":0,"131":0,"136":1,"144":1,"145":0,"148":0,"151":0,"152":0,"153":0,"154":0,"159":1,"160":0,"161":0,"162":0,"164":0,"165":0,"170":1,"178":1,"179":0,"182":0,"185":0,"186":0,"187":0,"188":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"202":0,"207":1,"215":1,"216":0,"217":0,"218":0,"219":0,"222":0,"225":0,"226":0,"227":0,"228":0,"233":1,"243":1,"244":0,"245":0,"246":0,"247":0,"250":0,"253":0,"254":0,"255":0,"256":0,"261":1,"269":1,"270":0,"272":0,"275":0,"276":0,"277":0,"278":0,"283":1,"286":1,"287":0,"290":0,"291":0,"295":0,"296":0,"297":0,"298":0,"299":0,"303":0,"321":1,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"329":0,"331":0,"334":0,"335":0,"338":0,"339":0,"340":0,"341":0,"346":1,"360":1,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"368":0,"370":0,"373":0,"374":0,"377":0,"378":0,"379":0,"380":0,"385":1,"394":1,"395":0,"398":0,"401":0,"402":0,"403":0,"404":0,"409":1,"410":0,"411":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"420":0,"424":0,"426":0,"427":0,"428":0,"429":0,"433":1,"441":1,"442":0,"445":0,"448":0,"449":0,"450":0,"451":0,"456":1,"457":0,"458":0,"460":0,"464":1,"474":1,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"483":0,"484":0,"487":0,"488":0,"489":0,"490":0,"495":1,"496":0,"497":0,"500":0,"501":0,"502":0,"506":0,"507":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"518":0,"522":1,"530":1,"531":0,"533":0,"536":0,"537":0,"538":0,"539":0,"544":1,"552":1,"553":0,"555":0,"557":0,"558":0,"559":0,"560":0,"565":1,"566":0,"567":0,"568":0,"569":0,"570":0,"574":1,"576":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/mongo_client.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/mongo_client.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":1,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"validOptions","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":31}}},"2":{"name":"MongoClient","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":23}}},"3":{"name":"(anonymous_3)","line":193,"loc":{"start":{"line":193,"column":22},"end":{"line":193,"column":55}}},"4":{"name":"(anonymous_4)","line":213,"loc":{"start":{"line":213,"column":30},"end":{"line":213,"column":56}}},"5":{"name":"(anonymous_5)","line":217,"loc":{"start":{"line":217,"column":28},"end":{"line":217,"column":46}}},"6":{"name":"(anonymous_6)","line":232,"loc":{"start":{"line":232,"column":19},"end":{"line":232,"column":53}}},"7":{"name":"(anonymous_7)","line":244,"loc":{"start":{"line":244,"column":27},"end":{"line":244,"column":59}}},"8":{"name":"translateOptions","line":266,"loc":{"start":{"line":266,"column":0},"end":{"line":266,"column":35}}},"9":{"name":"(anonymous_9)","line":287,"loc":{"start":{"line":287,"column":29},"end":{"line":287,"column":49}}},"10":{"name":"createReplicaset","line":294,"loc":{"start":{"line":294,"column":0},"end":{"line":294,"column":45}}},"11":{"name":"createMongos","line":301,"loc":{"start":{"line":301,"column":0},"end":{"line":301,"column":41}}},"12":{"name":"createServer","line":308,"loc":{"start":{"line":308,"column":0},"end":{"line":308,"column":41}}},"13":{"name":"(anonymous_13)","line":312,"loc":{"start":{"line":312,"column":51},"end":{"line":312,"column":69}}},"14":{"name":"connectHandler","line":330,"loc":{"start":{"line":330,"column":0},"end":{"line":330,"column":43}}},"15":{"name":"(anonymous_15)","line":331,"loc":{"start":{"line":331,"column":9},"end":{"line":331,"column":28}}},"16":{"name":"(anonymous_16)","line":333,"loc":{"start":{"line":333,"column":30},"end":{"line":333,"column":41}}},"17":{"name":"(anonymous_17)","line":345,"loc":{"start":{"line":345,"column":30},"end":{"line":345,"column":41}}},"18":{"name":"(anonymous_18)","line":362,"loc":{"start":{"line":362,"column":76},"end":{"line":362,"column":98}}},"19":{"name":"(anonymous_19)","line":364,"loc":{"start":{"line":364,"column":25},"end":{"line":364,"column":36}}},"20":{"name":"(anonymous_20)","line":374,"loc":{"start":{"line":374,"column":25},"end":{"line":374,"column":36}}},"21":{"name":"(anonymous_21)","line":390,"loc":{"start":{"line":390,"column":14},"end":{"line":390,"column":47}}},"22":{"name":"connectCallback","line":417,"loc":{"start":{"line":417,"column":2},"end":{"line":417,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":13,"column":51}},"2":{"start":{"line":29,"column":0},"end":{"line":37,"column":87}},"3":{"start":{"line":38,"column":0},"end":{"line":38,"column":42}},"4":{"start":{"line":39,"column":0},"end":{"line":39,"column":73}},"5":{"start":{"line":41,"column":0},"end":{"line":60,"column":1}},"6":{"start":{"line":42,"column":2},"end":{"line":42,"column":65}},"7":{"start":{"line":44,"column":2},"end":{"line":59,"column":3}},"8":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"9":{"start":{"line":46,"column":6},"end":{"line":46,"column":15}},"10":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"11":{"start":{"line":50,"column":6},"end":{"line":50,"column":67}},"12":{"start":{"line":51,"column":11},"end":{"line":53,"column":5}},"13":{"start":{"line":52,"column":6},"end":{"line":52,"column":65}},"14":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"15":{"start":{"line":56,"column":6},"end":{"line":57,"column":106}},"16":{"start":{"line":67,"column":0},"end":{"line":132,"column":1}},"17":{"start":{"line":131,"column":2},"end":{"line":131,"column":37}},"18":{"start":{"line":134,"column":0},"end":{"line":134,"column":80}},"19":{"start":{"line":193,"column":0},"end":{"line":228,"column":1}},"20":{"start":{"line":194,"column":2},"end":{"line":194,"column":54}},"21":{"start":{"line":195,"column":2},"end":{"line":195,"column":76}},"22":{"start":{"line":196,"column":2},"end":{"line":196,"column":46}},"23":{"start":{"line":197,"column":2},"end":{"line":197,"column":26}},"24":{"start":{"line":200,"column":2},"end":{"line":200,"column":34}},"25":{"start":{"line":203,"column":2},"end":{"line":203,"column":46}},"26":{"start":{"line":206,"column":2},"end":{"line":209,"column":3}},"27":{"start":{"line":207,"column":4},"end":{"line":208,"column":54}},"28":{"start":{"line":212,"column":2},"end":{"line":222,"column":3}},"29":{"start":{"line":213,"column":4},"end":{"line":221,"column":7}},"30":{"start":{"line":215,"column":6},"end":{"line":215,"column":33}},"31":{"start":{"line":215,"column":14},"end":{"line":215,"column":33}},"32":{"start":{"line":217,"column":6},"end":{"line":220,"column":9}},"33":{"start":{"line":218,"column":8},"end":{"line":218,"column":35}},"34":{"start":{"line":218,"column":16},"end":{"line":218,"column":35}},"35":{"start":{"line":219,"column":8},"end":{"line":219,"column":20}},"36":{"start":{"line":225,"column":2},"end":{"line":225,"column":31}},"37":{"start":{"line":225,"column":10},"end":{"line":225,"column":31}},"38":{"start":{"line":227,"column":2},"end":{"line":227,"column":34}},"39":{"start":{"line":230,"column":0},"end":{"line":230,"column":63}},"40":{"start":{"line":232,"column":0},"end":{"line":242,"column":1}},"41":{"start":{"line":233,"column":2},"end":{"line":239,"column":3}},"42":{"start":{"line":234,"column":4},"end":{"line":238,"column":5}},"43":{"start":{"line":235,"column":6},"end":{"line":235,"column":59}},"44":{"start":{"line":237,"column":6},"end":{"line":237,"column":34}},"45":{"start":{"line":241,"column":2},"end":{"line":241,"column":16}},"46":{"start":{"line":244,"column":0},"end":{"line":264,"column":1}},"47":{"start":{"line":245,"column":2},"end":{"line":246,"column":81}},"48":{"start":{"line":247,"column":2},"end":{"line":247,"column":19}},"49":{"start":{"line":249,"column":2},"end":{"line":261,"column":3}},"50":{"start":{"line":250,"column":4},"end":{"line":260,"column":5}},"51":{"start":{"line":251,"column":6},"end":{"line":251,"column":41}},"52":{"start":{"line":252,"column":11},"end":{"line":260,"column":5}},"53":{"start":{"line":253,"column":6},"end":{"line":253,"column":70}},"54":{"start":{"line":255,"column":6},"end":{"line":259,"column":7}},"55":{"start":{"line":256,"column":8},"end":{"line":256,"column":71}},"56":{"start":{"line":258,"column":8},"end":{"line":258,"column":43}},"57":{"start":{"line":263,"column":2},"end":{"line":263,"column":22}},"58":{"start":{"line":266,"column":0},"end":{"line":292,"column":1}},"59":{"start":{"line":268,"column":2},"end":{"line":270,"column":3}},"60":{"start":{"line":269,"column":4},"end":{"line":269,"column":99}},"61":{"start":{"line":273,"column":2},"end":{"line":275,"column":3}},"62":{"start":{"line":274,"column":4},"end":{"line":274,"column":93}},"63":{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},"64":{"start":{"line":279,"column":4},"end":{"line":279,"column":77}},"65":{"start":{"line":283,"column":2},"end":{"line":283,"column":70}},"66":{"start":{"line":283,"column":38},"end":{"line":283,"column":70}},"67":{"start":{"line":284,"column":2},"end":{"line":284,"column":72}},"68":{"start":{"line":284,"column":39},"end":{"line":284,"column":72}},"69":{"start":{"line":287,"column":2},"end":{"line":291,"column":5}},"70":{"start":{"line":288,"column":4},"end":{"line":290,"column":58}},"71":{"start":{"line":294,"column":0},"end":{"line":299,"column":1}},"72":{"start":{"line":296,"column":2},"end":{"line":296,"column":42}},"73":{"start":{"line":298,"column":2},"end":{"line":298,"column":80}},"74":{"start":{"line":301,"column":0},"end":{"line":306,"column":1}},"75":{"start":{"line":303,"column":2},"end":{"line":303,"column":42}},"76":{"start":{"line":305,"column":2},"end":{"line":305,"column":79}},"77":{"start":{"line":308,"column":0},"end":{"line":328,"column":1}},"78":{"start":{"line":310,"column":2},"end":{"line":310,"column":42}},"79":{"start":{"line":312,"column":2},"end":{"line":327,"column":5}},"80":{"start":{"line":313,"column":4},"end":{"line":313,"column":33}},"81":{"start":{"line":313,"column":12},"end":{"line":313,"column":33}},"82":{"start":{"line":315,"column":4},"end":{"line":315,"column":50}},"83":{"start":{"line":318,"column":4},"end":{"line":323,"column":5}},"84":{"start":{"line":320,"column":6},"end":{"line":320,"column":17}},"85":{"start":{"line":322,"column":6},"end":{"line":322,"column":45}},"86":{"start":{"line":326,"column":4},"end":{"line":326,"column":22}},"87":{"start":{"line":330,"column":0},"end":{"line":385,"column":1}},"88":{"start":{"line":331,"column":2},"end":{"line":384,"column":3}},"89":{"start":{"line":332,"column":4},"end":{"line":341,"column":5}},"90":{"start":{"line":333,"column":6},"end":{"line":340,"column":9}},"91":{"start":{"line":334,"column":8},"end":{"line":339,"column":9}},"92":{"start":{"line":335,"column":10},"end":{"line":335,"column":30}},"93":{"start":{"line":337,"column":10},"end":{"line":337,"column":28}},"94":{"start":{"line":337,"column":17},"end":{"line":337,"column":28}},"95":{"start":{"line":338,"column":10},"end":{"line":338,"column":19}},"96":{"start":{"line":344,"column":4},"end":{"line":353,"column":5}},"97":{"start":{"line":345,"column":6},"end":{"line":352,"column":8}},"98":{"start":{"line":346,"column":8},"end":{"line":351,"column":9}},"99":{"start":{"line":347,"column":10},"end":{"line":347,"column":28}},"100":{"start":{"line":349,"column":10},"end":{"line":349,"column":28}},"101":{"start":{"line":349,"column":17},"end":{"line":349,"column":28}},"102":{"start":{"line":350,"column":10},"end":{"line":350,"column":19}},"103":{"start":{"line":356,"column":4},"end":{"line":356,"column":31}},"104":{"start":{"line":357,"column":4},"end":{"line":359,"column":5}},"105":{"start":{"line":358,"column":6},"end":{"line":358,"column":52}},"106":{"start":{"line":362,"column":4},"end":{"line":383,"column":7}},"107":{"start":{"line":363,"column":6},"end":{"line":382,"column":7}},"108":{"start":{"line":364,"column":8},"end":{"line":371,"column":11}},"109":{"start":{"line":365,"column":10},"end":{"line":370,"column":11}},"110":{"start":{"line":366,"column":12},"end":{"line":366,"column":31}},"111":{"start":{"line":368,"column":12},"end":{"line":368,"column":30}},"112":{"start":{"line":368,"column":19},"end":{"line":368,"column":30}},"113":{"start":{"line":369,"column":12},"end":{"line":369,"column":21}},"114":{"start":{"line":373,"column":8},"end":{"line":373,"column":26}},"115":{"start":{"line":373,"column":15},"end":{"line":373,"column":26}},"116":{"start":{"line":374,"column":8},"end":{"line":381,"column":11}},"117":{"start":{"line":375,"column":10},"end":{"line":380,"column":11}},"118":{"start":{"line":376,"column":12},"end":{"line":376,"column":100}},"119":{"start":{"line":378,"column":12},"end":{"line":378,"column":30}},"120":{"start":{"line":378,"column":19},"end":{"line":378,"column":30}},"121":{"start":{"line":379,"column":12},"end":{"line":379,"column":21}},"122":{"start":{"line":390,"column":0},"end":{"line":439,"column":1}},"123":{"start":{"line":391,"column":2},"end":{"line":391,"column":26}},"124":{"start":{"line":392,"column":2},"end":{"line":392,"column":34}},"125":{"start":{"line":395,"column":2},"end":{"line":397,"column":3}},"126":{"start":{"line":396,"column":4},"end":{"line":396,"column":53}},"127":{"start":{"line":400,"column":2},"end":{"line":400,"column":46}},"128":{"start":{"line":403,"column":2},"end":{"line":403,"column":35}},"129":{"start":{"line":404,"column":2},"end":{"line":404,"column":55}},"130":{"start":{"line":405,"column":2},"end":{"line":405,"column":61}},"131":{"start":{"line":406,"column":2},"end":{"line":406,"column":63}},"132":{"start":{"line":409,"column":2},"end":{"line":409,"column":82}},"133":{"start":{"line":409,"column":44},"end":{"line":409,"column":82}},"134":{"start":{"line":410,"column":2},"end":{"line":410,"column":84}},"135":{"start":{"line":410,"column":45},"end":{"line":410,"column":84}},"136":{"start":{"line":413,"column":2},"end":{"line":415,"column":3}},"137":{"start":{"line":414,"column":4},"end":{"line":414,"column":77}},"138":{"start":{"line":417,"column":2},"end":{"line":429,"column":3}},"139":{"start":{"line":418,"column":4},"end":{"line":425,"column":5}},"140":{"start":{"line":419,"column":6},"end":{"line":421,"column":7}},"141":{"start":{"line":420,"column":8},"end":{"line":420,"column":207}},"142":{"start":{"line":424,"column":6},"end":{"line":424,"column":222}},"143":{"start":{"line":428,"column":4},"end":{"line":428,"column":22}},"144":{"start":{"line":432,"column":2},"end":{"line":438,"column":3}},"145":{"start":{"line":433,"column":4},"end":{"line":433,"column":91}},"146":{"start":{"line":434,"column":9},"end":{"line":438,"column":3}},"147":{"start":{"line":435,"column":4},"end":{"line":435,"column":87}},"148":{"start":{"line":437,"column":4},"end":{"line":437,"column":87}},"149":{"start":{"line":441,"column":0},"end":{"line":441,"column":28}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":7},"end":{"line":49,"column":40}},{"start":{"line":49,"column":44},"end":{"line":49,"column":67}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":11},"end":{"line":51,"column":11}},{"start":{"line":51,"column":11},"end":{"line":51,"column":11}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"6":{"line":195,"type":"cond-expr","locations":[{"start":{"line":195,"column":58},"end":{"line":195,"column":68}},{"start":{"line":195,"column":71},"end":{"line":195,"column":75}}]},"7":{"line":196,"type":"cond-expr","locations":[{"start":{"line":196,"column":26},"end":{"line":196,"column":38}},{"start":{"line":196,"column":41},"end":{"line":196,"column":45}}]},"8":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":12},"end":{"line":197,"column":19}},{"start":{"line":197,"column":23},"end":{"line":197,"column":25}}]},"9":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"10":{"line":207,"type":"cond-expr","locations":[{"start":{"line":208,"column":6},"end":{"line":208,"column":20}},{"start":{"line":208,"column":23},"end":{"line":208,"column":53}}]},"11":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"12":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":6}},{"start":{"line":215,"column":6},"end":{"line":215,"column":6}}]},"13":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"14":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":225,"column":2}},{"start":{"line":225,"column":2},"end":{"line":225,"column":2}}]},"15":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":4},"end":{"line":234,"column":4}},{"start":{"line":234,"column":4},"end":{"line":234,"column":4}}]},"16":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":7},"end":{"line":234,"column":19}},{"start":{"line":234,"column":23},"end":{"line":234,"column":54}},{"start":{"line":234,"column":58},"end":{"line":234,"column":65}}]},"17":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"18":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":11},"end":{"line":252,"column":11}},{"start":{"line":252,"column":11},"end":{"line":252,"column":11}}]},"19":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":6}},{"start":{"line":255,"column":6},"end":{"line":255,"column":6}}]},"20":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":9},"end":{"line":255,"column":22}},{"start":{"line":255,"column":26},"end":{"line":255,"column":58}},{"start":{"line":255,"column":62},"end":{"line":255,"column":93}},{"start":{"line":255,"column":97},"end":{"line":255,"column":126}}]},"21":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"22":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":5},"end":{"line":268,"column":46}},{"start":{"line":268,"column":50},"end":{"line":268,"column":92}}]},"23":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":48},"end":{"line":269,"column":70}},{"start":{"line":269,"column":74},"end":{"line":269,"column":97}}]},"24":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":2},"end":{"line":273,"column":2}},{"start":{"line":273,"column":2},"end":{"line":273,"column":2}}]},"25":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":5},"end":{"line":273,"column":27}},{"start":{"line":273,"column":32},"end":{"line":273,"column":58}},{"start":{"line":273,"column":62},"end":{"line":273,"column":90}}]},"26":{"line":274,"type":"binary-expr","locations":[{"start":{"line":274,"column":34},"end":{"line":274,"column":60}},{"start":{"line":274,"column":64},"end":{"line":274,"column":92}}]},"27":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"28":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"29":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":2},"end":{"line":284,"column":2}},{"start":{"line":284,"column":2},"end":{"line":284,"column":2}}]},"30":{"line":288,"type":"cond-expr","locations":[{"start":{"line":289,"column":6},"end":{"line":289,"column":57}},{"start":{"line":290,"column":6},"end":{"line":290,"column":57}}]},"31":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":4}},{"start":{"line":313,"column":4},"end":{"line":313,"column":4}}]},"32":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":4},"end":{"line":318,"column":4}},{"start":{"line":318,"column":4},"end":{"line":318,"column":4}}]},"33":{"line":318,"type":"binary-expr","locations":[{"start":{"line":318,"column":7},"end":{"line":318,"column":15}},{"start":{"line":318,"column":19},"end":{"line":318,"column":45}}]},"34":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"35":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":10},"end":{"line":337,"column":10}},{"start":{"line":337,"column":10},"end":{"line":337,"column":10}}]},"36":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":4},"end":{"line":344,"column":4}},{"start":{"line":344,"column":4},"end":{"line":344,"column":4}}]},"37":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":10},"end":{"line":349,"column":10}},{"start":{"line":349,"column":10},"end":{"line":349,"column":10}}]},"38":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":4},"end":{"line":357,"column":4}},{"start":{"line":357,"column":4},"end":{"line":357,"column":4}}]},"39":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":6},"end":{"line":363,"column":6}},{"start":{"line":363,"column":6},"end":{"line":363,"column":6}}]},"40":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":12},"end":{"line":368,"column":12}},{"start":{"line":368,"column":12},"end":{"line":368,"column":12}}]},"41":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":8},"end":{"line":373,"column":8}},{"start":{"line":373,"column":8},"end":{"line":373,"column":8}}]},"42":{"line":376,"type":"cond-expr","locations":[{"start":{"line":376,"column":27},"end":{"line":376,"column":30}},{"start":{"line":376,"column":33},"end":{"line":376,"column":92}}]},"43":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":12},"end":{"line":378,"column":12}},{"start":{"line":378,"column":12},"end":{"line":378,"column":12}}]},"44":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":12},"end":{"line":391,"column":19}},{"start":{"line":391,"column":23},"end":{"line":391,"column":25}}]},"45":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"46":{"line":409,"type":"if","locations":[{"start":{"line":409,"column":2},"end":{"line":409,"column":2}},{"start":{"line":409,"column":2},"end":{"line":409,"column":2}}]},"47":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":410,"column":2}},{"start":{"line":410,"column":2},"end":{"line":410,"column":2}}]},"48":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":2},"end":{"line":413,"column":2}},{"start":{"line":413,"column":2},"end":{"line":413,"column":2}}]},"49":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":4},"end":{"line":418,"column":4}},{"start":{"line":418,"column":4},"end":{"line":418,"column":4}}]},"50":{"line":418,"type":"binary-expr","locations":[{"start":{"line":418,"column":7},"end":{"line":418,"column":10}},{"start":{"line":418,"column":14},"end":{"line":418,"column":67}}]},"51":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":6},"end":{"line":419,"column":6}},{"start":{"line":419,"column":6},"end":{"line":419,"column":6}}]},"52":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":432,"column":2}},{"start":{"line":432,"column":2},"end":{"line":432,"column":2}}]},"53":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":5},"end":{"line":432,"column":29}},{"start":{"line":432,"column":33},"end":{"line":432,"column":54}}]},"54":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":9},"end":{"line":434,"column":9}},{"start":{"line":434,"column":9},"end":{"line":434,"column":9}}]}},"code":["\"use strict\";","","var parse = require('./url_parser')","  , Server = require('./server')","  , Mongos = require('./mongos')","  , ReplSet = require('./replset')","  , Define = require('./metadata')","  , ReadPreference = require('./read_preference')","  , Logger = require('mongodb-core').Logger","  , MongoError = require('mongodb-core').MongoError","  , Db = require('./db')","  , f = require('util').format","  , shallowClone = require('./utils').shallowClone;","","/**"," * @fileOverview The **MongoClient** class is a class that allows for making Connections to MongoDB."," *"," * @example"," * var MongoClient = require('mongodb').MongoClient,"," *   test = require('assert');"," * // Connection url"," * var url = 'mongodb://localhost:27017/test';"," * // Connect using MongoClient"," * MongoClient.connect(url, function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */","var validOptionNames = ['poolSize', 'ssl', 'sslValidate', 'sslCA', 'sslCert',","  'sslKey', 'sslPass', 'sslCRL', 'autoReconnect', 'noDelay', 'keepAlive', 'connectTimeoutMS',","  'socketTimeoutMS', 'reconnectTries', 'reconnectInterval', 'ha', 'haInterval',","  'replicaSet', 'secondaryAcceptableLatencyMS', 'acceptableLatencyMS',","  'connectWithNoPrimary', 'authSource', 'w', 'wtimeout', 'j', 'forceServerObjectId',","  'serializeFunctions', 'ignoreUndefined', 'raw', 'promoteLongs', 'bufferMaxEntries',","  'readPreference', 'pkFactory', 'promiseLibrary', 'readConcern', 'maxStalenessSeconds',","  'loggerLevel', 'logger', 'promoteValues', 'promoteBuffers', 'promoteLongs',","  'domainsEnabled', 'keepAliveInitialDelay', 'checkServerIdentity', 'validateOptions'];","var ignoreOptionNames = ['native_parser'];","var legacyOptionNames = ['server', 'replset', 'replSet', 'mongos', 'db'];","","function validOptions(options) {","  var _validOptions = validOptionNames.concat(legacyOptionNames);","","  for(var name in options) {","    if(ignoreOptionNames.indexOf(name) != -1) {","      continue;","    }","","    if(_validOptions.indexOf(name) == -1 && options.validateOptions) {","      return new MongoError(f('option %s is not supported', name));","    } else if(_validOptions.indexOf(name) == -1) {","      console.warn(f('the options [%s] is not supported', name));","    }","","    if(legacyOptionNames.indexOf(name) != -1) {","      console.warn(f('the server/replset/mongos options are deprecated, '","      + 'all their options are supported at the top level of the options object [%s]', validOptionNames));","    }","  }","}","","/**"," * Creates a new MongoClient instance"," * @class"," * @return {MongoClient} a MongoClient instance."," */","function MongoClient() {","  /**","   * The callback format for results","   * @callback MongoClient~connectCallback","   * @param {MongoError} error An error instance representing the error during the execution.","   * @param {Db} db The connected database.","   */","","  /**","   * Connect to MongoDB using a url as documented at","   *","   *  docs.mongodb.org/manual/reference/connection-string/","   *","   * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver","   *","   * @method","   * @param {string} url The connection URI string","   * @param {object} [options] Optional settings.","   * @param {number} [options.poolSize=5] poolSize The maximum size of the individual server pool.","   * @param {boolean} [options.ssl=false] Enable SSL connection.","   * @param {Buffer} [options.sslCA=undefined] SSL Certificate store binary buffer","   * @param {Buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer","   * @param {Buffer} [options.sslCert=undefined] SSL Certificate binary buffer","   * @param {Buffer} [options.sslKey=undefined] SSL Key file binary buffer","   * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase","   * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.","   * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances","   * @param {boolean} [options.noDelay=true] TCP Connection no delay","   * @param {boolean} [options.keepAlive=0] The number of milliseconds to wait before initiating keepAlive on the TCP socket.","   * @param {number} [options.connectTimeoutMS=30000] TCP Connection timeout setting","   * @param {number} [options.socketTimeoutMS=30000] TCP Socket timeout setting","   * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times","   * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries","   * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies.","   * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry","   * @param {string} [options.replicaSet=undefined] The Replicaset set name","   * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection","   * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection.","   * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available","   * @param {string} [options.authSource=undefined] Define the database to authenticate against","   * @param {(number|string)} [options.w=null] The write concern.","   * @param {number} [options.wtimeout=null] The write concern timeout.","   * @param {boolean} [options.j=false] Specify a journal write concern.","   * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.","   * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.","   * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.","   * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.","   * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.","   * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.","   * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.","   * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.","   * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).","   * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.","   * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys.","   * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible","   * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)","   * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)","   * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed);","   * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)","   * @param {object} [options.logger=undefined] Custom logger object","   * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness.","   * @param {MongoClient~connectCallback} [callback] The command result callback","   * @return {Promise} returns Promise if no callback passed","   */","  this.connect = MongoClient.connect;","}","","var define = MongoClient.define = new Define('MongoClient', MongoClient, false);","","/**"," * Connect to MongoDB using a url as documented at"," *"," *  docs.mongodb.org/manual/reference/connection-string/"," *"," * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver"," *"," * @method"," * @static"," * @param {string} url The connection URI string"," * @param {object} [options] Optional settings."," * @param {number} [options.poolSize=5] poolSize The maximum size of the individual server pool."," * @param {boolean} [options.ssl=false] Enable SSL connection."," * @param {Buffer} [options.sslCA=undefined] SSL Certificate store binary buffer"," * @param {Buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer"," * @param {Buffer} [options.sslCert=undefined] SSL Certificate binary buffer"," * @param {Buffer} [options.sslKey=undefined] SSL Key file binary buffer"," * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances"," * @param {boolean} [options.noDelay=true] TCP Connection no delay"," * @param {boolean} [options.keepAlive=0] The number of milliseconds to wait before initiating keepAlive on the TCP socket."," * @param {number} [options.connectTimeoutMS=30000] TCP Connection timeout setting"," * @param {number} [options.socketTimeoutMS=30000] TCP Socket timeout setting"," * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times"," * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries"," * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies."," * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry"," * @param {string} [options.replicaSet=undefined] The Replicaset set name"," * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection"," * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection."," * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available"," * @param {string} [options.authSource=undefined] Define the database to authenticate against"," * @param {(number|string)} [options.w=null] The write concern."," * @param {number} [options.wtimeout=null] The write concern timeout."," * @param {boolean} [options.j=false] Specify a journal write concern."," * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver."," * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object."," * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields."," * @param {boolean} [options.raw=false] Return document results as raw BSON buffers."," * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution."," * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers."," * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types."," * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited."," * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)."," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @param {object} [options.pkFactory=null] A primary key factory object for generation of custom _id keys."," * @param {object} [options.promiseLibrary=null] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible"," * @param {object} [options.readConcern=null] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)"," * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)"," * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed);"," * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)"," * @param {object} [options.logger=undefined] Custom logger object"," * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness."," * @param {MongoClient~connectCallback} [callback] The command result callback"," * @return {Promise} returns Promise if no callback passed"," */","MongoClient.connect = function(url, options, callback) {","  var args = Array.prototype.slice.call(arguments, 1);","  callback = typeof args[args.length - 1] == 'function' ? args.pop() : null;","  options = args.length ? args.shift() : null;","  options = options || {};","","  // Validate options object","  var err = validOptions(options);","","  // Get the promiseLibrary","  var promiseLibrary = options.promiseLibrary;","","  // No promise library selected fall back","  if(!promiseLibrary) {","    promiseLibrary = typeof global.Promise == 'function' ?","      global.Promise : require('es6-promise').Promise;","  }","","  // Return a promise","  if(typeof callback != 'function') {","    return new promiseLibrary(function(resolve, reject) {","      // Did we have a validation error","      if(err) return reject(err);","      // Attempt to connect","      connect(url, options, function(err, db) {","        if(err) return reject(err);","        resolve(db);","      });","    });","  }","","  // Did we have a validation error","  if(err) return callback(err);","  // Fallback to callback based connect","  connect(url, options, callback);","}","","define.staticMethod('connect', {callback: true, promise:true});","","var mergeOptions = function(target, source, flatten) {","  for(var name in source) {","    if(source[name] && typeof source[name] == 'object' && flatten) {","      target = mergeOptions(target, source[name], flatten);","    } else {","      target[name] = source[name];","    }","  }","","  return target;","}","","var createUnifiedOptions = function(finalOptions, options) {","  var childOptions = ['mongos', 'server', 'db'","    , 'replset', 'db_options', 'server_options', 'rs_options', 'mongos_options'];","  var noMerge = [];","","  for(var name in options) {","    if(noMerge.indexOf(name.toLowerCase()) != -1) {","      finalOptions[name] = options[name];","    } else if(childOptions.indexOf(name.toLowerCase()) != -1) {","      finalOptions = mergeOptions(finalOptions, options[name], false);","    } else {","      if(options[name] && typeof options[name] == 'object' && !Buffer.isBuffer(options[name]) && !Array.isArray(options[name])) {","        finalOptions = mergeOptions(finalOptions, options[name], true);","      } else {","        finalOptions[name] = options[name];","      }","    }","  }","","  return finalOptions;","}","","function translateOptions(options) {","  // If we have a readPreference passed in by the db options","  if(typeof options.readPreference == 'string' || typeof options.read_preference == 'string') {","    options.readPreference = new ReadPreference(options.readPreference || options.read_preference);","  }","","  // Do we have readPreference tags, add them","  if(options.readPreference && (options.readPreferenceTags || options.read_preference_tags)) {","    options.readPreference.tags = options.readPreferenceTags || options.read_preference_tags;","  }","","  // Do we have maxStalenessSeconds","  if(options.maxStalenessSeconds) {","    options.readPreference.maxStalenessSeconds = options.maxStalenessSeconds;","  }","","  // Set the socket and connection timeouts","  if(options.socketTimeoutMS == null) options.socketTimeoutMS = 30000;","  if(options.connectTimeoutMS == null) options.connectTimeoutMS = 30000;","","  // Create server instances","  return options.servers.map(function(serverObj) {","    return serverObj.domain_socket ?","      new Server(serverObj.domain_socket, 27017, options)","    : new Server(serverObj.host, serverObj.port, options);","  });","}","","function createReplicaset(options, callback) {","  // Set default options","  var servers = translateOptions(options);","  // Create Db instance","  new Db(options.dbName, new ReplSet(servers, options), options).open(callback);","}","","function createMongos(options, callback) {","  // Set default options","  var servers = translateOptions(options);","  // Create Db instance","  new Db(options.dbName, new Mongos(servers, options), options).open(callback);","}","","function createServer(options, callback) {","  // Set default options","  var servers = translateOptions(options);","  // Create Db instance","  new Db(options.dbName, servers[0], options).open(function(err, db) {","    if(err) return callback(err);","    // Check if we are really speaking to a mongos","    var ismaster = db.serverConfig.lastIsMaster();","","    // Do we actually have a mongos","    if(ismaster && ismaster.msg == 'isdbgrid') {","      // Destroy the current connection","      db.close();","      // Create mongos connection instead","      return createMongos(options, callback);","    }","","    // Otherwise callback","    callback(err, db);","  });","}","","function connectHandler(options, callback) {","  return function (err, db) {","    if(err) {","      return process.nextTick(function() {","        try {","          callback(err, null);","        } catch (err) {","          if(db) db.close();","          throw err","        }","      });","    }","","    // No authentication just reconnect","    if(!options.auth) {","      return process.nextTick(function() {","        try {","          callback(err, db);","        } catch (err) {","          if(db) db.close();","          throw err","        }","      })","    }","","    // What db to authenticate against","    var authentication_db = db;","    if(options.authSource) {","      authentication_db = db.db(options.authSource);","    }","","    // Authenticate","    authentication_db.authenticate(options.user, options.password, options, function(err, success){","      if(success){","        process.nextTick(function() {","          try {","            callback(null, db);","          } catch (err) {","            if(db) db.close();","            throw err","          }","        });","      } else {","        if(db) db.close();","        process.nextTick(function() {","          try {","            callback(err ? err : new Error('Could not authenticate user ' + options.auth[0]), null);","          } catch (err) {","            if(db) db.close();","            throw err","          }","        });","      }","    });","  }","}","","/*"," * Connect using MongoClient"," */","var connect = function(url, options, callback) {","  options = options || {};","  options = shallowClone(options);","","  // If callback is null throw an exception","  if(callback == null) {","    throw new Error(\"no callback function provided\");","  }","","  // Get a logger for MongoClient","  var logger = Logger('MongoClient', options);","","  // Parse the string","  var object = parse(url, options);","  var _finalOptions = createUnifiedOptions({}, object);","  _finalOptions = mergeOptions(_finalOptions, object, false);","  _finalOptions = createUnifiedOptions(_finalOptions, options);","","  // Check if we have connection and socket timeout set","  if(_finalOptions.socketTimeoutMS == null) _finalOptions.socketTimeoutMS = 30000;","  if(_finalOptions.connectTimeoutMS == null) _finalOptions.connectTimeoutMS = 30000;","","  // Failure modes","  if(object.servers.length == 0) {","    throw new Error(\"connection string must contain at least one seed host\");","  }","","  function connectCallback(err, db) {","    if(err && err.message == 'no mongos proxies found in seed list') {","      if(logger.isWarn()) {","        logger.warn(f('seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name'));","      }","","      // Return a more specific error message for MongoClient.connect","      return callback(new MongoError('seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name'));","    }","","    // Return the error and db instance","    callback(err, db);","  }","","  // Do we have a replicaset then skip discovery and go straight to connectivity","  if(_finalOptions.replicaSet || _finalOptions.rs_name) {","    return createReplicaset(_finalOptions, connectHandler(_finalOptions, connectCallback));","  } else if(object.servers.length > 1) {","    return createMongos(_finalOptions, connectHandler(_finalOptions, connectCallback));","  } else {","    return createServer(_finalOptions, connectHandler(_finalOptions, connectCallback));","  }","}","","module.exports = MongoClient",""],"l":{"3":1,"29":1,"38":1,"39":1,"41":1,"42":0,"44":0,"45":0,"46":0,"49":0,"50":0,"51":0,"52":0,"55":0,"56":0,"67":1,"131":0,"134":1,"193":1,"194":0,"195":0,"196":0,"197":0,"200":0,"203":0,"206":0,"207":0,"212":0,"213":0,"215":0,"217":0,"218":0,"219":0,"225":0,"227":0,"230":1,"232":1,"233":0,"234":0,"235":0,"237":0,"241":0,"244":1,"245":0,"247":0,"249":0,"250":0,"251":0,"252":0,"253":0,"255":0,"256":0,"258":0,"263":0,"266":1,"268":0,"269":0,"273":0,"274":0,"278":0,"279":0,"283":0,"284":0,"287":0,"288":0,"294":1,"296":0,"298":0,"301":1,"303":0,"305":0,"308":1,"310":0,"312":0,"313":0,"315":0,"318":0,"320":0,"322":0,"326":0,"330":1,"331":0,"332":0,"333":0,"334":0,"335":0,"337":0,"338":0,"344":0,"345":0,"346":0,"347":0,"349":0,"350":0,"356":0,"357":0,"358":0,"362":0,"363":0,"364":0,"365":0,"366":0,"368":0,"369":0,"373":0,"374":0,"375":0,"376":0,"378":0,"379":0,"390":1,"391":0,"392":0,"395":0,"396":0,"400":0,"403":0,"404":0,"405":0,"406":0,"409":0,"410":0,"413":0,"414":0,"417":1,"418":0,"419":0,"420":0,"424":0,"428":0,"432":0,"433":0,"434":0,"435":0,"437":0,"441":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/url_parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/url_parser.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0,0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0,0,0,0],"66":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":31}}},"2":{"name":"(anonymous_2)","line":178,"loc":{"start":{"line":178,"column":38},"end":{"line":178,"column":50}}},"3":{"name":"(anonymous_3)","line":199,"loc":{"start":{"line":199,"column":14},"end":{"line":199,"column":26}}},"4":{"name":"(anonymous_4)","line":209,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":35}}},"5":{"name":"(anonymous_5)","line":338,"loc":{"start":{"line":338,"column":23},"end":{"line":338,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":29}},"2":{"start":{"line":7,"column":0},"end":{"line":405,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":27}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":21}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":29}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":23}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":39}},"8":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":56}},"10":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":78}},"12":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":57}},"14":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":70}},"16":{"start":{"line":33,"column":2},"end":{"line":38,"column":3}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":74}},"18":{"start":{"line":40,"column":2},"end":{"line":50,"column":3}},"19":{"start":{"line":41,"column":4},"end":{"line":49,"column":5}},"20":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"21":{"start":{"line":43,"column":8},"end":{"line":43,"column":59}},"22":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"23":{"start":{"line":47,"column":8},"end":{"line":47,"column":84}},"24":{"start":{"line":52,"column":2},"end":{"line":61,"column":3}},"25":{"start":{"line":53,"column":4},"end":{"line":53,"column":39}},"26":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"27":{"start":{"line":55,"column":6},"end":{"line":55,"column":78}},"28":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"29":{"start":{"line":59,"column":6},"end":{"line":59,"column":66}},"30":{"start":{"line":64,"column":2},"end":{"line":64,"column":37}},"31":{"start":{"line":67,"column":2},"end":{"line":67,"column":33}},"32":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"33":{"start":{"line":70,"column":2},"end":{"line":84,"column":3}},"34":{"start":{"line":71,"column":4},"end":{"line":71,"column":32}},"35":{"start":{"line":73,"column":4},"end":{"line":83,"column":5}},"36":{"start":{"line":74,"column":6},"end":{"line":78,"column":7}},"37":{"start":{"line":75,"column":8},"end":{"line":75,"column":47}},"38":{"start":{"line":77,"column":8},"end":{"line":77,"column":59}},"39":{"start":{"line":79,"column":11},"end":{"line":83,"column":5}},"40":{"start":{"line":80,"column":6},"end":{"line":80,"column":48}},"41":{"start":{"line":81,"column":11},"end":{"line":83,"column":5}},"42":{"start":{"line":82,"column":6},"end":{"line":82,"column":36}},"43":{"start":{"line":86,"column":2},"end":{"line":91,"column":3}},"44":{"start":{"line":87,"column":4},"end":{"line":87,"column":61}},"45":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"46":{"start":{"line":89,"column":6},"end":{"line":89,"column":57}},"47":{"start":{"line":94,"column":2},"end":{"line":99,"column":3}},"48":{"start":{"line":95,"column":4},"end":{"line":95,"column":57}},"49":{"start":{"line":96,"column":4},"end":{"line":96,"column":74}},"50":{"start":{"line":98,"column":4},"end":{"line":98,"column":57}},"51":{"start":{"line":102,"column":2},"end":{"line":105,"column":3}},"52":{"start":{"line":103,"column":4},"end":{"line":103,"column":46}},"53":{"start":{"line":104,"column":4},"end":{"line":104,"column":52}},"54":{"start":{"line":108,"column":2},"end":{"line":130,"column":3}},"55":{"start":{"line":109,"column":4},"end":{"line":119,"column":5}},"56":{"start":{"line":110,"column":6},"end":{"line":110,"column":50}},"57":{"start":{"line":112,"column":6},"end":{"line":117,"column":7}},"58":{"start":{"line":113,"column":8},"end":{"line":115,"column":9}},"59":{"start":{"line":114,"column":10},"end":{"line":114,"column":76}},"60":{"start":{"line":116,"column":8},"end":{"line":116,"column":60}},"61":{"start":{"line":118,"column":6},"end":{"line":118,"column":102}},"62":{"start":{"line":120,"column":9},"end":{"line":130,"column":3}},"63":{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},"64":{"start":{"line":123,"column":6},"end":{"line":125,"column":7}},"65":{"start":{"line":124,"column":8},"end":{"line":124,"column":74}},"66":{"start":{"line":126,"column":6},"end":{"line":126,"column":58}},"67":{"start":{"line":128,"column":4},"end":{"line":128,"column":43}},"68":{"start":{"line":129,"column":4},"end":{"line":129,"column":52}},"69":{"start":{"line":133,"column":2},"end":{"line":133,"column":18}},"70":{"start":{"line":136,"column":2},"end":{"line":136,"column":33}},"71":{"start":{"line":137,"column":2},"end":{"line":137,"column":36}},"72":{"start":{"line":140,"column":2},"end":{"line":140,"column":40}},"73":{"start":{"line":141,"column":2},"end":{"line":143,"column":3}},"74":{"start":{"line":142,"column":4},"end":{"line":142,"column":42}},"75":{"start":{"line":146,"column":2},"end":{"line":146,"column":72}},"76":{"start":{"line":146,"column":23},"end":{"line":146,"column":72}},"77":{"start":{"line":149,"column":2},"end":{"line":149,"column":15}},"78":{"start":{"line":150,"column":2},"end":{"line":150,"column":17}},"79":{"start":{"line":151,"column":2},"end":{"line":151,"column":14}},"80":{"start":{"line":152,"column":2},"end":{"line":152,"column":42}},"81":{"start":{"line":153,"column":2},"end":{"line":153,"column":45}},"82":{"start":{"line":154,"column":2},"end":{"line":154,"column":50}},"83":{"start":{"line":155,"column":2},"end":{"line":155,"column":42}},"84":{"start":{"line":157,"column":2},"end":{"line":157,"column":40}},"85":{"start":{"line":158,"column":2},"end":{"line":158,"column":32}},"86":{"start":{"line":159,"column":2},"end":{"line":159,"column":44}},"87":{"start":{"line":160,"column":2},"end":{"line":160,"column":40}},"88":{"start":{"line":163,"column":2},"end":{"line":202,"column":3}},"89":{"start":{"line":165,"column":4},"end":{"line":167,"column":51}},"90":{"start":{"line":169,"column":4},"end":{"line":169,"column":82}},"91":{"start":{"line":169,"column":40},"end":{"line":169,"column":82}},"92":{"start":{"line":170,"column":4},"end":{"line":170,"column":46}},"93":{"start":{"line":173,"column":4},"end":{"line":173,"column":31}},"94":{"start":{"line":175,"column":4},"end":{"line":175,"column":33}},"95":{"start":{"line":178,"column":4},"end":{"line":201,"column":7}},"96":{"start":{"line":179,"column":6},"end":{"line":179,"column":34}},"97":{"start":{"line":181,"column":6},"end":{"line":191,"column":7}},"98":{"start":{"line":182,"column":8},"end":{"line":182,"column":29}},"99":{"start":{"line":183,"column":8},"end":{"line":183,"column":52}},"100":{"start":{"line":186,"column":8},"end":{"line":186,"column":39}},"101":{"start":{"line":187,"column":8},"end":{"line":187,"column":43}},"102":{"start":{"line":188,"column":8},"end":{"line":188,"column":72}},"103":{"start":{"line":190,"column":8},"end":{"line":190,"column":66}},"104":{"start":{"line":190,"column":37},"end":{"line":190,"column":66}},"105":{"start":{"line":194,"column":6},"end":{"line":194,"column":63}},"106":{"start":{"line":194,"column":51},"end":{"line":194,"column":63}},"107":{"start":{"line":195,"column":6},"end":{"line":195,"column":51}},"108":{"start":{"line":198,"column":6},"end":{"line":198,"column":40}},"109":{"start":{"line":200,"column":6},"end":{"line":200,"column":23}},"110":{"start":{"line":205,"column":2},"end":{"line":205,"column":36}},"111":{"start":{"line":207,"column":2},"end":{"line":207,"column":55}},"112":{"start":{"line":209,"column":2},"end":{"line":383,"column":5}},"113":{"start":{"line":210,"column":4},"end":{"line":210,"column":20}},"114":{"start":{"line":210,"column":13},"end":{"line":210,"column":20}},"115":{"start":{"line":211,"column":4},"end":{"line":211,"column":75}},"116":{"start":{"line":213,"column":4},"end":{"line":382,"column":5}},"117":{"start":{"line":216,"column":8},"end":{"line":216,"column":51}},"118":{"start":{"line":217,"column":8},"end":{"line":217,"column":46}},"119":{"start":{"line":218,"column":8},"end":{"line":218,"column":14}},"120":{"start":{"line":221,"column":8},"end":{"line":221,"column":53}},"121":{"start":{"line":222,"column":8},"end":{"line":222,"column":61}},"122":{"start":{"line":223,"column":8},"end":{"line":223,"column":14}},"123":{"start":{"line":225,"column":8},"end":{"line":225,"column":51}},"124":{"start":{"line":226,"column":8},"end":{"line":226,"column":14}},"125":{"start":{"line":229,"column":8},"end":{"line":229,"column":57}},"126":{"start":{"line":230,"column":8},"end":{"line":230,"column":14}},"127":{"start":{"line":232,"column":8},"end":{"line":232,"column":53}},"128":{"start":{"line":234,"column":8},"end":{"line":234,"column":55}},"129":{"start":{"line":236,"column":8},"end":{"line":236,"column":59}},"130":{"start":{"line":238,"column":8},"end":{"line":238,"column":60}},"131":{"start":{"line":240,"column":8},"end":{"line":240,"column":60}},"132":{"start":{"line":242,"column":8},"end":{"line":247,"column":9}},"133":{"start":{"line":243,"column":10},"end":{"line":243,"column":36}},"134":{"start":{"line":244,"column":10},"end":{"line":244,"column":44}},"135":{"start":{"line":245,"column":10},"end":{"line":245,"column":36}},"136":{"start":{"line":246,"column":10},"end":{"line":246,"column":16}},"137":{"start":{"line":248,"column":8},"end":{"line":248,"column":46}},"138":{"start":{"line":249,"column":8},"end":{"line":249,"column":54}},"139":{"start":{"line":250,"column":8},"end":{"line":250,"column":46}},"140":{"start":{"line":251,"column":8},"end":{"line":251,"column":14}},"141":{"start":{"line":253,"column":8},"end":{"line":253,"column":54}},"142":{"start":{"line":254,"column":8},"end":{"line":254,"column":62}},"143":{"start":{"line":255,"column":8},"end":{"line":255,"column":54}},"144":{"start":{"line":256,"column":8},"end":{"line":256,"column":14}},"145":{"start":{"line":259,"column":8},"end":{"line":259,"column":46}},"146":{"start":{"line":260,"column":8},"end":{"line":260,"column":14}},"147":{"start":{"line":262,"column":8},"end":{"line":262,"column":66}},"148":{"start":{"line":263,"column":8},"end":{"line":263,"column":14}},"149":{"start":{"line":265,"column":8},"end":{"line":265,"column":60}},"150":{"start":{"line":266,"column":8},"end":{"line":266,"column":14}},"151":{"start":{"line":269,"column":8},"end":{"line":269,"column":65}},"152":{"start":{"line":270,"column":8},"end":{"line":270,"column":14}},"153":{"start":{"line":272,"column":8},"end":{"line":272,"column":44}},"154":{"start":{"line":273,"column":8},"end":{"line":273,"column":14}},"155":{"start":{"line":275,"column":8},"end":{"line":275,"column":40}},"156":{"start":{"line":276,"column":8},"end":{"line":276,"column":14}},"157":{"start":{"line":278,"column":8},"end":{"line":278,"column":43}},"158":{"start":{"line":279,"column":8},"end":{"line":279,"column":14}},"159":{"start":{"line":282,"column":8},"end":{"line":282,"column":52}},"160":{"start":{"line":283,"column":8},"end":{"line":283,"column":14}},"161":{"start":{"line":285,"column":8},"end":{"line":285,"column":47}},"162":{"start":{"line":286,"column":8},"end":{"line":286,"column":14}},"163":{"start":{"line":288,"column":8},"end":{"line":288,"column":75}},"164":{"start":{"line":289,"column":8},"end":{"line":289,"column":83}},"165":{"start":{"line":290,"column":8},"end":{"line":290,"column":75}},"166":{"start":{"line":291,"column":8},"end":{"line":291,"column":14}},"167":{"start":{"line":293,"column":8},"end":{"line":293,"column":74}},"168":{"start":{"line":294,"column":8},"end":{"line":294,"column":82}},"169":{"start":{"line":295,"column":8},"end":{"line":295,"column":74}},"170":{"start":{"line":296,"column":8},"end":{"line":296,"column":14}},"171":{"start":{"line":298,"column":8},"end":{"line":298,"column":42}},"172":{"start":{"line":299,"column":8},"end":{"line":299,"column":51}},"173":{"start":{"line":299,"column":31},"end":{"line":299,"column":51}},"174":{"start":{"line":300,"column":8},"end":{"line":300,"column":14}},"175":{"start":{"line":302,"column":8},"end":{"line":302,"column":37}},"176":{"start":{"line":303,"column":8},"end":{"line":303,"column":14}},"177":{"start":{"line":305,"column":8},"end":{"line":305,"column":44}},"178":{"start":{"line":306,"column":8},"end":{"line":306,"column":14}},"179":{"start":{"line":308,"column":8},"end":{"line":319,"column":9}},"180":{"start":{"line":310,"column":10},"end":{"line":316,"column":11}},"181":{"start":{"line":311,"column":12},"end":{"line":311,"column":65}},"182":{"start":{"line":312,"column":12},"end":{"line":312,"column":109}},"183":{"start":{"line":312,"column":53},"end":{"line":312,"column":109}},"184":{"start":{"line":313,"column":12},"end":{"line":313,"column":68}},"185":{"start":{"line":315,"column":12},"end":{"line":315,"column":68}},"186":{"start":{"line":317,"column":15},"end":{"line":319,"column":9}},"187":{"start":{"line":318,"column":10},"end":{"line":318,"column":61}},"188":{"start":{"line":322,"column":8},"end":{"line":328,"column":130}},"189":{"start":{"line":328,"column":12},"end":{"line":328,"column":130}},"190":{"start":{"line":331,"column":8},"end":{"line":331,"column":40}},"191":{"start":{"line":332,"column":8},"end":{"line":332,"column":14}},"192":{"start":{"line":335,"column":8},"end":{"line":335,"column":38}},"193":{"start":{"line":336,"column":8},"end":{"line":336,"column":19}},"194":{"start":{"line":338,"column":8},"end":{"line":341,"column":11}},"195":{"start":{"line":339,"column":10},"end":{"line":339,"column":31}},"196":{"start":{"line":340,"column":10},"end":{"line":340,"column":25}},"197":{"start":{"line":344,"column":8},"end":{"line":344,"column":46}},"198":{"start":{"line":346,"column":8},"end":{"line":346,"column":91}},"199":{"start":{"line":346,"column":46},"end":{"line":346,"column":91}},"200":{"start":{"line":347,"column":8},"end":{"line":347,"column":94}},"201":{"start":{"line":347,"column":47},"end":{"line":347,"column":94}},"202":{"start":{"line":348,"column":8},"end":{"line":348,"column":145}},"203":{"start":{"line":348,"column":56},"end":{"line":348,"column":145}},"204":{"start":{"line":349,"column":8},"end":{"line":349,"column":14}},"205":{"start":{"line":351,"column":8},"end":{"line":351,"column":49}},"206":{"start":{"line":352,"column":8},"end":{"line":352,"column":14}},"207":{"start":{"line":354,"column":8},"end":{"line":354,"column":154}},"208":{"start":{"line":354,"column":43},"end":{"line":354,"column":154}},"209":{"start":{"line":355,"column":8},"end":{"line":355,"column":41}},"210":{"start":{"line":356,"column":8},"end":{"line":356,"column":14}},"211":{"start":{"line":358,"column":8},"end":{"line":358,"column":60}},"212":{"start":{"line":359,"column":8},"end":{"line":359,"column":14}},"213":{"start":{"line":362,"column":8},"end":{"line":362,"column":42}},"214":{"start":{"line":364,"column":8},"end":{"line":364,"column":27}},"215":{"start":{"line":365,"column":8},"end":{"line":368,"column":9}},"216":{"start":{"line":366,"column":10},"end":{"line":366,"column":57}},"217":{"start":{"line":367,"column":10},"end":{"line":367,"column":16}},"218":{"start":{"line":371,"column":8},"end":{"line":371,"column":37}},"219":{"start":{"line":372,"column":8},"end":{"line":375,"column":9}},"220":{"start":{"line":373,"column":10},"end":{"line":373,"column":49}},"221":{"start":{"line":374,"column":10},"end":{"line":374,"column":41}},"222":{"start":{"line":378,"column":8},"end":{"line":378,"column":55}},"223":{"start":{"line":379,"column":8},"end":{"line":379,"column":14}},"224":{"start":{"line":381,"column":8},"end":{"line":381,"column":14}},"225":{"start":{"line":386,"column":2},"end":{"line":388,"column":3}},"226":{"start":{"line":387,"column":4},"end":{"line":387,"column":42}},"227":{"start":{"line":391,"column":2},"end":{"line":394,"column":114}},"228":{"start":{"line":394,"column":34},"end":{"line":394,"column":114}},"229":{"start":{"line":397,"column":2},"end":{"line":399,"column":3}},"230":{"start":{"line":398,"column":4},"end":{"line":398,"column":41}},"231":{"start":{"line":402,"column":2},"end":{"line":402,"column":27}},"232":{"start":{"line":404,"column":2},"end":{"line":404,"column":16}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"3":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":29}},{"start":{"line":21,"column":33},"end":{"line":21,"column":54}},{"start":{"line":21,"column":59},"end":{"line":21,"column":85}}]},"4":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"6":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":5},"end":{"line":29,"column":38}},{"start":{"line":29,"column":42},"end":{"line":29,"column":75}}]},"7":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"8":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":5},"end":{"line":33,"column":16}},{"start":{"line":34,"column":7},"end":{"line":34,"column":29}},{"start":{"line":35,"column":7},"end":{"line":35,"column":28}},{"start":{"line":36,"column":7},"end":{"line":36,"column":33}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"10":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"11":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"12":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"13":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"14":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":7},"end":{"line":54,"column":37}},{"start":{"line":54,"column":41},"end":{"line":54,"column":57}}]},"15":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"16":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":7},"end":{"line":58,"column":37}},{"start":{"line":58,"column":41},"end":{"line":58,"column":71}}]},"17":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"18":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"19":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":11},"end":{"line":79,"column":11}},{"start":{"line":79,"column":11},"end":{"line":79,"column":11}}]},"20":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":11},"end":{"line":81,"column":11}},{"start":{"line":81,"column":11},"end":{"line":81,"column":11}}]},"21":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"22":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":7},"end":{"line":88,"column":13}},{"start":{"line":88,"column":17},"end":{"line":88,"column":42}}]},"23":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"24":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"25":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"26":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"27":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":112,"column":6}},{"start":{"line":112,"column":6},"end":{"line":112,"column":6}}]},"28":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":8}},{"start":{"line":113,"column":8},"end":{"line":113,"column":8}}]},"29":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":41}},{"start":{"line":113,"column":45},"end":{"line":113,"column":77}}]},"30":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":9},"end":{"line":120,"column":9}},{"start":{"line":120,"column":9},"end":{"line":120,"column":9}}]},"31":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"32":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]},"33":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":17},"end":{"line":136,"column":26}},{"start":{"line":136,"column":30},"end":{"line":136,"column":32}}]},"34":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"35":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"36":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"37":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"38":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":6},"end":{"line":181,"column":6}},{"start":{"line":181,"column":6},"end":{"line":181,"column":6}}]},"39":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":16},"end":{"line":183,"column":42}},{"start":{"line":183,"column":46},"end":{"line":183,"column":51}}]},"40":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":16},"end":{"line":187,"column":27}},{"start":{"line":187,"column":31},"end":{"line":187,"column":42}}]},"41":{"line":188,"type":"cond-expr","locations":[{"start":{"line":188,"column":38},"end":{"line":188,"column":63}},{"start":{"line":188,"column":66},"end":{"line":188,"column":71}}]},"42":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8}},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]},"43":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":6},"end":{"line":194,"column":6}},{"start":{"line":194,"column":6},"end":{"line":194,"column":6}}]},"44":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":18},"end":{"line":205,"column":24}},{"start":{"line":205,"column":28},"end":{"line":205,"column":35}}]},"45":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":16},"end":{"line":207,"column":33}},{"start":{"line":207,"column":37},"end":{"line":207,"column":39}}]},"46":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"47":{"line":213,"type":"switch","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":21}},{"start":{"line":215,"column":6},"end":{"line":218,"column":14}},{"start":{"line":219,"column":6},"end":{"line":219,"column":25}},{"start":{"line":220,"column":6},"end":{"line":223,"column":14}},{"start":{"line":224,"column":6},"end":{"line":226,"column":14}},{"start":{"line":227,"column":6},"end":{"line":227,"column":27}},{"start":{"line":228,"column":6},"end":{"line":230,"column":14}},{"start":{"line":231,"column":6},"end":{"line":232,"column":53}},{"start":{"line":233,"column":6},"end":{"line":234,"column":55}},{"start":{"line":235,"column":6},"end":{"line":236,"column":59}},{"start":{"line":237,"column":6},"end":{"line":238,"column":60}},{"start":{"line":239,"column":6},"end":{"line":240,"column":60}},{"start":{"line":241,"column":6},"end":{"line":251,"column":14}},{"start":{"line":252,"column":6},"end":{"line":256,"column":14}},{"start":{"line":257,"column":6},"end":{"line":257,"column":24}},{"start":{"line":258,"column":6},"end":{"line":260,"column":14}},{"start":{"line":261,"column":6},"end":{"line":263,"column":14}},{"start":{"line":264,"column":6},"end":{"line":266,"column":14}},{"start":{"line":267,"column":6},"end":{"line":267,"column":27}},{"start":{"line":268,"column":6},"end":{"line":270,"column":14}},{"start":{"line":271,"column":6},"end":{"line":273,"column":14}},{"start":{"line":274,"column":6},"end":{"line":276,"column":14}},{"start":{"line":277,"column":6},"end":{"line":279,"column":14}},{"start":{"line":280,"column":6},"end":{"line":280,"column":26}},{"start":{"line":281,"column":6},"end":{"line":283,"column":14}},{"start":{"line":284,"column":6},"end":{"line":286,"column":14}},{"start":{"line":287,"column":6},"end":{"line":291,"column":14}},{"start":{"line":292,"column":6},"end":{"line":296,"column":14}},{"start":{"line":297,"column":6},"end":{"line":300,"column":14}},{"start":{"line":301,"column":6},"end":{"line":303,"column":14}},{"start":{"line":304,"column":6},"end":{"line":306,"column":14}},{"start":{"line":307,"column":6},"end":{"line":332,"column":14}},{"start":{"line":333,"column":6},"end":{"line":349,"column":14}},{"start":{"line":350,"column":6},"end":{"line":352,"column":14}},{"start":{"line":353,"column":6},"end":{"line":356,"column":14}},{"start":{"line":357,"column":6},"end":{"line":359,"column":14}},{"start":{"line":360,"column":6},"end":{"line":379,"column":14}},{"start":{"line":380,"column":6},"end":{"line":381,"column":14}}]},"48":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":8}},{"start":{"line":242,"column":8},"end":{"line":242,"column":8}}]},"49":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":8}},{"start":{"line":299,"column":8},"end":{"line":299,"column":8}}]},"50":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":8},"end":{"line":308,"column":8}},{"start":{"line":308,"column":8},"end":{"line":308,"column":8}}]},"51":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":10},"end":{"line":310,"column":10}},{"start":{"line":310,"column":10},"end":{"line":310,"column":10}}]},"52":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":12},"end":{"line":312,"column":12}},{"start":{"line":312,"column":12},"end":{"line":312,"column":12}}]},"53":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":15},"end":{"line":317,"column":15}},{"start":{"line":317,"column":15},"end":{"line":317,"column":15}}]},"54":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":8},"end":{"line":322,"column":8}},{"start":{"line":322,"column":8},"end":{"line":322,"column":8}}]},"55":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":11},"end":{"line":322,"column":28}},{"start":{"line":323,"column":13},"end":{"line":323,"column":36}},{"start":{"line":324,"column":13},"end":{"line":324,"column":34}},{"start":{"line":325,"column":13},"end":{"line":325,"column":31}},{"start":{"line":326,"column":13},"end":{"line":326,"column":35}},{"start":{"line":327,"column":13},"end":{"line":327,"column":29}}]},"56":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":8},"end":{"line":346,"column":8}},{"start":{"line":346,"column":8},"end":{"line":346,"column":8}}]},"57":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":8},"end":{"line":347,"column":8}},{"start":{"line":347,"column":8},"end":{"line":347,"column":8}}]},"58":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":8},"end":{"line":348,"column":8}},{"start":{"line":348,"column":8},"end":{"line":348,"column":8}}]},"59":{"line":348,"type":"cond-expr","locations":[{"start":{"line":348,"column":132},"end":{"line":348,"column":136}},{"start":{"line":348,"column":139},"end":{"line":348,"column":144}}]},"60":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":8},"end":{"line":354,"column":8}},{"start":{"line":354,"column":8},"end":{"line":354,"column":8}}]},"61":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":365,"column":8}},{"start":{"line":365,"column":8},"end":{"line":365,"column":8}}]},"62":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":11},"end":{"line":365,"column":24}},{"start":{"line":365,"column":28},"end":{"line":365,"column":39}}]},"63":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"64":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":2},"end":{"line":391,"column":2}},{"start":{"line":391,"column":2},"end":{"line":391,"column":2}}]},"65":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":6},"end":{"line":391,"column":23}},{"start":{"line":391,"column":27},"end":{"line":391,"column":43}},{"start":{"line":392,"column":6},"end":{"line":392,"column":31}},{"start":{"line":393,"column":9},"end":{"line":393,"column":32}},{"start":{"line":394,"column":9},"end":{"line":394,"column":31}}]},"66":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":2},"end":{"line":397,"column":2}},{"start":{"line":397,"column":2},"end":{"line":397,"column":2}}]}},"code":["\"use strict\";","","var ReadPreference = require('./read_preference'),","  parser = require('url'),","  f = require('util').format;","","module.exports = function(url) {","  // Variables","  var connection_part = '';","  var auth_part = '';","  var query_string_part = '';","  var dbName = 'admin';","","  // Url parser result","  var result = parser.parse(url, true);","","  if(result.protocol != 'mongodb:') {","    throw new Error('invalid schema, expected mongodb');","  }","","  if((result.hostname == null || result.hostname == '') && url.indexOf('.sock') == -1) {","    throw new Error('no hostname or hostnames provided in connection string');","  }","","  if(result.port == '0') {","    throw new Error('invalid port (zero) with hostname');","  }","","  if(!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {","    throw new Error('invalid port (larger than 65535) with hostname');","  }","","  if(result.path","    && result.path.length > 0","    && result.path[0] != '/'","    && url.indexOf('.sock') == -1) {","    throw new Error('missing delimiting slash between hosts and options');","  }","","  if(result.query) {","    for(var name in result.query) {","      if(name.indexOf('::') != -1) {","        throw new Error('double colon in host identifier');","      }","","      if(result.query[name] == '') {","        throw new Error('query parameter ' + name + ' is an incomplete value pair');","      }","    }","  }","","  if(result.auth) {","    var parts = result.auth.split(':');","    if(url.indexOf(result.auth) != -1 && parts.length > 2) {","      throw new Error('Username with password containing an unescaped colon');","    }","","    if(url.indexOf(result.auth) != -1 && result.auth.indexOf('@') != -1) {","      throw new Error('Username containing an unescaped at-sign');","    }","  }","","  // Remove query","  var clean = url.split('?').shift();","","  // Extract the list of hosts","  var strings = clean.split(',');","  var hosts = [];","","  for(var i = 0; i < strings.length; i++) {","    var hostString = strings[i];","","    if(hostString.indexOf('mongodb') != -1) {","      if(hostString.indexOf('@') != -1) {","        hosts.push(hostString.split('@').pop())","      } else {","        hosts.push(hostString.substr('mongodb://'.length));","      }","    } else if(hostString.indexOf('/') != -1) {","      hosts.push(hostString.split('/').shift());","    } else if(hostString.indexOf('/') == -1) {","      hosts.push(hostString.trim());","    }","  }","","  for(i = 0; i < hosts.length; i++) {","    var r = parser.parse(f('mongodb://%s', hosts[i].trim()));","    if(r.path && r.path.indexOf(':') != -1) {","      throw new Error('double colon in host identifier');","    }","  }","","  // If we have a ? mark cut the query elements off","  if(url.indexOf(\"?\") != -1) {","    query_string_part = url.substr(url.indexOf(\"?\") + 1);","    connection_part = url.substring(\"mongodb://\".length, url.indexOf(\"?\"))","  } else {","    connection_part = url.substring(\"mongodb://\".length);","  }","","  // Check if we have auth params","  if(connection_part.indexOf(\"@\") != -1) {","    auth_part = connection_part.split(\"@\")[0];","    connection_part = connection_part.split(\"@\")[1];","  }","","  // Check if the connection string has a db","  if(connection_part.indexOf(\".sock\") != -1) {","    if(connection_part.indexOf(\".sock/\") != -1) {","      dbName = connection_part.split(\".sock/\")[1];","      // Check if multiple database names provided, or just an illegal trailing backslash","      if (dbName.indexOf(\"/\") != -1) {","        if (dbName.split(\"/\").length == 2 && dbName.split(\"/\")[1].length == 0) {","          throw new Error('Illegal trailing backslash after database name');","        }","        throw new Error('More than 1 database name in URL');","      }","      connection_part = connection_part.split(\"/\", connection_part.indexOf(\".sock\") + \".sock\".length);","    }","  } else if(connection_part.indexOf(\"/\") != -1) {","    // Check if multiple database names provided, or just an illegal trailing backslash","    if (connection_part.split(\"/\").length > 2) {","      if (connection_part.split(\"/\")[2].length == 0) {","        throw new Error('Illegal trailing backslash after database name');","      }","      throw new Error('More than 1 database name in URL');","    }","    dbName = connection_part.split(\"/\")[1];","    connection_part = connection_part.split(\"/\")[0];","  }","","  // Result object","  var object = {};","","  // Pick apart the authentication part of the string","  var authPart = auth_part || '';","  var auth = authPart.split(':', 2);","","  // Decode the URI components","  auth[0] = decodeURIComponent(auth[0]);","  if(auth[1]){","    auth[1] = decodeURIComponent(auth[1]);","  }","","  // Add auth to final object if we have 2 elements","  if(auth.length == 2) object.auth = {user: auth[0], password: auth[1]};","","  // Variables used for temporary storage","  var hostPart;","  var urlOptions;","  var servers;","  var serverOptions = {socketOptions: {}};","  var dbOptions = {read_preference_tags: []};","  var replSetServersOptions = {socketOptions: {}};","  var mongosOptions = {socketOptions: {}};","  // Add server options to final object","  object.server_options = serverOptions;","  object.db_options = dbOptions;","  object.rs_options = replSetServersOptions;","  object.mongos_options = mongosOptions;","","  // Let's check if we are using a domain socket","  if(url.match(/\\.sock/)) {","    // Split out the socket part","    var domainSocket = url.substring(","        url.indexOf(\"mongodb://\") + \"mongodb://\".length","      , url.lastIndexOf(\".sock\") + \".sock\".length);","    // Clean out any auth stuff if any","    if(domainSocket.indexOf(\"@\") != -1) domainSocket = domainSocket.split(\"@\")[1];","    servers = [{domain_socket: domainSocket}];","  } else {","    // Split up the db","    hostPart = connection_part;","    // Deduplicate servers","    var deduplicatedServers = {};","","    // Parse all server results","    servers = hostPart.split(',').map(function(h) {","      var _host, _port, ipv6match;","      //check if it matches [IPv6]:port, where the port number is optional","      if ((ipv6match = /\\[([^\\]]+)\\](?:\\:(.+))?/.exec(h))) {","        _host = ipv6match[1];","        _port = parseInt(ipv6match[2], 10) || 27017;","      } else {","        //otherwise assume it's IPv4, or plain hostname","        var hostPort = h.split(':', 2);","        _host = hostPort[0] || 'localhost';","        _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;","        // Check for localhost?safe=true style case","        if(_host.indexOf(\"?\") != -1) _host = _host.split(/\\?/)[0];","      }","","      // No entry returned for duplicate servr","      if(deduplicatedServers[_host + \"_\" + _port]) return null;","      deduplicatedServers[_host + \"_\" + _port] = 1;","","      // Return the mapped object","      return {host: _host, port: _port};","    }).filter(function(x) {","      return x != null;","    });","  }","","  // Get the db name","  object.dbName = dbName || 'admin';","  // Split up all the options","  urlOptions = (query_string_part || '').split(/[&;]/);","  // Ugh, we have to figure out which options go to which constructor manually.","  urlOptions.forEach(function(opt) {","    if(!opt) return;","    var splitOpt = opt.split('='), name = splitOpt[0], value = splitOpt[1];","    // Options implementations","    switch(name) {","      case 'slaveOk':","      case 'slave_ok':","        serverOptions.slave_ok = (value == 'true');","        dbOptions.slaveOk = (value == 'true');","        break;","      case 'maxPoolSize':","      case 'poolSize':","        serverOptions.poolSize = parseInt(value, 10);","        replSetServersOptions.poolSize = parseInt(value, 10);","        break;","      case 'appname':","        object.appname = decodeURIComponent(value);","        break;","      case 'autoReconnect':","      case 'auto_reconnect':","        serverOptions.auto_reconnect = (value == 'true');","        break;","      case 'minPoolSize':","        throw new Error(\"minPoolSize not supported\");","      case 'maxIdleTimeMS':","        throw new Error(\"maxIdleTimeMS not supported\");","      case 'waitQueueMultiple':","        throw new Error(\"waitQueueMultiple not supported\");","      case 'waitQueueTimeoutMS':","        throw new Error(\"waitQueueTimeoutMS not supported\");","      case 'uuidRepresentation':","        throw new Error(\"uuidRepresentation not supported\");","      case 'ssl':","        if(value == 'prefer') {","          serverOptions.ssl = value;","          replSetServersOptions.ssl = value;","          mongosOptions.ssl = value;","          break;","        }","        serverOptions.ssl = (value == 'true');","        replSetServersOptions.ssl = (value == 'true');","        mongosOptions.ssl = (value == 'true');","        break;","      case 'sslValidate':","        serverOptions.sslValidate = (value == 'true');","        replSetServersOptions.sslValidate = (value == 'true');","        mongosOptions.sslValidate = (value == 'true');","        break;","      case 'replicaSet':","      case 'rs_name':","        replSetServersOptions.rs_name = value;","        break;","      case 'reconnectWait':","        replSetServersOptions.reconnectWait = parseInt(value, 10);","        break;","      case 'retries':","        replSetServersOptions.retries = parseInt(value, 10);","        break;","      case 'readSecondary':","      case 'read_secondary':","        replSetServersOptions.read_secondary = (value == 'true');","        break;","      case 'fsync':","        dbOptions.fsync = (value == 'true');","        break;","      case 'journal':","        dbOptions.j = (value == 'true');","        break;","      case 'safe':","        dbOptions.safe = (value == 'true');","        break;","      case 'nativeParser':","      case 'native_parser':","        dbOptions.native_parser = (value == 'true');","        break;","      case 'readConcernLevel':","        dbOptions.readConcern = {level: value};","        break;","      case 'connectTimeoutMS':","        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);","        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);","        mongosOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);","        break;","      case 'socketTimeoutMS':","        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);","        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);","        mongosOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);","        break;","      case 'w':","        dbOptions.w = parseInt(value, 10);","        if(isNaN(dbOptions.w)) dbOptions.w = value;","        break;","      case 'authSource':","        dbOptions.authSource = value;","        break;","      case 'gssapiServiceName':","        dbOptions.gssapiServiceName = value;","        break;","      case 'authMechanism':","        if(value == 'GSSAPI') {","          // If no password provided decode only the principal","          if(object.auth == null) {","            var urlDecodeAuthPart = decodeURIComponent(authPart);","            if(urlDecodeAuthPart.indexOf(\"@\") == -1) throw new Error(\"GSSAPI requires a provided principal\");","            object.auth = {user: urlDecodeAuthPart, password: null};","          } else {","            object.auth.user = decodeURIComponent(object.auth.user);","          }","        } else if(value == 'MONGODB-X509') {","          object.auth = {user: decodeURIComponent(authPart)};","        }","","        // Only support GSSAPI or MONGODB-CR for now","        if(value != 'GSSAPI'","          && value != 'MONGODB-X509'","          && value != 'MONGODB-CR'","          && value != 'DEFAULT'","          && value != 'SCRAM-SHA-1'","          && value != 'PLAIN')","            throw new Error(\"only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\");","","        // Authentication mechanism","        dbOptions.authMechanism = value;","        break;","      case 'authMechanismProperties':","        // Split up into key, value pairs","        var values = value.split(',');","        var o = {};","        // For each value split into key, value","        values.forEach(function(x) {","          var v = x.split(':');","          o[v[0]] = v[1];","        });","","        // Set all authMechanismProperties","        dbOptions.authMechanismProperties = o;","        // Set the service name value","        if(typeof o.SERVICE_NAME == 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;","        if(typeof o.SERVICE_REALM == 'string') dbOptions.gssapiServiceRealm = o.SERVICE_REALM;","        if(typeof o.CANONICALIZE_HOST_NAME == 'string') dbOptions.gssapiCanonicalizeHostName = o.CANONICALIZE_HOST_NAME == 'true' ? true : false;","        break;","      case 'wtimeoutMS':","        dbOptions.wtimeout = parseInt(value, 10);","        break;","      case 'readPreference':","        if(!ReadPreference.isValid(value)) throw new Error(\"readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest\");","        dbOptions.readPreference = value;","        break;","      case 'maxStalenessSeconds':","        dbOptions.maxStalenessSeconds = parseInt(value, 10);","        break;","      case 'readPreferenceTags':","        // Decode the value","        value = decodeURIComponent(value);","        // Contains the tag object","        var tagObject = {};","        if(value == null || value == '') {","          dbOptions.read_preference_tags.push(tagObject);","          break;","        }","","        // Split up the tags","        var tags = value.split(/\\,/);","        for(var i = 0; i < tags.length; i++) {","          var parts = tags[i].trim().split(/\\:/);","          tagObject[parts[0]] = parts[1];","        }","","        // Set the preferences tags","        dbOptions.read_preference_tags.push(tagObject);","        break;","      default:","        break;","    }","  });","","  // No tags: should be null (not [])","  if(dbOptions.read_preference_tags.length === 0) {","    dbOptions.read_preference_tags = null;","  }","","  // Validate if there are an invalid write concern combinations","  if((dbOptions.w == -1 || dbOptions.w == 0) && (","      dbOptions.journal == true","      || dbOptions.fsync == true","      || dbOptions.safe == true)) throw new Error(\"w set to -1 or 0 cannot be combined with safe/w/journal/fsync\")","","  // If no read preference set it to primary","  if(!dbOptions.readPreference) {","    dbOptions.readPreference = 'primary';","  }","","  // Add servers to result","  object.servers = servers;","  // Returned parsed object","  return object;","}",""],"l":{"3":1,"7":1,"9":0,"10":0,"11":0,"12":0,"15":0,"17":0,"18":0,"21":0,"22":0,"25":0,"26":0,"29":0,"30":0,"33":0,"37":0,"40":0,"41":0,"42":0,"43":0,"46":0,"47":0,"52":0,"53":0,"54":0,"55":0,"58":0,"59":0,"64":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"75":0,"77":0,"79":0,"80":0,"81":0,"82":0,"86":0,"87":0,"88":0,"89":0,"94":0,"95":0,"96":0,"98":0,"102":0,"103":0,"104":0,"108":0,"109":0,"110":0,"112":0,"113":0,"114":0,"116":0,"118":0,"120":0,"122":0,"123":0,"124":0,"126":0,"128":0,"129":0,"133":0,"136":0,"137":0,"140":0,"141":0,"142":0,"146":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"158":0,"159":0,"160":0,"163":0,"165":0,"169":0,"170":0,"173":0,"175":0,"178":0,"179":0,"181":0,"182":0,"183":0,"186":0,"187":0,"188":0,"190":0,"194":0,"195":0,"198":0,"200":0,"205":0,"207":0,"209":0,"210":0,"211":0,"213":0,"216":0,"217":0,"218":0,"221":0,"222":0,"223":0,"225":0,"226":0,"229":0,"230":0,"232":0,"234":0,"236":0,"238":0,"240":0,"242":0,"243":0,"244":0,"245":0,"246":0,"248":0,"249":0,"250":0,"251":0,"253":0,"254":0,"255":0,"256":0,"259":0,"260":0,"262":0,"263":0,"265":0,"266":0,"269":0,"270":0,"272":0,"273":0,"275":0,"276":0,"278":0,"279":0,"282":0,"283":0,"285":0,"286":0,"288":0,"289":0,"290":0,"291":0,"293":0,"294":0,"295":0,"296":0,"298":0,"299":0,"300":0,"302":0,"303":0,"305":0,"306":0,"308":0,"310":0,"311":0,"312":0,"313":0,"315":0,"317":0,"318":0,"322":0,"328":0,"331":0,"332":0,"335":0,"336":0,"338":0,"339":0,"340":0,"344":0,"346":0,"347":0,"348":0,"349":0,"351":0,"352":0,"354":0,"355":0,"356":0,"358":0,"359":0,"362":0,"364":0,"365":0,"366":0,"367":0,"371":0,"372":0,"373":0,"374":0,"378":0,"379":0,"381":0,"386":0,"387":0,"391":0,"394":0,"397":0,"398":0,"402":0,"404":0}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/server.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/server.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":1,"42":0,"43":1,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":1,"131":0,"132":1,"133":1,"134":0,"135":1,"136":1,"137":0,"138":1,"139":1,"140":0,"141":1,"142":1,"143":0,"144":1,"145":0,"146":1,"147":1,"148":0,"149":0,"150":1,"151":1,"152":0,"153":1,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":1,"161":1,"162":0,"163":0,"164":1,"165":1,"166":0,"167":0,"168":1,"169":1,"170":0,"171":1,"172":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"fnMap":{"1":{"name":"(anonymous_1)","line":93,"loc":{"start":{"line":93,"column":13},"end":{"line":93,"column":43}}},"2":{"name":"(anonymous_2)","line":206,"loc":{"start":{"line":206,"column":25},"end":{"line":206,"column":36}}},"3":{"name":"(anonymous_3)","line":213,"loc":{"start":{"line":213,"column":24},"end":{"line":213,"column":35}}},"4":{"name":"(anonymous_4)","line":219,"loc":{"start":{"line":219,"column":24},"end":{"line":219,"column":35}}},"5":{"name":"(anonymous_5)","line":226,"loc":{"start":{"line":226,"column":24},"end":{"line":226,"column":35}}},"6":{"name":"(anonymous_6)","line":230,"loc":{"start":{"line":230,"column":24},"end":{"line":230,"column":35}}},"7":{"name":"(anonymous_7)","line":234,"loc":{"start":{"line":234,"column":24},"end":{"line":234,"column":35}}},"8":{"name":"(anonymous_8)","line":238,"loc":{"start":{"line":238,"column":24},"end":{"line":238,"column":35}}},"9":{"name":"(anonymous_9)","line":242,"loc":{"start":{"line":242,"column":27},"end":{"line":242,"column":60}}},"10":{"name":"(anonymous_10)","line":253,"loc":{"start":{"line":253,"column":28},"end":{"line":253,"column":39}}},"11":{"name":"(anonymous_11)","line":254,"loc":{"start":{"line":254,"column":11},"end":{"line":254,"column":25}}},"12":{"name":"(anonymous_12)","line":257,"loc":{"start":{"line":257,"column":21},"end":{"line":257,"column":33}}},"13":{"name":"(anonymous_13)","line":267,"loc":{"start":{"line":267,"column":25},"end":{"line":267,"column":36}}},"14":{"name":"(anonymous_14)","line":273,"loc":{"start":{"line":273,"column":21},"end":{"line":273,"column":37}}},"15":{"name":"(anonymous_15)","line":274,"loc":{"start":{"line":274,"column":11},"end":{"line":274,"column":25}}},"16":{"name":"(anonymous_16)","line":282,"loc":{"start":{"line":282,"column":25},"end":{"line":282,"column":36}}},"17":{"name":"(anonymous_17)","line":288,"loc":{"start":{"line":288,"column":31},"end":{"line":288,"column":45}}},"18":{"name":"(anonymous_18)","line":294,"loc":{"start":{"line":294,"column":23},"end":{"line":294,"column":34}}},"19":{"name":"(anonymous_19)","line":299,"loc":{"start":{"line":299,"column":23},"end":{"line":299,"column":34}}},"20":{"name":"(anonymous_20)","line":303,"loc":{"start":{"line":303,"column":62},"end":{"line":303,"column":74}}},"21":{"name":"(anonymous_21)","line":315,"loc":{"start":{"line":315,"column":16},"end":{"line":315,"column":32}}},"22":{"name":"(anonymous_22)","line":316,"loc":{"start":{"line":316,"column":13},"end":{"line":316,"column":33}}},"23":{"name":"(anonymous_23)","line":342,"loc":{"start":{"line":342,"column":23},"end":{"line":342,"column":34}}},"24":{"name":"(anonymous_24)","line":367,"loc":{"start":{"line":367,"column":32},"end":{"line":367,"column":43}}},"25":{"name":"(anonymous_25)","line":377,"loc":{"start":{"line":377,"column":27},"end":{"line":377,"column":64}}},"26":{"name":"(anonymous_26)","line":384,"loc":{"start":{"line":384,"column":26},"end":{"line":384,"column":63}}},"27":{"name":"(anonymous_27)","line":391,"loc":{"start":{"line":391,"column":26},"end":{"line":391,"column":63}}},"28":{"name":"(anonymous_28)","line":398,"loc":{"start":{"line":398,"column":26},"end":{"line":398,"column":63}}},"29":{"name":"(anonymous_29)","line":405,"loc":{"start":{"line":405,"column":31},"end":{"line":405,"column":42}}},"30":{"name":"(anonymous_30)","line":409,"loc":{"start":{"line":409,"column":31},"end":{"line":409,"column":42}}},"31":{"name":"(anonymous_31)","line":416,"loc":{"start":{"line":416,"column":26},"end":{"line":416,"column":53}}},"32":{"name":"(anonymous_32)","line":423,"loc":{"start":{"line":423,"column":32},"end":{"line":423,"column":43}}},"33":{"name":"(anonymous_33)","line":431,"loc":{"start":{"line":431,"column":25},"end":{"line":431,"column":36}}},"34":{"name":"(anonymous_34)","line":435,"loc":{"start":{"line":435,"column":25},"end":{"line":435,"column":47}}},"35":{"name":"(anonymous_35)","line":446,"loc":{"start":{"line":446,"column":24},"end":{"line":446,"column":35}}},"36":{"name":"(anonymous_36)","line":453,"loc":{"start":{"line":453,"column":26},"end":{"line":453,"column":37}}},"37":{"name":"(anonymous_37)","line":465,"loc":{"start":{"line":465,"column":31},"end":{"line":465,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":19,"column":23}},"2":{"start":{"line":22,"column":0},"end":{"line":22,"column":68}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":74}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":21}},"5":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":32}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}},"8":{"start":{"line":47,"column":1},"end":{"line":54,"column":70}},"9":{"start":{"line":93,"column":0},"end":{"line":198,"column":1}},"10":{"start":{"line":94,"column":2},"end":{"line":94,"column":26}},"11":{"start":{"line":95,"column":2},"end":{"line":95,"column":71}},"12":{"start":{"line":95,"column":32},"end":{"line":95,"column":71}},"13":{"start":{"line":96,"column":2},"end":{"line":96,"column":26}},"14":{"start":{"line":97,"column":2},"end":{"line":97,"column":18}},"15":{"start":{"line":100,"column":2},"end":{"line":100,"column":53}},"16":{"start":{"line":103,"column":2},"end":{"line":106,"column":3}},"17":{"start":{"line":109,"column":2},"end":{"line":109,"column":61}},"18":{"start":{"line":112,"column":2},"end":{"line":119,"column":3}},"19":{"start":{"line":113,"column":4},"end":{"line":116,"column":5}},"20":{"start":{"line":114,"column":6},"end":{"line":114,"column":21}},"21":{"start":{"line":115,"column":6},"end":{"line":115,"column":18}},"22":{"start":{"line":117,"column":9},"end":{"line":119,"column":3}},"23":{"start":{"line":118,"column":4},"end":{"line":118,"column":78}},"24":{"start":{"line":122,"column":2},"end":{"line":122,"column":93}},"25":{"start":{"line":123,"column":2},"end":{"line":123,"column":92}},"26":{"start":{"line":126,"column":2},"end":{"line":132,"column":5}},"27":{"start":{"line":135,"column":2},"end":{"line":135,"column":59}},"28":{"start":{"line":138,"column":2},"end":{"line":139,"column":38}},"29":{"start":{"line":142,"column":2},"end":{"line":142,"column":65}},"30":{"start":{"line":143,"column":2},"end":{"line":146,"column":3}},"31":{"start":{"line":144,"column":4},"end":{"line":144,"column":66}},"32":{"start":{"line":145,"column":4},"end":{"line":145,"column":58}},"33":{"start":{"line":149,"column":2},"end":{"line":161,"column":3}},"34":{"start":{"line":164,"column":2},"end":{"line":164,"column":45}},"35":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"36":{"start":{"line":167,"column":4},"end":{"line":167,"column":69}},"37":{"start":{"line":171,"column":2},"end":{"line":171,"column":42}},"38":{"start":{"line":174,"column":2},"end":{"line":197,"column":3}},"39":{"start":{"line":200,"column":0},"end":{"line":200,"column":31}},"40":{"start":{"line":202,"column":0},"end":{"line":202,"column":65}},"41":{"start":{"line":205,"column":0},"end":{"line":209,"column":3}},"42":{"start":{"line":207,"column":4},"end":{"line":207,"column":32}},"43":{"start":{"line":212,"column":0},"end":{"line":216,"column":3}},"44":{"start":{"line":214,"column":4},"end":{"line":214,"column":40}},"45":{"start":{"line":218,"column":0},"end":{"line":222,"column":3}},"46":{"start":{"line":220,"column":4},"end":{"line":220,"column":36}},"47":{"start":{"line":225,"column":0},"end":{"line":227,"column":3}},"48":{"start":{"line":226,"column":37},"end":{"line":226,"column":79}},"49":{"start":{"line":229,"column":0},"end":{"line":231,"column":3}},"50":{"start":{"line":230,"column":37},"end":{"line":230,"column":61}},"51":{"start":{"line":233,"column":0},"end":{"line":235,"column":3}},"52":{"start":{"line":234,"column":37},"end":{"line":234,"column":56}},"53":{"start":{"line":237,"column":0},"end":{"line":239,"column":3}},"54":{"start":{"line":238,"column":37},"end":{"line":238,"column":56}},"55":{"start":{"line":242,"column":0},"end":{"line":364,"column":1}},"56":{"start":{"line":243,"column":2},"end":{"line":243,"column":18}},"57":{"start":{"line":244,"column":2},"end":{"line":244,"column":72}},"58":{"start":{"line":244,"column":37},"end":{"line":244,"column":72}},"59":{"start":{"line":245,"column":2},"end":{"line":245,"column":37}},"60":{"start":{"line":245,"column":23},"end":{"line":245,"column":37}},"61":{"start":{"line":246,"column":2},"end":{"line":246,"column":56}},"62":{"start":{"line":246,"column":40},"end":{"line":246,"column":56}},"63":{"start":{"line":247,"column":2},"end":{"line":247,"column":28}},"64":{"start":{"line":250,"column":2},"end":{"line":250,"column":61}},"65":{"start":{"line":253,"column":2},"end":{"line":270,"column":3}},"66":{"start":{"line":254,"column":4},"end":{"line":269,"column":5}},"67":{"start":{"line":256,"column":6},"end":{"line":256,"column":49}},"68":{"start":{"line":257,"column":6},"end":{"line":259,"column":9}},"69":{"start":{"line":258,"column":8},"end":{"line":258,"column":60}},"70":{"start":{"line":261,"column":6},"end":{"line":261,"column":67}},"71":{"start":{"line":264,"column":6},"end":{"line":268,"column":7}},"72":{"start":{"line":265,"column":8},"end":{"line":265,"column":22}},"73":{"start":{"line":267,"column":8},"end":{"line":267,"column":51}},"74":{"start":{"line":267,"column":38},"end":{"line":267,"column":48}},"75":{"start":{"line":273,"column":2},"end":{"line":279,"column":3}},"76":{"start":{"line":274,"column":4},"end":{"line":278,"column":5}},"77":{"start":{"line":275,"column":6},"end":{"line":277,"column":7}},"78":{"start":{"line":276,"column":8},"end":{"line":276,"column":30}},"79":{"start":{"line":282,"column":2},"end":{"line":285,"column":3}},"80":{"start":{"line":283,"column":4},"end":{"line":283,"column":33}},"81":{"start":{"line":284,"column":4},"end":{"line":284,"column":27}},"82":{"start":{"line":288,"column":2},"end":{"line":291,"column":3}},"83":{"start":{"line":289,"column":4},"end":{"line":289,"column":38}},"84":{"start":{"line":290,"column":4},"end":{"line":290,"column":28}},"85":{"start":{"line":294,"column":2},"end":{"line":296,"column":3}},"86":{"start":{"line":295,"column":4},"end":{"line":295,"column":25}},"87":{"start":{"line":299,"column":2},"end":{"line":344,"column":3}},"88":{"start":{"line":301,"column":4},"end":{"line":305,"column":7}},"89":{"start":{"line":304,"column":6},"end":{"line":304,"column":42}},"90":{"start":{"line":308,"column":4},"end":{"line":308,"column":57}},"91":{"start":{"line":309,"column":4},"end":{"line":309,"column":55}},"92":{"start":{"line":310,"column":4},"end":{"line":310,"column":53}},"93":{"start":{"line":312,"column":4},"end":{"line":312,"column":48}},"94":{"start":{"line":315,"column":4},"end":{"line":319,"column":5}},"95":{"start":{"line":316,"column":6},"end":{"line":318,"column":7}},"96":{"start":{"line":317,"column":8},"end":{"line":317,"column":36}},"97":{"start":{"line":322,"column":4},"end":{"line":322,"column":84}},"98":{"start":{"line":323,"column":4},"end":{"line":323,"column":80}},"99":{"start":{"line":324,"column":4},"end":{"line":324,"column":84}},"100":{"start":{"line":325,"column":4},"end":{"line":325,"column":78}},"101":{"start":{"line":326,"column":4},"end":{"line":326,"column":62}},"102":{"start":{"line":327,"column":4},"end":{"line":327,"column":60}},"103":{"start":{"line":328,"column":4},"end":{"line":328,"column":66}},"104":{"start":{"line":329,"column":4},"end":{"line":329,"column":64}},"105":{"start":{"line":330,"column":4},"end":{"line":330,"column":88}},"106":{"start":{"line":331,"column":4},"end":{"line":331,"column":68}},"107":{"start":{"line":332,"column":4},"end":{"line":332,"column":56}},"108":{"start":{"line":335,"column":4},"end":{"line":335,"column":34}},"109":{"start":{"line":338,"column":4},"end":{"line":343,"column":5}},"110":{"start":{"line":339,"column":6},"end":{"line":339,"column":27}},"111":{"start":{"line":341,"column":6},"end":{"line":341,"column":28}},"112":{"start":{"line":342,"column":6},"end":{"line":342,"column":49}},"113":{"start":{"line":342,"column":36},"end":{"line":342,"column":46}},"114":{"start":{"line":347,"column":2},"end":{"line":351,"column":4}},"115":{"start":{"line":354,"column":2},"end":{"line":354,"column":57}},"116":{"start":{"line":355,"column":2},"end":{"line":355,"column":53}},"117":{"start":{"line":356,"column":2},"end":{"line":356,"column":53}},"118":{"start":{"line":357,"column":2},"end":{"line":357,"column":48}},"119":{"start":{"line":359,"column":2},"end":{"line":359,"column":50}},"120":{"start":{"line":360,"column":2},"end":{"line":360,"column":62}},"121":{"start":{"line":363,"column":2},"end":{"line":363,"column":34}},"122":{"start":{"line":367,"column":0},"end":{"line":372,"column":1}},"123":{"start":{"line":368,"column":2},"end":{"line":368,"column":55}},"124":{"start":{"line":368,"column":27},"end":{"line":368,"column":55}},"125":{"start":{"line":369,"column":2},"end":{"line":369,"column":55}},"126":{"start":{"line":369,"column":43},"end":{"line":369,"column":55}},"127":{"start":{"line":370,"column":2},"end":{"line":370,"column":78}},"128":{"start":{"line":371,"column":2},"end":{"line":371,"column":30}},"129":{"start":{"line":374,"column":0},"end":{"line":374,"column":100}},"130":{"start":{"line":377,"column":0},"end":{"line":379,"column":1}},"131":{"start":{"line":378,"column":2},"end":{"line":378,"column":71}},"132":{"start":{"line":381,"column":0},"end":{"line":381,"column":63}},"133":{"start":{"line":384,"column":0},"end":{"line":386,"column":1}},"134":{"start":{"line":385,"column":2},"end":{"line":385,"column":51}},"135":{"start":{"line":388,"column":0},"end":{"line":388,"column":62}},"136":{"start":{"line":391,"column":0},"end":{"line":393,"column":1}},"137":{"start":{"line":392,"column":2},"end":{"line":392,"column":51}},"138":{"start":{"line":395,"column":0},"end":{"line":395,"column":62}},"139":{"start":{"line":398,"column":0},"end":{"line":400,"column":1}},"140":{"start":{"line":399,"column":2},"end":{"line":399,"column":51}},"141":{"start":{"line":402,"column":0},"end":{"line":402,"column":62}},"142":{"start":{"line":405,"column":0},"end":{"line":407,"column":1}},"143":{"start":{"line":406,"column":2},"end":{"line":406,"column":37}},"144":{"start":{"line":409,"column":0},"end":{"line":411,"column":1}},"145":{"start":{"line":410,"column":2},"end":{"line":410,"column":37}},"146":{"start":{"line":413,"column":0},"end":{"line":413,"column":88}},"147":{"start":{"line":416,"column":0},"end":{"line":419,"column":1}},"148":{"start":{"line":417,"column":2},"end":{"line":417,"column":43}},"149":{"start":{"line":418,"column":2},"end":{"line":418,"column":48}},"150":{"start":{"line":421,"column":0},"end":{"line":421,"column":116}},"151":{"start":{"line":423,"column":0},"end":{"line":425,"column":1}},"152":{"start":{"line":424,"column":2},"end":{"line":424,"column":38}},"153":{"start":{"line":431,"column":0},"end":{"line":433,"column":1}},"154":{"start":{"line":432,"column":2},"end":{"line":432,"column":24}},"155":{"start":{"line":435,"column":0},"end":{"line":442,"column":1}},"156":{"start":{"line":436,"column":2},"end":{"line":436,"column":26}},"157":{"start":{"line":438,"column":2},"end":{"line":441,"column":3}},"158":{"start":{"line":439,"column":4},"end":{"line":439,"column":44}},"159":{"start":{"line":440,"column":4},"end":{"line":440,"column":25}},"160":{"start":{"line":444,"column":0},"end":{"line":444,"column":62}},"161":{"start":{"line":446,"column":0},"end":{"line":449,"column":1}},"162":{"start":{"line":447,"column":2},"end":{"line":447,"column":54}},"163":{"start":{"line":448,"column":2},"end":{"line":448,"column":48}},"164":{"start":{"line":451,"column":0},"end":{"line":451,"column":60}},"165":{"start":{"line":453,"column":0},"end":{"line":456,"column":1}},"166":{"start":{"line":454,"column":2},"end":{"line":454,"column":54}},"167":{"start":{"line":455,"column":2},"end":{"line":455,"column":50}},"168":{"start":{"line":458,"column":0},"end":{"line":458,"column":62}},"169":{"start":{"line":465,"column":0},"end":{"line":467,"column":1}},"170":{"start":{"line":466,"column":2},"end":{"line":466,"column":37}},"171":{"start":{"line":469,"column":0},"end":{"line":469,"column":85}},"172":{"start":{"line":513,"column":0},"end":{"line":513,"column":24}}},"branchMap":{"1":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":19}},{"start":{"line":94,"column":23},"end":{"line":94,"column":25}}]},"2":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"3":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":70},"end":{"line":105,"column":94}},{"start":{"line":105,"column":97},"end":{"line":105,"column":107}}]},"4":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":14},"end":{"line":109,"column":27}},{"start":{"line":109,"column":31},"end":{"line":109,"column":60}}]},"5":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"6":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"7":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":7},"end":{"line":113,"column":19}},{"start":{"line":113,"column":23},"end":{"line":113,"column":46}}]},"8":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":9},"end":{"line":117,"column":9}},{"start":{"line":117,"column":9},"end":{"line":117,"column":9}}]},"9":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":63},"end":{"line":122,"column":85}},{"start":{"line":122,"column":88},"end":{"line":122,"column":92}}]},"10":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":58},"end":{"line":123,"column":79}},{"start":{"line":123,"column":82},"end":{"line":123,"column":91}}]},"11":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":55},"end":{"line":130,"column":72}},{"start":{"line":130,"column":75},"end":{"line":130,"column":79}}]},"12":{"line":131,"type":"cond-expr","locations":[{"start":{"line":131,"column":48},"end":{"line":131,"column":64}},{"start":{"line":131,"column":67},"end":{"line":131,"column":68}}]},"13":{"line":138,"type":"cond-expr","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":27}},{"start":{"line":139,"column":30},"end":{"line":139,"column":37}}]},"14":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":22},"end":{"line":138,"column":43}},{"start":{"line":138,"column":47},"end":{"line":138,"column":92}}]},"15":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"16":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"17":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"18":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":2},"end":{"line":245,"column":2}},{"start":{"line":245,"column":2},"end":{"line":245,"column":2}}]},"19":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"20":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":6},"end":{"line":275,"column":6}},{"start":{"line":275,"column":6},"end":{"line":275,"column":6}}]},"21":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":2},"end":{"line":368,"column":2}},{"start":{"line":368,"column":2},"end":{"line":368,"column":2}}]},"22":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":2},"end":{"line":369,"column":2}},{"start":{"line":369,"column":2},"end":{"line":369,"column":2}}]},"23":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":2},"end":{"line":438,"column":2}},{"start":{"line":438,"column":2},"end":{"line":438,"column":2}}]}},"code":["\"use strict\";","","var EventEmitter = require('events').EventEmitter","  , inherits = require('util').inherits","  , CServer = require('mongodb-core').Server","  , Cursor = require('./cursor')","  , AggregationCursor = require('./aggregation_cursor')","  , CommandCursor = require('./command_cursor')","  , f = require('util').format","  , ServerCapabilities = require('./topology_base').ServerCapabilities","  , Store = require('./topology_base').Store","  , Define = require('./metadata')","  , MongoError = require('mongodb-core').MongoError","  , MAX_JS_INT = require('./utils').MAX_JS_INT","  , translateOptions = require('./utils').translateOptions","  , filterOptions = require('./utils').filterOptions","  , mergeOptions = require('./utils').mergeOptions","  , getReadPreference = require('./utils').getReadPreference","  , os = require('os');","","// Get package.json variable","var driverVersion = require(__dirname + '/../package.json').version;","var nodejsversion = f('Node.js %s, %s', process.version, os.endianness());","var type = os.type();","var name = process.platform;","var architecture = process.arch;","var release = os.release();","","/**"," * @fileOverview The **Server** class is a class that represents a single server topology and is"," * used to construct connections."," *"," * **Server Should not be used, use MongoClient.connect**"," * @example"," * var Db = require('mongodb').Db,"," *   Server = require('mongodb').Server,"," *   test = require('assert');"," * // Connect using single Server"," * var db = new Db('test', new Server('localhost', 27017););"," * db.open(function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */",""," // Allowed parameters"," var legalOptionNames = ['ha', 'haInterval', 'acceptableLatencyMS'","   , 'poolSize', 'ssl', 'checkServerIdentity', 'sslValidate'","   , 'sslCA', 'sslCRL', 'sslCert', 'sslKey', 'sslPass', 'socketOptions', 'bufferMaxEntries'","   , 'store', 'auto_reconnect', 'autoReconnect', 'emitError'","   , 'keepAlive', 'noDelay', 'connectTimeoutMS', 'socketTimeoutMS'","   , 'loggerLevel', 'logger', 'reconnectTries', 'reconnectInterval', 'monitoring'","   , 'appname', 'domainsEnabled'","   , 'servername', 'promoteLongs', 'promoteValues', 'promoteBuffers'];","","/**"," * Creates a new Server instance"," * @class"," * @deprecated"," * @param {string} host The host for the server, can be either an IP4, IP6 or domain socket style host."," * @param {number} [port] The server port if IP4."," * @param {object} [options=null] Optional settings."," * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons."," * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)"," * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {array} [options.sslCRL=null] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {string} [options.servername=null] String containing the server name requested via TLS SNI."," * @param {object} [options.socketOptions=null] Socket options"," * @param {boolean} [options.socketOptions.autoReconnect=true] Reconnect on error."," * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option."," * @param {number} [options.socketOptions.keepAlive=0] TCP KeepAlive on the socket with a X ms delay before start."," * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting"," * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting"," * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times"," * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries"," * @param {number} [options.monitoring=true] Triggers the server instance to call ismaster"," * @param {number} [options.haInterval=10000] The interval of calling ismaster when monitoring is enabled."," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @fires Server#connect"," * @fires Server#close"," * @fires Server#error"," * @fires Server#timeout"," * @fires Server#parseError"," * @fires Server#reconnect"," * @property {string} parserType the parser type used (c++ or js)."," * @return {Server} a Server instance."," */","var Server = function(host, port, options) {","  options = options || {};","  if(!(this instanceof Server)) return new Server(host, port, options);","  EventEmitter.call(this);","  var self = this;","","  // Filter the options","  options = filterOptions(options, legalOptionNames);","","  // Stored options","  var storeOptions = {","      force: false","    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : MAX_JS_INT","  }","","  // Shared global store","  var store = options.store || new Store(self, storeOptions);","","  // Detect if we have a socket connection","  if(host.indexOf('\\/') != -1) {","    if(port != null && typeof port == 'object') {","      options = port;","      port = null;","    }","  } else if(port == null) {","    throw MongoError.create({message: 'port must be specified', driver:true});","  }","","  // Get the reconnect option","  var reconnect = typeof options.auto_reconnect == 'boolean' ? options.auto_reconnect : true;","  reconnect = typeof options.autoReconnect == 'boolean' ? options.autoReconnect : reconnect;","","  // Clone options","  var clonedOptions = mergeOptions({}, {","    host: host, port: port, disconnectHandler: store,","    cursorFactory: Cursor,","    reconnect: reconnect,","    emitError: typeof options.emitError == 'boolean' ? options.emitError : true,","    size: typeof options.poolSize == 'number' ? options.poolSize : 5","  });","","  // Translate any SSL options and other connectivity options","  clonedOptions = translateOptions(clonedOptions, options);","","  // Socket options","  var socketOptions = options.socketOptions && Object.keys(options.socketOptions).length > 0","    ? options.socketOptions : options;","","  // Translate all the options to the mongodb-core ones","  clonedOptions = translateOptions(clonedOptions, socketOptions);","  if(typeof clonedOptions.keepAlive == 'number') {","    clonedOptions.keepAliveInitialDelay = clonedOptions.keepAlive;","    clonedOptions.keepAlive = clonedOptions.keepAlive > 0;","  }","","  // Build default client information","  this.clientInfo = {","    driver: {","      name: \"nodejs\",","      version: driverVersion","    },","    os: {","      type: type,","      name: name,","      architecture: architecture,","      version: release","    },","    platform: nodejsversion","  }","","  // Build default client information","  clonedOptions.clientInfo = this.clientInfo;","  // Do we have an application specific string","  if(options.appname) {","    clonedOptions.clientInfo.application = { name: options.appname };","  }","","  // Create an instance of a server instance from mongodb-core","  var server = new CServer(clonedOptions);","","  // Define the internal properties","  this.s = {","    // Create an instance of a server instance from mongodb-core","      server: server","    // Server capabilities","    , sCapabilities: null","    // Cloned options","    , clonedOptions: clonedOptions","    // Reconnect","    , reconnect: clonedOptions.reconnect","    // Emit error","    , emitError: clonedOptions.emitError","    // Pool size","    , poolSize: clonedOptions.size","    // Store Options","    , storeOptions: storeOptions","    // Store","    , store: store","    // Host","    , host: host","    // Port","    , port: port","    // Options","    , options: options","  }","}","","inherits(Server, EventEmitter);","","var define = Server.define = new Define('Server', Server, false);","","// BSON property","Object.defineProperty(Server.prototype, 'bson', {","  enumerable: true, get: function() {","    return this.s.server.s.bson;","  }","});","","// Last ismaster","Object.defineProperty(Server.prototype, 'isMasterDoc', {","  enumerable:true, get: function() {","    return this.s.server.lastIsMaster();","  }","});","","Object.defineProperty(Server.prototype, 'parserType', {","  enumerable:true, get: function() {","    return this.s.server.parserType;","  }","});","","// Last ismaster","Object.defineProperty(Server.prototype, 'poolSize', {","  enumerable:true, get: function() { return this.s.server.connections().length; }","});","","Object.defineProperty(Server.prototype, 'autoReconnect', {","  enumerable:true, get: function() { return this.s.reconnect; }","});","","Object.defineProperty(Server.prototype, 'host', {","  enumerable:true, get: function() { return this.s.host; }","});","","Object.defineProperty(Server.prototype, 'port', {","  enumerable:true, get: function() { return this.s.port; }","});","","// Connect","Server.prototype.connect = function(db, _options, callback) {","  var self = this;","  if('function' === typeof _options) callback = _options, _options = {};","  if(_options == null) _options = {};","  if(!('function' === typeof callback)) callback = null;","  self.s.options = _options;","","  // Update bufferMaxEntries","  self.s.storeOptions.bufferMaxEntries = db.bufferMaxEntries;","","  // Error handler","  var connectErrorHandler = function() {","    return function(err) {","      // Remove all event handlers","      var events = ['timeout', 'error', 'close'];","      events.forEach(function(e) {","        self.s.server.removeListener(e, connectHandlers[e]);","      });","","      self.s.server.removeListener('connect', connectErrorHandler);","","      // Try to callback","      try {","        callback(err);","      } catch(err) {","        process.nextTick(function() { throw err; })","      }","    }","  }","","  // Actual handler","  var errorHandler = function(event) {","    return function(err) {","      if(event != 'error') {","        self.emit(event, err);","      }","    }","  }","","  // Error handler","  var reconnectHandler = function() {","    self.emit('reconnect', self);","    self.s.store.execute();","  }","","  // Reconnect failed","  var reconnectFailedHandler = function(err) {","    self.emit('reconnectFailed', err);","    self.s.store.flush(err);","  }","","  // Destroy called on topology, perform cleanup","  var destroyHandler = function() {","    self.s.store.flush();","  }","","  // Connect handler","  var connectHandler = function() {","    // Clear out all the current handlers left over","    [\"timeout\", \"error\", \"close\", 'serverOpening', 'serverDescriptionChanged', 'serverHeartbeatStarted',","      'serverHeartbeatSucceeded', 'serverHeartbeatFailed', 'serverClosed', 'topologyOpening',","      'topologyClosed', 'topologyDescriptionChanged'].forEach(function(e) {","      self.s.server.removeAllListeners(e);","    });","","    // Set up listeners","    self.s.server.on('timeout', errorHandler('timeout'));","    self.s.server.once('error', errorHandler('error'));","    self.s.server.on('close', errorHandler('close'));","    // Only called on destroy","    self.s.server.on('destroy', destroyHandler);","","    // relay the event","    var relay = function(event) {","      return function(t, server) {","        self.emit(event, t, server);","      }","    }","","    // Set up SDAM listeners","    self.s.server.on('serverDescriptionChanged', relay('serverDescriptionChanged'));","    self.s.server.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));","    self.s.server.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));","    self.s.server.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));","    self.s.server.on('serverOpening', relay('serverOpening'));","    self.s.server.on('serverClosed', relay('serverClosed'));","    self.s.server.on('topologyOpening', relay('topologyOpening'));","    self.s.server.on('topologyClosed', relay('topologyClosed'));","    self.s.server.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));","    self.s.server.on('attemptReconnect', relay('attemptReconnect'));","    self.s.server.on('monitoring', relay('monitoring'));","","    // Emit open event","    self.emit('open', null, self);","","    // Return correctly","    try {","      callback(null, self);","    } catch(err) {","      console.log(err.stack)","      process.nextTick(function() { throw err; })","    }","  }","","  // Set up listeners","  var connectHandlers = {","    timeout: connectErrorHandler('timeout'),","    error: connectErrorHandler('error'),","    close: connectErrorHandler('close')","  };","","  // Add the event handlers","  self.s.server.once('timeout', connectHandlers.timeout);","  self.s.server.once('error', connectHandlers.error);","  self.s.server.once('close', connectHandlers.close);","  self.s.server.once('connect', connectHandler);","  // Reconnect server","  self.s.server.on('reconnect', reconnectHandler);","  self.s.server.on('reconnectFailed', reconnectFailedHandler);","","  // Start connection","  self.s.server.connect(_options);","}","","// Server capabilities","Server.prototype.capabilities = function() {","  if(this.s.sCapabilities) return this.s.sCapabilities;","  if(this.s.server.lastIsMaster() == null) return null;","  this.s.sCapabilities = new ServerCapabilities(this.s.server.lastIsMaster());","  return this.s.sCapabilities;","}","","define.classMethod('capabilities', {callback: false, promise:false, returns: [ServerCapabilities]});","","// Command","Server.prototype.command = function(ns, cmd, options, callback) {","  this.s.server.command(ns, cmd, getReadPreference(options), callback);","}","","define.classMethod('command', {callback: true, promise:false});","","// Insert","Server.prototype.insert = function(ns, ops, options, callback) {","  this.s.server.insert(ns, ops, options, callback);","}","","define.classMethod('insert', {callback: true, promise:false});","","// Update","Server.prototype.update = function(ns, ops, options, callback) {","  this.s.server.update(ns, ops, options, callback);","}","","define.classMethod('update', {callback: true, promise:false});","","// Remove","Server.prototype.remove = function(ns, ops, options, callback) {","  this.s.server.remove(ns, ops, options, callback);","}","","define.classMethod('remove', {callback: true, promise:false});","","// IsConnected","Server.prototype.isConnected = function() {","  return this.s.server.isConnected();","}","","Server.prototype.isDestroyed = function() {","  return this.s.server.isDestroyed();","}","","define.classMethod('isConnected', {callback: false, promise:false, returns: [Boolean]});","","// Insert","Server.prototype.cursor = function(ns, cmd, options) {","  options.disconnectHandler = this.s.store;","  return this.s.server.cursor(ns, cmd, options);","}","","define.classMethod('cursor', {callback: false, promise:false, returns: [Cursor, AggregationCursor, CommandCursor]});","","Server.prototype.lastIsMaster = function() {","  return this.s.server.lastIsMaster();","}","","/**"," * Unref all sockets"," * @method"," */","Server.prototype.unref = function() {","  this.s.server.unref();","}","","Server.prototype.close = function(forceClosed) {","  this.s.server.destroy();","  // We need to wash out all stored processes","  if(forceClosed == true) {","    this.s.storeOptions.force = forceClosed;","    this.s.store.flush();","  }","}","","define.classMethod('close', {callback: false, promise:false});","","Server.prototype.auth = function() {","  var args = Array.prototype.slice.call(arguments, 0);","  this.s.server.auth.apply(this.s.server, args);","}","","define.classMethod('auth', {callback: true, promise:false});","","Server.prototype.logout = function() {","  var args = Array.prototype.slice.call(arguments, 0);","  this.s.server.logout.apply(this.s.server, args);","}","","define.classMethod('logout', {callback: true, promise:false});","","/**"," * All raw connections"," * @method"," * @return {array}"," */","Server.prototype.connections = function() {","  return this.s.server.connections();","}","","define.classMethod('connections', {callback: false, promise:false, returns:[Array]});","","/**"," * Server connect event"," *"," * @event Server#connect"," * @type {object}"," */","","/**"," * Server close event"," *"," * @event Server#close"," * @type {object}"," */","","/**"," * Server reconnect event"," *"," * @event Server#reconnect"," * @type {object}"," */","","/**"," * Server error event"," *"," * @event Server#error"," * @type {MongoError}"," */","","/**"," * Server timeout event"," *"," * @event Server#timeout"," * @type {object}"," */","","/**"," * Server parseError event"," *"," * @event Server#parseError"," * @type {object}"," */","","module.exports = Server;",""],"l":{"3":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"47":1,"93":1,"94":0,"95":0,"96":0,"97":0,"100":0,"103":0,"109":0,"112":0,"113":0,"114":0,"115":0,"117":0,"118":0,"122":0,"123":0,"126":0,"135":0,"138":0,"142":0,"143":0,"144":0,"145":0,"149":0,"164":0,"166":0,"167":0,"171":0,"174":0,"200":1,"202":1,"205":1,"207":0,"212":1,"214":0,"218":1,"220":0,"225":1,"226":0,"229":1,"230":0,"233":1,"234":0,"237":1,"238":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"250":0,"253":0,"254":0,"256":0,"257":0,"258":0,"261":0,"264":0,"265":0,"267":0,"273":0,"274":0,"275":0,"276":0,"282":0,"283":0,"284":0,"288":0,"289":0,"290":0,"294":0,"295":0,"299":0,"301":0,"304":0,"308":0,"309":0,"310":0,"312":0,"315":0,"316":0,"317":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"335":0,"338":0,"339":0,"341":0,"342":0,"347":0,"354":0,"355":0,"356":0,"357":0,"359":0,"360":0,"363":0,"367":1,"368":0,"369":0,"370":0,"371":0,"374":1,"377":1,"378":0,"381":1,"384":1,"385":0,"388":1,"391":1,"392":0,"395":1,"398":1,"399":0,"402":1,"405":1,"406":0,"409":1,"410":0,"413":1,"416":1,"417":0,"418":0,"421":1,"423":1,"424":0,"431":1,"432":0,"435":1,"436":0,"438":0,"439":0,"440":0,"444":1,"446":1,"447":0,"448":0,"451":1,"453":1,"454":0,"455":0,"458":1,"465":1,"466":0,"469":1,"513":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/topology_base.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/topology_base.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0],"20":[0,0,0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0,0],"26":[0,0],"27":[0,0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":12},"end":{"line":7,"column":45}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":26},"end":{"line":20,"column":37}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":22},"end":{"line":24,"column":67}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":37},"end":{"line":45,"column":88}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":24},"end":{"line":66,"column":38}}},"6":{"name":"(anonymous_6)","line":75,"loc":{"start":{"line":75,"column":26},"end":{"line":75,"column":44}}},"7":{"name":"(anonymous_7)","line":120,"loc":{"start":{"line":120,"column":22},"end":{"line":120,"column":33}}},"8":{"name":"(anonymous_8)","line":125,"loc":{"start":{"line":125,"column":25},"end":{"line":125,"column":44}}},"9":{"name":"(anonymous_9)","line":126,"loc":{"start":{"line":126,"column":27},"end":{"line":126,"column":57}}},"10":{"name":"(anonymous_10)","line":129,"loc":{"start":{"line":129,"column":13},"end":{"line":129,"column":25}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":31}},"2":{"start":{"line":7,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":18}},"4":{"start":{"line":9,"column":2},"end":{"line":9,"column":21}},"5":{"start":{"line":10,"column":2},"end":{"line":10,"column":68}},"6":{"start":{"line":13,"column":2},"end":{"line":17,"column":3}},"7":{"start":{"line":19,"column":2},"end":{"line":21,"column":5}},"8":{"start":{"line":20,"column":39},"end":{"line":20,"column":70}},"9":{"start":{"line":24,"column":0},"end":{"line":43,"column":1}},"10":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"11":{"start":{"line":26,"column":4},"end":{"line":26,"column":91}},"12":{"start":{"line":29,"column":2},"end":{"line":31,"column":3}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":182}},"14":{"start":{"line":33,"column":2},"end":{"line":40,"column":3}},"15":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"16":{"start":{"line":35,"column":6},"end":{"line":35,"column":40}},"17":{"start":{"line":36,"column":6},"end":{"line":36,"column":173}},"18":{"start":{"line":39,"column":4},"end":{"line":39,"column":11}},"19":{"start":{"line":42,"column":2},"end":{"line":42,"column":77}},"20":{"start":{"line":45,"column":0},"end":{"line":64,"column":1}},"21":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"22":{"start":{"line":47,"column":4},"end":{"line":47,"column":92}},"23":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"24":{"start":{"line":51,"column":4},"end":{"line":51,"column":182}},"25":{"start":{"line":54,"column":2},"end":{"line":61,"column":3}},"26":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"27":{"start":{"line":56,"column":6},"end":{"line":56,"column":40}},"28":{"start":{"line":57,"column":6},"end":{"line":57,"column":173}},"29":{"start":{"line":60,"column":4},"end":{"line":60,"column":11}},"30":{"start":{"line":63,"column":2},"end":{"line":63,"column":82}},"31":{"start":{"line":66,"column":0},"end":{"line":70,"column":1}},"32":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"33":{"start":{"line":68,"column":4},"end":{"line":68,"column":126}},"34":{"start":{"line":72,"column":0},"end":{"line":72,"column":86}},"35":{"start":{"line":73,"column":0},"end":{"line":73,"column":59}},"36":{"start":{"line":75,"column":0},"end":{"line":118,"column":1}},"37":{"start":{"line":76,"column":2},"end":{"line":76,"column":26}},"38":{"start":{"line":78,"column":2},"end":{"line":78,"column":29}},"39":{"start":{"line":80,"column":2},"end":{"line":80,"column":24}},"40":{"start":{"line":83,"column":2},"end":{"line":84,"column":36}},"41":{"start":{"line":85,"column":2},"end":{"line":86,"column":38}},"42":{"start":{"line":89,"column":2},"end":{"line":117,"column":3}},"43":{"start":{"line":90,"column":4},"end":{"line":90,"column":25}},"44":{"start":{"line":92,"column":4},"end":{"line":116,"column":5}},"45":{"start":{"line":93,"column":6},"end":{"line":103,"column":7}},"46":{"start":{"line":94,"column":8},"end":{"line":94,"column":37}},"47":{"start":{"line":95,"column":13},"end":{"line":103,"column":7}},"48":{"start":{"line":98,"column":10},"end":{"line":98,"column":39}},"49":{"start":{"line":99,"column":13},"end":{"line":103,"column":7}},"50":{"start":{"line":102,"column":10},"end":{"line":102,"column":39}},"51":{"start":{"line":104,"column":11},"end":{"line":116,"column":5}},"52":{"start":{"line":105,"column":6},"end":{"line":105,"column":57}},"53":{"start":{"line":107,"column":6},"end":{"line":115,"column":7}},"54":{"start":{"line":108,"column":8},"end":{"line":108,"column":55}},"55":{"start":{"line":109,"column":13},"end":{"line":115,"column":7}},"56":{"start":{"line":111,"column":10},"end":{"line":111,"column":57}},"57":{"start":{"line":112,"column":13},"end":{"line":115,"column":7}},"58":{"start":{"line":114,"column":10},"end":{"line":114,"column":57}},"59":{"start":{"line":120,"column":0},"end":{"line":122,"column":1}},"60":{"start":{"line":121,"column":2},"end":{"line":121,"column":26}},"61":{"start":{"line":125,"column":0},"end":{"line":188,"column":1}},"62":{"start":{"line":126,"column":2},"end":{"line":131,"column":3}},"63":{"start":{"line":127,"column":4},"end":{"line":130,"column":7}},"64":{"start":{"line":129,"column":27},"end":{"line":129,"column":40}},"65":{"start":{"line":134,"column":2},"end":{"line":134,"column":32}},"66":{"start":{"line":135,"column":2},"end":{"line":135,"column":28}},"67":{"start":{"line":136,"column":2},"end":{"line":136,"column":25}},"68":{"start":{"line":137,"column":2},"end":{"line":137,"column":27}},"69":{"start":{"line":138,"column":2},"end":{"line":138,"column":30}},"70":{"start":{"line":139,"column":2},"end":{"line":139,"column":26}},"71":{"start":{"line":140,"column":2},"end":{"line":140,"column":66}},"72":{"start":{"line":141,"column":2},"end":{"line":141,"column":39}},"73":{"start":{"line":142,"column":2},"end":{"line":142,"column":36}},"74":{"start":{"line":144,"column":2},"end":{"line":146,"column":3}},"75":{"start":{"line":145,"column":4},"end":{"line":145,"column":22}},"76":{"start":{"line":148,"column":2},"end":{"line":151,"column":3}},"77":{"start":{"line":149,"column":4},"end":{"line":149,"column":29}},"78":{"start":{"line":150,"column":4},"end":{"line":150,"column":24}},"79":{"start":{"line":153,"column":2},"end":{"line":155,"column":3}},"80":{"start":{"line":154,"column":4},"end":{"line":154,"column":25}},"81":{"start":{"line":157,"column":2},"end":{"line":160,"column":3}},"82":{"start":{"line":158,"column":4},"end":{"line":158,"column":27}},"83":{"start":{"line":159,"column":4},"end":{"line":159,"column":23}},"84":{"start":{"line":162,"column":2},"end":{"line":165,"column":3}},"85":{"start":{"line":163,"column":4},"end":{"line":163,"column":36}},"86":{"start":{"line":164,"column":4},"end":{"line":164,"column":33}},"87":{"start":{"line":168,"column":2},"end":{"line":170,"column":3}},"88":{"start":{"line":169,"column":4},"end":{"line":169,"column":32}},"89":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"90":{"start":{"line":173,"column":4},"end":{"line":173,"column":32}},"91":{"start":{"line":177,"column":2},"end":{"line":177,"column":70}},"92":{"start":{"line":178,"column":2},"end":{"line":178,"column":62}},"93":{"start":{"line":179,"column":2},"end":{"line":179,"column":56}},"94":{"start":{"line":180,"column":2},"end":{"line":180,"column":60}},"95":{"start":{"line":181,"column":2},"end":{"line":181,"column":73}},"96":{"start":{"line":182,"column":2},"end":{"line":182,"column":65}},"97":{"start":{"line":183,"column":2},"end":{"line":183,"column":70}},"98":{"start":{"line":184,"column":2},"end":{"line":184,"column":70}},"99":{"start":{"line":185,"column":2},"end":{"line":185,"column":77}},"100":{"start":{"line":186,"column":2},"end":{"line":186,"column":81}},"101":{"start":{"line":187,"column":2},"end":{"line":187,"column":75}},"102":{"start":{"line":190,"column":0},"end":{"line":190,"column":22}},"103":{"start":{"line":191,"column":0},"end":{"line":191,"column":48}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":17},"end":{"line":10,"column":29}},{"start":{"line":10,"column":33},"end":{"line":10,"column":68}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":5},"end":{"line":33,"column":45}},{"start":{"line":33,"column":49},"end":{"line":33,"column":111}}]},"6":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"8":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"9":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":5},"end":{"line":54,"column":45}},{"start":{"line":54,"column":49},"end":{"line":54,"column":111}}]},"10":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":31},"end":{"line":68,"column":34}},{"start":{"line":68,"column":38},"end":{"line":68,"column":124}}]},"11":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":19}},{"start":{"line":76,"column":23},"end":{"line":76,"column":25}}]},"12":{"line":83,"type":"cond-expr","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":28}},{"start":{"line":84,"column":31},"end":{"line":84,"column":35}}]},"13":{"line":85,"type":"cond-expr","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":30}},{"start":{"line":86,"column":33},"end":{"line":86,"column":37}}]},"14":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"15":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]},"16":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":9},"end":{"line":93,"column":23}},{"start":{"line":93,"column":27},"end":{"line":93,"column":43}}]},"17":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":13},"end":{"line":95,"column":13}},{"start":{"line":95,"column":13},"end":{"line":95,"column":13}}]},"18":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":30}},{"start":{"line":95,"column":34},"end":{"line":95,"column":46}},{"start":{"line":96,"column":11},"end":{"line":96,"column":38}},{"start":{"line":97,"column":11},"end":{"line":97,"column":73}}]},"19":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":13},"end":{"line":99,"column":13}},{"start":{"line":99,"column":13},"end":{"line":99,"column":13}}]},"20":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":16},"end":{"line":99,"column":31}},{"start":{"line":99,"column":35},"end":{"line":99,"column":51}},{"start":{"line":99,"column":55},"end":{"line":99,"column":67}},{"start":{"line":100,"column":11},"end":{"line":100,"column":38}},{"start":{"line":101,"column":11},"end":{"line":101,"column":75}}]},"21":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":11},"end":{"line":104,"column":11}},{"start":{"line":104,"column":11},"end":{"line":104,"column":11}}]},"22":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"23":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":9},"end":{"line":107,"column":23}},{"start":{"line":107,"column":27},"end":{"line":107,"column":43}}]},"24":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":13},"end":{"line":109,"column":13}},{"start":{"line":109,"column":13},"end":{"line":109,"column":13}}]},"25":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":16},"end":{"line":109,"column":30}},{"start":{"line":109,"column":34},"end":{"line":109,"column":39}},{"start":{"line":109,"column":43},"end":{"line":109,"column":63}},{"start":{"line":110,"column":11},"end":{"line":110,"column":66}}]},"26":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":13},"end":{"line":112,"column":13}},{"start":{"line":112,"column":13},"end":{"line":112,"column":13}}]},"27":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":16},"end":{"line":112,"column":31}},{"start":{"line":112,"column":35},"end":{"line":112,"column":51}},{"start":{"line":112,"column":55},"end":{"line":112,"column":60}},{"start":{"line":112,"column":64},"end":{"line":112,"column":84}},{"start":{"line":113,"column":11},"end":{"line":113,"column":68}}]},"28":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":31},"end":{"line":140,"column":57}},{"start":{"line":140,"column":61},"end":{"line":140,"column":65}}]},"29":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"30":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"31":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"32":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"33":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"34":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"35":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]}},"code":["\"use strict\";","","var MongoError = require('mongodb-core').MongoError","  , f = require('util').format;","","// The store of ops","var Store = function(topology, storeOptions) {","  var self = this;","  var storedOps = [];","  storeOptions = storeOptions || {force:false, bufferMaxEntries: -1}","","  // Internal state","  this.s = {","      storedOps: storedOps","    , storeOptions: storeOptions","    , topology: topology","  }","","  Object.defineProperty(this, 'length', {","    enumerable:true, get: function() { return self.s.storedOps.length; }","  });","}","","Store.prototype.add = function(opType, ns, ops, options, callback) {","  if(this.s.storeOptions.force) {","    return callback(MongoError.create({message: \"db closed by application\", driver:true}));","  }","","  if(this.s.storeOptions.bufferMaxEntries == 0) {","    return callback(MongoError.create({message: f(\"no connection available for operation and number of stored operation > %s\", this.s.storeOptions.bufferMaxEntries), driver:true }));","  }","","  if(this.s.storeOptions.bufferMaxEntries > 0 && this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries) {","    while(this.s.storedOps.length > 0) {","      var op = this.s.storedOps.shift();","      op.c(MongoError.create({message: f(\"no connection available for operation and number of stored operation > %s\", this.s.storeOptions.bufferMaxEntries), driver:true }));","    }","","    return;","  }","","  this.s.storedOps.push({t: opType, n: ns, o: ops, op: options, c: callback})","}","","Store.prototype.addObjectAndMethod = function(opType, object, method, params, callback) {","  if(this.s.storeOptions.force) {","    return callback(MongoError.create({message: \"db closed by application\", driver:true }));","  }","","  if(this.s.storeOptions.bufferMaxEntries == 0) {","    return callback(MongoError.create({message: f(\"no connection available for operation and number of stored operation > %s\", this.s.storeOptions.bufferMaxEntries), driver:true }));","  }","","  if(this.s.storeOptions.bufferMaxEntries > 0 && this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries) {","    while(this.s.storedOps.length > 0) {","      var op = this.s.storedOps.shift();","      op.c(MongoError.create({message: f(\"no connection available for operation and number of stored operation > %s\", this.s.storeOptions.bufferMaxEntries), driver:true }));","    }","","    return;","  }","","  this.s.storedOps.push({t: opType, m: method, o: object, p: params, c: callback})","}","","Store.prototype.flush = function(err) {","  while(this.s.storedOps.length > 0) {","    this.s.storedOps.shift().c(err || MongoError.create({message: f(\"no connection available for operation\"), driver:true }));","  }","}","","var primaryOptions = ['primary', 'primaryPreferred', 'nearest', 'secondaryPreferred'];","var secondaryOptions = ['secondary', 'secondaryPreferred'];","","Store.prototype.execute = function(options) {","  options = options || {};","  // Get current ops","  var ops = this.s.storedOps;","  // Reset the ops","  this.s.storedOps = [];","","  // Unpack options","  var executePrimary = typeof options.executePrimary === 'boolean'","    ? options.executePrimary : true;","  var executeSecondary = typeof options.executeSecondary === 'boolean'","    ? options.executeSecondary : true;","","  // Execute all the stored ops","  while(ops.length > 0) {","    var op = ops.shift();","","    if(op.t == 'cursor') {","      if(executePrimary && executeSecondary) {","        op.o[op.m].apply(op.o, op.p);","      } else if(executePrimary && op.o.options","        && op.o.options.readPreference","        && primaryOptions.indexOf(op.o.options.readPreference.mode) != -1) {","          op.o[op.m].apply(op.o, op.p);","      } else if(!executePrimary && executeSecondary && op.o.options","        && op.o.options.readPreference","        && secondaryOptions.indexOf(op.o.options.readPreference.mode) != -1) {","          op.o[op.m].apply(op.o, op.p);","      }","    } else if(op.t == 'auth') {","      this.s.topology[op.t].apply(this.s.topology, op.o);","    } else {","      if(executePrimary && executeSecondary) {","        this.s.topology[op.t](op.n, op.o, op.op, op.c);","      } else if(executePrimary && op.op && op.op.readPreference","        && primaryOptions.indexOf(op.op.readPreference.mode) != -1) {","          this.s.topology[op.t](op.n, op.o, op.op, op.c);","      } else if(!executePrimary && executeSecondary && op.op && op.op.readPreference","        && secondaryOptions.indexOf(op.op.readPreference.mode) != -1) {","          this.s.topology[op.t](op.n, op.o, op.op, op.c);","      }","    }","  }","}","","Store.prototype.all = function() {","  return this.s.storedOps;","}","","// Server capabilities","var ServerCapabilities = function(ismaster) {","  var setup_get_property = function(object, name, value) {","    Object.defineProperty(object, name, {","        enumerable: true","      , get: function () { return value; }","    });","  }","","  // Capabilities","  var aggregationCursor = false;","  var writeCommands = false;","  var textSearch = false;","  var authCommands = false;","  var listCollections = false;","  var listIndexes = false;","  var maxNumberOfDocsInBatch = ismaster.maxWriteBatchSize || 1000;","  var commandsTakeWriteConcern = false;","  var commandsTakeCollation = false;","","  if(ismaster.minWireVersion >= 0) {","    textSearch = true;","  }","","  if(ismaster.maxWireVersion >= 1) {","    aggregationCursor = true;","    authCommands = true;","  }","","  if(ismaster.maxWireVersion >= 2) {","    writeCommands = true;","  }","","  if(ismaster.maxWireVersion >= 3) {","    listCollections = true;","    listIndexes = true;","  }","","  if(ismaster.maxWireVersion >= 5) {","    commandsTakeWriteConcern = true;","    commandsTakeCollation = true;","  }","","  // If no min or max wire version set to 0","  if(ismaster.minWireVersion == null) {","    ismaster.minWireVersion = 0;","  }","","  if(ismaster.maxWireVersion == null) {","    ismaster.maxWireVersion = 0;","  }","","  // Map up read only parameters","  setup_get_property(this, \"hasAggregationCursor\", aggregationCursor);","  setup_get_property(this, \"hasWriteCommands\", writeCommands);","  setup_get_property(this, \"hasTextSearch\", textSearch);","  setup_get_property(this, \"hasAuthCommands\", authCommands);","  setup_get_property(this, \"hasListCollectionsCommand\", listCollections);","  setup_get_property(this, \"hasListIndexesCommand\", listIndexes);","  setup_get_property(this, \"minWireVersion\", ismaster.minWireVersion);","  setup_get_property(this, \"maxWireVersion\", ismaster.maxWireVersion);","  setup_get_property(this, \"maxNumberOfDocsInBatch\", maxNumberOfDocsInBatch);","  setup_get_property(this, \"commandsTakeWriteConcern\", commandsTakeWriteConcern);","  setup_get_property(this, \"commandsTakeCollation\", commandsTakeCollation);","}","","exports.Store = Store;","exports.ServerCapabilities = ServerCapabilities;",""],"l":{"3":1,"7":1,"8":0,"9":0,"10":0,"13":0,"19":0,"20":0,"24":1,"25":0,"26":0,"29":0,"30":0,"33":0,"34":0,"35":0,"36":0,"39":0,"42":0,"45":1,"46":0,"47":0,"50":0,"51":0,"54":0,"55":0,"56":0,"57":0,"60":0,"63":0,"66":1,"67":0,"68":0,"72":1,"73":1,"75":1,"76":0,"78":0,"80":0,"83":0,"85":0,"89":0,"90":0,"92":0,"93":0,"94":0,"95":0,"98":0,"99":0,"102":0,"104":0,"105":0,"107":0,"108":0,"109":0,"111":0,"112":0,"114":0,"120":1,"121":0,"125":1,"126":0,"127":0,"129":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"144":0,"145":0,"148":0,"149":0,"150":0,"153":0,"154":0,"157":0,"158":0,"159":0,"162":0,"163":0,"164":0,"168":0,"169":0,"172":0,"173":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"190":1,"191":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/mongos.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/mongos.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":1,"41":1,"42":0,"43":1,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":1,"117":0,"118":1,"119":1,"120":0,"121":0,"122":1,"123":1,"124":0,"125":1,"126":1,"127":0,"128":1,"129":1,"130":0,"131":1,"132":0,"133":1,"134":1,"135":0,"136":0,"137":1,"138":1,"139":0,"140":1,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":1,"148":1,"149":0,"150":0,"151":1,"152":1,"153":0,"154":0,"155":1,"156":1,"157":0,"158":1,"159":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"fnMap":{"1":{"name":"(anonymous_1)","line":96,"loc":{"start":{"line":96,"column":13},"end":{"line":96,"column":40}}},"2":{"name":"(anonymous_2)","line":124,"loc":{"start":{"line":124,"column":29},"end":{"line":124,"column":41}}},"3":{"name":"(anonymous_3)","line":210,"loc":{"start":{"line":210,"column":24},"end":{"line":210,"column":35}}},"4":{"name":"(anonymous_4)","line":214,"loc":{"start":{"line":214,"column":24},"end":{"line":214,"column":35}}},"5":{"name":"(anonymous_5)","line":221,"loc":{"start":{"line":221,"column":25},"end":{"line":221,"column":36}}},"6":{"name":"(anonymous_6)","line":227,"loc":{"start":{"line":227,"column":24},"end":{"line":227,"column":35}}},"7":{"name":"(anonymous_7)","line":231,"loc":{"start":{"line":231,"column":27},"end":{"line":231,"column":60}}},"8":{"name":"(anonymous_8)","line":242,"loc":{"start":{"line":242,"column":28},"end":{"line":242,"column":39}}},"9":{"name":"(anonymous_9)","line":243,"loc":{"start":{"line":243,"column":11},"end":{"line":243,"column":25}}},"10":{"name":"(anonymous_10)","line":246,"loc":{"start":{"line":246,"column":21},"end":{"line":246,"column":33}}},"11":{"name":"(anonymous_11)","line":256,"loc":{"start":{"line":256,"column":25},"end":{"line":256,"column":36}}},"12":{"name":"(anonymous_12)","line":262,"loc":{"start":{"line":262,"column":21},"end":{"line":262,"column":37}}},"13":{"name":"(anonymous_13)","line":263,"loc":{"start":{"line":263,"column":11},"end":{"line":263,"column":25}}},"14":{"name":"(anonymous_14)","line":271,"loc":{"start":{"line":271,"column":25},"end":{"line":271,"column":36}}},"15":{"name":"(anonymous_15)","line":277,"loc":{"start":{"line":277,"column":14},"end":{"line":277,"column":30}}},"16":{"name":"(anonymous_16)","line":278,"loc":{"start":{"line":278,"column":11},"end":{"line":278,"column":31}}},"17":{"name":"(anonymous_17)","line":284,"loc":{"start":{"line":284,"column":23},"end":{"line":284,"column":34}}},"18":{"name":"(anonymous_18)","line":288,"loc":{"start":{"line":288,"column":62},"end":{"line":288,"column":74}}},"19":{"name":"(anonymous_19)","line":318,"loc":{"start":{"line":318,"column":23},"end":{"line":318,"column":34}}},"20":{"name":"(anonymous_20)","line":339,"loc":{"start":{"line":339,"column":32},"end":{"line":339,"column":43}}},"21":{"name":"(anonymous_21)","line":349,"loc":{"start":{"line":349,"column":27},"end":{"line":349,"column":64}}},"22":{"name":"(anonymous_22)","line":356,"loc":{"start":{"line":356,"column":26},"end":{"line":356,"column":63}}},"23":{"name":"(anonymous_23)","line":357,"loc":{"start":{"line":357,"column":41},"end":{"line":357,"column":56}}},"24":{"name":"(anonymous_24)","line":365,"loc":{"start":{"line":365,"column":26},"end":{"line":365,"column":63}}},"25":{"name":"(anonymous_25)","line":372,"loc":{"start":{"line":372,"column":26},"end":{"line":372,"column":63}}},"26":{"name":"(anonymous_26)","line":379,"loc":{"start":{"line":379,"column":31},"end":{"line":379,"column":42}}},"27":{"name":"(anonymous_27)","line":384,"loc":{"start":{"line":384,"column":31},"end":{"line":384,"column":42}}},"28":{"name":"(anonymous_28)","line":391,"loc":{"start":{"line":391,"column":26},"end":{"line":391,"column":53}}},"29":{"name":"(anonymous_29)","line":398,"loc":{"start":{"line":398,"column":32},"end":{"line":398,"column":43}}},"30":{"name":"(anonymous_30)","line":406,"loc":{"start":{"line":406,"column":25},"end":{"line":406,"column":37}}},"31":{"name":"(anonymous_31)","line":410,"loc":{"start":{"line":410,"column":25},"end":{"line":410,"column":47}}},"32":{"name":"(anonymous_32)","line":423,"loc":{"start":{"line":423,"column":24},"end":{"line":423,"column":35}}},"33":{"name":"(anonymous_33)","line":430,"loc":{"start":{"line":430,"column":26},"end":{"line":430,"column":37}}},"34":{"name":"(anonymous_34)","line":442,"loc":{"start":{"line":442,"column":31},"end":{"line":442,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":20,"column":23}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":68}},"3":{"start":{"line":24,"column":0},"end":{"line":24,"column":74}},"4":{"start":{"line":25,"column":0},"end":{"line":25,"column":21}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":28}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":32}},"7":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"8":{"start":{"line":50,"column":1},"end":{"line":56,"column":70}},"9":{"start":{"line":96,"column":0},"end":{"line":199,"column":1}},"10":{"start":{"line":97,"column":2},"end":{"line":97,"column":68}},"11":{"start":{"line":97,"column":32},"end":{"line":97,"column":68}},"12":{"start":{"line":98,"column":2},"end":{"line":98,"column":26}},"13":{"start":{"line":99,"column":2},"end":{"line":99,"column":18}},"14":{"start":{"line":102,"column":2},"end":{"line":102,"column":53}},"15":{"start":{"line":105,"column":2},"end":{"line":109,"column":3}},"16":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"17":{"start":{"line":107,"column":6},"end":{"line":107,"column":108}},"18":{"start":{"line":112,"column":2},"end":{"line":115,"column":3}},"19":{"start":{"line":118,"column":2},"end":{"line":118,"column":61}},"20":{"start":{"line":121,"column":2},"end":{"line":121,"column":26}},"21":{"start":{"line":124,"column":2},"end":{"line":126,"column":5}},"22":{"start":{"line":125,"column":4},"end":{"line":125,"column":39}},"23":{"start":{"line":129,"column":2},"end":{"line":129,"column":93}},"24":{"start":{"line":130,"column":2},"end":{"line":130,"column":92}},"25":{"start":{"line":133,"column":2},"end":{"line":139,"column":5}},"26":{"start":{"line":142,"column":2},"end":{"line":142,"column":59}},"27":{"start":{"line":145,"column":2},"end":{"line":146,"column":38}},"28":{"start":{"line":149,"column":2},"end":{"line":149,"column":65}},"29":{"start":{"line":150,"column":2},"end":{"line":153,"column":3}},"30":{"start":{"line":151,"column":4},"end":{"line":151,"column":66}},"31":{"start":{"line":152,"column":4},"end":{"line":152,"column":58}},"32":{"start":{"line":156,"column":2},"end":{"line":168,"column":3}},"33":{"start":{"line":171,"column":2},"end":{"line":171,"column":45}},"34":{"start":{"line":173,"column":2},"end":{"line":175,"column":3}},"35":{"start":{"line":174,"column":4},"end":{"line":174,"column":69}},"36":{"start":{"line":178,"column":2},"end":{"line":178,"column":51}},"37":{"start":{"line":180,"column":2},"end":{"line":180,"column":27}},"38":{"start":{"line":183,"column":2},"end":{"line":198,"column":3}},"39":{"start":{"line":201,"column":0},"end":{"line":201,"column":65}},"40":{"start":{"line":206,"column":0},"end":{"line":206,"column":31}},"41":{"start":{"line":209,"column":0},"end":{"line":211,"column":3}},"42":{"start":{"line":210,"column":37},"end":{"line":210,"column":73}},"43":{"start":{"line":213,"column":0},"end":{"line":217,"column":3}},"44":{"start":{"line":215,"column":4},"end":{"line":215,"column":36}},"45":{"start":{"line":220,"column":0},"end":{"line":224,"column":3}},"46":{"start":{"line":222,"column":4},"end":{"line":222,"column":32}},"47":{"start":{"line":226,"column":0},"end":{"line":228,"column":3}},"48":{"start":{"line":227,"column":37},"end":{"line":227,"column":71}},"49":{"start":{"line":231,"column":0},"end":{"line":336,"column":1}},"50":{"start":{"line":232,"column":2},"end":{"line":232,"column":18}},"51":{"start":{"line":233,"column":2},"end":{"line":233,"column":72}},"52":{"start":{"line":233,"column":37},"end":{"line":233,"column":72}},"53":{"start":{"line":234,"column":2},"end":{"line":234,"column":37}},"54":{"start":{"line":234,"column":23},"end":{"line":234,"column":37}},"55":{"start":{"line":235,"column":2},"end":{"line":235,"column":56}},"56":{"start":{"line":235,"column":40},"end":{"line":235,"column":56}},"57":{"start":{"line":236,"column":2},"end":{"line":236,"column":28}},"58":{"start":{"line":239,"column":2},"end":{"line":239,"column":61}},"59":{"start":{"line":242,"column":2},"end":{"line":259,"column":3}},"60":{"start":{"line":243,"column":4},"end":{"line":258,"column":5}},"61":{"start":{"line":245,"column":6},"end":{"line":245,"column":49}},"62":{"start":{"line":246,"column":6},"end":{"line":248,"column":9}},"63":{"start":{"line":247,"column":8},"end":{"line":247,"column":52}},"64":{"start":{"line":250,"column":6},"end":{"line":250,"column":67}},"65":{"start":{"line":253,"column":6},"end":{"line":257,"column":7}},"66":{"start":{"line":254,"column":8},"end":{"line":254,"column":22}},"67":{"start":{"line":256,"column":8},"end":{"line":256,"column":51}},"68":{"start":{"line":256,"column":38},"end":{"line":256,"column":48}},"69":{"start":{"line":262,"column":2},"end":{"line":268,"column":3}},"70":{"start":{"line":263,"column":4},"end":{"line":267,"column":5}},"71":{"start":{"line":264,"column":6},"end":{"line":266,"column":7}},"72":{"start":{"line":265,"column":8},"end":{"line":265,"column":30}},"73":{"start":{"line":271,"column":2},"end":{"line":274,"column":3}},"74":{"start":{"line":272,"column":4},"end":{"line":272,"column":27}},"75":{"start":{"line":273,"column":4},"end":{"line":273,"column":27}},"76":{"start":{"line":277,"column":2},"end":{"line":281,"column":3}},"77":{"start":{"line":278,"column":4},"end":{"line":280,"column":5}},"78":{"start":{"line":279,"column":6},"end":{"line":279,"column":34}},"79":{"start":{"line":284,"column":2},"end":{"line":320,"column":3}},"80":{"start":{"line":286,"column":4},"end":{"line":290,"column":7}},"81":{"start":{"line":289,"column":6},"end":{"line":289,"column":42}},"82":{"start":{"line":293,"column":4},"end":{"line":293,"column":59}},"83":{"start":{"line":294,"column":4},"end":{"line":294,"column":55}},"84":{"start":{"line":295,"column":4},"end":{"line":295,"column":55}},"85":{"start":{"line":298,"column":4},"end":{"line":298,"column":84}},"86":{"start":{"line":299,"column":4},"end":{"line":299,"column":80}},"87":{"start":{"line":300,"column":4},"end":{"line":300,"column":84}},"88":{"start":{"line":301,"column":4},"end":{"line":301,"column":78}},"89":{"start":{"line":302,"column":4},"end":{"line":302,"column":62}},"90":{"start":{"line":303,"column":4},"end":{"line":303,"column":60}},"91":{"start":{"line":304,"column":4},"end":{"line":304,"column":66}},"92":{"start":{"line":305,"column":4},"end":{"line":305,"column":64}},"93":{"start":{"line":306,"column":4},"end":{"line":306,"column":88}},"94":{"start":{"line":309,"column":4},"end":{"line":309,"column":54}},"95":{"start":{"line":312,"column":4},"end":{"line":312,"column":34}},"96":{"start":{"line":315,"column":4},"end":{"line":319,"column":5}},"97":{"start":{"line":316,"column":6},"end":{"line":316,"column":27}},"98":{"start":{"line":318,"column":6},"end":{"line":318,"column":49}},"99":{"start":{"line":318,"column":36},"end":{"line":318,"column":46}},"100":{"start":{"line":323,"column":2},"end":{"line":323,"column":64}},"101":{"start":{"line":324,"column":2},"end":{"line":324,"column":60}},"102":{"start":{"line":325,"column":2},"end":{"line":325,"column":60}},"103":{"start":{"line":326,"column":2},"end":{"line":326,"column":48}},"104":{"start":{"line":328,"column":2},"end":{"line":328,"column":46}},"105":{"start":{"line":329,"column":2},"end":{"line":329,"column":42}},"106":{"start":{"line":332,"column":2},"end":{"line":332,"column":50}},"107":{"start":{"line":335,"column":2},"end":{"line":335,"column":34}},"108":{"start":{"line":339,"column":0},"end":{"line":344,"column":1}},"109":{"start":{"line":340,"column":2},"end":{"line":340,"column":55}},"110":{"start":{"line":340,"column":27},"end":{"line":340,"column":55}},"111":{"start":{"line":341,"column":2},"end":{"line":341,"column":55}},"112":{"start":{"line":341,"column":43},"end":{"line":341,"column":55}},"113":{"start":{"line":342,"column":2},"end":{"line":342,"column":78}},"114":{"start":{"line":343,"column":2},"end":{"line":343,"column":30}},"115":{"start":{"line":346,"column":0},"end":{"line":346,"column":100}},"116":{"start":{"line":349,"column":0},"end":{"line":351,"column":1}},"117":{"start":{"line":350,"column":2},"end":{"line":350,"column":71}},"118":{"start":{"line":353,"column":0},"end":{"line":353,"column":63}},"119":{"start":{"line":356,"column":0},"end":{"line":360,"column":1}},"120":{"start":{"line":357,"column":2},"end":{"line":359,"column":5}},"121":{"start":{"line":358,"column":4},"end":{"line":358,"column":18}},"122":{"start":{"line":362,"column":0},"end":{"line":362,"column":62}},"123":{"start":{"line":365,"column":0},"end":{"line":367,"column":1}},"124":{"start":{"line":366,"column":2},"end":{"line":366,"column":51}},"125":{"start":{"line":369,"column":0},"end":{"line":369,"column":62}},"126":{"start":{"line":372,"column":0},"end":{"line":374,"column":1}},"127":{"start":{"line":373,"column":2},"end":{"line":373,"column":51}},"128":{"start":{"line":376,"column":0},"end":{"line":376,"column":62}},"129":{"start":{"line":379,"column":0},"end":{"line":381,"column":1}},"130":{"start":{"line":380,"column":2},"end":{"line":380,"column":37}},"131":{"start":{"line":384,"column":0},"end":{"line":386,"column":1}},"132":{"start":{"line":385,"column":2},"end":{"line":385,"column":37}},"133":{"start":{"line":388,"column":0},"end":{"line":388,"column":88}},"134":{"start":{"line":391,"column":0},"end":{"line":394,"column":1}},"135":{"start":{"line":392,"column":2},"end":{"line":392,"column":43}},"136":{"start":{"line":393,"column":2},"end":{"line":393,"column":48}},"137":{"start":{"line":396,"column":0},"end":{"line":396,"column":116}},"138":{"start":{"line":398,"column":0},"end":{"line":400,"column":1}},"139":{"start":{"line":399,"column":2},"end":{"line":399,"column":38}},"140":{"start":{"line":406,"column":0},"end":{"line":408,"column":1}},"141":{"start":{"line":407,"column":2},"end":{"line":407,"column":31}},"142":{"start":{"line":410,"column":0},"end":{"line":419,"column":1}},"143":{"start":{"line":411,"column":2},"end":{"line":413,"column":5}},"144":{"start":{"line":415,"column":2},"end":{"line":418,"column":3}},"145":{"start":{"line":416,"column":4},"end":{"line":416,"column":44}},"146":{"start":{"line":417,"column":4},"end":{"line":417,"column":25}},"147":{"start":{"line":421,"column":0},"end":{"line":421,"column":62}},"148":{"start":{"line":423,"column":0},"end":{"line":426,"column":1}},"149":{"start":{"line":424,"column":2},"end":{"line":424,"column":54}},"150":{"start":{"line":425,"column":2},"end":{"line":425,"column":48}},"151":{"start":{"line":428,"column":0},"end":{"line":428,"column":60}},"152":{"start":{"line":430,"column":0},"end":{"line":433,"column":1}},"153":{"start":{"line":431,"column":2},"end":{"line":431,"column":54}},"154":{"start":{"line":432,"column":2},"end":{"line":432,"column":50}},"155":{"start":{"line":435,"column":0},"end":{"line":435,"column":62}},"156":{"start":{"line":442,"column":0},"end":{"line":444,"column":1}},"157":{"start":{"line":443,"column":2},"end":{"line":443,"column":37}},"158":{"start":{"line":446,"column":0},"end":{"line":446,"column":85}},"159":{"start":{"line":526,"column":0},"end":{"line":526,"column":24}}},"branchMap":{"1":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"2":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":19}},{"start":{"line":98,"column":23},"end":{"line":98,"column":25}}]},"3":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"4":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":70},"end":{"line":114,"column":94}},{"start":{"line":114,"column":97},"end":{"line":114,"column":107}}]},"5":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":14},"end":{"line":118,"column":27}},{"start":{"line":118,"column":31},"end":{"line":118,"column":60}}]},"6":{"line":129,"type":"cond-expr","locations":[{"start":{"line":129,"column":63},"end":{"line":129,"column":85}},{"start":{"line":129,"column":88},"end":{"line":129,"column":92}}]},"7":{"line":130,"type":"cond-expr","locations":[{"start":{"line":130,"column":58},"end":{"line":130,"column":79}},{"start":{"line":130,"column":82},"end":{"line":130,"column":91}}]},"8":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":55},"end":{"line":137,"column":72}},{"start":{"line":137,"column":75},"end":{"line":137,"column":79}}]},"9":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":64}},{"start":{"line":138,"column":67},"end":{"line":138,"column":68}}]},"10":{"line":145,"type":"cond-expr","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":27}},{"start":{"line":146,"column":30},"end":{"line":146,"column":37}}]},"11":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":22},"end":{"line":145,"column":43}},{"start":{"line":145,"column":47},"end":{"line":145,"column":92}}]},"12":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"13":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"14":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"15":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"16":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"17":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":6}},{"start":{"line":264,"column":6},"end":{"line":264,"column":6}}]},"18":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":2},"end":{"line":340,"column":2}},{"start":{"line":340,"column":2},"end":{"line":340,"column":2}}]},"19":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"20":{"line":412,"type":"cond-expr","locations":[{"start":{"line":412,"column":45},"end":{"line":412,"column":56}},{"start":{"line":412,"column":59},"end":{"line":412,"column":64}}]},"21":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":415,"column":2}},{"start":{"line":415,"column":2},"end":{"line":415,"column":2}}]}},"code":["\"use strict\";","","var EventEmitter = require('events').EventEmitter","  , inherits = require('util').inherits","  , f = require('util').format","  , ServerCapabilities = require('./topology_base').ServerCapabilities","  , MongoError = require('mongodb-core').MongoError","  , CMongos = require('mongodb-core').Mongos","  , Cursor = require('./cursor')","  , AggregationCursor = require('./aggregation_cursor')","  , CommandCursor = require('./command_cursor')","  , Define = require('./metadata')","  , Server = require('./server')","  , Store = require('./topology_base').Store","  , MAX_JS_INT = require('./utils').MAX_JS_INT","  , translateOptions = require('./utils').translateOptions","  , filterOptions = require('./utils').filterOptions","  , mergeOptions = require('./utils').mergeOptions","  , getReadPreference = require('./utils').getReadPreference","  , os = require('os');","","// Get package.json variable","var driverVersion = require(__dirname + '/../package.json').version;","var nodejsversion = f('Node.js %s, %s', process.version, os.endianness());","var type = os.type();","var name = process.platform;","var architecture = process.arch;","var release = os.release();","","/**"," * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is"," * used to construct connections."," *"," * **Mongos Should not be used, use MongoClient.connect**"," * @example"," * var Db = require('mongodb').Db,"," *   Mongos = require('mongodb').Mongos,"," *   Server = require('mongodb').Server,"," *   test = require('assert');"," * // Connect using Mongos"," * var server = new Server('localhost', 27017);"," * var db = new Db('test', new Mongos([server]));"," * db.open(function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */",""," // Allowed parameters"," var legalOptionNames = ['ha', 'haInterval', 'acceptableLatencyMS'","   , 'poolSize', 'ssl', 'checkServerIdentity', 'sslValidate'","   , 'sslCA', 'sslCRL', 'sslCert', 'sslKey', 'sslPass', 'socketOptions', 'bufferMaxEntries'","   , 'store', 'auto_reconnect', 'autoReconnect', 'emitError'","   , 'keepAlive', 'noDelay', 'connectTimeoutMS', 'socketTimeoutMS'","   , 'loggerLevel', 'logger', 'reconnectTries', 'appname', 'domainsEnabled'","   , 'servername', 'promoteLongs', 'promoteValues', 'promoteBuffers'];","","/**"," * Creates a new Mongos instance"," * @class"," * @deprecated"," * @param {Server[]} servers A seedlist of servers participating in the replicaset."," * @param {object} [options=null] Optional settings."," * @param {booelan} [options.ha=true] Turn on high availability monitoring."," * @param {number} [options.haInterval=5000] Time between each replicaset status check."," * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons."," * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for MongoS proxy selection"," * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {array} [options.sslCRL=null] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {string} [options.servername=null] String containing the server name requested via TLS SNI."," * @param {object} [options.socketOptions=null] Socket options"," * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option."," * @param {number} [options.socketOptions.keepAlive=0] TCP KeepAlive on the socket with a X ms delay before start."," * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting"," * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting"," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @fires Mongos#connect"," * @fires Mongos#ha"," * @fires Mongos#joined"," * @fires Mongos#left"," * @fires Mongos#fullsetup"," * @fires Mongos#open"," * @fires Mongos#close"," * @fires Mongos#error"," * @fires Mongos#timeout"," * @fires Mongos#parseError"," * @property {string} parserType the parser type used (c++ or js)."," * @return {Mongos} a Mongos instance."," */","var Mongos = function(servers, options) {","  if(!(this instanceof Mongos)) return new Mongos(servers, options);","  options = options || {};","  var self = this;","","  // Filter the options","  options = filterOptions(options, legalOptionNames);","","  // Ensure all the instances are Server","  for(var i = 0; i < servers.length; i++) {","    if(!(servers[i] instanceof Server)) {","      throw MongoError.create({message: \"all seed list instances must be of the Server type\", driver:true});","    }","  }","","  // Stored options","  var storeOptions = {","      force: false","    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : MAX_JS_INT","  }","","  // Shared global store","  var store = options.store || new Store(self, storeOptions);","","  // Set up event emitter","  EventEmitter.call(this);","","  // Build seed list","  var seedlist = servers.map(function(x) {","    return {host: x.host, port: x.port}","  });","","  // Get the reconnect option","  var reconnect = typeof options.auto_reconnect == 'boolean' ? options.auto_reconnect : true;","  reconnect = typeof options.autoReconnect == 'boolean' ? options.autoReconnect : reconnect;","","  // Clone options","  var clonedOptions = mergeOptions({}, {","    disconnectHandler: store,","    cursorFactory: Cursor,","    reconnect: reconnect,","    emitError: typeof options.emitError == 'boolean' ? options.emitError : true,","    size: typeof options.poolSize == 'number' ? options.poolSize : 5","  });","","  // Translate any SSL options and other connectivity options","  clonedOptions = translateOptions(clonedOptions, options);","","  // Socket options","  var socketOptions = options.socketOptions && Object.keys(options.socketOptions).length > 0","    ? options.socketOptions : options;","","  // Translate all the options to the mongodb-core ones","  clonedOptions = translateOptions(clonedOptions, socketOptions);","  if(typeof clonedOptions.keepAlive == 'number') {","    clonedOptions.keepAliveInitialDelay = clonedOptions.keepAlive;","    clonedOptions.keepAlive = clonedOptions.keepAlive > 0;","  }","","  // Build default client information","  this.clientInfo = {","    driver: {","      name: \"nodejs\",","      version: driverVersion","    },","    os: {","      type: type,","      name: name,","      architecture: architecture,","      version: release","    },","    platform: nodejsversion","  }","","  // Build default client information","  clonedOptions.clientInfo = this.clientInfo;","  // Do we have an application specific string","  if(options.appname) {","    clonedOptions.clientInfo.application = { name: options.appname };","  }","","  // Create the Mongos","  var mongos = new CMongos(seedlist, clonedOptions)","  // Server capabilities","  var sCapabilities = null;","","  // Internal state","  this.s = {","    // Create the Mongos","      mongos: mongos","    // Server capabilities","    , sCapabilities: sCapabilities","    // Debug turned on","    , debug: clonedOptions.debug","    // Store option defaults","    , storeOptions: storeOptions","    // Cloned options","    , clonedOptions: clonedOptions","    // Actual store of callbacks","    , store: store","    // Options","    , options: options","  }","}","","var define = Mongos.define = new Define('Mongos', Mongos, false);","","/**"," * @ignore"," */","inherits(Mongos, EventEmitter);","","// Last ismaster","Object.defineProperty(Mongos.prototype, 'isMasterDoc', {","  enumerable:true, get: function() { return this.s.mongos.lastIsMaster(); }","});","","Object.defineProperty(Mongos.prototype, 'parserType', {","  enumerable:true, get: function() {","    return this.s.mongos.parserType;","  }","});","","// BSON property","Object.defineProperty(Mongos.prototype, 'bson', {","  enumerable: true, get: function() {","    return this.s.mongos.s.bson;","  }","});","","Object.defineProperty(Mongos.prototype, 'haInterval', {","  enumerable:true, get: function() { return this.s.mongos.s.haInterval; }","});","","// Connect","Mongos.prototype.connect = function(db, _options, callback) {","  var self = this;","  if('function' === typeof _options) callback = _options, _options = {};","  if(_options == null) _options = {};","  if(!('function' === typeof callback)) callback = null;","  self.s.options = _options;","","  // Update bufferMaxEntries","  self.s.storeOptions.bufferMaxEntries = db.bufferMaxEntries;","","  // Error handler","  var connectErrorHandler = function() {","    return function(err) {","      // Remove all event handlers","      var events = ['timeout', 'error', 'close'];","      events.forEach(function(e) {","        self.removeListener(e, connectErrorHandler);","      });","","      self.s.mongos.removeListener('connect', connectErrorHandler);","","      // Try to callback","      try {","        callback(err);","      } catch(err) {","        process.nextTick(function() { throw err; })","      }","    }","  }","","  // Actual handler","  var errorHandler = function(event) {","    return function(err) {","      if(event != 'error') {","        self.emit(event, err);","      }","    }","  }","","  // Error handler","  var reconnectHandler = function() {","    self.emit('reconnect');","    self.s.store.execute();","  }","","  // relay the event","  var relay = function(event) {","    return function(t, server) {","      self.emit(event, t, server);","    }","  }","","  // Connect handler","  var connectHandler = function() {","    // Clear out all the current handlers left over","    [\"timeout\", \"error\", \"close\", 'serverOpening', 'serverDescriptionChanged', 'serverHeartbeatStarted',","      'serverHeartbeatSucceeded', 'serverHeartbeatFailed', 'serverClosed', 'topologyOpening',","      'topologyClosed', 'topologyDescriptionChanged'].forEach(function(e) {","      self.s.mongos.removeAllListeners(e);","    });","","    // Set up listeners","    self.s.mongos.once('timeout', errorHandler('timeout'));","    self.s.mongos.once('error', errorHandler('error'));","    self.s.mongos.once('close', errorHandler('close'));","","    // Set up SDAM listeners","    self.s.mongos.on('serverDescriptionChanged', relay('serverDescriptionChanged'));","    self.s.mongos.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));","    self.s.mongos.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));","    self.s.mongos.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));","    self.s.mongos.on('serverOpening', relay('serverOpening'));","    self.s.mongos.on('serverClosed', relay('serverClosed'));","    self.s.mongos.on('topologyOpening', relay('topologyOpening'));","    self.s.mongos.on('topologyClosed', relay('topologyClosed'));","    self.s.mongos.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));","","    // Set up serverConfig listeners","    self.s.mongos.on('fullsetup', relay('fullsetup'));","","    // Emit open event","    self.emit('open', null, self);","","    // Return correctly","    try {","      callback(null, self);","    } catch(err) {","      process.nextTick(function() { throw err; })","    }","  }","","  // Set up listeners","  self.s.mongos.once('timeout', connectErrorHandler('timeout'));","  self.s.mongos.once('error', connectErrorHandler('error'));","  self.s.mongos.once('close', connectErrorHandler('close'));","  self.s.mongos.once('connect', connectHandler);","  // Join and leave events","  self.s.mongos.on('joined', relay('joined'));","  self.s.mongos.on('left', relay('left'));","","  // Reconnect server","  self.s.mongos.on('reconnect', reconnectHandler);","","  // Start connection","  self.s.mongos.connect(_options);","}","","// Server capabilities","Mongos.prototype.capabilities = function() {","  if(this.s.sCapabilities) return this.s.sCapabilities;","  if(this.s.mongos.lastIsMaster() == null) return null;","  this.s.sCapabilities = new ServerCapabilities(this.s.mongos.lastIsMaster());","  return this.s.sCapabilities;","}","","define.classMethod('capabilities', {callback: false, promise:false, returns: [ServerCapabilities]});","","// Command","Mongos.prototype.command = function(ns, cmd, options, callback) {","  this.s.mongos.command(ns, cmd, getReadPreference(options), callback);","}","","define.classMethod('command', {callback: true, promise:false});","","// Insert","Mongos.prototype.insert = function(ns, ops, options, callback) {","  this.s.mongos.insert(ns, ops, options, function(e, m) {","    callback(e, m)","  });","}","","define.classMethod('insert', {callback: true, promise:false});","","// Update","Mongos.prototype.update = function(ns, ops, options, callback) {","  this.s.mongos.update(ns, ops, options, callback);","}","","define.classMethod('update', {callback: true, promise:false});","","// Remove","Mongos.prototype.remove = function(ns, ops, options, callback) {","  this.s.mongos.remove(ns, ops, options, callback);","}","","define.classMethod('remove', {callback: true, promise:false});","","// Destroyed","Mongos.prototype.isDestroyed = function() {","  return this.s.mongos.isDestroyed();","}","","// IsConnected","Mongos.prototype.isConnected = function() {","  return this.s.mongos.isConnected();","}","","define.classMethod('isConnected', {callback: false, promise:false, returns: [Boolean]});","","// Insert","Mongos.prototype.cursor = function(ns, cmd, options) {","  options.disconnectHandler = this.s.store;","  return this.s.mongos.cursor(ns, cmd, options);","}","","define.classMethod('cursor', {callback: false, promise:false, returns: [Cursor, AggregationCursor, CommandCursor]});","","Mongos.prototype.lastIsMaster = function() {","  return this.s.mongos.lastIsMaster();","}","","/**"," * Unref all sockets"," * @method"," */","Mongos.prototype.unref = function () {","  return this.s.mongos.unref();","}","","Mongos.prototype.close = function(forceClosed) {","  this.s.mongos.destroy({","    force: typeof forceClosed == 'boolean' ? forceClosed : false,","  });","  // We need to wash out all stored processes","  if(forceClosed == true) {","    this.s.storeOptions.force = forceClosed;","    this.s.store.flush();","  }","}","","define.classMethod('close', {callback: false, promise:false});","","Mongos.prototype.auth = function() {","  var args = Array.prototype.slice.call(arguments, 0);","  this.s.mongos.auth.apply(this.s.mongos, args);","}","","define.classMethod('auth', {callback: true, promise:false});","","Mongos.prototype.logout = function() {","  var args = Array.prototype.slice.call(arguments, 0);","  this.s.mongos.logout.apply(this.s.mongos, args);","}","","define.classMethod('logout', {callback: true, promise:false});","","/**"," * All raw connections"," * @method"," * @return {array}"," */","Mongos.prototype.connections = function() {","  return this.s.mongos.connections();","}","","define.classMethod('connections', {callback: false, promise:false, returns:[Array]});","","/**"," * A mongos connect event, used to verify that the connection is up and running"," *"," * @event Mongos#connect"," * @type {Mongos}"," */","","/**"," * The mongos high availability event"," *"," * @event Mongos#ha"," * @type {function}"," * @param {string} type The stage in the high availability event (start|end)"," * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only"," * @param {number} data.id The id for this high availability request"," * @param {object} data.state An object containing the information about the current replicaset"," */","","/**"," * A server member left the mongos set"," *"," * @event Mongos#left"," * @type {function}"," * @param {string} type The type of member that left (primary|secondary|arbiter)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the mongos set"," *"," * @event Mongos#joined"," * @type {function}"," * @param {string} type The type of member that joined (primary|secondary|arbiter)"," * @param {Server} server The server object that joined"," */","","/**"," * Mongos fullsetup event, emitted when all proxies in the topology have been connected to."," *"," * @event Mongos#fullsetup"," * @type {Mongos}"," */","","/**"," * Mongos open event, emitted when mongos can start processing commands."," *"," * @event Mongos#open"," * @type {Mongos}"," */","","/**"," * Mongos close event"," *"," * @event Mongos#close"," * @type {object}"," */","","/**"," * Mongos error event, emitted if there is an error listener."," *"," * @event Mongos#error"," * @type {MongoError}"," */","","/**"," * Mongos timeout event"," *"," * @event Mongos#timeout"," * @type {object}"," */","","/**"," * Mongos parseError event"," *"," * @event Mongos#parseError"," * @type {object}"," */","","module.exports = Mongos;",""],"l":{"3":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"50":1,"96":1,"97":0,"98":0,"99":0,"102":0,"105":0,"106":0,"107":0,"112":0,"118":0,"121":0,"124":0,"125":0,"129":0,"130":0,"133":0,"142":0,"145":0,"149":0,"150":0,"151":0,"152":0,"156":0,"171":0,"173":0,"174":0,"178":0,"180":0,"183":0,"201":1,"206":1,"209":1,"210":0,"213":1,"215":0,"220":1,"222":0,"226":1,"227":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"239":0,"242":0,"243":0,"245":0,"246":0,"247":0,"250":0,"253":0,"254":0,"256":0,"262":0,"263":0,"264":0,"265":0,"271":0,"272":0,"273":0,"277":0,"278":0,"279":0,"284":0,"286":0,"289":0,"293":0,"294":0,"295":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"309":0,"312":0,"315":0,"316":0,"318":0,"323":0,"324":0,"325":0,"326":0,"328":0,"329":0,"332":0,"335":0,"339":1,"340":0,"341":0,"342":0,"343":0,"346":1,"349":1,"350":0,"353":1,"356":1,"357":0,"358":0,"362":1,"365":1,"366":0,"369":1,"372":1,"373":0,"376":1,"379":1,"380":0,"384":1,"385":0,"388":1,"391":1,"392":0,"393":0,"396":1,"398":1,"399":0,"406":1,"407":0,"410":1,"411":0,"415":0,"416":0,"417":0,"421":1,"423":1,"424":0,"425":0,"428":1,"430":1,"431":0,"432":0,"435":1,"442":1,"443":0,"446":1,"526":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/replset.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/replset.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":0,"45":1,"46":0,"47":1,"48":0,"49":1,"50":0,"51":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":1,"137":0,"138":1,"139":1,"140":0,"141":1,"142":1,"143":0,"144":1,"145":1,"146":0,"147":1,"148":1,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":1,"156":1,"157":0,"158":0,"159":0,"160":1,"161":1,"162":0,"163":1,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":1,"175":1,"176":0,"177":0,"178":1,"179":1,"180":0,"181":0,"182":1,"183":1,"184":0,"185":1,"186":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"fnMap":{"1":{"name":"(anonymous_1)","line":100,"loc":{"start":{"line":100,"column":14},"end":{"line":100,"column":41}}},"2":{"name":"(anonymous_2)","line":127,"loc":{"start":{"line":127,"column":29},"end":{"line":127,"column":41}}},"3":{"name":"(anonymous_3)","line":180,"loc":{"start":{"line":180,"column":26},"end":{"line":180,"column":37}}},"4":{"name":"(anonymous_4)","line":207,"loc":{"start":{"line":207,"column":28},"end":{"line":207,"column":39}}},"5":{"name":"(anonymous_5)","line":219,"loc":{"start":{"line":219,"column":24},"end":{"line":219,"column":35}}},"6":{"name":"(anonymous_6)","line":223,"loc":{"start":{"line":223,"column":24},"end":{"line":223,"column":35}}},"7":{"name":"(anonymous_7)","line":230,"loc":{"start":{"line":230,"column":25},"end":{"line":230,"column":36}}},"8":{"name":"(anonymous_8)","line":236,"loc":{"start":{"line":236,"column":24},"end":{"line":236,"column":35}}},"9":{"name":"(anonymous_9)","line":242,"loc":{"start":{"line":242,"column":30},"end":{"line":242,"column":48}}},"10":{"name":"(anonymous_10)","line":254,"loc":{"start":{"line":254,"column":28},"end":{"line":254,"column":61}}},"11":{"name":"(anonymous_11)","line":265,"loc":{"start":{"line":265,"column":21},"end":{"line":265,"column":37}}},"12":{"name":"(anonymous_12)","line":266,"loc":{"start":{"line":266,"column":11},"end":{"line":266,"column":25}}},"13":{"name":"(anonymous_13)","line":274,"loc":{"start":{"line":274,"column":23},"end":{"line":274,"column":34}}},"14":{"name":"(anonymous_14)","line":278,"loc":{"start":{"line":278,"column":62},"end":{"line":278,"column":74}}},"15":{"name":"(anonymous_15)","line":288,"loc":{"start":{"line":288,"column":16},"end":{"line":288,"column":32}}},"16":{"name":"(anonymous_16)","line":289,"loc":{"start":{"line":289,"column":13},"end":{"line":289,"column":33}}},"17":{"name":"(anonymous_17)","line":295,"loc":{"start":{"line":295,"column":23},"end":{"line":295,"column":39}}},"18":{"name":"(anonymous_18)","line":296,"loc":{"start":{"line":296,"column":13},"end":{"line":296,"column":33}}},"19":{"name":"(anonymous_19)","line":302,"loc":{"start":{"line":302,"column":18},"end":{"line":302,"column":37}}},"20":{"name":"(anonymous_20)","line":329,"loc":{"start":{"line":329,"column":35},"end":{"line":329,"column":46}}},"21":{"name":"(anonymous_21)","line":333,"loc":{"start":{"line":333,"column":29},"end":{"line":333,"column":40}}},"22":{"name":"(anonymous_22)","line":344,"loc":{"start":{"line":344,"column":23},"end":{"line":344,"column":34}}},"23":{"name":"(anonymous_23)","line":349,"loc":{"start":{"line":349,"column":28},"end":{"line":349,"column":39}}},"24":{"name":"(anonymous_24)","line":350,"loc":{"start":{"line":350,"column":11},"end":{"line":350,"column":25}}},"25":{"name":"(anonymous_25)","line":351,"loc":{"start":{"line":351,"column":44},"end":{"line":351,"column":56}}},"26":{"name":"(anonymous_26)","line":364,"loc":{"start":{"line":364,"column":27},"end":{"line":364,"column":38}}},"27":{"name":"(anonymous_27)","line":380,"loc":{"start":{"line":380,"column":33},"end":{"line":380,"column":44}}},"28":{"name":"(anonymous_28)","line":390,"loc":{"start":{"line":390,"column":28},"end":{"line":390,"column":65}}},"29":{"name":"(anonymous_29)","line":397,"loc":{"start":{"line":397,"column":27},"end":{"line":397,"column":64}}},"30":{"name":"(anonymous_30)","line":404,"loc":{"start":{"line":404,"column":27},"end":{"line":404,"column":64}}},"31":{"name":"(anonymous_31)","line":411,"loc":{"start":{"line":411,"column":27},"end":{"line":411,"column":64}}},"32":{"name":"(anonymous_32)","line":418,"loc":{"start":{"line":418,"column":32},"end":{"line":418,"column":43}}},"33":{"name":"(anonymous_33)","line":423,"loc":{"start":{"line":423,"column":32},"end":{"line":423,"column":50}}},"34":{"name":"(anonymous_34)","line":438,"loc":{"start":{"line":438,"column":27},"end":{"line":438,"column":54}}},"35":{"name":"(anonymous_35)","line":446,"loc":{"start":{"line":446,"column":33},"end":{"line":446,"column":44}}},"36":{"name":"(anonymous_36)","line":454,"loc":{"start":{"line":454,"column":26},"end":{"line":454,"column":37}}},"37":{"name":"(anonymous_37)","line":458,"loc":{"start":{"line":458,"column":26},"end":{"line":458,"column":48}}},"38":{"name":"(anonymous_38)","line":471,"loc":{"start":{"line":471,"column":17},"end":{"line":471,"column":29}}},"39":{"name":"(anonymous_39)","line":478,"loc":{"start":{"line":478,"column":25},"end":{"line":478,"column":36}}},"40":{"name":"(anonymous_40)","line":485,"loc":{"start":{"line":485,"column":27},"end":{"line":485,"column":38}}},"41":{"name":"(anonymous_41)","line":497,"loc":{"start":{"line":497,"column":32},"end":{"line":497,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":22,"column":23}},"2":{"start":{"line":43,"column":0},"end":{"line":49,"column":92}},"3":{"start":{"line":52,"column":0},"end":{"line":52,"column":68}},"4":{"start":{"line":53,"column":0},"end":{"line":53,"column":74}},"5":{"start":{"line":54,"column":0},"end":{"line":54,"column":21}},"6":{"start":{"line":55,"column":0},"end":{"line":55,"column":28}},"7":{"start":{"line":56,"column":0},"end":{"line":56,"column":32}},"8":{"start":{"line":57,"column":0},"end":{"line":57,"column":27}},"9":{"start":{"line":100,"column":0},"end":{"line":210,"column":1}},"10":{"start":{"line":101,"column":2},"end":{"line":101,"column":70}},"11":{"start":{"line":101,"column":33},"end":{"line":101,"column":70}},"12":{"start":{"line":102,"column":2},"end":{"line":102,"column":26}},"13":{"start":{"line":103,"column":2},"end":{"line":103,"column":18}},"14":{"start":{"line":105,"column":2},"end":{"line":105,"column":26}},"15":{"start":{"line":108,"column":2},"end":{"line":108,"column":53}},"16":{"start":{"line":111,"column":2},"end":{"line":115,"column":3}},"17":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"18":{"start":{"line":113,"column":6},"end":{"line":113,"column":108}},"19":{"start":{"line":118,"column":2},"end":{"line":121,"column":3}},"20":{"start":{"line":124,"column":2},"end":{"line":124,"column":61}},"21":{"start":{"line":127,"column":2},"end":{"line":129,"column":5}},"22":{"start":{"line":128,"column":4},"end":{"line":128,"column":39}},"23":{"start":{"line":132,"column":2},"end":{"line":138,"column":5}},"24":{"start":{"line":141,"column":2},"end":{"line":141,"column":59}},"25":{"start":{"line":144,"column":2},"end":{"line":145,"column":38}},"26":{"start":{"line":148,"column":2},"end":{"line":148,"column":65}},"27":{"start":{"line":149,"column":2},"end":{"line":152,"column":3}},"28":{"start":{"line":150,"column":4},"end":{"line":150,"column":66}},"29":{"start":{"line":151,"column":4},"end":{"line":151,"column":58}},"30":{"start":{"line":155,"column":2},"end":{"line":167,"column":3}},"31":{"start":{"line":170,"column":2},"end":{"line":170,"column":45}},"32":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"33":{"start":{"line":173,"column":4},"end":{"line":173,"column":69}},"34":{"start":{"line":177,"column":2},"end":{"line":177,"column":54}},"35":{"start":{"line":180,"column":2},"end":{"line":183,"column":5}},"36":{"start":{"line":181,"column":4},"end":{"line":181,"column":27}},"37":{"start":{"line":182,"column":4},"end":{"line":182,"column":20}},"38":{"start":{"line":186,"column":2},"end":{"line":201,"column":3}},"39":{"start":{"line":204,"column":2},"end":{"line":209,"column":3}},"40":{"start":{"line":206,"column":4},"end":{"line":208,"column":7}},"41":{"start":{"line":207,"column":41},"end":{"line":207,"column":56}},"42":{"start":{"line":215,"column":0},"end":{"line":215,"column":32}},"43":{"start":{"line":218,"column":0},"end":{"line":220,"column":3}},"44":{"start":{"line":219,"column":37},"end":{"line":219,"column":74}},"45":{"start":{"line":222,"column":0},"end":{"line":226,"column":3}},"46":{"start":{"line":224,"column":4},"end":{"line":224,"column":37}},"47":{"start":{"line":229,"column":0},"end":{"line":233,"column":3}},"48":{"start":{"line":231,"column":4},"end":{"line":231,"column":33}},"49":{"start":{"line":235,"column":0},"end":{"line":237,"column":3}},"50":{"start":{"line":236,"column":37},"end":{"line":236,"column":72}},"51":{"start":{"line":239,"column":0},"end":{"line":239,"column":68}},"52":{"start":{"line":242,"column":0},"end":{"line":251,"column":1}},"53":{"start":{"line":243,"column":2},"end":{"line":248,"column":3}},"54":{"start":{"line":244,"column":4},"end":{"line":244,"column":76}},"55":{"start":{"line":245,"column":9},"end":{"line":248,"column":3}},"56":{"start":{"line":246,"column":4},"end":{"line":247,"column":104}},"57":{"start":{"line":250,"column":2},"end":{"line":250,"column":17}},"58":{"start":{"line":254,"column":0},"end":{"line":377,"column":1}},"59":{"start":{"line":255,"column":2},"end":{"line":255,"column":18}},"60":{"start":{"line":256,"column":2},"end":{"line":256,"column":72}},"61":{"start":{"line":256,"column":37},"end":{"line":256,"column":72}},"62":{"start":{"line":257,"column":2},"end":{"line":257,"column":37}},"63":{"start":{"line":257,"column":23},"end":{"line":257,"column":37}},"64":{"start":{"line":258,"column":2},"end":{"line":258,"column":56}},"65":{"start":{"line":258,"column":40},"end":{"line":258,"column":56}},"66":{"start":{"line":259,"column":2},"end":{"line":259,"column":28}},"67":{"start":{"line":262,"column":2},"end":{"line":262,"column":61}},"68":{"start":{"line":265,"column":2},"end":{"line":271,"column":3}},"69":{"start":{"line":266,"column":4},"end":{"line":270,"column":5}},"70":{"start":{"line":267,"column":6},"end":{"line":269,"column":7}},"71":{"start":{"line":268,"column":8},"end":{"line":268,"column":30}},"72":{"start":{"line":274,"column":2},"end":{"line":346,"column":3}},"73":{"start":{"line":276,"column":4},"end":{"line":280,"column":7}},"74":{"start":{"line":279,"column":6},"end":{"line":279,"column":43}},"75":{"start":{"line":283,"column":4},"end":{"line":283,"column":60}},"76":{"start":{"line":284,"column":4},"end":{"line":284,"column":56}},"77":{"start":{"line":285,"column":4},"end":{"line":285,"column":56}},"78":{"start":{"line":288,"column":4},"end":{"line":292,"column":5}},"79":{"start":{"line":289,"column":6},"end":{"line":291,"column":7}},"80":{"start":{"line":290,"column":8},"end":{"line":290,"column":36}},"81":{"start":{"line":295,"column":4},"end":{"line":299,"column":5}},"82":{"start":{"line":296,"column":6},"end":{"line":298,"column":7}},"83":{"start":{"line":297,"column":8},"end":{"line":297,"column":59}},"84":{"start":{"line":302,"column":4},"end":{"line":310,"column":5}},"85":{"start":{"line":303,"column":6},"end":{"line":303,"column":32}},"86":{"start":{"line":305,"column":6},"end":{"line":309,"column":7}},"87":{"start":{"line":306,"column":8},"end":{"line":306,"column":42}},"88":{"start":{"line":307,"column":13},"end":{"line":309,"column":7}},"89":{"start":{"line":308,"column":8},"end":{"line":308,"column":43}},"90":{"start":{"line":313,"column":4},"end":{"line":313,"column":56}},"91":{"start":{"line":314,"column":4},"end":{"line":314,"column":45}},"92":{"start":{"line":315,"column":4},"end":{"line":315,"column":45}},"93":{"start":{"line":316,"column":4},"end":{"line":316,"column":37}},"94":{"start":{"line":319,"column":4},"end":{"line":319,"column":85}},"95":{"start":{"line":320,"column":4},"end":{"line":320,"column":81}},"96":{"start":{"line":321,"column":4},"end":{"line":321,"column":85}},"97":{"start":{"line":322,"column":4},"end":{"line":322,"column":79}},"98":{"start":{"line":323,"column":4},"end":{"line":323,"column":63}},"99":{"start":{"line":324,"column":4},"end":{"line":324,"column":61}},"100":{"start":{"line":325,"column":4},"end":{"line":325,"column":67}},"101":{"start":{"line":326,"column":4},"end":{"line":326,"column":65}},"102":{"start":{"line":327,"column":4},"end":{"line":327,"column":89}},"103":{"start":{"line":329,"column":4},"end":{"line":331,"column":7}},"104":{"start":{"line":330,"column":6},"end":{"line":330,"column":41}},"105":{"start":{"line":333,"column":4},"end":{"line":335,"column":7}},"106":{"start":{"line":334,"column":6},"end":{"line":334,"column":35}},"107":{"start":{"line":338,"column":4},"end":{"line":338,"column":34}},"108":{"start":{"line":341,"column":4},"end":{"line":345,"column":5}},"109":{"start":{"line":342,"column":6},"end":{"line":342,"column":27}},"110":{"start":{"line":344,"column":6},"end":{"line":344,"column":49}},"111":{"start":{"line":344,"column":36},"end":{"line":344,"column":46}},"112":{"start":{"line":349,"column":2},"end":{"line":367,"column":3}},"113":{"start":{"line":350,"column":4},"end":{"line":366,"column":5}},"114":{"start":{"line":351,"column":6},"end":{"line":353,"column":9}},"115":{"start":{"line":352,"column":8},"end":{"line":352,"column":62}},"116":{"start":{"line":355,"column":6},"end":{"line":355,"column":68}},"117":{"start":{"line":357,"column":6},"end":{"line":357,"column":31}},"118":{"start":{"line":360,"column":6},"end":{"line":365,"column":7}},"119":{"start":{"line":361,"column":8},"end":{"line":361,"column":22}},"120":{"start":{"line":363,"column":8},"end":{"line":364,"column":53}},"121":{"start":{"line":364,"column":10},"end":{"line":364,"column":53}},"122":{"start":{"line":364,"column":40},"end":{"line":364,"column":50}},"123":{"start":{"line":370,"column":2},"end":{"line":370,"column":65}},"124":{"start":{"line":371,"column":2},"end":{"line":371,"column":61}},"125":{"start":{"line":372,"column":2},"end":{"line":372,"column":61}},"126":{"start":{"line":373,"column":2},"end":{"line":373,"column":49}},"127":{"start":{"line":376,"column":2},"end":{"line":376,"column":35}},"128":{"start":{"line":380,"column":0},"end":{"line":385,"column":1}},"129":{"start":{"line":381,"column":2},"end":{"line":381,"column":55}},"130":{"start":{"line":381,"column":27},"end":{"line":381,"column":55}},"131":{"start":{"line":382,"column":2},"end":{"line":382,"column":56}},"132":{"start":{"line":382,"column":44},"end":{"line":382,"column":56}},"133":{"start":{"line":383,"column":2},"end":{"line":383,"column":79}},"134":{"start":{"line":384,"column":2},"end":{"line":384,"column":30}},"135":{"start":{"line":387,"column":0},"end":{"line":387,"column":100}},"136":{"start":{"line":390,"column":0},"end":{"line":392,"column":1}},"137":{"start":{"line":391,"column":2},"end":{"line":391,"column":72}},"138":{"start":{"line":394,"column":0},"end":{"line":394,"column":63}},"139":{"start":{"line":397,"column":0},"end":{"line":399,"column":1}},"140":{"start":{"line":398,"column":2},"end":{"line":398,"column":52}},"141":{"start":{"line":401,"column":0},"end":{"line":401,"column":62}},"142":{"start":{"line":404,"column":0},"end":{"line":406,"column":1}},"143":{"start":{"line":405,"column":2},"end":{"line":405,"column":52}},"144":{"start":{"line":408,"column":0},"end":{"line":408,"column":62}},"145":{"start":{"line":411,"column":0},"end":{"line":413,"column":1}},"146":{"start":{"line":412,"column":2},"end":{"line":412,"column":52}},"147":{"start":{"line":415,"column":0},"end":{"line":415,"column":62}},"148":{"start":{"line":418,"column":0},"end":{"line":420,"column":1}},"149":{"start":{"line":419,"column":2},"end":{"line":419,"column":38}},"150":{"start":{"line":423,"column":0},"end":{"line":433,"column":1}},"151":{"start":{"line":424,"column":2},"end":{"line":424,"column":26}},"152":{"start":{"line":428,"column":2},"end":{"line":430,"column":3}},"153":{"start":{"line":429,"column":4},"end":{"line":429,"column":77}},"154":{"start":{"line":432,"column":2},"end":{"line":432,"column":45}},"155":{"start":{"line":435,"column":0},"end":{"line":435,"column":88}},"156":{"start":{"line":438,"column":0},"end":{"line":442,"column":1}},"157":{"start":{"line":439,"column":2},"end":{"line":439,"column":45}},"158":{"start":{"line":440,"column":2},"end":{"line":440,"column":43}},"159":{"start":{"line":441,"column":2},"end":{"line":441,"column":49}},"160":{"start":{"line":444,"column":0},"end":{"line":444,"column":116}},"161":{"start":{"line":446,"column":0},"end":{"line":448,"column":1}},"162":{"start":{"line":447,"column":2},"end":{"line":447,"column":39}},"163":{"start":{"line":454,"column":0},"end":{"line":456,"column":1}},"164":{"start":{"line":455,"column":2},"end":{"line":455,"column":32}},"165":{"start":{"line":458,"column":0},"end":{"line":474,"column":1}},"166":{"start":{"line":459,"column":2},"end":{"line":459,"column":18}},"167":{"start":{"line":461,"column":2},"end":{"line":463,"column":5}},"168":{"start":{"line":465,"column":2},"end":{"line":468,"column":3}},"169":{"start":{"line":466,"column":4},"end":{"line":466,"column":44}},"170":{"start":{"line":467,"column":4},"end":{"line":467,"column":25}},"171":{"start":{"line":470,"column":2},"end":{"line":470,"column":63}},"172":{"start":{"line":471,"column":2},"end":{"line":473,"column":5}},"173":{"start":{"line":472,"column":4},"end":{"line":472,"column":31}},"174":{"start":{"line":476,"column":0},"end":{"line":476,"column":62}},"175":{"start":{"line":478,"column":0},"end":{"line":481,"column":1}},"176":{"start":{"line":479,"column":2},"end":{"line":479,"column":54}},"177":{"start":{"line":480,"column":2},"end":{"line":480,"column":50}},"178":{"start":{"line":483,"column":0},"end":{"line":483,"column":60}},"179":{"start":{"line":485,"column":0},"end":{"line":488,"column":1}},"180":{"start":{"line":486,"column":2},"end":{"line":486,"column":54}},"181":{"start":{"line":487,"column":2},"end":{"line":487,"column":52}},"182":{"start":{"line":490,"column":0},"end":{"line":490,"column":62}},"183":{"start":{"line":497,"column":0},"end":{"line":499,"column":1}},"184":{"start":{"line":498,"column":2},"end":{"line":498,"column":38}},"185":{"start":{"line":501,"column":0},"end":{"line":501,"column":85}},"186":{"start":{"line":581,"column":0},"end":{"line":581,"column":25}}},"branchMap":{"1":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"2":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":19}},{"start":{"line":102,"column":23},"end":{"line":102,"column":25}}]},"3":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"4":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":70},"end":{"line":120,"column":94}},{"start":{"line":120,"column":97},"end":{"line":120,"column":107}}]},"5":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":14},"end":{"line":124,"column":27}},{"start":{"line":124,"column":31},"end":{"line":124,"column":60}}]},"6":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":55},"end":{"line":136,"column":72}},{"start":{"line":136,"column":75},"end":{"line":136,"column":79}}]},"7":{"line":137,"type":"cond-expr","locations":[{"start":{"line":137,"column":48},"end":{"line":137,"column":64}},{"start":{"line":137,"column":67},"end":{"line":137,"column":68}}]},"8":{"line":144,"type":"cond-expr","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":27}},{"start":{"line":145,"column":30},"end":{"line":145,"column":37}}]},"9":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":22},"end":{"line":144,"column":43}},{"start":{"line":144,"column":47},"end":{"line":144,"column":92}}]},"10":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"11":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"12":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"13":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"14":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":9},"end":{"line":245,"column":9}},{"start":{"line":245,"column":9},"end":{"line":245,"column":9}}]},"15":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"16":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"17":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"18":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"19":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":6},"end":{"line":305,"column":6}},{"start":{"line":305,"column":6},"end":{"line":305,"column":6}}]},"20":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":13},"end":{"line":307,"column":13}},{"start":{"line":307,"column":13},"end":{"line":307,"column":13}}]},"21":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":8}},{"start":{"line":363,"column":8},"end":{"line":363,"column":8}}]},"22":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":2},"end":{"line":381,"column":2}},{"start":{"line":381,"column":2},"end":{"line":381,"column":2}}]},"23":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":2},"end":{"line":382,"column":2}},{"start":{"line":382,"column":2},"end":{"line":382,"column":2}}]},"24":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":12},"end":{"line":424,"column":19}},{"start":{"line":424,"column":23},"end":{"line":424,"column":25}}]},"25":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":2},"end":{"line":428,"column":2}},{"start":{"line":428,"column":2},"end":{"line":428,"column":2}}]},"26":{"line":462,"type":"cond-expr","locations":[{"start":{"line":462,"column":45},"end":{"line":462,"column":56}},{"start":{"line":462,"column":59},"end":{"line":462,"column":64}}]},"27":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]}},"code":["\"use strict\";","","var EventEmitter = require('events').EventEmitter","  , inherits = require('util').inherits","  , f = require('util').format","  , Server = require('./server')","  , Cursor = require('./cursor')","  , AggregationCursor = require('./aggregation_cursor')","  , CommandCursor = require('./command_cursor')","  , ReadPreference = require('./read_preference')","  , MongoError = require('mongodb-core').MongoError","  , ServerCapabilities = require('./topology_base').ServerCapabilities","  , Store = require('./topology_base').Store","  , Define = require('./metadata')","  , CReplSet = require('mongodb-core').ReplSet","  , CoreReadPreference = require('mongodb-core').ReadPreference","  , MAX_JS_INT = require('./utils').MAX_JS_INT","  , translateOptions = require('./utils').translateOptions","  , filterOptions = require('./utils').filterOptions","  , getReadPreference = require('./utils').getReadPreference","  , mergeOptions = require('./utils').mergeOptions","  , os = require('os');","/**"," * @fileOverview The **ReplSet** class is a class that represents a Replicaset topology and is"," * used to construct connections."," *"," * **ReplSet Should not be used, use MongoClient.connect**"," * @example"," * var Db = require('mongodb').Db,"," *   ReplSet = require('mongodb').ReplSet,"," *   Server = require('mongodb').Server,"," *   test = require('assert');"," * // Connect using ReplSet"," * var server = new Server('localhost', 27017);"," * var db = new Db('test', new ReplSet([server]));"," * db.open(function(err, db) {"," *   // Get an additional db"," *   db.close();"," * });"," */","","// Allowed parameters","var legalOptionNames = ['ha', 'haInterval', 'replicaSet', 'rs_name', 'secondaryAcceptableLatencyMS'","  , 'connectWithNoPrimary', 'poolSize', 'ssl', 'checkServerIdentity', 'sslValidate'","  , 'sslCA', 'sslCert', 'sslCRL', 'sslKey', 'sslPass', 'socketOptions', 'bufferMaxEntries'","  , 'store', 'auto_reconnect', 'autoReconnect', 'emitError'","  , 'keepAlive', 'noDelay', 'connectTimeoutMS', 'socketTimeoutMS', 'strategy', 'debug'","  , 'loggerLevel', 'logger', 'reconnectTries', 'appname', 'domainsEnabled'","  , 'servername', 'promoteLongs', 'promoteValues', 'promoteBuffers', 'maxStalenessSeconds'];","","// Get package.json variable","var driverVersion = require(__dirname + '/../package.json').version;","var nodejsversion = f('Node.js %s, %s', process.version, os.endianness());","var type = os.type();","var name = process.platform;","var architecture = process.arch;","var release = os.release();","","/**"," * Creates a new ReplSet instance"," * @class"," * @deprecated"," * @param {Server[]} servers A seedlist of servers participating in the replicaset."," * @param {object} [options=null] Optional settings."," * @param {booelan} [options.ha=true] Turn on high availability monitoring."," * @param {number} [options.haInterval=10000] Time between each replicaset status check."," * @param {string} [options.replicaSet] The name of the replicaset to connect to."," * @param {number} [options.secondaryAcceptableLatencyMS=15] Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms)"," * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available"," * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons."," * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)"," * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function."," * @param {object} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {array} [options.sslCA=null] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {array} [options.sslCRL=null] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslCert=null] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslKey=null] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {(Buffer|string)} [options.sslPass=null] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)"," * @param {string} [options.servername=null] String containing the server name requested via TLS SNI."," * @param {object} [options.socketOptions=null] Socket options"," * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option."," * @param {number} [options.socketOptions.keepAlive=0] TCP KeepAlive on the socket with a X ms delay before start."," * @param {number} [options.socketOptions.connectTimeoutMS=10000] TCP Connection timeout setting"," * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting"," * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit."," * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed);"," * @fires ReplSet#connect"," * @fires ReplSet#ha"," * @fires ReplSet#joined"," * @fires ReplSet#left"," * @fires ReplSet#fullsetup"," * @fires ReplSet#open"," * @fires ReplSet#close"," * @fires ReplSet#error"," * @fires ReplSet#timeout"," * @fires ReplSet#parseError"," * @property {string} parserType the parser type used (c++ or js)."," * @return {ReplSet} a ReplSet instance."," */","var ReplSet = function(servers, options) {","  if(!(this instanceof ReplSet)) return new ReplSet(servers, options);","  options = options || {};","  var self = this;","  // Set up event emitter","  EventEmitter.call(this);","","  // Filter the options","  options = filterOptions(options, legalOptionNames);","","  // Ensure all the instances are Server","  for(var i = 0; i < servers.length; i++) {","    if(!(servers[i] instanceof Server)) {","      throw MongoError.create({message: \"all seed list instances must be of the Server type\", driver:true});","    }","  }","","  // Stored options","  var storeOptions = {","      force: false","    , bufferMaxEntries: typeof options.bufferMaxEntries == 'number' ? options.bufferMaxEntries : MAX_JS_INT","  }","","  // Shared global store","  var store = options.store || new Store(self, storeOptions);","","  // Build seed list","  var seedlist = servers.map(function(x) {","    return {host: x.host, port: x.port}","  });","","  // Clone options","  var clonedOptions = mergeOptions({}, {","    disconnectHandler: store,","    cursorFactory: Cursor,","    reconnect: false,","    emitError: typeof options.emitError == 'boolean' ? options.emitError : true,","    size: typeof options.poolSize == 'number' ? options.poolSize : 5","  });","","  // Translate any SSL options and other connectivity options","  clonedOptions = translateOptions(clonedOptions, options);","","  // Socket options","  var socketOptions = options.socketOptions && Object.keys(options.socketOptions).length > 0","    ? options.socketOptions : options;","","  // Translate all the options to the mongodb-core ones","  clonedOptions = translateOptions(clonedOptions, socketOptions);","  if(typeof clonedOptions.keepAlive == 'number') {","    clonedOptions.keepAliveInitialDelay = clonedOptions.keepAlive;","    clonedOptions.keepAlive = clonedOptions.keepAlive > 0;","  }","","  // Client info","  this.clientInfo = {","    driver: {","      name: \"nodejs\",","      version: driverVersion","    },","    os: {","      type: type,","      name: name,","      architecture: architecture,","      version: release","    },","    platform: nodejsversion","  }","","  // Build default client information","  clonedOptions.clientInfo = this.clientInfo;","  // Do we have an application specific string","  if(options.appname) {","    clonedOptions.clientInfo.application = { name: options.appname };","  }","","  // Create the ReplSet","  var replset = new CReplSet(seedlist, clonedOptions);","","  // Listen to reconnect event","  replset.on('reconnect', function() {","    self.emit('reconnect');","    store.execute();","  });","","  // Internal state","  this.s = {","    // Replicaset","    replset: replset","    // Server capabilities","    , sCapabilities: null","    // Debug tag","    , tag: options.tag","    // Store options","    , storeOptions: storeOptions","    // Cloned options","    , clonedOptions: clonedOptions","    // Store","    , store: store","    // Options","    , options: options","  }","","  // Debug","  if(clonedOptions.debug) {","    // Last ismaster","    Object.defineProperty(this, 'replset', {","      enumerable:true, get: function() { return replset; }","    });","  }","}","","/**"," * @ignore"," */","inherits(ReplSet, EventEmitter);","","// Last ismaster","Object.defineProperty(ReplSet.prototype, 'isMasterDoc', {","  enumerable:true, get: function() { return this.s.replset.lastIsMaster(); }","});","","Object.defineProperty(ReplSet.prototype, 'parserType', {","  enumerable:true, get: function() {","    return this.s.replset.parserType;","  }","});","","// BSON property","Object.defineProperty(ReplSet.prototype, 'bson', {","  enumerable: true, get: function() {","    return this.s.replset.s.bson;","  }","});","","Object.defineProperty(ReplSet.prototype, 'haInterval', {","  enumerable:true, get: function() { return this.s.replset.s.haInterval; }","});","","var define = ReplSet.define = new Define('ReplSet', ReplSet, false);","","// Ensure the right read Preference object","var translateReadPreference = function(options) {","  if(typeof options.readPreference == 'string') {","    options.readPreference = new CoreReadPreference(options.readPreference);","  } else if(options.readPreference instanceof ReadPreference) {","    options.readPreference = new CoreReadPreference(options.readPreference.mode","      , options.readPreference.tags, {maxStalenessSeconds: options.readPreference.maxStalenessSeconds});","  }","","  return options;","}","","// Connect method","ReplSet.prototype.connect = function(db, _options, callback) {","  var self = this;","  if('function' === typeof _options) callback = _options, _options = {};","  if(_options == null) _options = {};","  if(!('function' === typeof callback)) callback = null;","  self.s.options = _options;","","  // Update bufferMaxEntries","  self.s.storeOptions.bufferMaxEntries = db.bufferMaxEntries;","","  // Actual handler","  var errorHandler = function(event) {","    return function(err) {","      if(event != 'error') {","        self.emit(event, err);","      }","    }","  }","","  // Connect handler","  var connectHandler = function() {","    // Clear out all the current handlers left over","    [\"timeout\", \"error\", \"close\", 'serverOpening', 'serverDescriptionChanged', 'serverHeartbeatStarted',","      'serverHeartbeatSucceeded', 'serverHeartbeatFailed', 'serverClosed', 'topologyOpening',","      'topologyClosed', 'topologyDescriptionChanged'].forEach(function(e) {","      self.s.replset.removeAllListeners(e);","    });","","    // Set up listeners","    self.s.replset.once('timeout', errorHandler('timeout'));","    self.s.replset.once('error', errorHandler('error'));","    self.s.replset.once('close', errorHandler('close'));","","    // relay the event","    var relay = function(event) {","      return function(t, server) {","        self.emit(event, t, server);","      }","    }","","    // Replset events relay","    var replsetRelay = function(event) {","      return function(t, server) {","        self.emit(event, t, server.lastIsMaster(), server);","      }","    }","","    // Relay ha","    var relayHa = function(t, state) {","      self.emit('ha', t, state);","","      if(t == 'start') {","        self.emit('ha_connect', t, state);","      } else if(t == 'end') {","        self.emit('ha_ismaster', t, state);","      }","    }","","    // Set up serverConfig listeners","    self.s.replset.on('joined', replsetRelay('joined'));","    self.s.replset.on('left', relay('left'));","    self.s.replset.on('ping', relay('ping'));","    self.s.replset.on('ha', relayHa);","","    // Set up SDAM listeners","    self.s.replset.on('serverDescriptionChanged', relay('serverDescriptionChanged'));","    self.s.replset.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));","    self.s.replset.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));","    self.s.replset.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));","    self.s.replset.on('serverOpening', relay('serverOpening'));","    self.s.replset.on('serverClosed', relay('serverClosed'));","    self.s.replset.on('topologyOpening', relay('topologyOpening'));","    self.s.replset.on('topologyClosed', relay('topologyClosed'));","    self.s.replset.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));","","    self.s.replset.on('fullsetup', function() {","      self.emit('fullsetup', null, self);","    });","","    self.s.replset.on('all', function() {","      self.emit('all', null, self);","    });","","    // Emit open event","    self.emit('open', null, self);","","    // Return correctly","    try {","      callback(null, self);","    } catch(err) {","      process.nextTick(function() { throw err; })","    }","  }","","  // Error handler","  var connectErrorHandler = function() {","    return function(err) {","      ['timeout', 'error', 'close'].forEach(function(e) {","        self.s.replset.removeListener(e, connectErrorHandler);","      });","","      self.s.replset.removeListener('connect', connectErrorHandler);","      // Destroy the replset","      self.s.replset.destroy();","","      // Try to callback","      try {","        callback(err);","      } catch(err) {","        if(!self.s.replset.isConnected())","          process.nextTick(function() { throw err; })","      }","    }","  }","","  // Set up listeners","  self.s.replset.once('timeout', connectErrorHandler('timeout'));","  self.s.replset.once('error', connectErrorHandler('error'));","  self.s.replset.once('close', connectErrorHandler('close'));","  self.s.replset.once('connect', connectHandler);","","  // Start connection","  self.s.replset.connect(_options);","}","","// Server capabilities","ReplSet.prototype.capabilities = function() {","  if(this.s.sCapabilities) return this.s.sCapabilities;","  if(this.s.replset.lastIsMaster() == null) return null;","  this.s.sCapabilities = new ServerCapabilities(this.s.replset.lastIsMaster());","  return this.s.sCapabilities;","}","","define.classMethod('capabilities', {callback: false, promise:false, returns: [ServerCapabilities]});","","// Command","ReplSet.prototype.command = function(ns, cmd, options, callback) {","  this.s.replset.command(ns, cmd, getReadPreference(options), callback);","}","","define.classMethod('command', {callback: true, promise:false});","","// Insert","ReplSet.prototype.insert = function(ns, ops, options, callback) {","  this.s.replset.insert(ns, ops, options, callback);","}","","define.classMethod('insert', {callback: true, promise:false});","","// Update","ReplSet.prototype.update = function(ns, ops, options, callback) {","  this.s.replset.update(ns, ops, options, callback);","}","","define.classMethod('update', {callback: true, promise:false});","","// Remove","ReplSet.prototype.remove = function(ns, ops, options, callback) {","  this.s.replset.remove(ns, ops, options, callback);","}","","define.classMethod('remove', {callback: true, promise:false});","","// Destroyed","ReplSet.prototype.isDestroyed = function() {","  return this.s.replset.isDestroyed();","}","","// IsConnected","ReplSet.prototype.isConnected = function(options) {","  options = options || {};","","  // If we passed in a readPreference, translate to","  // a CoreReadPreference instance","  if(options.readPreference) {","    options.readPreference = translateReadPreference(options.readPreference);","  }","","  return this.s.replset.isConnected(options);","}","","define.classMethod('isConnected', {callback: false, promise:false, returns: [Boolean]});","","// Insert","ReplSet.prototype.cursor = function(ns, cmd, options) {","  options = translateReadPreference(options);","  options.disconnectHandler = this.s.store;","  return this.s.replset.cursor(ns, cmd, options);","}","","define.classMethod('cursor', {callback: false, promise:false, returns: [Cursor, AggregationCursor, CommandCursor]});","","ReplSet.prototype.lastIsMaster = function() {","  return this.s.replset.lastIsMaster();","}","","/**"," * Unref all sockets"," * @method"," */","ReplSet.prototype.unref = function() {","  return this.s.replset.unref();","}","","ReplSet.prototype.close = function(forceClosed) {","  var self = this;","  // Call destroy on the topology","  this.s.replset.destroy({","    force: typeof forceClosed == 'boolean' ? forceClosed : false,","  });","  // We need to wash out all stored processes","  if(forceClosed == true) {","    this.s.storeOptions.force = forceClosed;","    this.s.store.flush();","  }","","  var events = ['timeout', 'error', 'close', 'joined', 'left'];","  events.forEach(function(e) {","    self.removeAllListeners(e);","  });","}","","define.classMethod('close', {callback: false, promise:false});","","ReplSet.prototype.auth = function() {","  var args = Array.prototype.slice.call(arguments, 0);","  this.s.replset.auth.apply(this.s.replset, args);","}","","define.classMethod('auth', {callback: true, promise:false});","","ReplSet.prototype.logout = function() {","  var args = Array.prototype.slice.call(arguments, 0);","  this.s.replset.logout.apply(this.s.replset, args);","}","","define.classMethod('logout', {callback: true, promise:false});","","/**"," * All raw connections"," * @method"," * @return {array}"," */","ReplSet.prototype.connections = function() {","  return this.s.replset.connections();","}","","define.classMethod('connections', {callback: false, promise:false, returns:[Array]});","","/**"," * A replset connect event, used to verify that the connection is up and running"," *"," * @event ReplSet#connect"," * @type {ReplSet}"," */","","/**"," * The replset high availability event"," *"," * @event ReplSet#ha"," * @type {function}"," * @param {string} type The stage in the high availability event (start|end)"," * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only"," * @param {number} data.id The id for this high availability request"," * @param {object} data.state An object containing the information about the current replicaset"," */","","/**"," * A server member left the replicaset"," *"," * @event ReplSet#left"," * @type {function}"," * @param {string} type The type of member that left (primary|secondary|arbiter)"," * @param {Server} server The server object that left"," */","","/**"," * A server member joined the replicaset"," *"," * @event ReplSet#joined"," * @type {function}"," * @param {string} type The type of member that joined (primary|secondary|arbiter)"," * @param {Server} server The server object that joined"," */","","/**"," * ReplSet open event, emitted when replicaset can start processing commands."," *"," * @event ReplSet#open"," * @type {Replset}"," */","","/**"," * ReplSet fullsetup event, emitted when all servers in the topology have been connected to."," *"," * @event ReplSet#fullsetup"," * @type {Replset}"," */","","/**"," * ReplSet close event"," *"," * @event ReplSet#close"," * @type {object}"," */","","/**"," * ReplSet error event, emitted if there is an error listener."," *"," * @event ReplSet#error"," * @type {MongoError}"," */","","/**"," * ReplSet timeout event"," *"," * @event ReplSet#timeout"," * @type {object}"," */","","/**"," * ReplSet parseError event"," *"," * @event ReplSet#parseError"," * @type {object}"," */","","module.exports = ReplSet;",""],"l":{"3":1,"43":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"100":1,"101":0,"102":0,"103":0,"105":0,"108":0,"111":0,"112":0,"113":0,"118":0,"124":0,"127":0,"128":0,"132":0,"141":0,"144":0,"148":0,"149":0,"150":0,"151":0,"155":0,"170":0,"172":0,"173":0,"177":0,"180":0,"181":0,"182":0,"186":0,"204":0,"206":0,"207":0,"215":1,"218":1,"219":0,"222":1,"224":0,"229":1,"231":0,"235":1,"236":0,"239":1,"242":1,"243":0,"244":0,"245":0,"246":0,"250":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"262":0,"265":0,"266":0,"267":0,"268":0,"274":0,"276":0,"279":0,"283":0,"284":0,"285":0,"288":0,"289":0,"290":0,"295":0,"296":0,"297":0,"302":0,"303":0,"305":0,"306":0,"307":0,"308":0,"313":0,"314":0,"315":0,"316":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"329":0,"330":0,"333":0,"334":0,"338":0,"341":0,"342":0,"344":0,"349":0,"350":0,"351":0,"352":0,"355":0,"357":0,"360":0,"361":0,"363":0,"364":0,"370":0,"371":0,"372":0,"373":0,"376":0,"380":1,"381":0,"382":0,"383":0,"384":0,"387":1,"390":1,"391":0,"394":1,"397":1,"398":0,"401":1,"404":1,"405":0,"408":1,"411":1,"412":0,"415":1,"418":1,"419":0,"423":1,"424":0,"428":0,"429":0,"432":0,"435":1,"438":1,"439":0,"440":0,"441":0,"444":1,"446":1,"447":0,"454":1,"455":0,"458":1,"459":0,"461":0,"465":0,"466":0,"467":0,"470":0,"471":0,"472":0,"476":1,"478":1,"479":0,"480":0,"483":1,"485":1,"486":0,"487":0,"490":1,"497":1,"498":0,"501":1,"581":1}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs-stream/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs-stream/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"GridFSBucket","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}}},"2":{"name":"(anonymous_2)","line":83,"loc":{"start":{"line":83,"column":42},"end":{"line":83,"column":70}}},"3":{"name":"(anonymous_3)","line":110,"loc":{"start":{"line":110,"column":48},"end":{"line":110,"column":80}}},"4":{"name":"(anonymous_4)","line":137,"loc":{"start":{"line":137,"column":44},"end":{"line":137,"column":66}}},"5":{"name":"(anonymous_5)","line":155,"loc":{"start":{"line":155,"column":32},"end":{"line":155,"column":55}}},"6":{"name":"(anonymous_6)","line":161,"loc":{"start":{"line":161,"column":35},"end":{"line":161,"column":61}}},"7":{"name":"(anonymous_7)","line":162,"loc":{"start":{"line":162,"column":23},"end":{"line":162,"column":44}}},"8":{"name":"_delete","line":176,"loc":{"start":{"line":176,"column":0},"end":{"line":176,"column":38}}},"9":{"name":"(anonymous_9)","line":177,"loc":{"start":{"line":177,"column":50},"end":{"line":177,"column":71}}},"10":{"name":"(anonymous_10)","line":182,"loc":{"start":{"line":182,"column":59},"end":{"line":182,"column":75}}},"11":{"name":"(anonymous_11)","line":212,"loc":{"start":{"line":212,"column":30},"end":{"line":212,"column":56}}},"12":{"name":"(anonymous_12)","line":255,"loc":{"start":{"line":255,"column":50},"end":{"line":255,"column":78}}},"13":{"name":"(anonymous_13)","line":286,"loc":{"start":{"line":286,"column":32},"end":{"line":286,"column":65}}},"14":{"name":"(anonymous_14)","line":292,"loc":{"start":{"line":292,"column":35},"end":{"line":292,"column":61}}},"15":{"name":"(anonymous_15)","line":293,"loc":{"start":{"line":293,"column":33},"end":{"line":293,"column":54}}},"16":{"name":"_rename","line":307,"loc":{"start":{"line":307,"column":0},"end":{"line":307,"column":48}}},"17":{"name":"(anonymous_17)","line":310,"loc":{"start":{"line":310,"column":53},"end":{"line":310,"column":74}}},"18":{"name":"(anonymous_18)","line":327,"loc":{"start":{"line":327,"column":30},"end":{"line":327,"column":49}}},"19":{"name":"(anonymous_19)","line":333,"loc":{"start":{"line":333,"column":35},"end":{"line":333,"column":61}}},"20":{"name":"(anonymous_20)","line":334,"loc":{"start":{"line":334,"column":17},"end":{"line":334,"column":38}}},"21":{"name":"_drop","line":348,"loc":{"start":{"line":348,"column":0},"end":{"line":348,"column":32}}},"22":{"name":"(anonymous_22)","line":349,"loc":{"start":{"line":349,"column":32},"end":{"line":349,"column":48}}},"23":{"name":"(anonymous_23)","line":353,"loc":{"start":{"line":353,"column":35},"end":{"line":353,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":51}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"7":{"start":{"line":8,"column":0},"end":{"line":11,"column":2}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"9":{"start":{"line":28,"column":0},"end":{"line":54,"column":1}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":22}},"11":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}},"12":{"start":{"line":32,"column":2},"end":{"line":42,"column":3}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":58}},"15":{"start":{"line":35,"column":4},"end":{"line":39,"column":5}},"16":{"start":{"line":36,"column":6},"end":{"line":38,"column":7}},"17":{"start":{"line":37,"column":8},"end":{"line":37,"column":66}},"18":{"start":{"line":41,"column":4},"end":{"line":41,"column":44}},"19":{"start":{"line":44,"column":2},"end":{"line":53,"column":4}},"20":{"start":{"line":56,"column":0},"end":{"line":56,"column":37}},"21":{"start":{"line":83,"column":0},"end":{"line":93,"column":2}},"22":{"start":{"line":84,"column":2},"end":{"line":88,"column":3}},"23":{"start":{"line":85,"column":4},"end":{"line":85,"column":36}},"24":{"start":{"line":87,"column":4},"end":{"line":87,"column":17}},"25":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"26":{"start":{"line":90,"column":4},"end":{"line":90,"column":59}},"27":{"start":{"line":92,"column":2},"end":{"line":92,"column":62}},"28":{"start":{"line":110,"column":0},"end":{"line":124,"column":2}},"29":{"start":{"line":111,"column":2},"end":{"line":115,"column":3}},"30":{"start":{"line":112,"column":4},"end":{"line":112,"column":36}},"31":{"start":{"line":114,"column":4},"end":{"line":114,"column":17}},"32":{"start":{"line":117,"column":2},"end":{"line":119,"column":3}},"33":{"start":{"line":118,"column":4},"end":{"line":118,"column":59}},"34":{"start":{"line":121,"column":2},"end":{"line":121,"column":18}},"35":{"start":{"line":123,"column":2},"end":{"line":123,"column":62}},"36":{"start":{"line":137,"column":0},"end":{"line":146,"column":2}},"37":{"start":{"line":138,"column":2},"end":{"line":138,"column":27}},"38":{"start":{"line":139,"column":2},"end":{"line":142,"column":4}},"39":{"start":{"line":144,"column":2},"end":{"line":145,"column":77}},"40":{"start":{"line":155,"column":0},"end":{"line":170,"column":2}},"41":{"start":{"line":156,"column":2},"end":{"line":158,"column":3}},"42":{"start":{"line":157,"column":4},"end":{"line":157,"column":39}},"43":{"start":{"line":160,"column":2},"end":{"line":160,"column":19}},"44":{"start":{"line":161,"column":2},"end":{"line":169,"column":5}},"45":{"start":{"line":162,"column":4},"end":{"line":168,"column":7}},"46":{"start":{"line":163,"column":6},"end":{"line":167,"column":7}},"47":{"start":{"line":164,"column":8},"end":{"line":164,"column":22}},"48":{"start":{"line":166,"column":8},"end":{"line":166,"column":21}},"49":{"start":{"line":176,"column":0},"end":{"line":196,"column":1}},"50":{"start":{"line":177,"column":2},"end":{"line":195,"column":5}},"51":{"start":{"line":178,"column":4},"end":{"line":180,"column":5}},"52":{"start":{"line":179,"column":6},"end":{"line":179,"column":29}},"53":{"start":{"line":182,"column":4},"end":{"line":194,"column":7}},"54":{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},"55":{"start":{"line":184,"column":8},"end":{"line":184,"column":31}},"56":{"start":{"line":188,"column":6},"end":{"line":191,"column":7}},"57":{"start":{"line":189,"column":8},"end":{"line":189,"column":70}},"58":{"start":{"line":190,"column":8},"end":{"line":190,"column":43}},"59":{"start":{"line":193,"column":6},"end":{"line":193,"column":17}},"60":{"start":{"line":212,"column":0},"end":{"line":238,"column":2}},"61":{"start":{"line":213,"column":2},"end":{"line":213,"column":24}},"62":{"start":{"line":214,"column":2},"end":{"line":214,"column":26}},"63":{"start":{"line":216,"column":2},"end":{"line":216,"column":52}},"64":{"start":{"line":218,"column":2},"end":{"line":220,"column":3}},"65":{"start":{"line":219,"column":4},"end":{"line":219,"column":40}},"66":{"start":{"line":221,"column":2},"end":{"line":223,"column":3}},"67":{"start":{"line":222,"column":4},"end":{"line":222,"column":32}},"68":{"start":{"line":224,"column":2},"end":{"line":226,"column":3}},"69":{"start":{"line":225,"column":4},"end":{"line":225,"column":40}},"70":{"start":{"line":227,"column":2},"end":{"line":229,"column":3}},"71":{"start":{"line":228,"column":4},"end":{"line":228,"column":69}},"72":{"start":{"line":230,"column":2},"end":{"line":232,"column":3}},"73":{"start":{"line":231,"column":4},"end":{"line":231,"column":30}},"74":{"start":{"line":233,"column":2},"end":{"line":235,"column":3}},"75":{"start":{"line":234,"column":4},"end":{"line":234,"column":30}},"76":{"start":{"line":237,"column":2},"end":{"line":237,"column":16}},"77":{"start":{"line":255,"column":0},"end":{"line":276,"column":2}},"78":{"start":{"line":256,"column":2},"end":{"line":256,"column":32}},"79":{"start":{"line":257,"column":2},"end":{"line":257,"column":18}},"80":{"start":{"line":258,"column":2},"end":{"line":265,"column":3}},"81":{"start":{"line":259,"column":4},"end":{"line":264,"column":5}},"82":{"start":{"line":260,"column":6},"end":{"line":260,"column":31}},"83":{"start":{"line":261,"column":6},"end":{"line":261,"column":30}},"84":{"start":{"line":263,"column":6},"end":{"line":263,"column":35}},"85":{"start":{"line":267,"column":2},"end":{"line":267,"column":38}},"86":{"start":{"line":268,"column":2},"end":{"line":273,"column":4}},"87":{"start":{"line":274,"column":2},"end":{"line":275,"column":77}},"88":{"start":{"line":286,"column":0},"end":{"line":301,"column":2}},"89":{"start":{"line":287,"column":2},"end":{"line":289,"column":3}},"90":{"start":{"line":288,"column":4},"end":{"line":288,"column":49}},"91":{"start":{"line":291,"column":2},"end":{"line":291,"column":19}},"92":{"start":{"line":292,"column":2},"end":{"line":300,"column":5}},"93":{"start":{"line":293,"column":4},"end":{"line":299,"column":7}},"94":{"start":{"line":294,"column":6},"end":{"line":298,"column":7}},"95":{"start":{"line":295,"column":8},"end":{"line":295,"column":22}},"96":{"start":{"line":297,"column":8},"end":{"line":297,"column":21}},"97":{"start":{"line":307,"column":0},"end":{"line":319,"column":1}},"98":{"start":{"line":308,"column":2},"end":{"line":308,"column":27}},"99":{"start":{"line":309,"column":2},"end":{"line":309,"column":48}},"100":{"start":{"line":310,"column":2},"end":{"line":318,"column":5}},"101":{"start":{"line":311,"column":4},"end":{"line":313,"column":5}},"102":{"start":{"line":312,"column":6},"end":{"line":312,"column":29}},"103":{"start":{"line":314,"column":4},"end":{"line":316,"column":5}},"104":{"start":{"line":315,"column":6},"end":{"line":315,"column":68}},"105":{"start":{"line":317,"column":4},"end":{"line":317,"column":15}},"106":{"start":{"line":327,"column":0},"end":{"line":342,"column":2}},"107":{"start":{"line":328,"column":2},"end":{"line":330,"column":3}},"108":{"start":{"line":329,"column":4},"end":{"line":329,"column":33}},"109":{"start":{"line":332,"column":2},"end":{"line":332,"column":19}},"110":{"start":{"line":333,"column":2},"end":{"line":341,"column":5}},"111":{"start":{"line":334,"column":4},"end":{"line":340,"column":7}},"112":{"start":{"line":335,"column":6},"end":{"line":339,"column":7}},"113":{"start":{"line":336,"column":8},"end":{"line":336,"column":22}},"114":{"start":{"line":338,"column":8},"end":{"line":338,"column":21}},"115":{"start":{"line":348,"column":0},"end":{"line":361,"column":1}},"116":{"start":{"line":349,"column":2},"end":{"line":360,"column":5}},"117":{"start":{"line":350,"column":4},"end":{"line":352,"column":5}},"118":{"start":{"line":351,"column":6},"end":{"line":351,"column":29}},"119":{"start":{"line":353,"column":4},"end":{"line":359,"column":7}},"120":{"start":{"line":354,"column":6},"end":{"line":356,"column":7}},"121":{"start":{"line":355,"column":8},"end":{"line":355,"column":31}},"122":{"start":{"line":358,"column":6},"end":{"line":358,"column":24}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":13}},{"start":{"line":32,"column":17},"end":{"line":32,"column":44}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":20},"end":{"line":51,"column":39}},{"start":{"line":52,"column":7},"end":{"line":52,"column":92}}]},"5":{"line":52,"type":"cond-expr","locations":[{"start":{"line":52,"column":45},"end":{"line":52,"column":59}},{"start":{"line":52,"column":62},"end":{"line":52,"column":92}}]},"6":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"9":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"10":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":11},"end":{"line":140,"column":18}},{"start":{"line":140,"column":22},"end":{"line":140,"column":35}}]},"11":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":9},"end":{"line":141,"column":16}},{"start":{"line":141,"column":20},"end":{"line":141,"column":31}}]},"12":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"13":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"14":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":4},"end":{"line":178,"column":4}},{"start":{"line":178,"column":4},"end":{"line":178,"column":4}}]},"15":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]},"16":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":6},"end":{"line":188,"column":6}},{"start":{"line":188,"column":6},"end":{"line":188,"column":6}}]},"17":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":11},"end":{"line":213,"column":17}},{"start":{"line":213,"column":21},"end":{"line":213,"column":23}}]},"18":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":12},"end":{"line":214,"column":19}},{"start":{"line":214,"column":23},"end":{"line":214,"column":25}}]},"19":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":2},"end":{"line":218,"column":2}},{"start":{"line":218,"column":2},"end":{"line":218,"column":2}}]},"20":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"21":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":2},"end":{"line":224,"column":2}},{"start":{"line":224,"column":2},"end":{"line":224,"column":2}}]},"22":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"23":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":2},"end":{"line":230,"column":2}},{"start":{"line":230,"column":2},"end":{"line":230,"column":2}}]},"24":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"25":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"26":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":6},"end":{"line":258,"column":13}},{"start":{"line":258,"column":17},"end":{"line":258,"column":41}}]},"27":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":4},"end":{"line":259,"column":4}},{"start":{"line":259,"column":4},"end":{"line":259,"column":4}}]},"28":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":11},"end":{"line":271,"column":18}},{"start":{"line":271,"column":22},"end":{"line":271,"column":35}}]},"29":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":9},"end":{"line":272,"column":16}},{"start":{"line":272,"column":20},"end":{"line":272,"column":31}}]},"30":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":2},"end":{"line":287,"column":2}},{"start":{"line":287,"column":2},"end":{"line":287,"column":2}}]},"31":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":6}},{"start":{"line":294,"column":6},"end":{"line":294,"column":6}}]},"32":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":4},"end":{"line":311,"column":4}},{"start":{"line":311,"column":4},"end":{"line":311,"column":4}}]},"33":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"34":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"35":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":6}},{"start":{"line":335,"column":6},"end":{"line":335,"column":6}}]},"36":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":4},"end":{"line":350,"column":4}},{"start":{"line":350,"column":4},"end":{"line":350,"column":4}}]},"37":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":6},"end":{"line":354,"column":6}},{"start":{"line":354,"column":6},"end":{"line":354,"column":6}}]}},"code":["var Emitter = require('events').EventEmitter;","var GridFSBucketReadStream = require('./download');","var GridFSBucketWriteStream = require('./upload');","var shallowClone = require('../utils').shallowClone;","var toError = require('../utils').toError;","var util = require('util');","","var DEFAULT_GRIDFS_BUCKET_OPTIONS = {","  bucketName: 'fs',","  chunkSizeBytes: 255 * 1024","};","","module.exports = GridFSBucket;","","/**"," * Constructor for a streaming GridFS interface"," * @class"," * @param {Db} db A db handle"," * @param {object} [options=null] Optional settings."," * @param {string} [options.bucketName=\"fs\"] The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot."," * @param {number} [options.chunkSizeBytes=255 * 1024] Number of bytes stored in each chunk. Defaults to 255KB"," * @param {object} [options.writeConcern=null] Optional write concern to be passed to write operations, for instance `{ w: 1 }`"," * @param {object} [options.readPreference=null] Optional read preference to be passed to read operations"," * @fires GridFSBucketWriteStream#index"," * @return {GridFSBucket}"," */","","function GridFSBucket(db, options) {","  Emitter.apply(this);","  this.setMaxListeners(0);","","  if (options && typeof options === 'object') {","    options = shallowClone(options);","    var keys = Object.keys(DEFAULT_GRIDFS_BUCKET_OPTIONS);","    for (var i = 0; i < keys.length; ++i) {","      if (!options[keys[i]]) {","        options[keys[i]] = DEFAULT_GRIDFS_BUCKET_OPTIONS[keys[i]];","      }","    }","  } else {","    options = DEFAULT_GRIDFS_BUCKET_OPTIONS;","  }","","  this.s = {","    db: db,","    options: options,","    _chunksCollection: db.collection(options.bucketName + '.chunks'),","    _filesCollection: db.collection(options.bucketName + '.files'),","    checkedIndexes: false,","    calledOpenUploadStream: false,","    promiseLibrary: db.s.promiseLibrary ||","      (typeof global.Promise == 'function' ? global.Promise : require('es6-promise').Promise)","  };","}","","util.inherits(GridFSBucket, Emitter);","","/**"," * When the first call to openUploadStream is made, the upload stream will"," * check to see if it needs to create the proper indexes on the chunks and"," * files collections. This event is fired either when 1) it determines that"," * no index creation is necessary, 2) when it successfully creates the"," * necessary indexes."," *"," * @event GridFSBucket#index"," * @type {Error}"," */","","/**"," * Returns a writable stream (GridFSBucketWriteStream) for writing"," * buffers to GridFS. The stream's 'id' property contains the resulting"," * file's id."," * @method"," * @param {string} filename The value of the 'filename' key in the files doc"," * @param {object} [options=null] Optional settings."," * @param {number} [options.chunkSizeBytes=null] Optional overwrite this bucket's chunkSizeBytes for this file"," * @param {object} [options.metadata=null] Optional object to store in the file document's `metadata` field"," * @param {string} [options.contentType=null] Optional string to store in the file document's `contentType` field"," * @param {array} [options.aliases=null] Optional array of strings to store in the file document's `aliases` field"," * @return {GridFSBucketWriteStream}"," */","","GridFSBucket.prototype.openUploadStream = function(filename, options) {","  if (options) {","    options = shallowClone(options);","  } else {","    options = {};","  }","  if (!options.chunkSizeBytes) {","    options.chunkSizeBytes = this.s.options.chunkSizeBytes;","  }","  return new GridFSBucketWriteStream(this, filename, options);","};","","/**"," * Returns a writable stream (GridFSBucketWriteStream) for writing"," * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting"," * file's id."," * @method"," * @param {string|number|object} id A custom id used to identify the file"," * @param {string} filename The value of the 'filename' key in the files doc"," * @param {object} [options=null] Optional settings."," * @param {number} [options.chunkSizeBytes=null] Optional overwrite this bucket's chunkSizeBytes for this file"," * @param {object} [options.metadata=null] Optional object to store in the file document's `metadata` field"," * @param {string} [options.contentType=null] Optional string to store in the file document's `contentType` field"," * @param {array} [options.aliases=null] Optional array of strings to store in the file document's `aliases` field"," * @return {GridFSBucketWriteStream}"," */","","GridFSBucket.prototype.openUploadStreamWithId = function(id, filename, options) {","  if (options) {","    options = shallowClone(options);","  } else {","    options = {};","  }","","  if (!options.chunkSizeBytes) {","    options.chunkSizeBytes = this.s.options.chunkSizeBytes;","  }","","  options.id = id;","","  return new GridFSBucketWriteStream(this, filename, options);","};","","/**"," * Returns a readable stream (GridFSBucketReadStream) for streaming file"," * data from GridFS."," * @method"," * @param {ObjectId} id The id of the file doc"," * @param {Object} [options=null] Optional settings."," * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from"," * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before"," * @return {GridFSBucketReadStream}"," */","","GridFSBucket.prototype.openDownloadStream = function(id, options) {","  var filter = { _id: id };","  options = {","    start: options && options.start,","    end: options && options.end","  };","","  return new GridFSBucketReadStream(this.s._chunksCollection,","    this.s._filesCollection, this.s.options.readPreference, filter, options);","};","","/**"," * Deletes a file with the given id"," * @method"," * @param {ObjectId} id The id of the file doc"," * @param {GridFSBucket~errorCallback} [callback]"," */","","GridFSBucket.prototype.delete = function(id, callback) {","  if (typeof callback === 'function') {","    return _delete(this, id, callback);","  }","","  var _this = this;","  return new this.s.promiseLibrary(function(resolve, reject) {","    _delete(_this, id, function(error, res) {","      if (error) {","        reject(error);","      } else {","        resolve(res);","      }","    });","  });","};","","/**"," * @ignore"," */","","function _delete(_this, id, callback) {","  _this.s._filesCollection.deleteOne({ _id: id }, function(error, res) {","    if (error) {","      return callback(error);","    }","","    _this.s._chunksCollection.deleteMany({ files_id: id }, function(error) {","      if (error) {","        return callback(error);","      }","","      // Delete orphaned chunks before returning FileNotFound","      if (!res.result.n) {","        var errmsg = 'FileNotFound: no file with id ' + id + ' found';","        return callback(new Error(errmsg));","      }","","      callback();","    });","  });","}","","/**"," * Convenience wrapper around find on the files collection"," * @method"," * @param {Object} filter"," * @param {Object} [options=null] Optional settings for cursor"," * @param {number} [options.batchSize=null] Optional batch size for cursor"," * @param {number} [options.limit=null] Optional limit for cursor"," * @param {number} [options.maxTimeMS=null] Optional maxTimeMS for cursor"," * @param {boolean} [options.noCursorTimeout=null] Optionally set cursor's `noCursorTimeout` flag"," * @param {number} [options.skip=null] Optional skip for cursor"," * @param {object} [options.sort=null] Optional sort for cursor"," * @return {Cursor}"," */","","GridFSBucket.prototype.find = function(filter, options) {","  filter = filter || {};","  options = options || {};","","  var cursor = this.s._filesCollection.find(filter);","","  if (options.batchSize != null) {","    cursor.batchSize(options.batchSize);","  }","  if (options.limit != null) {","    cursor.limit(options.limit);","  }","  if (options.maxTimeMS != null) {","    cursor.maxTimeMS(options.maxTimeMS);","  }","  if (options.noCursorTimeout != null) {","    cursor.addCursorFlag('noCursorTimeout', options.noCursorTimeout);","  }","  if (options.skip != null) {","    cursor.skip(options.skip);","  }","  if (options.sort != null) {","    cursor.sort(options.sort);","  }","","  return cursor;","};","","/**"," * Returns a readable stream (GridFSBucketReadStream) for streaming the"," * file with the given name from GridFS. If there are multiple files with"," * the same name, this will stream the most recent file with the given name"," * (as determined by the `uploadDate` field). You can set the `revision`"," * option to change this behavior."," * @method"," * @param {String} filename The name of the file to stream"," * @param {Object} [options=null] Optional settings"," * @param {number} [options.revision=-1] The revision number relative to the oldest file with the given filename. 0 gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the newest."," * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from"," * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before"," * @return {GridFSBucketReadStream}"," */","","GridFSBucket.prototype.openDownloadStreamByName = function(filename, options) {","  var sort = { uploadDate: -1 };","  var skip = null;","  if (options && options.revision != null) {","    if (options.revision >= 0) {","      sort = { uploadDate: 1 };","      skip = options.revision;","    } else {","      skip = -options.revision - 1;","    }","  }","","  var filter = { filename: filename };","  options = {","    sort: sort,","    skip: skip,","    start: options && options.start,","    end: options && options.end","  };","  return new GridFSBucketReadStream(this.s._chunksCollection,","    this.s._filesCollection, this.s.options.readPreference, filter, options);","};","","/**"," * Renames the file with the given _id to the given string"," * @method"," * @param {ObjectId} id the id of the file to rename"," * @param {String} filename new name for the file"," * @param {GridFSBucket~errorCallback} [callback]"," */","","GridFSBucket.prototype.rename = function(id, filename, callback) {","  if (typeof callback === 'function') {","    return _rename(this, id, filename, callback);","  }","","  var _this = this;","  return new this.s.promiseLibrary(function(resolve, reject) {","    _rename(_this, id, filename, function(error, res) {","      if (error) {","        reject(error);","      } else {","        resolve(res);","      }","    });","  });","};","","/**"," * @ignore"," */","","function _rename(_this, id, filename, callback) {","  var filter = { _id: id };","  var update = { $set: { filename: filename } };","  _this.s._filesCollection.updateOne(filter, update, function(error, res) {","    if (error) {","      return callback(error);","    }","    if (!res.result.n) {","      return callback(toError('File with id ' + id + ' not found'));","    }","    callback();","  });","}","","/**"," * Removes this bucket's files collection, followed by its chunks collection."," * @method"," * @param {GridFSBucket~errorCallback} [callback]"," */","","GridFSBucket.prototype.drop = function(callback) {","  if (typeof callback === 'function') {","    return _drop(this, callback);","  }","","  var _this = this;","  return new this.s.promiseLibrary(function(resolve, reject) {","    _drop(_this, function(error, res) {","      if (error) {","        reject(error);","      } else {","        resolve(res);","      }","    });","  });","};","","/**"," * @ignore"," */","","function _drop(_this, callback) {","  _this.s._filesCollection.drop(function(error) {","    if (error) {","      return callback(error);","    }","    _this.s._chunksCollection.drop(function(error) {","      if (error) {","        return callback(error);","      }","","      return callback();","    });","  });","}","","/**"," * Callback format for all GridFSBucket methods that can accept a callback."," * @callback GridFSBucket~errorCallback"," * @param {MongoError} error An error instance representing any errors that occurred"," */",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"13":1,"28":1,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"41":0,"44":0,"56":1,"83":1,"84":0,"85":0,"87":0,"89":0,"90":0,"92":0,"110":1,"111":0,"112":0,"114":0,"117":0,"118":0,"121":0,"123":0,"137":1,"138":0,"139":0,"144":0,"155":1,"156":0,"157":0,"160":0,"161":0,"162":0,"163":0,"164":0,"166":0,"176":1,"177":0,"178":0,"179":0,"182":0,"183":0,"184":0,"188":0,"189":0,"190":0,"193":0,"212":1,"213":0,"214":0,"216":0,"218":0,"219":0,"221":0,"222":0,"224":0,"225":0,"227":0,"228":0,"230":0,"231":0,"233":0,"234":0,"237":0,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"263":0,"267":0,"268":0,"274":0,"286":1,"287":0,"288":0,"291":0,"292":0,"293":0,"294":0,"295":0,"297":0,"307":1,"308":0,"309":0,"310":0,"311":0,"312":0,"314":0,"315":0,"317":0,"327":1,"328":0,"329":0,"332":0,"333":0,"334":0,"335":0,"336":0,"338":0,"348":1,"349":0,"350":0,"351":0,"353":0,"354":0,"355":0,"358":0}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs-stream/download.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs-stream/download.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":1,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"GridFSBucketReadStream","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":80}}},"2":{"name":"(anonymous_2)","line":87,"loc":{"start":{"line":87,"column":41},"end":{"line":87,"column":52}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":21},"end":{"line":93,"column":32}}},"4":{"name":"(anonymous_4)","line":107,"loc":{"start":{"line":107,"column":41},"end":{"line":107,"column":57}}},"5":{"name":"(anonymous_5)","line":122,"loc":{"start":{"line":122,"column":39},"end":{"line":122,"column":53}}},"6":{"name":"(anonymous_6)","line":139,"loc":{"start":{"line":139,"column":41},"end":{"line":139,"column":60}}},"7":{"name":"(anonymous_7)","line":144,"loc":{"start":{"line":144,"column":24},"end":{"line":144,"column":40}}},"8":{"name":"throwIfInitialized","line":162,"loc":{"start":{"line":162,"column":0},"end":{"line":162,"column":34}}},"9":{"name":"doRead","line":173,"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":23}}},"10":{"name":"(anonymous_10)","line":178,"loc":{"start":{"line":178,"column":22},"end":{"line":178,"column":43}}},"11":{"name":"(anonymous_11)","line":187,"loc":{"start":{"line":187,"column":34},"end":{"line":187,"column":50}}},"12":{"name":"init","line":261,"loc":{"start":{"line":261,"column":0},"end":{"line":261,"column":20}}},"13":{"name":"(anonymous_13)","line":273,"loc":{"start":{"line":273,"column":54},"end":{"line":273,"column":75}}},"14":{"name":"waitForFile","line":320,"loc":{"start":{"line":320,"column":0},"end":{"line":320,"column":38}}},"15":{"name":"(anonymous_15)","line":330,"loc":{"start":{"line":330,"column":21},"end":{"line":330,"column":32}}},"16":{"name":"handleStartOption","line":339,"loc":{"start":{"line":339,"column":0},"end":{"line":339,"column":57}}},"17":{"name":"handleEndOption","line":368,"loc":{"start":{"line":368,"column":0},"end":{"line":368,"column":55}}},"18":{"name":"__handleError","line":396,"loc":{"start":{"line":396,"column":0},"end":{"line":396,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":40}},"3":{"start":{"line":26,"column":0},"end":{"line":42,"column":1}},"4":{"start":{"line":27,"column":2},"end":{"line":39,"column":4}},"5":{"start":{"line":41,"column":2},"end":{"line":41,"column":29}},"6":{"start":{"line":44,"column":0},"end":{"line":44,"column":55}},"7":{"start":{"line":87,"column":0},"end":{"line":96,"column":2}},"8":{"start":{"line":88,"column":2},"end":{"line":88,"column":19}},"9":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"10":{"start":{"line":90,"column":4},"end":{"line":90,"column":11}},"11":{"start":{"line":93,"column":2},"end":{"line":95,"column":5}},"12":{"start":{"line":94,"column":4},"end":{"line":94,"column":18}},"13":{"start":{"line":107,"column":0},"end":{"line":111,"column":2}},"14":{"start":{"line":108,"column":2},"end":{"line":108,"column":27}},"15":{"start":{"line":109,"column":2},"end":{"line":109,"column":31}},"16":{"start":{"line":110,"column":2},"end":{"line":110,"column":14}},"17":{"start":{"line":122,"column":0},"end":{"line":126,"column":2}},"18":{"start":{"line":123,"column":2},"end":{"line":123,"column":27}},"19":{"start":{"line":124,"column":2},"end":{"line":124,"column":27}},"20":{"start":{"line":125,"column":2},"end":{"line":125,"column":14}},"21":{"start":{"line":139,"column":0},"end":{"line":156,"column":2}},"22":{"start":{"line":140,"column":2},"end":{"line":140,"column":19}},"23":{"start":{"line":141,"column":2},"end":{"line":141,"column":18}},"24":{"start":{"line":142,"column":2},"end":{"line":142,"column":24}},"25":{"start":{"line":143,"column":2},"end":{"line":155,"column":3}},"26":{"start":{"line":144,"column":4},"end":{"line":147,"column":7}},"27":{"start":{"line":145,"column":6},"end":{"line":145,"column":26}},"28":{"start":{"line":146,"column":6},"end":{"line":146,"column":34}},"29":{"start":{"line":149,"column":4},"end":{"line":153,"column":5}},"30":{"start":{"line":152,"column":6},"end":{"line":152,"column":26}},"31":{"start":{"line":154,"column":4},"end":{"line":154,"column":27}},"32":{"start":{"line":162,"column":0},"end":{"line":167,"column":1}},"33":{"start":{"line":163,"column":2},"end":{"line":166,"column":3}},"34":{"start":{"line":164,"column":4},"end":{"line":165,"column":23}},"35":{"start":{"line":173,"column":0},"end":{"line":255,"column":1}},"36":{"start":{"line":174,"column":2},"end":{"line":176,"column":3}},"37":{"start":{"line":175,"column":4},"end":{"line":175,"column":11}},"38":{"start":{"line":178,"column":2},"end":{"line":254,"column":4}},"39":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"40":{"start":{"line":180,"column":6},"end":{"line":180,"column":13}},"41":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"42":{"start":{"line":183,"column":6},"end":{"line":183,"column":41}},"43":{"start":{"line":185,"column":4},"end":{"line":193,"column":5}},"44":{"start":{"line":186,"column":6},"end":{"line":186,"column":23}},"45":{"start":{"line":187,"column":6},"end":{"line":192,"column":9}},"46":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"47":{"start":{"line":189,"column":10},"end":{"line":189,"column":45}},"48":{"start":{"line":191,"column":8},"end":{"line":191,"column":28}},"49":{"start":{"line":195,"column":4},"end":{"line":195,"column":65}},"50":{"start":{"line":196,"column":4},"end":{"line":196,"column":39}},"51":{"start":{"line":197,"column":4},"end":{"line":198,"column":22}},"52":{"start":{"line":200,"column":4},"end":{"line":204,"column":5}},"53":{"start":{"line":201,"column":6},"end":{"line":202,"column":35}},"54":{"start":{"line":203,"column":6},"end":{"line":203,"column":53}},"55":{"start":{"line":206,"column":4},"end":{"line":210,"column":5}},"56":{"start":{"line":207,"column":6},"end":{"line":208,"column":35}},"57":{"start":{"line":209,"column":6},"end":{"line":209,"column":53}},"58":{"start":{"line":212,"column":4},"end":{"line":221,"column":5}},"59":{"start":{"line":213,"column":6},"end":{"line":216,"column":7}},"60":{"start":{"line":214,"column":8},"end":{"line":214,"column":58}},"61":{"start":{"line":215,"column":8},"end":{"line":215,"column":55}},"62":{"start":{"line":218,"column":6},"end":{"line":219,"column":60}},"63":{"start":{"line":220,"column":6},"end":{"line":220,"column":53}},"64":{"start":{"line":223,"column":4},"end":{"line":223,"column":43}},"65":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"66":{"start":{"line":226,"column":6},"end":{"line":226,"column":30}},"67":{"start":{"line":229,"column":4},"end":{"line":229,"column":26}},"68":{"start":{"line":230,"column":4},"end":{"line":230,"column":24}},"69":{"start":{"line":231,"column":4},"end":{"line":231,"column":30}},"70":{"start":{"line":233,"column":4},"end":{"line":236,"column":5}},"71":{"start":{"line":234,"column":6},"end":{"line":234,"column":39}},"72":{"start":{"line":235,"column":6},"end":{"line":235,"column":30}},"73":{"start":{"line":238,"column":4},"end":{"line":240,"column":5}},"74":{"start":{"line":239,"column":6},"end":{"line":239,"column":37}},"75":{"start":{"line":243,"column":4},"end":{"line":247,"column":5}},"76":{"start":{"line":246,"column":6},"end":{"line":246,"column":61}},"77":{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},"78":{"start":{"line":250,"column":6},"end":{"line":250,"column":63}},"79":{"start":{"line":253,"column":4},"end":{"line":253,"column":20}},"80":{"start":{"line":261,"column":0},"end":{"line":314,"column":1}},"81":{"start":{"line":262,"column":2},"end":{"line":262,"column":26}},"82":{"start":{"line":263,"column":2},"end":{"line":265,"column":3}},"83":{"start":{"line":264,"column":4},"end":{"line":264,"column":58}},"84":{"start":{"line":266,"column":2},"end":{"line":268,"column":3}},"85":{"start":{"line":267,"column":4},"end":{"line":267,"column":46}},"86":{"start":{"line":269,"column":2},"end":{"line":271,"column":3}},"87":{"start":{"line":270,"column":4},"end":{"line":270,"column":46}},"88":{"start":{"line":273,"column":2},"end":{"line":313,"column":5}},"89":{"start":{"line":274,"column":4},"end":{"line":276,"column":5}},"90":{"start":{"line":275,"column":6},"end":{"line":275,"column":40}},"91":{"start":{"line":277,"column":4},"end":{"line":284,"column":5}},"92":{"start":{"line":278,"column":6},"end":{"line":279,"column":62}},"93":{"start":{"line":280,"column":6},"end":{"line":280,"column":73}},"94":{"start":{"line":281,"column":6},"end":{"line":281,"column":34}},"95":{"start":{"line":282,"column":6},"end":{"line":282,"column":26}},"96":{"start":{"line":283,"column":6},"end":{"line":283,"column":38}},"97":{"start":{"line":288,"column":4},"end":{"line":291,"column":5}},"98":{"start":{"line":289,"column":6},"end":{"line":289,"column":22}},"99":{"start":{"line":290,"column":6},"end":{"line":290,"column":13}},"100":{"start":{"line":293,"column":4},"end":{"line":299,"column":5}},"101":{"start":{"line":297,"column":6},"end":{"line":297,"column":25}},"102":{"start":{"line":298,"column":6},"end":{"line":298,"column":13}},"103":{"start":{"line":301,"column":4},"end":{"line":301,"column":77}},"104":{"start":{"line":302,"column":4},"end":{"line":304,"column":5}},"105":{"start":{"line":303,"column":6},"end":{"line":303,"column":61}},"106":{"start":{"line":306,"column":4},"end":{"line":306,"column":63}},"107":{"start":{"line":307,"column":4},"end":{"line":307,"column":22}},"108":{"start":{"line":308,"column":4},"end":{"line":309,"column":22}},"109":{"start":{"line":310,"column":4},"end":{"line":311,"column":22}},"110":{"start":{"line":312,"column":4},"end":{"line":312,"column":27}},"111":{"start":{"line":320,"column":0},"end":{"line":333,"column":1}},"112":{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},"113":{"start":{"line":322,"column":4},"end":{"line":322,"column":22}},"114":{"start":{"line":325,"column":2},"end":{"line":328,"column":3}},"115":{"start":{"line":326,"column":4},"end":{"line":326,"column":16}},"116":{"start":{"line":327,"column":4},"end":{"line":327,"column":24}},"117":{"start":{"line":330,"column":2},"end":{"line":332,"column":4}},"118":{"start":{"line":331,"column":4},"end":{"line":331,"column":15}},"119":{"start":{"line":339,"column":0},"end":{"line":362,"column":1}},"120":{"start":{"line":340,"column":2},"end":{"line":361,"column":3}},"121":{"start":{"line":341,"column":4},"end":{"line":344,"column":5}},"122":{"start":{"line":342,"column":6},"end":{"line":343,"column":63}},"123":{"start":{"line":345,"column":4},"end":{"line":348,"column":5}},"124":{"start":{"line":346,"column":6},"end":{"line":347,"column":20}},"125":{"start":{"line":349,"column":4},"end":{"line":352,"column":5}},"126":{"start":{"line":350,"column":6},"end":{"line":351,"column":57}},"127":{"start":{"line":354,"column":4},"end":{"line":354,"column":59}},"128":{"start":{"line":356,"column":4},"end":{"line":357,"column":20}},"129":{"start":{"line":358,"column":4},"end":{"line":358,"column":66}},"130":{"start":{"line":360,"column":4},"end":{"line":360,"column":46}},"131":{"start":{"line":368,"column":0},"end":{"line":390,"column":1}},"132":{"start":{"line":369,"column":2},"end":{"line":389,"column":3}},"133":{"start":{"line":370,"column":4},"end":{"line":373,"column":5}},"134":{"start":{"line":371,"column":6},"end":{"line":372,"column":63}},"135":{"start":{"line":374,"column":4},"end":{"line":377,"column":5}},"136":{"start":{"line":375,"column":6},"end":{"line":376,"column":20}},"137":{"start":{"line":379,"column":4},"end":{"line":381,"column":8}},"138":{"start":{"line":383,"column":4},"end":{"line":383,"column":65}},"139":{"start":{"line":385,"column":4},"end":{"line":385,"column":66}},"140":{"start":{"line":387,"column":4},"end":{"line":388,"column":18}},"141":{"start":{"line":396,"column":0},"end":{"line":398,"column":1}},"142":{"start":{"line":397,"column":2},"end":{"line":397,"column":29}}},"branchMap":{"1":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"2":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"3":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":14}},{"start":{"line":146,"column":18},"end":{"line":146,"column":33}}]},"4":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"5":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":12}},{"start":{"line":154,"column":16},"end":{"line":154,"column":26}}]},"6":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":2},"end":{"line":163,"column":2}},{"start":{"line":163,"column":2},"end":{"line":163,"column":2}}]},"7":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"8":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"9":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"10":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":4},"end":{"line":185,"column":4}},{"start":{"line":185,"column":4},"end":{"line":185,"column":4}}]},"11":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":188,"column":8}},{"start":{"line":188,"column":8},"end":{"line":188,"column":8}}]},"12":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"13":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"14":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"15":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":6},"end":{"line":213,"column":6}},{"start":{"line":213,"column":6},"end":{"line":213,"column":6}}]},"16":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"17":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"18":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":4},"end":{"line":238,"column":4}},{"start":{"line":238,"column":4},"end":{"line":238,"column":4}}]},"19":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":41}},{"start":{"line":238,"column":45},"end":{"line":238,"column":72}}]},"20":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"21":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":27}},{"start":{"line":244,"column":6},"end":{"line":244,"column":69}}]},"22":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"23":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":8},"end":{"line":249,"column":26}},{"start":{"line":249,"column":30},"end":{"line":249,"column":46}}]},"24":{"line":250,"type":"binary-expr","locations":[{"start":{"line":250,"column":22},"end":{"line":250,"column":32}},{"start":{"line":250,"column":36},"end":{"line":250,"column":37}}]},"25":{"line":250,"type":"binary-expr","locations":[{"start":{"line":250,"column":39},"end":{"line":250,"column":47}},{"start":{"line":250,"column":51},"end":{"line":250,"column":61}}]},"26":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":263,"column":2}},{"start":{"line":263,"column":2},"end":{"line":263,"column":2}}]},"27":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"28":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":6},"end":{"line":266,"column":20}},{"start":{"line":266,"column":24},"end":{"line":266,"column":43}}]},"29":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":2},"end":{"line":269,"column":2}},{"start":{"line":269,"column":2},"end":{"line":269,"column":2}}]},"30":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":20}},{"start":{"line":269,"column":24},"end":{"line":269,"column":43}}]},"31":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"32":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]},"33":{"line":278,"type":"cond-expr","locations":[{"start":{"line":279,"column":8},"end":{"line":279,"column":36}},{"start":{"line":279,"column":39},"end":{"line":279,"column":61}}]},"34":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"35":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":4},"end":{"line":293,"column":4}},{"start":{"line":293,"column":4},"end":{"line":293,"column":4}}]},"36":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4}},{"start":{"line":302,"column":4},"end":{"line":302,"column":4}}]},"37":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":321,"column":2}},{"start":{"line":321,"column":2},"end":{"line":321,"column":2}}]},"38":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"39":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":2},"end":{"line":340,"column":2}},{"start":{"line":340,"column":2},"end":{"line":340,"column":2}}]},"40":{"line":340,"type":"binary-expr","locations":[{"start":{"line":340,"column":6},"end":{"line":340,"column":13}},{"start":{"line":340,"column":17},"end":{"line":340,"column":38}}]},"41":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":4},"end":{"line":341,"column":4}},{"start":{"line":341,"column":4},"end":{"line":341,"column":4}}]},"42":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":4},"end":{"line":345,"column":4}},{"start":{"line":345,"column":4},"end":{"line":345,"column":4}}]},"43":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":4},"end":{"line":349,"column":4}},{"start":{"line":349,"column":4},"end":{"line":349,"column":4}}]},"44":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":8},"end":{"line":349,"column":27}},{"start":{"line":349,"column":31},"end":{"line":349,"column":58}}]},"45":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":2},"end":{"line":369,"column":2}},{"start":{"line":369,"column":2},"end":{"line":369,"column":2}}]},"46":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":6},"end":{"line":369,"column":13}},{"start":{"line":369,"column":17},"end":{"line":369,"column":36}}]},"47":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":4},"end":{"line":370,"column":4}},{"start":{"line":370,"column":4},"end":{"line":370,"column":4}}]},"48":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":4}},{"start":{"line":374,"column":4},"end":{"line":374,"column":4}}]},"49":{"line":379,"type":"cond-expr","locations":[{"start":{"line":380,"column":6},"end":{"line":380,"column":47}},{"start":{"line":381,"column":6},"end":{"line":381,"column":7}}]}},"code":["var stream = require('stream'),","  util = require('util');","","module.exports = GridFSBucketReadStream;","","/**"," * A readable stream that enables you to read buffers from GridFS."," *"," * Do not instantiate this class directly. Use `openDownloadStream()` instead."," *"," * @class"," * @param {Collection} chunks Handle for chunks collection"," * @param {Collection} files Handle for files collection"," * @param {Object} readPreference The read preference to use"," * @param {Object} filter The query to use to find the file document"," * @param {Object} [options=null] Optional settings."," * @param {Number} [options.sort=null] Optional sort for the file find query"," * @param {Number} [options.skip=null] Optional skip for the file find query"," * @param {Number} [options.start=null] Optional 0-based offset in bytes to start streaming from"," * @param {Number} [options.end=null] Optional 0-based offset in bytes to stop streaming before"," * @fires GridFSBucketReadStream#error"," * @fires GridFSBucketReadStream#file"," * @return {GridFSBucketReadStream} a GridFSBucketReadStream instance."," */","","function GridFSBucketReadStream(chunks, files, readPreference, filter, options) {","  this.s = {","    bytesRead: 0,","    chunks: chunks,","    cursor: null,","    expected: 0,","    files: files,","    filter: filter,","    init: false,","    expectedEnd: 0,","    file: null,","    options: options,","    readPreference: readPreference","  };","","  stream.Readable.call(this);","}","","util.inherits(GridFSBucketReadStream, stream.Readable);","","/**"," * An error occurred"," *"," * @event GridFSBucketReadStream#error"," * @type {Error}"," */","","/**"," * Fires when the stream loaded the file document corresponding to the"," * provided id."," *"," * @event GridFSBucketReadStream#file"," * @type {object}"," */","","/**"," * Emitted when a chunk of data is available to be consumed."," *"," * @event GridFSBucketReadStream#data"," * @type {object}"," */","","/**"," * Fired when the stream is exhausted (no more data events)."," *"," * @event GridFSBucketReadStream#end"," * @type {object}"," */","","/**"," * Fired when the stream is exhausted and the underlying cursor is killed"," *"," * @event GridFSBucketReadStream#close"," * @type {object}"," */","","/**"," * Reads from the cursor and pushes to the stream."," * @method"," */","","GridFSBucketReadStream.prototype._read = function() {","  var _this = this;","  if (this.destroyed) {","    return;","  }","","  waitForFile(_this, function() {","    doRead(_this);","  });","};","","/**"," * Sets the 0-based offset in bytes to start streaming from. Throws"," * an error if this stream has entered flowing mode"," * (e.g. if you've already called `on('data')`)"," * @method"," * @param {Number} start Offset in bytes to start reading at"," * @return {GridFSBucketReadStream}"," */","","GridFSBucketReadStream.prototype.start = function(start) {","  throwIfInitialized(this);","  this.s.options.start = start;","  return this;","};","","/**"," * Sets the 0-based offset in bytes to start streaming from. Throws"," * an error if this stream has entered flowing mode"," * (e.g. if you've already called `on('data')`)"," * @method"," * @param {Number} end Offset in bytes to stop reading at"," * @return {GridFSBucketReadStream}"," */","","GridFSBucketReadStream.prototype.end = function(end) {","  throwIfInitialized(this);","  this.s.options.end = end;","  return this;","};","","/**"," * Marks this stream as aborted (will never push another `data` event)"," * and kills the underlying cursor. Will emit the 'end' event, and then"," * the 'close' event once the cursor is successfully killed."," *"," * @method"," * @param {GridFSBucket~errorCallback} [callback] called when the cursor is successfully closed or an error occurred."," * @fires GridFSBucketWriteStream#close"," * @fires GridFSBucketWriteStream#end"," */","","GridFSBucketReadStream.prototype.abort = function(callback) {","  var _this = this;","  this.push(null);","  this.destroyed = true;","  if (this.s.cursor) {","    this.s.cursor.close(function(error) {","      _this.emit('close');","      callback && callback(error);","    });","  } else {","    if (!this.s.init) {","      // If not initialized, fire close event because we will never","      // get a cursor","      _this.emit('close');","    }","    callback && callback();","  }","};","","/**"," * @ignore"," */","","function throwIfInitialized(self) {","  if (self.s.init) {","    throw new Error('You cannot change options after the stream has entered' +","      'flowing mode!');","  }","}","","/**"," * @ignore"," */","","function doRead(_this) {","  if (_this.destroyed) {","    return;","  }","","  _this.s.cursor.next(function(error, doc) {","    if (_this.destroyed) {","      return;","    }","    if (error) {","      return __handleError(_this, error);","    }","    if (!doc) {","      _this.push(null);","      return _this.s.cursor.close(function(error) {","        if (error) {","          return __handleError(_this, error);","        }","        _this.emit('close');","      });","    }","","    var bytesRemaining = _this.s.file.length - _this.s.bytesRead;","    var expectedN = _this.s.expected++;","    var expectedLength = Math.min(_this.s.file.chunkSize,","      bytesRemaining);","","    if (doc.n > expectedN) {","      var errmsg = 'ChunkIsMissing: Got unexpected n: ' + doc.n +","        ', expected: ' + expectedN;","      return __handleError(_this, new Error(errmsg));","    }","","    if (doc.n < expectedN) {","      errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n +","        ', expected: ' + expectedN;","      return __handleError(_this, new Error(errmsg));","    }","","    if (doc.data.length() !== expectedLength) {","      if (bytesRemaining <= 0) {","        errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n;","        return __handleError(_this, new Error(errmsg));","      }","","      errmsg = 'ChunkIsWrongSize: Got unexpected length: ' +","        doc.data.length() + ', expected: ' + expectedLength;","      return __handleError(_this, new Error(errmsg));","    }","","    _this.s.bytesRead += doc.data.length();","","    if (doc.data.buffer.length === 0) {","      return _this.push(null);","    }","","    var sliceStart = null;","    var sliceEnd = null;","    var buf = doc.data.buffer;","","    if (_this.s.bytesToSkip != null) {","      sliceStart = _this.s.bytesToSkip;","      _this.s.bytesToSkip = 0;","    }","","    if (expectedN === _this.s.expectedEnd && _this.s.bytesToTrim != null) {","      sliceEnd = _this.s.bytesToTrim;","    }","","    // If the remaining amount of data left is < chunkSize read the right amount of data","    if (_this.s.options.end && (","      (_this.s.options.end - _this.s.bytesToSkip) < doc.data.length()","    )) {","      sliceEnd = (_this.s.options.end - _this.s.bytesToSkip);","    }","","    if (sliceStart != null || sliceEnd != null) {","      buf = buf.slice(sliceStart || 0, sliceEnd || buf.length);","    }","","    _this.push(buf);","  })","}","","/**"," * @ignore"," */","","function init(self) {","  var findOneOptions = {};","  if (self.s.readPreference) {","    findOneOptions.readPreference = self.s.readPreference;","  }","  if (self.s.options && self.s.options.sort) {","    findOneOptions.sort = self.s.options.sort;","  }","  if (self.s.options && self.s.options.skip) {","    findOneOptions.skip = self.s.options.skip;","  }","","  self.s.files.findOne(self.s.filter, findOneOptions, function(error, doc) {","    if (error) {","      return __handleError(self, error);","    }","    if (!doc) {","      var identifier = self.s.filter._id ?","        self.s.filter._id.toString() : self.s.filter.filename;","      var errmsg = 'FileNotFound: file ' + identifier + ' was not found';","      var err = new Error(errmsg);","      err.code = 'ENOENT';","      return __handleError(self, err);","    }","","    // If document is empty, kill the stream immediately and don't","    // execute any reads","    if (doc.length <= 0) {","      self.push(null);","      return;","    }","","    if (self.destroyed) {","      // If user destroys the stream before we have a cursor, wait","      // until the query is done to say we're 'closed' because we can't","      // cancel a query.","      self.emit('close');","      return;","    }","","    self.s.cursor = self.s.chunks.find({ files_id: doc._id }).sort({ n: 1 });","    if (self.s.readPreference) {","      self.s.cursor.setReadPreference(self.s.readPreference);","    }","","    self.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);","    self.s.file = doc;","    self.s.bytesToSkip = handleStartOption(self, doc, self.s.cursor,","      self.s.options);","    self.s.bytesToTrim = handleEndOption(self, doc, self.s.cursor,","      self.s.options);","    self.emit('file', doc);","  });","}","","/**"," * @ignore"," */","","function waitForFile(_this, callback) {","  if (_this.s.file) {","    return callback();","  }","","  if (!_this.s.init) {","    init(_this);","    _this.s.init = true;","  }","","  _this.once('file', function() {","    callback();","  })","}","","/**"," * @ignore"," */","","function handleStartOption(stream, doc, cursor, options) {","  if (options && options.start != null) {","    if (options.start > doc.length) {","      throw new Error('Stream start (' + options.start + ') must not be ' +","        'more than the length of the file (' + doc.length +')')","    }","    if (options.start < 0) {","      throw new Error('Stream start (' + options.start + ') must not be ' +","        'negative');","    }","    if (options.end != null && options.end < options.start) {","      throw new Error('Stream start (' + options.start + ') must not be ' +","        'greater than stream end (' + options.end + ')');","    }","","    cursor.skip(Math.floor(options.start / doc.chunkSize));","","    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) *","      doc.chunkSize;","    stream.s.expected = Math.floor(options.start / doc.chunkSize);","","    return options.start - stream.s.bytesRead;","  }","}","","/**"," * @ignore"," */","","function handleEndOption(stream, doc, cursor, options) {","  if (options && options.end != null) {","    if (options.end > doc.length) {","      throw new Error('Stream end (' + options.end + ') must not be ' +","        'more than the length of the file (' + doc.length +')')","    }","    if (options.start < 0) {","      throw new Error('Stream end (' + options.end + ') must not be ' +","        'negative');","    }","","    var start = options.start != null ?","      Math.floor(options.start / doc.chunkSize) :","      0;","","    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);","","    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);","","    return (Math.ceil(options.end / doc.chunkSize) * doc.chunkSize) -","      options.end;","  }","}","","/**"," * @ignore"," */","","function __handleError(_this, error) {","  _this.emit('error', error);","}",""],"l":{"1":1,"4":1,"26":1,"27":0,"41":0,"44":1,"87":1,"88":0,"89":0,"90":0,"93":0,"94":0,"107":1,"108":0,"109":0,"110":0,"122":1,"123":0,"124":0,"125":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"149":0,"152":0,"154":0,"162":1,"163":0,"164":0,"173":1,"174":0,"175":0,"178":0,"179":0,"180":0,"182":0,"183":0,"185":0,"186":0,"187":0,"188":0,"189":0,"191":0,"195":0,"196":0,"197":0,"200":0,"201":0,"203":0,"206":0,"207":0,"209":0,"212":0,"213":0,"214":0,"215":0,"218":0,"220":0,"223":0,"225":0,"226":0,"229":0,"230":0,"231":0,"233":0,"234":0,"235":0,"238":0,"239":0,"243":0,"246":0,"249":0,"250":0,"253":0,"261":1,"262":0,"263":0,"264":0,"266":0,"267":0,"269":0,"270":0,"273":0,"274":0,"275":0,"277":0,"278":0,"280":0,"281":0,"282":0,"283":0,"288":0,"289":0,"290":0,"293":0,"297":0,"298":0,"301":0,"302":0,"303":0,"306":0,"307":0,"308":0,"310":0,"312":0,"320":1,"321":0,"322":0,"325":0,"326":0,"327":0,"330":0,"331":0,"339":1,"340":0,"341":0,"342":0,"345":0,"346":0,"349":0,"350":0,"354":0,"356":0,"358":0,"360":0,"368":1,"369":0,"370":0,"371":0,"374":0,"375":0,"379":0,"383":0,"385":0,"387":0,"396":1,"397":0}},"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs-stream/upload.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongodb/mongodb/lib/gridfs-stream/upload.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":0,"223":0,"224":0,"225":0,"226":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"fnMap":{"1":{"name":"GridFSBucketWriteStream","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":60}}},"2":{"name":"(anonymous_2)","line":56,"loc":{"start":{"line":56,"column":23},"end":{"line":56,"column":34}}},"3":{"name":"(anonymous_3)","line":90,"loc":{"start":{"line":90,"column":42},"end":{"line":90,"column":78}}},"4":{"name":"(anonymous_4)","line":92,"loc":{"start":{"line":92,"column":30},"end":{"line":92,"column":41}}},"5":{"name":"(anonymous_5)","line":106,"loc":{"start":{"line":106,"column":42},"end":{"line":106,"column":61}}},"6":{"name":"(anonymous_6)","line":122,"loc":{"start":{"line":122,"column":48},"end":{"line":122,"column":64}}},"7":{"name":"(anonymous_7)","line":138,"loc":{"start":{"line":138,"column":40},"end":{"line":138,"column":76}}},"8":{"name":"(anonymous_8)","line":152,"loc":{"start":{"line":152,"column":24},"end":{"line":152,"column":41}}},"9":{"name":"(anonymous_9)","line":158,"loc":{"start":{"line":158,"column":25},"end":{"line":158,"column":36}}},"10":{"name":"(anonymous_10)","line":164,"loc":{"start":{"line":164,"column":30},"end":{"line":164,"column":41}}},"11":{"name":"__handleError","line":173,"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":47}}},"12":{"name":"createChunkDoc","line":188,"loc":{"start":{"line":188,"column":0},"end":{"line":188,"column":42}}},"13":{"name":"checkChunksIndex","line":201,"loc":{"start":{"line":201,"column":0},"end":{"line":201,"column":43}}},"14":{"name":"(anonymous_14)","line":202,"loc":{"start":{"line":202,"column":37},"end":{"line":202,"column":62}}},"15":{"name":"(anonymous_15)","line":207,"loc":{"start":{"line":207,"column":77},"end":{"line":207,"column":93}}},"16":{"name":"(anonymous_16)","line":220,"loc":{"start":{"line":220,"column":20},"end":{"line":220,"column":36}}},"17":{"name":"(anonymous_17)","line":239,"loc":{"start":{"line":239,"column":52},"end":{"line":239,"column":68}}},"18":{"name":"checkDone","line":254,"loc":{"start":{"line":254,"column":0},"end":{"line":254,"column":36}}},"19":{"name":"(anonymous_19)","line":266,"loc":{"start":{"line":266,"column":57},"end":{"line":266,"column":73}}},"20":{"name":"checkIndexes","line":283,"loc":{"start":{"line":283,"column":0},"end":{"line":283,"column":39}}},"21":{"name":"(anonymous_21)","line":284,"loc":{"start":{"line":284,"column":38},"end":{"line":284,"column":59}}},"22":{"name":"(anonymous_22)","line":292,"loc":{"start":{"line":292,"column":38},"end":{"line":292,"column":63}}},"23":{"name":"(anonymous_23)","line":297,"loc":{"start":{"line":297,"column":64},"end":{"line":297,"column":80}}},"24":{"name":"(anonymous_24)","line":310,"loc":{"start":{"line":310,"column":22},"end":{"line":310,"column":38}}},"25":{"name":"(anonymous_25)","line":327,"loc":{"start":{"line":327,"column":53},"end":{"line":327,"column":69}}},"26":{"name":"createFilesDoc","line":343,"loc":{"start":{"line":343,"column":0},"end":{"line":344,"column":21}}},"27":{"name":"doWrite","line":373,"loc":{"start":{"line":373,"column":0},"end":{"line":373,"column":51}}},"28":{"name":"(anonymous_28)","line":418,"loc":{"start":{"line":418,"column":55},"end":{"line":418,"column":71}}},"29":{"name":"getWriteOptions","line":449,"loc":{"start":{"line":449,"column":0},"end":{"line":449,"column":32}}},"30":{"name":"waitForIndexes","line":463,"loc":{"start":{"line":463,"column":0},"end":{"line":463,"column":41}}},"31":{"name":"(anonymous_31)","line":468,"loc":{"start":{"line":468,"column":29},"end":{"line":468,"column":40}}},"32":{"name":"writeRemnant","line":479,"loc":{"start":{"line":479,"column":0},"end":{"line":479,"column":39}}},"33":{"name":"(anonymous_33)","line":499,"loc":{"start":{"line":499,"column":51},"end":{"line":499,"column":67}}},"34":{"name":"checkAborted","line":512,"loc":{"start":{"line":512,"column":0},"end":{"line":512,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":27}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"7":{"start":{"line":29,"column":0},"end":{"line":61,"column":1}},"8":{"start":{"line":30,"column":2},"end":{"line":30,"column":26}},"9":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}},"10":{"start":{"line":32,"column":2},"end":{"line":32,"column":43}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":27}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":41}},"13":{"start":{"line":35,"column":2},"end":{"line":35,"column":25}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":59}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":52}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":52}},"17":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}},"18":{"start":{"line":41,"column":2},"end":{"line":41,"column":38}},"19":{"start":{"line":42,"column":2},"end":{"line":42,"column":13}},"20":{"start":{"line":43,"column":2},"end":{"line":43,"column":15}},"21":{"start":{"line":44,"column":2},"end":{"line":50,"column":4}},"22":{"start":{"line":52,"column":2},"end":{"line":60,"column":3}},"23":{"start":{"line":53,"column":4},"end":{"line":53,"column":48}},"24":{"start":{"line":55,"column":4},"end":{"line":55,"column":21}},"25":{"start":{"line":56,"column":4},"end":{"line":59,"column":7}},"26":{"start":{"line":57,"column":6},"end":{"line":57,"column":43}},"27":{"start":{"line":58,"column":6},"end":{"line":58,"column":33}},"28":{"start":{"line":63,"column":0},"end":{"line":63,"column":56}},"29":{"start":{"line":90,"column":0},"end":{"line":95,"column":2}},"30":{"start":{"line":91,"column":2},"end":{"line":91,"column":19}},"31":{"start":{"line":92,"column":2},"end":{"line":94,"column":5}},"32":{"start":{"line":93,"column":4},"end":{"line":93,"column":53}},"33":{"start":{"line":106,"column":0},"end":{"line":125,"column":2}},"34":{"start":{"line":107,"column":2},"end":{"line":113,"column":3}},"35":{"start":{"line":108,"column":4},"end":{"line":108,"column":78}},"36":{"start":{"line":109,"column":4},"end":{"line":111,"column":5}},"37":{"start":{"line":110,"column":6},"end":{"line":110,"column":29}},"38":{"start":{"line":112,"column":4},"end":{"line":112,"column":51}},"39":{"start":{"line":114,"column":2},"end":{"line":120,"column":3}},"40":{"start":{"line":115,"column":4},"end":{"line":115,"column":63}},"41":{"start":{"line":116,"column":4},"end":{"line":118,"column":5}},"42":{"start":{"line":117,"column":6},"end":{"line":117,"column":29}},"43":{"start":{"line":119,"column":4},"end":{"line":119,"column":51}},"44":{"start":{"line":121,"column":2},"end":{"line":121,"column":28}},"45":{"start":{"line":122,"column":2},"end":{"line":124,"column":5}},"46":{"start":{"line":123,"column":4},"end":{"line":123,"column":54}},"47":{"start":{"line":123,"column":38},"end":{"line":123,"column":54}},"48":{"start":{"line":138,"column":0},"end":{"line":167,"column":2}},"49":{"start":{"line":139,"column":2},"end":{"line":139,"column":19}},"50":{"start":{"line":140,"column":2},"end":{"line":144,"column":3}},"51":{"start":{"line":141,"column":4},"end":{"line":141,"column":52}},"52":{"start":{"line":142,"column":9},"end":{"line":144,"column":3}},"53":{"start":{"line":143,"column":4},"end":{"line":143,"column":41}},"54":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"55":{"start":{"line":147,"column":4},"end":{"line":147,"column":11}},"56":{"start":{"line":149,"column":2},"end":{"line":149,"column":30}},"57":{"start":{"line":151,"column":2},"end":{"line":155,"column":3}},"58":{"start":{"line":152,"column":4},"end":{"line":154,"column":7}},"59":{"start":{"line":153,"column":6},"end":{"line":153,"column":29}},"60":{"start":{"line":157,"column":2},"end":{"line":162,"column":3}},"61":{"start":{"line":158,"column":4},"end":{"line":160,"column":7}},"62":{"start":{"line":159,"column":6},"end":{"line":159,"column":26}},"63":{"start":{"line":161,"column":4},"end":{"line":161,"column":11}},"64":{"start":{"line":164,"column":2},"end":{"line":166,"column":5}},"65":{"start":{"line":165,"column":4},"end":{"line":165,"column":24}},"66":{"start":{"line":173,"column":0},"end":{"line":182,"column":1}},"67":{"start":{"line":174,"column":2},"end":{"line":176,"column":3}},"68":{"start":{"line":175,"column":4},"end":{"line":175,"column":11}},"69":{"start":{"line":177,"column":2},"end":{"line":177,"column":29}},"70":{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},"71":{"start":{"line":179,"column":4},"end":{"line":179,"column":27}},"72":{"start":{"line":181,"column":2},"end":{"line":181,"column":29}},"73":{"start":{"line":188,"column":0},"end":{"line":195,"column":1}},"74":{"start":{"line":189,"column":2},"end":{"line":194,"column":4}},"75":{"start":{"line":201,"column":0},"end":{"line":248,"column":1}},"76":{"start":{"line":202,"column":2},"end":{"line":247,"column":5}},"77":{"start":{"line":203,"column":4},"end":{"line":217,"column":5}},"78":{"start":{"line":205,"column":6},"end":{"line":215,"column":7}},"79":{"start":{"line":206,"column":8},"end":{"line":206,"column":42}},"80":{"start":{"line":207,"column":8},"end":{"line":213,"column":11}},"81":{"start":{"line":208,"column":10},"end":{"line":210,"column":11}},"82":{"start":{"line":209,"column":12},"end":{"line":209,"column":35}},"83":{"start":{"line":212,"column":10},"end":{"line":212,"column":21}},"84":{"start":{"line":214,"column":8},"end":{"line":214,"column":15}},"85":{"start":{"line":216,"column":6},"end":{"line":216,"column":29}},"86":{"start":{"line":219,"column":4},"end":{"line":219,"column":31}},"87":{"start":{"line":220,"column":4},"end":{"line":228,"column":7}},"88":{"start":{"line":221,"column":6},"end":{"line":227,"column":7}},"89":{"start":{"line":222,"column":8},"end":{"line":222,"column":42}},"90":{"start":{"line":223,"column":8},"end":{"line":226,"column":9}},"91":{"start":{"line":225,"column":10},"end":{"line":225,"column":32}},"92":{"start":{"line":230,"column":4},"end":{"line":246,"column":5}},"93":{"start":{"line":231,"column":6},"end":{"line":231,"column":17}},"94":{"start":{"line":233,"column":6},"end":{"line":233,"column":36}},"95":{"start":{"line":234,"column":6},"end":{"line":234,"column":48}},"96":{"start":{"line":236,"column":6},"end":{"line":236,"column":38}},"97":{"start":{"line":237,"column":6},"end":{"line":237,"column":33}},"98":{"start":{"line":239,"column":6},"end":{"line":245,"column":9}},"99":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"100":{"start":{"line":241,"column":10},"end":{"line":241,"column":33}},"101":{"start":{"line":244,"column":8},"end":{"line":244,"column":19}},"102":{"start":{"line":254,"column":0},"end":{"line":277,"column":1}},"103":{"start":{"line":255,"column":2},"end":{"line":274,"column":3}},"104":{"start":{"line":258,"column":4},"end":{"line":260,"column":53}},"105":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"106":{"start":{"line":263,"column":6},"end":{"line":263,"column":19}},"107":{"start":{"line":266,"column":4},"end":{"line":271,"column":7}},"108":{"start":{"line":267,"column":6},"end":{"line":269,"column":7}},"109":{"start":{"line":268,"column":8},"end":{"line":268,"column":53}},"110":{"start":{"line":270,"column":6},"end":{"line":270,"column":37}},"111":{"start":{"line":273,"column":4},"end":{"line":273,"column":16}},"112":{"start":{"line":276,"column":2},"end":{"line":276,"column":15}},"113":{"start":{"line":283,"column":0},"end":{"line":337,"column":1}},"114":{"start":{"line":284,"column":2},"end":{"line":336,"column":5}},"115":{"start":{"line":285,"column":4},"end":{"line":287,"column":5}},"116":{"start":{"line":286,"column":6},"end":{"line":286,"column":29}},"117":{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},"118":{"start":{"line":289,"column":6},"end":{"line":289,"column":24}},"119":{"start":{"line":292,"column":4},"end":{"line":335,"column":7}},"120":{"start":{"line":293,"column":6},"end":{"line":307,"column":7}},"121":{"start":{"line":295,"column":8},"end":{"line":305,"column":9}},"122":{"start":{"line":296,"column":10},"end":{"line":296,"column":53}},"123":{"start":{"line":297,"column":10},"end":{"line":303,"column":13}},"124":{"start":{"line":298,"column":12},"end":{"line":300,"column":13}},"125":{"start":{"line":299,"column":14},"end":{"line":299,"column":37}},"126":{"start":{"line":302,"column":12},"end":{"line":302,"column":46}},"127":{"start":{"line":304,"column":10},"end":{"line":304,"column":17}},"128":{"start":{"line":306,"column":8},"end":{"line":306,"column":31}},"129":{"start":{"line":309,"column":6},"end":{"line":309,"column":31}},"130":{"start":{"line":310,"column":6},"end":{"line":316,"column":9}},"131":{"start":{"line":311,"column":8},"end":{"line":311,"column":42}},"132":{"start":{"line":312,"column":8},"end":{"line":315,"column":9}},"133":{"start":{"line":314,"column":10},"end":{"line":314,"column":30}},"134":{"start":{"line":318,"column":6},"end":{"line":334,"column":7}},"135":{"start":{"line":319,"column":8},"end":{"line":319,"column":42}},"136":{"start":{"line":321,"column":8},"end":{"line":321,"column":47}},"137":{"start":{"line":323,"column":8},"end":{"line":323,"column":50}},"138":{"start":{"line":325,"column":8},"end":{"line":325,"column":40}},"139":{"start":{"line":327,"column":8},"end":{"line":333,"column":11}},"140":{"start":{"line":328,"column":10},"end":{"line":330,"column":11}},"141":{"start":{"line":329,"column":12},"end":{"line":329,"column":35}},"142":{"start":{"line":332,"column":10},"end":{"line":332,"column":44}},"143":{"start":{"line":343,"column":0},"end":{"line":367,"column":1}},"144":{"start":{"line":345,"column":2},"end":{"line":352,"column":4}},"145":{"start":{"line":354,"column":2},"end":{"line":356,"column":3}},"146":{"start":{"line":355,"column":4},"end":{"line":355,"column":34}},"147":{"start":{"line":358,"column":2},"end":{"line":360,"column":3}},"148":{"start":{"line":359,"column":4},"end":{"line":359,"column":26}},"149":{"start":{"line":362,"column":2},"end":{"line":364,"column":3}},"150":{"start":{"line":363,"column":4},"end":{"line":363,"column":28}},"151":{"start":{"line":366,"column":2},"end":{"line":366,"column":13}},"152":{"start":{"line":373,"column":0},"end":{"line":443,"column":1}},"153":{"start":{"line":374,"column":2},"end":{"line":376,"column":3}},"154":{"start":{"line":375,"column":4},"end":{"line":375,"column":17}},"155":{"start":{"line":378,"column":2},"end":{"line":379,"column":40}},"156":{"start":{"line":381,"column":2},"end":{"line":381,"column":34}},"157":{"start":{"line":384,"column":2},"end":{"line":394,"column":3}},"158":{"start":{"line":385,"column":4},"end":{"line":385,"column":47}},"159":{"start":{"line":386,"column":4},"end":{"line":386,"column":33}},"160":{"start":{"line":388,"column":4},"end":{"line":388,"column":27}},"161":{"start":{"line":393,"column":4},"end":{"line":393,"column":16}},"162":{"start":{"line":398,"column":2},"end":{"line":398,"column":42}},"163":{"start":{"line":399,"column":2},"end":{"line":399,"column":56}},"164":{"start":{"line":400,"column":2},"end":{"line":400,"column":60}},"165":{"start":{"line":401,"column":2},"end":{"line":401,"column":30}},"166":{"start":{"line":402,"column":2},"end":{"line":437,"column":3}},"167":{"start":{"line":403,"column":4},"end":{"line":403,"column":58}},"168":{"start":{"line":404,"column":4},"end":{"line":405,"column":44}},"169":{"start":{"line":406,"column":4},"end":{"line":406,"column":27}},"170":{"start":{"line":407,"column":4},"end":{"line":407,"column":32}},"171":{"start":{"line":408,"column":4},"end":{"line":434,"column":5}},"172":{"start":{"line":409,"column":6},"end":{"line":409,"column":41}},"173":{"start":{"line":410,"column":6},"end":{"line":410,"column":68}},"174":{"start":{"line":411,"column":6},"end":{"line":411,"column":40}},"175":{"start":{"line":412,"column":6},"end":{"line":412,"column":28}},"176":{"start":{"line":414,"column":6},"end":{"line":416,"column":7}},"177":{"start":{"line":415,"column":8},"end":{"line":415,"column":21}},"178":{"start":{"line":418,"column":6},"end":{"line":429,"column":9}},"179":{"start":{"line":419,"column":8},"end":{"line":421,"column":9}},"180":{"start":{"line":420,"column":10},"end":{"line":420,"column":45}},"181":{"start":{"line":422,"column":8},"end":{"line":422,"column":42}},"182":{"start":{"line":423,"column":8},"end":{"line":423,"column":30}},"183":{"start":{"line":424,"column":8},"end":{"line":428,"column":9}},"184":{"start":{"line":425,"column":10},"end":{"line":425,"column":35}},"185":{"start":{"line":426,"column":10},"end":{"line":426,"column":33}},"186":{"start":{"line":427,"column":10},"end":{"line":427,"column":27}},"187":{"start":{"line":431,"column":6},"end":{"line":431,"column":44}},"188":{"start":{"line":432,"column":6},"end":{"line":432,"column":20}},"189":{"start":{"line":433,"column":6},"end":{"line":433,"column":16}},"190":{"start":{"line":435,"column":4},"end":{"line":435,"column":35}},"191":{"start":{"line":436,"column":4},"end":{"line":436,"column":60}},"192":{"start":{"line":442,"column":2},"end":{"line":442,"column":15}},"193":{"start":{"line":449,"column":0},"end":{"line":457,"column":1}},"194":{"start":{"line":450,"column":2},"end":{"line":450,"column":15}},"195":{"start":{"line":451,"column":2},"end":{"line":455,"column":3}},"196":{"start":{"line":452,"column":4},"end":{"line":452,"column":41}},"197":{"start":{"line":453,"column":4},"end":{"line":453,"column":55}},"198":{"start":{"line":454,"column":4},"end":{"line":454,"column":41}},"199":{"start":{"line":456,"column":2},"end":{"line":456,"column":13}},"200":{"start":{"line":463,"column":0},"end":{"line":473,"column":1}},"201":{"start":{"line":464,"column":2},"end":{"line":466,"column":3}},"202":{"start":{"line":465,"column":4},"end":{"line":465,"column":27}},"203":{"start":{"line":468,"column":2},"end":{"line":470,"column":5}},"204":{"start":{"line":469,"column":4},"end":{"line":469,"column":19}},"205":{"start":{"line":472,"column":2},"end":{"line":472,"column":14}},"206":{"start":{"line":479,"column":0},"end":{"line":506,"column":1}},"207":{"start":{"line":481,"column":2},"end":{"line":483,"column":3}},"208":{"start":{"line":482,"column":4},"end":{"line":482,"column":38}},"209":{"start":{"line":485,"column":2},"end":{"line":485,"column":36}},"210":{"start":{"line":489,"column":2},"end":{"line":489,"column":38}},"211":{"start":{"line":490,"column":2},"end":{"line":490,"column":50}},"212":{"start":{"line":491,"column":2},"end":{"line":491,"column":28}},"213":{"start":{"line":492,"column":2},"end":{"line":492,"column":55}},"214":{"start":{"line":495,"column":2},"end":{"line":497,"column":3}},"215":{"start":{"line":496,"column":4},"end":{"line":496,"column":17}},"216":{"start":{"line":499,"column":2},"end":{"line":505,"column":5}},"217":{"start":{"line":500,"column":4},"end":{"line":502,"column":5}},"218":{"start":{"line":501,"column":6},"end":{"line":501,"column":41}},"219":{"start":{"line":503,"column":4},"end":{"line":503,"column":38}},"220":{"start":{"line":504,"column":4},"end":{"line":504,"column":21}},"221":{"start":{"line":512,"column":0},"end":{"line":520,"column":1}},"222":{"start":{"line":513,"column":2},"end":{"line":518,"column":3}},"223":{"start":{"line":514,"column":4},"end":{"line":516,"column":5}},"224":{"start":{"line":515,"column":6},"end":{"line":515,"column":58}},"225":{"start":{"line":517,"column":4},"end":{"line":517,"column":16}},"226":{"start":{"line":519,"column":2},"end":{"line":519,"column":15}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":19}},{"start":{"line":30,"column":23},"end":{"line":30,"column":25}}]},"2":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":25},"end":{"line":37,"column":35}},{"start":{"line":37,"column":38},"end":{"line":37,"column":58}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"4":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"5":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"6":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"7":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"8":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"9":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":2},"end":{"line":140,"column":2}},{"start":{"line":140,"column":2},"end":{"line":140,"column":2}}]},"10":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":9},"end":{"line":142,"column":9}},{"start":{"line":142,"column":9},"end":{"line":142,"column":9}}]},"11":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"12":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"13":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"14":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"15":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"16":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"17":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":6}},{"start":{"line":205,"column":6},"end":{"line":205,"column":6}}]},"18":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":10},"end":{"line":208,"column":10}},{"start":{"line":208,"column":10},"end":{"line":208,"column":10}}]},"19":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":6}},{"start":{"line":221,"column":6},"end":{"line":221,"column":6}}]},"20":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":8}},{"start":{"line":223,"column":8},"end":{"line":223,"column":8}}]},"21":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":12},"end":{"line":223,"column":29}},{"start":{"line":223,"column":33},"end":{"line":223,"column":57}},{"start":{"line":224,"column":12},"end":{"line":224,"column":29}}]},"22":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"23":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"24":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":2}},{"start":{"line":255,"column":2},"end":{"line":255,"column":2}}]},"25":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":6},"end":{"line":255,"column":27}},{"start":{"line":256,"column":6},"end":{"line":256,"column":43}},{"start":{"line":257,"column":6},"end":{"line":257,"column":26}}]},"26":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"27":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"28":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"29":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"30":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":6},"end":{"line":293,"column":6}},{"start":{"line":293,"column":6},"end":{"line":293,"column":6}}]},"31":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":8},"end":{"line":295,"column":8}},{"start":{"line":295,"column":8},"end":{"line":295,"column":8}}]},"32":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":12},"end":{"line":298,"column":12}},{"start":{"line":298,"column":12},"end":{"line":298,"column":12}}]},"33":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":8},"end":{"line":312,"column":8}},{"start":{"line":312,"column":8},"end":{"line":312,"column":8}}]},"34":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":12},"end":{"line":312,"column":29}},{"start":{"line":312,"column":33},"end":{"line":312,"column":57}},{"start":{"line":313,"column":12},"end":{"line":313,"column":38}}]},"35":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"36":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":10},"end":{"line":328,"column":10}},{"start":{"line":328,"column":10},"end":{"line":328,"column":10}}]},"37":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":2},"end":{"line":354,"column":2}},{"start":{"line":354,"column":2},"end":{"line":354,"column":2}}]},"38":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":358,"column":2}},{"start":{"line":358,"column":2},"end":{"line":358,"column":2}}]},"39":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"40":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":2},"end":{"line":374,"column":2}},{"start":{"line":374,"column":2},"end":{"line":374,"column":2}}]},"41":{"line":378,"type":"cond-expr","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":9}},{"start":{"line":379,"column":12},"end":{"line":379,"column":39}}]},"42":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":2},"end":{"line":384,"column":2}},{"start":{"line":384,"column":2},"end":{"line":384,"column":2}}]},"43":{"line":388,"type":"binary-expr","locations":[{"start":{"line":388,"column":4},"end":{"line":388,"column":12}},{"start":{"line":388,"column":16},"end":{"line":388,"column":26}}]},"44":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":4},"end":{"line":408,"column":4}},{"start":{"line":408,"column":4},"end":{"line":408,"column":4}}]},"45":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":6},"end":{"line":414,"column":6}},{"start":{"line":414,"column":6},"end":{"line":414,"column":6}}]},"46":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":8},"end":{"line":419,"column":8}},{"start":{"line":419,"column":8},"end":{"line":419,"column":8}}]},"47":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":8},"end":{"line":424,"column":8}},{"start":{"line":424,"column":8},"end":{"line":424,"column":8}}]},"48":{"line":426,"type":"binary-expr","locations":[{"start":{"line":426,"column":10},"end":{"line":426,"column":18}},{"start":{"line":426,"column":22},"end":{"line":426,"column":32}}]},"49":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":2},"end":{"line":451,"column":2}},{"start":{"line":451,"column":2},"end":{"line":451,"column":2}}]},"50":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":2},"end":{"line":464,"column":2}},{"start":{"line":464,"column":2},"end":{"line":464,"column":2}}]},"51":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":2},"end":{"line":481,"column":2}},{"start":{"line":481,"column":2},"end":{"line":481,"column":2}}]},"52":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":2},"end":{"line":495,"column":2}},{"start":{"line":495,"column":2},"end":{"line":495,"column":2}}]},"53":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":4},"end":{"line":500,"column":4}},{"start":{"line":500,"column":4},"end":{"line":500,"column":4}}]},"54":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":2},"end":{"line":513,"column":2}},{"start":{"line":513,"column":2},"end":{"line":513,"column":2}}]},"55":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":4},"end":{"line":514,"column":4}},{"start":{"line":514,"column":4},"end":{"line":514,"column":4}}]}},"code":["var core = require('mongodb-core');","var crypto = require('crypto');","var stream = require('stream');","var util = require('util');","","var ERROR_NAMESPACE_NOT_FOUND = 26;","","module.exports = GridFSBucketWriteStream;","","/**"," * A writable stream that enables you to write buffers to GridFS."," *"," * Do not instantiate this class directly. Use `openUploadStream()` instead."," *"," * @class"," * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket"," * @param {string} filename The value of the 'filename' key in the files doc"," * @param {object} [options=null] Optional settings."," * @param {string|number|object} [options.id=null] Custom file id for the GridFS file."," * @param {number} [options.chunkSizeBytes=null] The chunk size to use, in bytes"," * @param {number} [options.w=null] The write concern"," * @param {number} [options.wtimeout=null] The write concern timeout"," * @param {number} [options.j=null] The journal write concern"," * @fires GridFSBucketWriteStream#error"," * @fires GridFSBucketWriteStream#finish"," * @return {GridFSBucketWriteStream} a GridFSBucketWriteStream instance."," */","","function GridFSBucketWriteStream(bucket, filename, options) {","  options = options || {};","  this.bucket = bucket;","  this.chunks = bucket.s._chunksCollection;","  this.filename = filename;","  this.files = bucket.s._filesCollection;","  this.options = options;","","  this.id = options.id ? options.id : core.BSON.ObjectId();","  this.chunkSizeBytes = this.options.chunkSizeBytes;","  this.bufToStore = new Buffer(this.chunkSizeBytes);","  this.length = 0;","  this.md5 = crypto.createHash('md5');","  this.n = 0;","  this.pos = 0;","  this.state = {","    streamEnd: false,","    outstandingRequests: 0,","    errored: false,","    aborted: false,","    promiseLibrary: this.bucket.s.promiseLibrary","  };","","  if (!this.bucket.s.calledOpenUploadStream) {","    this.bucket.s.calledOpenUploadStream = true;","","    var _this = this;","    checkIndexes(this, function() {","      _this.bucket.s.checkedIndexes = true;","      _this.bucket.emit('index');","    });","  }","}","","util.inherits(GridFSBucketWriteStream, stream.Writable);","","/**"," * An error occurred"," *"," * @event GridFSBucketWriteStream#error"," * @type {Error}"," */","","/**"," * `end()` was called and the write stream successfully wrote the file"," * metadata and all the chunks to MongoDB."," *"," * @event GridFSBucketWriteStream#finish"," * @type {object}"," */","","/**"," * Write a buffer to the stream."," *"," * @method"," * @param {Buffer} chunk Buffer to write"," * @param {String} encoding Optional encoding for the buffer"," * @param {Function} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush."," * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise."," */","","GridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {","  var _this = this;","  return waitForIndexes(this, function() {","    return doWrite(_this, chunk, encoding, callback);","  });","};","","/**"," * Places this write stream into an aborted state (all future writes fail)"," * and deletes all chunks that have already been written."," *"," * @method"," * @param {GridFSBucket~errorCallback} callback called when chunks are successfully removed or error occurred"," * @return {Promise} if no callback specified"," */","","GridFSBucketWriteStream.prototype.abort = function(callback) {","  if (this.state.streamEnd) {","    var error = new Error('Cannot abort a stream that has already completed');","    if (typeof callback == 'function') {","      return callback(error);","    }","    return this.state.promiseLibrary.reject(error);","  }","  if (this.state.aborted) {","    error = new Error('Cannot call abort() on a stream twice');","    if (typeof callback == 'function') {","      return callback(error);","    }","    return this.state.promiseLibrary.reject(error);","  }","  this.state.aborted = true;","  this.chunks.deleteMany({ files_id: this.id }, function(error) {","    if(typeof callback == 'function') callback(error);","  });","};","","/**"," * Tells the stream that no more data will be coming in. The stream will"," * persist the remaining data to MongoDB, write the files document, and"," * then emit a 'finish' event."," *"," * @method"," * @param {Buffer} chunk Buffer to write"," * @param {String} encoding Optional encoding for the buffer"," * @param {Function} callback Function to call when all files and chunks have been persisted to MongoDB"," */","","GridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {","  var _this = this;","  if(typeof chunk == 'function') {","    callback = chunk, chunk = null, encoding = null;","  } else if(typeof encoding == 'function') {","    callback = encoding, encoding = null;","  }","","  if (checkAborted(this, callback)) {","    return;","  }","  this.state.streamEnd = true;","","  if (callback) {","    this.once('finish', function(result) {","      callback(null, result);","    });","  }","","  if (!chunk) {","    waitForIndexes(this, function() {","      writeRemnant(_this);","    });","    return;","  }","","  this.write(chunk, encoding, function() {","    writeRemnant(_this);","  });","};","","/**"," * @ignore"," */","","function __handleError(_this, error, callback) {","  if (_this.state.errored) {","    return;","  }","  _this.state.errored = true;","  if (callback) {","    return callback(error);","  }","  _this.emit('error', error);","}","","/**"," * @ignore"," */","","function createChunkDoc(filesId, n, data) {","  return {","    _id: core.BSON.ObjectId(),","    files_id: filesId,","    n: n,","    data: data","  };","}","","/**"," * @ignore"," */","","function checkChunksIndex(_this, callback) {","  _this.chunks.listIndexes().toArray(function(error, indexes) {","    if (error) {","      // Collection doesn't exist so create index","      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {","        var index = { files_id: 1, n: 1 };","        _this.chunks.createIndex(index, { background: false, unique: true }, function(error) {","          if (error) {","            return callback(error);","          }","","          callback();","        });","        return;","      }","      return callback(error);","    }","","    var hasChunksIndex = false;","    indexes.forEach(function(index) {","      if (index.key) {","        var keys = Object.keys(index.key);","        if (keys.length === 2 && index.key.files_id === 1 &&","            index.key.n === 1) {","          hasChunksIndex = true;","        }","      }","    });","","    if (hasChunksIndex) {","      callback();","    } else {","      index = { files_id: 1, n: 1 };","      var indexOptions = getWriteOptions(_this);","","      indexOptions.background = false;","      indexOptions.unique = true;","","      _this.chunks.createIndex(index, indexOptions, function(error) {","        if (error) {","          return callback(error);","        }","","        callback();","      });","    }","  });","}","","/**"," * @ignore"," */","","function checkDone(_this, callback) {","  if (_this.state.streamEnd &&","      _this.state.outstandingRequests === 0 &&","      !_this.state.errored) {","    var filesDoc = createFilesDoc(_this.id, _this.length, _this.chunkSizeBytes,","      _this.md5.digest('hex'), _this.filename, _this.options.contentType,","      _this.options.aliases, _this.options.metadata);","","    if (checkAborted(_this, callback)) {","      return false;","    }","","    _this.files.insert(filesDoc, getWriteOptions(_this), function(error) {","      if (error) {","        return __handleError(_this, error, callback);","      }","      _this.emit('finish', filesDoc);","    });","","    return true;","  }","","  return false;","}","","/**"," * @ignore"," */","","function checkIndexes(_this, callback) {","  _this.files.findOne({}, { _id: 1 }, function(error, doc) {","    if (error) {","      return callback(error);","    }","    if (doc) {","      return callback();","    }","","    _this.files.listIndexes().toArray(function(error, indexes) {","      if (error) {","        // Collection doesn't exist so create index","        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {","          var index = { filename: 1, uploadDate: 1 };","          _this.files.createIndex(index, { background: false }, function(error) {","            if (error) {","              return callback(error);","            }","","            checkChunksIndex(_this, callback);","          });","          return;","        }","        return callback(error);","      }","","      var hasFileIndex = false;","      indexes.forEach(function(index) {","        var keys = Object.keys(index.key);","        if (keys.length === 2 && index.key.filename === 1 &&","            index.key.uploadDate === 1) {","          hasFileIndex = true;","        }","      });","","      if (hasFileIndex) {","        checkChunksIndex(_this, callback);","      } else {","        index = { filename: 1, uploadDate: 1 };","","        var indexOptions = getWriteOptions(_this);","","        indexOptions.background = false;","","        _this.files.createIndex(index, indexOptions, function(error) {","          if (error) {","            return callback(error);","          }","","          checkChunksIndex(_this, callback);","        });","      }","    });","  });","}","","/**"," * @ignore"," */","","function createFilesDoc(_id, length, chunkSize, md5, filename, contentType,","  aliases, metadata) {","  var ret = {","    _id: _id,","    length: length,","    chunkSize: chunkSize,","    uploadDate: new Date(),","    md5: md5,","    filename: filename","  };","","  if (contentType) {","    ret.contentType = contentType;","  }","","  if (aliases) {","    ret.aliases = aliases;","  }","","  if (metadata) {","    ret.metadata = metadata;","  }","","  return ret;","}","","/**"," * @ignore"," */","","function doWrite(_this, chunk, encoding, callback) {","  if (checkAborted(_this, callback)) {","    return false;","  }","","  var inputBuf = (Buffer.isBuffer(chunk)) ?","    chunk : new Buffer(chunk, encoding);","","  _this.length += inputBuf.length;","","  // Input is small enough to fit in our buffer","  if (_this.pos + inputBuf.length < _this.chunkSizeBytes) {","    inputBuf.copy(_this.bufToStore, _this.pos);","    _this.pos += inputBuf.length;","","    callback && callback();","","    // Note that we reverse the typical semantics of write's return value","    // to be compatible with node's `.pipe()` function.","    // True means client can keep writing.","    return true;","  }","","  // Otherwise, buffer is too big for current chunk, so we need to flush","  // to MongoDB.","  var inputBufRemaining = inputBuf.length;","  var spaceRemaining = _this.chunkSizeBytes - _this.pos;","  var numToCopy = Math.min(spaceRemaining, inputBuf.length);","  var outstandingRequests = 0;","  while (inputBufRemaining > 0) {","    var inputBufPos = inputBuf.length - inputBufRemaining;","    inputBuf.copy(_this.bufToStore, _this.pos,","      inputBufPos, inputBufPos + numToCopy);","    _this.pos += numToCopy;","    spaceRemaining -= numToCopy;","    if (spaceRemaining === 0) {","      _this.md5.update(_this.bufToStore);","      var doc = createChunkDoc(_this.id, _this.n, _this.bufToStore);","      ++_this.state.outstandingRequests;","      ++outstandingRequests;","","      if (checkAborted(_this, callback)) {","        return false;","      }","","      _this.chunks.insert(doc, getWriteOptions(_this), function(error) {","        if (error) {","          return __handleError(_this, error);","        }","        --_this.state.outstandingRequests;","        --outstandingRequests;","        if (!outstandingRequests) {","          _this.emit('drain', doc);","          callback && callback();","          checkDone(_this);","        }","      });","","      spaceRemaining = _this.chunkSizeBytes;","      _this.pos = 0;","      ++_this.n;","    }","    inputBufRemaining -= numToCopy;","    numToCopy = Math.min(spaceRemaining, inputBufRemaining);","  }","","  // Note that we reverse the typical semantics of write's return value","  // to be compatible with node's `.pipe()` function.","  // False means the client should wait for the 'drain' event.","  return false;","}","","/**"," * @ignore"," */","","function getWriteOptions(_this) {","  var obj = {};","  if (_this.options.writeConcern) {","    obj.w = _this.options.writeConcern.w;","    obj.wtimeout = _this.options.writeConcern.wtimeout;","    obj.j = _this.options.writeConcern.j;","  }","  return obj;","}","","/**"," * @ignore"," */","","function waitForIndexes(_this, callback) {","  if (_this.bucket.s.checkedIndexes) {","    return callback(false);","  }","","  _this.bucket.once('index', function() {","    callback(true);","  });","","  return true;","}","","/**"," * @ignore"," */","","function writeRemnant(_this, callback) {","  // Buffer is empty, so don't bother to insert","  if (_this.pos === 0) {","    return checkDone(_this, callback);","  }","","  ++_this.state.outstandingRequests;","","  // Create a new buffer to make sure the buffer isn't bigger than it needs","  // to be.","  var remnant = new Buffer(_this.pos);","  _this.bufToStore.copy(remnant, 0, 0, _this.pos);","  _this.md5.update(remnant);","  var doc = createChunkDoc(_this.id, _this.n, remnant);","","  // If the stream was aborted, do not write remnant","  if (checkAborted(_this, callback)) {","    return false;","  }","","  _this.chunks.insert(doc, getWriteOptions(_this), function(error) {","    if (error) {","      return __handleError(_this, error);","    }","    --_this.state.outstandingRequests;","    checkDone(_this);","  });","}","","/**"," * @ignore"," */","","function checkAborted(_this, callback) {","  if (_this.state.aborted) {","    if(typeof callback == 'function') {","      callback(new Error('this stream has been aborted'));","    }","    return true;","  }","  return false;","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"8":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"63":1,"90":1,"91":0,"92":0,"93":0,"106":1,"107":0,"108":0,"109":0,"110":0,"112":0,"114":0,"115":0,"116":0,"117":0,"119":0,"121":0,"122":0,"123":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"146":0,"147":0,"149":0,"151":0,"152":0,"153":0,"157":0,"158":0,"159":0,"161":0,"164":0,"165":0,"173":1,"174":0,"175":0,"177":0,"178":0,"179":0,"181":0,"188":1,"189":0,"201":1,"202":0,"203":0,"205":0,"206":0,"207":0,"208":0,"209":0,"212":0,"214":0,"216":0,"219":0,"220":0,"221":0,"222":0,"223":0,"225":0,"230":0,"231":0,"233":0,"234":0,"236":0,"237":0,"239":0,"240":0,"241":0,"244":0,"254":1,"255":0,"258":0,"262":0,"263":0,"266":0,"267":0,"268":0,"270":0,"273":0,"276":0,"283":1,"284":0,"285":0,"286":0,"288":0,"289":0,"292":0,"293":0,"295":0,"296":0,"297":0,"298":0,"299":0,"302":0,"304":0,"306":0,"309":0,"310":0,"311":0,"312":0,"314":0,"318":0,"319":0,"321":0,"323":0,"325":0,"327":0,"328":0,"329":0,"332":0,"343":1,"345":0,"354":0,"355":0,"358":0,"359":0,"362":0,"363":0,"366":0,"373":1,"374":0,"375":0,"378":0,"381":0,"384":0,"385":0,"386":0,"388":0,"393":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"414":0,"415":0,"418":0,"419":0,"420":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"431":0,"432":0,"433":0,"435":0,"436":0,"442":0,"449":1,"450":0,"451":0,"452":0,"453":0,"454":0,"456":0,"463":1,"464":0,"465":0,"468":0,"469":0,"472":0,"479":1,"481":0,"482":0,"485":0,"489":0,"490":0,"491":0,"492":0,"495":0,"496":0,"499":0,"500":0,"501":0,"503":0,"504":0,"512":1,"513":0,"514":0,"515":0,"517":0,"519":0}}}